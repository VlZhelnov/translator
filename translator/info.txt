
[grammar] 
	[products] 
		program : fundefs
		fundefs : fundefs fundef, fundef, 
		fundef : basic id F ( iargs ) block
		iargs : iargs , iarg, iarg, 
		iarg : type id
		block : { decls stmts }
		decls : decls decl, 
		decl : type id ;
		type : type [ num ], basic
		stmts : stmts stmt, 
		stmt : loc = bool ;, if ( bool ) M stmt, if ( bool ) M stmt else M stmt, while N ( bool ) M stmt, do N stmt while ( bool ) M ;, return arg ;, block
		args : args , arg, arg, 
		M : 
		N : 
		F : 
		loc : loc [ bool ], id
		bool : bool or join, join
		join : join and equality, equality
		equality : equality eq rel, equality neq rel, rel
		rel : expr < expr, expr <= expr, expr >= expr, expr > expr, expr
		expr : expr + term, expr - term, term
		term : term * unary, term / unary, term mod unary, unary
		unary : ! unary, - unary, factor
		factor : ( bool ), loc, id ( args ), num, real, true, false
		arg : loc, bool
	[rules] 
		program->fundefs .	0
		fundefs->fundefs fundef .	1
		fundefs->fundef .	2
		fundefs-> .	3
		fundef->basic id F ( iargs ) block .	4
		iargs->iargs , iarg .	5
		iargs->iarg .	6
		iargs-> .	7
		iarg->type id .	8
		block->{ decls stmts } .	9
		decls->decls decl .	10
		decls-> .	11
		decl->type id ; .	12
		type->type [ num ] .	13
		type->basic .	14
		stmts->stmts stmt .	15
		stmts-> .	16
		stmt->loc = bool ; .	17
		stmt->if ( bool ) M stmt .	18
		stmt->if ( bool ) M stmt else M stmt .	19
		stmt->while N ( bool ) M stmt .	20
		stmt->do N stmt while ( bool ) M ; .	21
		stmt->return arg ; .	22
		stmt->block .	23
		args->args , arg .	24
		args->arg .	25
		args-> .	26
		M-> .	27
		N-> .	28
		F-> .	29
		loc->loc [ bool ] .	30
		loc->id .	31
		bool->bool or join .	32
		bool->join .	33
		join->join and equality .	34
		join->equality .	35
		equality->equality eq rel .	36
		equality->equality neq rel .	37
		equality->rel .	38
		rel->expr < expr .	39
		rel->expr <= expr .	40
		rel->expr >= expr .	41
		rel->expr > expr .	42
		rel->expr .	43
		expr->expr + term .	44
		expr->expr - term .	45
		expr->term .	46
		term->term * unary .	47
		term->term / unary .	48
		term->term mod unary .	49
		term->unary .	50
		unary->! unary .	51
		unary->- unary .	52
		unary->factor .	53
		factor->( bool ) .	54
		factor->loc .	55
		factor->id ( args ) .	56
		factor->num .	57
		factor->real .	58
		factor->true .	59
		factor->false .	60
		arg->loc .	61
		arg->bool .	62
	terms : id, (, ), ,, {, }, ;, [, ], basic, =, if, else, while, do, return, or, and, eq, neq, <, <=, >=, >, +, -, *, /, mod, !, num, real, true, false
[nullable] 
	fundefs	True
	program	True
	block	False
	fundef	False
	iargs	True
	type	False
	iarg	False
	loc	False
	stmt	False
	decls	True
	decl	False
	stmts	True
	args	True
	factor	False
	unary	False
	term	False
	expr	False
	rel	False
	equality	False	
	join	False
	bool	False
	arg	False
	M	True
	N	True
	F	True
[first] 
	[program] 
		basic	
	[fundefs] 
		basic	
	[fundef] 
		basic	
	[iargs] 
		,	
		[	
		basic	
	[)] 
		)	
	[,] 
		,	
	[iarg] 
		[	
		basic	
	[block] 
		{	
	[}] 
		}	
	[stmt] 
		[	
		id	
		if	
		while	
		do	
		return	
		{	
	[else] 
		else	
	[while] 
		while	
	[decls] 
		[	
		basic	
	[stmts] 
		[	
		id	
		if	
		while	
		do	
		return	
		{	
	[decl] 
		[	
		basic	
	[type] 
		[	
		basic	
	[id] 
		id	
	[[] 
		[	
	[args] 
		,	
		[	
		id	
		or	
		and	
		eq	
		neq	
		+	
		-	
		*	
		/	
		mod	
		!	
		(	
		num	
		real	
		true	
		false	
	[M] 
	[;] 
		;	
	[N] 
	[(] 
		(	
	[F] 
	[loc] 
		[	
		id	
	[=] 
		=	
	[<] 
		<	
	[<=] 
		<=	
	[>=] 
		>=	
	[>] 
		>	
	[]] 
		]	
	[or] 
		or	
	[and] 
		and	
	[eq] 
		eq	
	[neq] 
		neq	
	[+] 
		+	
	[-] 
		-	
	[*] 
		*	
	[/] 
		/	
	[mod] 
		mod	
	[bool] 
		or	
		and	
		eq	
		neq	
		+	
		-	
		*	
		/	
		mod	
		!	
		(	
		[	
		id	
		num	
		real	
		true	
		false	
	[join] 
		and	
		eq	
		neq	
		+	
		-	
		*	
		/	
		mod	
		!	
		(	
		[	
		id	
		num	
		real	
		true	
		false	
	[equality] 
		eq	
		neq	
		+	
		-	
		*	
		/	
		mod	
		!	
		(	
		[	
		id	
		num	
		real	
		true	
		false	
	[rel] 
		+	
		-	
		*	
		/	
		mod	
		!	
		(	
		[	
		id	
		num	
		real	
		true	
		false	
	[expr] 
		+	
		-	
		*	
		/	
		mod	
		!	
		(	
		[	
		id	
		num	
		real	
		true	
		false	
	[term] 
		*	
		/	
		mod	
		!	
		-	
		(	
		[	
		id	
		num	
		real	
		true	
		false	
	[unary] 
		!	
		-	
		(	
		[	
		id	
		num	
		real	
		true	
		false	
	[factor] 
		(	
		[	
		id	
		num	
		real	
		true	
		false	
	[arg] 
		[	
		id	
		or	
		and	
		eq	
		neq	
		+	
		-	
		*	
		/	
		mod	
		!	
		(	
		num	
		real	
		true	
		false	
[follow] 
	[program] 
	[fundefs] 
		basic	
	[fundef] 
		basic	
	[iargs] 
		)	
		,	
	[iarg] 
		)	
		,	
	[block] 
		basic	
		}	
		[	
		id	
		if	
		while	
		do	
		return	
		{	
		else	
	[decls] 
		[	
		id	
		if	
		while	
		do	
		return	
		{	
		}	
		basic	
	[decl] 
		[	
		id	
		if	
		while	
		do	
		return	
		{	
		}	
		basic	
	[type] 
		id	
		[	
	[stmts] 
		}	
		[	
		id	
		if	
		while	
		do	
		return	
		{	
	[stmt] 
		}	
		[	
		id	
		if	
		while	
		do	
		return	
		{	
		else	
	[args] 
		)	
		,	
	[M] 
		[	
		id	
		if	
		while	
		do	
		return	
		{	
		;	
	[N] 
		(	
		[	
		id	
		if	
		while	
		do	
		return	
		{	
	[F] 
		(	
	[loc] 
		=	
		[	
		<	
		<=	
		>=	
		>	
		;	
		)	
		]	
		or	
		,	
		and	
		eq	
		neq	
		+	
		-	
		*	
		/	
		mod	
	[bool] 
		;	
		)	
		]	
		or	
		,	
	[join] 
		;	
		)	
		]	
		or	
		,	
		and	
	[equality] 
		;	
		)	
		]	
		or	
		,	
		and	
		eq	
		neq	
	[rel] 
		;	
		)	
		]	
		or	
		,	
		and	
		eq	
		neq	
	[expr] 
		<	
		<=	
		>=	
		>	
		;	
		)	
		]	
		or	
		,	
		and	
		eq	
		neq	
		+	
		-	
	[term] 
		<	
		<=	
		>=	
		>	
		;	
		)	
		]	
		or	
		,	
		and	
		eq	
		neq	
		+	
		-	
		*	
		/	
		mod	
	[unary] 
		<	
		<=	
		>=	
		>	
		;	
		)	
		]	
		or	
		,	
		and	
		eq	
		neq	
		+	
		-	
		*	
		/	
		mod	
	[factor] 
		<	
		<=	
		>=	
		>	
		;	
		)	
		]	
		or	
		,	
		and	
		eq	
		neq	
		+	
		-	
		*	
		/	
		mod	
	[arg] 
		)	
		,	
		;	
[items] 
	[0] 
		0 : program, .fundefs, $
		1 : fundefs, .fundefs fundef, $
		2 : fundefs, .fundef, $
		3 : fundefs, ., $
		4 : fundefs, .fundefs fundef, basic
		5 : fundefs, .fundef, basic
		6 : fundefs, ., basic
		7 : fundef, .basic id F ( iargs ) block, $
		8 : fundef, .basic id F ( iargs ) block, basic
	[1] 
		0 : program, fundefs ., $
		1 : fundefs, fundefs .fundef, $
		2 : fundefs, fundefs .fundef, basic
		3 : fundef, .basic id F ( iargs ) block, $
		4 : fundef, .basic id F ( iargs ) block, basic
	[2] 
		0 : fundefs, fundef ., $
		1 : fundefs, fundef ., basic
	[3] 
		0 : fundef, basic .id F ( iargs ) block, $
		1 : fundef, basic .id F ( iargs ) block, basic
	[4] 
		0 : fundefs, fundefs fundef ., $
		1 : fundefs, fundefs fundef ., basic
	[5] 
		0 : fundef, basic id .F ( iargs ) block, $
		1 : fundef, basic id .F ( iargs ) block, basic
		2 : F, ., (
	[6] 
		0 : fundef, basic id F .( iargs ) block, $
		1 : fundef, basic id F .( iargs ) block, basic
	[7] 
		0 : fundef, basic id F ( .iargs ) block, $
		1 : fundef, basic id F ( .iargs ) block, basic
		2 : iargs, .iargs , iarg, )
		3 : iargs, .iarg, )
		4 : iargs, ., )
		5 : iargs, .iargs , iarg, ,
		6 : iargs, .iarg, ,
		7 : iargs, ., ,
		8 : iarg, .type id, )
		9 : iarg, .type id, ,
		10 : type, .type [ num ], id
		11 : type, .basic, id
		12 : type, .type [ num ], [
		13 : type, .basic, [
	[8] 
		0 : fundef, basic id F ( iargs .) block, $
		1 : fundef, basic id F ( iargs .) block, basic
		2 : iargs, iargs ., iarg, )
		3 : iargs, iargs ., iarg, ,
	[9] 
		0 : iargs, iarg ., )
		1 : iargs, iarg ., ,
	[10] 
		0 : iarg, type .id, )
		1 : iarg, type .id, ,
		2 : type, type .[ num ], id
		3 : type, type .[ num ], [
	[11] 
		0 : type, basic ., id
		1 : type, basic ., [
	[12] 
		0 : fundef, basic id F ( iargs ) .block, $
		1 : fundef, basic id F ( iargs ) .block, basic
		2 : block, .{ decls stmts }, $
		3 : block, .{ decls stmts }, basic
	[13] 
		0 : iargs, iargs , .iarg, )
		1 : iargs, iargs , .iarg, ,
		2 : iarg, .type id, )
		3 : iarg, .type id, ,
		4 : type, .type [ num ], id
		5 : type, .basic, id
		6 : type, .type [ num ], [
		7 : type, .basic, [
	[14] 
		0 : iarg, type id ., )
		1 : iarg, type id ., ,
	[15] 
		0 : type, type [ .num ], id
		1 : type, type [ .num ], [
	[16] 
		0 : fundef, basic id F ( iargs ) block ., $
		1 : fundef, basic id F ( iargs ) block ., basic
	[17] 
		0 : block, { .decls stmts }, $
		1 : block, { .decls stmts }, basic
		2 : decls, .decls decl, [
		3 : decls, .decls decl, id
		4 : decls, .decls decl, if
		5 : decls, .decls decl, while
		6 : decls, .decls decl, do
		7 : decls, .decls decl, return
		8 : decls, .decls decl, {
		9 : decls, .decls decl, }
		10 : decls, ., [
		11 : decls, ., id
		12 : decls, ., if
		13 : decls, ., while
		14 : decls, ., do
		15 : decls, ., return
		16 : decls, ., {
		17 : decls, ., }
		18 : decls, .decls decl, basic
		19 : decls, ., basic
	[18] 
		0 : iargs, iargs , iarg ., )
		1 : iargs, iargs , iarg ., ,
	[19] 
		0 : type, type [ num .], id
		1 : type, type [ num .], [
	[20] 
		0 : block, { decls .stmts }, $
		1 : block, { decls .stmts }, basic
		2 : decls, decls .decl, [
		3 : decls, decls .decl, id
		4 : decls, decls .decl, if
		5 : decls, decls .decl, while
		6 : decls, decls .decl, do
		7 : decls, decls .decl, return
		8 : decls, decls .decl, {
		9 : decls, decls .decl, }
		10 : decls, decls .decl, basic
		11 : stmts, .stmts stmt, }
		12 : stmts, ., }
		13 : decl, .type id ;, [
		14 : decl, .type id ;, id
		15 : decl, .type id ;, if
		16 : decl, .type id ;, while
		17 : decl, .type id ;, do
		18 : decl, .type id ;, return
		19 : decl, .type id ;, {
		20 : decl, .type id ;, }
		21 : decl, .type id ;, basic
		22 : stmts, .stmts stmt, [
		23 : stmts, .stmts stmt, id
		24 : stmts, .stmts stmt, if
		25 : stmts, .stmts stmt, while
		26 : stmts, .stmts stmt, do
		27 : stmts, .stmts stmt, return
		28 : stmts, .stmts stmt, {
		29 : stmts, .stmts stmt, else
		30 : stmts, ., [
		31 : stmts, ., id
		32 : stmts, ., if
		33 : stmts, ., while
		34 : stmts, ., do
		35 : stmts, ., return
		36 : stmts, ., {
		37 : stmts, ., else
		38 : type, .type [ num ], id
		39 : type, .basic, id
		40 : type, .type [ num ], [
		41 : type, .basic, [
	[21] 
		0 : type, type [ num ] ., id
		1 : type, type [ num ] ., [
	[22] 
		0 : decls, decls decl ., [
		1 : decls, decls decl ., id
		2 : decls, decls decl ., if
		3 : decls, decls decl ., while
		4 : decls, decls decl ., do
		5 : decls, decls decl ., return
		6 : decls, decls decl ., {
		7 : decls, decls decl ., }
		8 : decls, decls decl ., basic
	[23] 
		0 : decl, type .id ;, [
		1 : decl, type .id ;, id
		2 : decl, type .id ;, if
		3 : decl, type .id ;, while
		4 : decl, type .id ;, do
		5 : decl, type .id ;, return
		6 : decl, type .id ;, {
		7 : decl, type .id ;, }
		8 : decl, type .id ;, basic
		9 : type, type .[ num ], id
		10 : type, type .[ num ], [
	[24] 
		0 : block, { decls stmts .}, $
		1 : block, { decls stmts .}, basic
		2 : stmts, stmts .stmt, }
		3 : stmts, stmts .stmt, [
		4 : stmts, stmts .stmt, id
		5 : stmts, stmts .stmt, if
		6 : stmts, stmts .stmt, while
		7 : stmts, stmts .stmt, do
		8 : stmts, stmts .stmt, return
		9 : stmts, stmts .stmt, {
		10 : stmts, stmts .stmt, else
		11 : stmt, .loc = bool ;, }
		12 : stmt, .if ( bool ) M stmt, }
		13 : stmt, .if ( bool ) M stmt else M stmt, }
		14 : stmt, .while N ( bool ) M stmt, }
		15 : stmt, .do N stmt while ( bool ) M ;, }
		16 : stmt, .return arg ;, }
		17 : stmt, .block, }
		18 : stmt, .loc = bool ;, [
		19 : stmt, .if ( bool ) M stmt, [
		20 : stmt, .if ( bool ) M stmt else M stmt, [
		21 : stmt, .while N ( bool ) M stmt, [
		22 : stmt, .do N stmt while ( bool ) M ;, [
		23 : stmt, .return arg ;, [
		24 : stmt, .block, [
		25 : stmt, .loc = bool ;, id
		26 : stmt, .if ( bool ) M stmt, id
		27 : stmt, .if ( bool ) M stmt else M stmt, id
		28 : stmt, .while N ( bool ) M stmt, id
		29 : stmt, .do N stmt while ( bool ) M ;, id
		30 : stmt, .return arg ;, id
		31 : stmt, .block, id
		32 : stmt, .loc = bool ;, if
		33 : stmt, .if ( bool ) M stmt, if
		34 : stmt, .if ( bool ) M stmt else M stmt, if
		35 : stmt, .while N ( bool ) M stmt, if
		36 : stmt, .do N stmt while ( bool ) M ;, if
		37 : stmt, .return arg ;, if
		38 : stmt, .block, if
		39 : stmt, .loc = bool ;, while
		40 : stmt, .if ( bool ) M stmt, while
		41 : stmt, .if ( bool ) M stmt else M stmt, while
		42 : stmt, .while N ( bool ) M stmt, while
		43 : stmt, .do N stmt while ( bool ) M ;, while
		44 : stmt, .return arg ;, while
		45 : stmt, .block, while
		46 : stmt, .loc = bool ;, do
		47 : stmt, .if ( bool ) M stmt, do
		48 : stmt, .if ( bool ) M stmt else M stmt, do
		49 : stmt, .while N ( bool ) M stmt, do
		50 : stmt, .do N stmt while ( bool ) M ;, do
		51 : stmt, .return arg ;, do
		52 : stmt, .block, do
		53 : stmt, .loc = bool ;, return
		54 : stmt, .if ( bool ) M stmt, return
		55 : stmt, .if ( bool ) M stmt else M stmt, return
		56 : stmt, .while N ( bool ) M stmt, return
		57 : stmt, .do N stmt while ( bool ) M ;, return
		58 : stmt, .return arg ;, return
		59 : stmt, .block, return
		60 : stmt, .loc = bool ;, {
		61 : stmt, .if ( bool ) M stmt, {
		62 : stmt, .if ( bool ) M stmt else M stmt, {
		63 : stmt, .while N ( bool ) M stmt, {
		64 : stmt, .do N stmt while ( bool ) M ;, {
		65 : stmt, .return arg ;, {
		66 : stmt, .block, {
		67 : stmt, .loc = bool ;, else
		68 : stmt, .if ( bool ) M stmt, else
		69 : stmt, .if ( bool ) M stmt else M stmt, else
		70 : stmt, .while N ( bool ) M stmt, else
		71 : stmt, .do N stmt while ( bool ) M ;, else
		72 : stmt, .return arg ;, else
		73 : stmt, .block, else
		74 : loc, .loc [ bool ], =
		75 : loc, .id, =
		76 : block, .{ decls stmts }, }
		77 : block, .{ decls stmts }, [
		78 : block, .{ decls stmts }, id
		79 : block, .{ decls stmts }, if
		80 : block, .{ decls stmts }, while
		81 : block, .{ decls stmts }, do
		82 : block, .{ decls stmts }, return
		83 : block, .{ decls stmts }, {
		84 : block, .{ decls stmts }, else
		85 : loc, .loc [ bool ], [
		86 : loc, .id, [
	[25] 
		0 : decl, type id .;, [
		1 : decl, type id .;, id
		2 : decl, type id .;, if
		3 : decl, type id .;, while
		4 : decl, type id .;, do
		5 : decl, type id .;, return
		6 : decl, type id .;, {
		7 : decl, type id .;, }
		8 : decl, type id .;, basic
	[26] 
		0 : stmt, block ., }
		1 : stmt, block ., [
		2 : stmt, block ., id
		3 : stmt, block ., if
		4 : stmt, block ., while
		5 : stmt, block ., do
		6 : stmt, block ., return
		7 : stmt, block ., {
		8 : stmt, block ., else
	[27] 
		0 : stmts, stmts stmt ., }
		1 : stmts, stmts stmt ., [
		2 : stmts, stmts stmt ., id
		3 : stmts, stmts stmt ., if
		4 : stmts, stmts stmt ., while
		5 : stmts, stmts stmt ., do
		6 : stmts, stmts stmt ., return
		7 : stmts, stmts stmt ., {
		8 : stmts, stmts stmt ., else
	[28] 
		0 : stmt, loc .= bool ;, }
		1 : stmt, loc .= bool ;, [
		2 : stmt, loc .= bool ;, id
		3 : stmt, loc .= bool ;, if
		4 : stmt, loc .= bool ;, while
		5 : stmt, loc .= bool ;, do
		6 : stmt, loc .= bool ;, return
		7 : stmt, loc .= bool ;, {
		8 : stmt, loc .= bool ;, else
		9 : loc, loc .[ bool ], =
		10 : loc, loc .[ bool ], [
	[29] 
		0 : loc, id ., =
		1 : loc, id ., [
	[30] 
		0 : block, { .decls stmts }, }
		1 : block, { .decls stmts }, [
		2 : block, { .decls stmts }, id
		3 : block, { .decls stmts }, if
		4 : block, { .decls stmts }, while
		5 : block, { .decls stmts }, do
		6 : block, { .decls stmts }, return
		7 : block, { .decls stmts }, {
		8 : block, { .decls stmts }, else
		9 : decls, .decls decl, [
		10 : decls, .decls decl, id
		11 : decls, .decls decl, if
		12 : decls, .decls decl, while
		13 : decls, .decls decl, do
		14 : decls, .decls decl, return
		15 : decls, .decls decl, {
		16 : decls, .decls decl, }
		17 : decls, ., [
		18 : decls, ., id
		19 : decls, ., if
		20 : decls, ., while
		21 : decls, ., do
		22 : decls, ., return
		23 : decls, ., {
		24 : decls, ., }
		25 : decls, .decls decl, basic
		26 : decls, ., basic
	[31] 
		0 : block, { decls stmts } ., $
		1 : block, { decls stmts } ., basic
	[32] 
		0 : stmt, if .( bool ) M stmt, }
		1 : stmt, if .( bool ) M stmt else M stmt, }
		2 : stmt, if .( bool ) M stmt, [
		3 : stmt, if .( bool ) M stmt else M stmt, [
		4 : stmt, if .( bool ) M stmt, id
		5 : stmt, if .( bool ) M stmt else M stmt, id
		6 : stmt, if .( bool ) M stmt, if
		7 : stmt, if .( bool ) M stmt else M stmt, if
		8 : stmt, if .( bool ) M stmt, while
		9 : stmt, if .( bool ) M stmt else M stmt, while
		10 : stmt, if .( bool ) M stmt, do
		11 : stmt, if .( bool ) M stmt else M stmt, do
		12 : stmt, if .( bool ) M stmt, return
		13 : stmt, if .( bool ) M stmt else M stmt, return
		14 : stmt, if .( bool ) M stmt, {
		15 : stmt, if .( bool ) M stmt else M stmt, {
		16 : stmt, if .( bool ) M stmt, else
		17 : stmt, if .( bool ) M stmt else M stmt, else
	[33] 
		0 : stmt, while .N ( bool ) M stmt, }
		1 : stmt, while .N ( bool ) M stmt, [
		2 : stmt, while .N ( bool ) M stmt, id
		3 : stmt, while .N ( bool ) M stmt, if
		4 : stmt, while .N ( bool ) M stmt, while
		5 : stmt, while .N ( bool ) M stmt, do
		6 : stmt, while .N ( bool ) M stmt, return
		7 : stmt, while .N ( bool ) M stmt, {
		8 : stmt, while .N ( bool ) M stmt, else
		9 : N, ., (
		10 : N, ., [
		11 : N, ., id
		12 : N, ., if
		13 : N, ., while
		14 : N, ., do
		15 : N, ., return
		16 : N, ., {
	[34] 
		0 : stmt, do .N stmt while ( bool ) M ;, }
		1 : stmt, do .N stmt while ( bool ) M ;, [
		2 : stmt, do .N stmt while ( bool ) M ;, id
		3 : stmt, do .N stmt while ( bool ) M ;, if
		4 : stmt, do .N stmt while ( bool ) M ;, while
		5 : stmt, do .N stmt while ( bool ) M ;, do
		6 : stmt, do .N stmt while ( bool ) M ;, return
		7 : stmt, do .N stmt while ( bool ) M ;, {
		8 : stmt, do .N stmt while ( bool ) M ;, else
		9 : N, ., (
		10 : N, ., [
		11 : N, ., id
		12 : N, ., if
		13 : N, ., while
		14 : N, ., do
		15 : N, ., return
		16 : N, ., {
	[35] 
		0 : stmt, return .arg ;, }
		1 : stmt, return .arg ;, [
		2 : stmt, return .arg ;, id
		3 : stmt, return .arg ;, if
		4 : stmt, return .arg ;, while
		5 : stmt, return .arg ;, do
		6 : stmt, return .arg ;, return
		7 : stmt, return .arg ;, {
		8 : stmt, return .arg ;, else
		9 : arg, .loc, ;
		10 : arg, .bool, ;
		11 : loc, .loc [ bool ], ;
		12 : loc, .id, ;
		13 : bool, .bool or join, ;
		14 : bool, .join, ;
		15 : loc, .loc [ bool ], [
		16 : loc, .id, [
		17 : bool, .bool or join, or
		18 : bool, .join, or
		19 : join, .join and equality, ;
		20 : join, .equality, ;
		21 : join, .join and equality, or
		22 : join, .equality, or
		23 : join, .join and equality, and
		24 : join, .equality, and
		25 : equality, .equality eq rel, ;
		26 : equality, .equality neq rel, ;
		27 : equality, .rel, ;
		28 : equality, .equality eq rel, or
		29 : equality, .equality neq rel, or
		30 : equality, .rel, or
		31 : equality, .equality eq rel, and
		32 : equality, .equality neq rel, and
		33 : equality, .rel, and
		34 : equality, .equality eq rel, eq
		35 : equality, .equality neq rel, eq
		36 : equality, .rel, eq
		37 : equality, .equality eq rel, neq
		38 : equality, .equality neq rel, neq
		39 : equality, .rel, neq
		40 : rel, .expr < expr, ;
		41 : rel, .expr <= expr, ;
		42 : rel, .expr >= expr, ;
		43 : rel, .expr > expr, ;
		44 : rel, .expr, ;
		45 : rel, .expr < expr, or
		46 : rel, .expr <= expr, or
		47 : rel, .expr >= expr, or
		48 : rel, .expr > expr, or
		49 : rel, .expr, or
		50 : rel, .expr < expr, and
		51 : rel, .expr <= expr, and
		52 : rel, .expr >= expr, and
		53 : rel, .expr > expr, and
		54 : rel, .expr, and
		55 : rel, .expr < expr, eq
		56 : rel, .expr <= expr, eq
		57 : rel, .expr >= expr, eq
		58 : rel, .expr > expr, eq
		59 : rel, .expr, eq
		60 : rel, .expr < expr, neq
		61 : rel, .expr <= expr, neq
		62 : rel, .expr >= expr, neq
		63 : rel, .expr > expr, neq
		64 : rel, .expr, neq
		65 : expr, .expr + term, <
		66 : expr, .expr - term, <
		67 : expr, .term, <
		68 : expr, .expr + term, <=
		69 : expr, .expr - term, <=
		70 : expr, .term, <=
		71 : expr, .expr + term, >=
		72 : expr, .expr - term, >=
		73 : expr, .term, >=
		74 : expr, .expr + term, >
		75 : expr, .expr - term, >
		76 : expr, .term, >
		77 : expr, .expr + term, ;
		78 : expr, .expr - term, ;
		79 : expr, .term, ;
		80 : expr, .expr + term, or
		81 : expr, .expr - term, or
		82 : expr, .term, or
		83 : expr, .expr + term, and
		84 : expr, .expr - term, and
		85 : expr, .term, and
		86 : expr, .expr + term, eq
		87 : expr, .expr - term, eq
		88 : expr, .term, eq
		89 : expr, .expr + term, neq
		90 : expr, .expr - term, neq
		91 : expr, .term, neq
		92 : expr, .expr + term, +
		93 : expr, .expr - term, +
		94 : expr, .term, +
		95 : expr, .expr + term, -
		96 : expr, .expr - term, -
		97 : expr, .term, -
		98 : term, .term * unary, <
		99 : term, .term / unary, <
		100 : term, .term mod unary, <
		101 : term, .unary, <
		102 : term, .term * unary, <=
		103 : term, .term / unary, <=
		104 : term, .term mod unary, <=
		105 : term, .unary, <=
		106 : term, .term * unary, >=
		107 : term, .term / unary, >=
		108 : term, .term mod unary, >=
		109 : term, .unary, >=
		110 : term, .term * unary, >
		111 : term, .term / unary, >
		112 : term, .term mod unary, >
		113 : term, .unary, >
		114 : term, .term * unary, ;
		115 : term, .term / unary, ;
		116 : term, .term mod unary, ;
		117 : term, .unary, ;
		118 : term, .term * unary, or
		119 : term, .term / unary, or
		120 : term, .term mod unary, or
		121 : term, .unary, or
		122 : term, .term * unary, and
		123 : term, .term / unary, and
		124 : term, .term mod unary, and
		125 : term, .unary, and
		126 : term, .term * unary, eq
		127 : term, .term / unary, eq
		128 : term, .term mod unary, eq
		129 : term, .unary, eq
		130 : term, .term * unary, neq
		131 : term, .term / unary, neq
		132 : term, .term mod unary, neq
		133 : term, .unary, neq
		134 : term, .term * unary, +
		135 : term, .term / unary, +
		136 : term, .term mod unary, +
		137 : term, .unary, +
		138 : term, .term * unary, -
		139 : term, .term / unary, -
		140 : term, .term mod unary, -
		141 : term, .unary, -
		142 : term, .term * unary, *
		143 : term, .term / unary, *
		144 : term, .term mod unary, *
		145 : term, .unary, *
		146 : term, .term * unary, /
		147 : term, .term / unary, /
		148 : term, .term mod unary, /
		149 : term, .unary, /
		150 : term, .term * unary, mod
		151 : term, .term / unary, mod
		152 : term, .term mod unary, mod
		153 : term, .unary, mod
		154 : unary, .! unary, <
		155 : unary, .- unary, <
		156 : unary, .factor, <
		157 : unary, .! unary, <=
		158 : unary, .- unary, <=
		159 : unary, .factor, <=
		160 : unary, .! unary, >=
		161 : unary, .- unary, >=
		162 : unary, .factor, >=
		163 : unary, .! unary, >
		164 : unary, .- unary, >
		165 : unary, .factor, >
		166 : unary, .! unary, ;
		167 : unary, .- unary, ;
		168 : unary, .factor, ;
		169 : unary, .! unary, or
		170 : unary, .- unary, or
		171 : unary, .factor, or
		172 : unary, .! unary, and
		173 : unary, .- unary, and
		174 : unary, .factor, and
		175 : unary, .! unary, eq
		176 : unary, .- unary, eq
		177 : unary, .factor, eq
		178 : unary, .! unary, neq
		179 : unary, .- unary, neq
		180 : unary, .factor, neq
		181 : unary, .! unary, +
		182 : unary, .- unary, +
		183 : unary, .factor, +
		184 : unary, .! unary, -
		185 : unary, .- unary, -
		186 : unary, .factor, -
		187 : unary, .! unary, *
		188 : unary, .- unary, *
		189 : unary, .factor, *
		190 : unary, .! unary, /
		191 : unary, .- unary, /
		192 : unary, .factor, /
		193 : unary, .! unary, mod
		194 : unary, .- unary, mod
		195 : unary, .factor, mod
		196 : factor, .( bool ), <
		197 : factor, .loc, <
		198 : factor, .id ( args ), <
		199 : factor, .num, <
		200 : factor, .real, <
		201 : factor, .true, <
		202 : factor, .false, <
		203 : factor, .( bool ), <=
		204 : factor, .loc, <=
		205 : factor, .id ( args ), <=
		206 : factor, .num, <=
		207 : factor, .real, <=
		208 : factor, .true, <=
		209 : factor, .false, <=
		210 : factor, .( bool ), >=
		211 : factor, .loc, >=
		212 : factor, .id ( args ), >=
		213 : factor, .num, >=
		214 : factor, .real, >=
		215 : factor, .true, >=
		216 : factor, .false, >=
		217 : factor, .( bool ), >
		218 : factor, .loc, >
		219 : factor, .id ( args ), >
		220 : factor, .num, >
		221 : factor, .real, >
		222 : factor, .true, >
		223 : factor, .false, >
		224 : factor, .( bool ), ;
		225 : factor, .loc, ;
		226 : factor, .id ( args ), ;
		227 : factor, .num, ;
		228 : factor, .real, ;
		229 : factor, .true, ;
		230 : factor, .false, ;
		231 : factor, .( bool ), or
		232 : factor, .loc, or
		233 : factor, .id ( args ), or
		234 : factor, .num, or
		235 : factor, .real, or
		236 : factor, .true, or
		237 : factor, .false, or
		238 : factor, .( bool ), and
		239 : factor, .loc, and
		240 : factor, .id ( args ), and
		241 : factor, .num, and
		242 : factor, .real, and
		243 : factor, .true, and
		244 : factor, .false, and
		245 : factor, .( bool ), eq
		246 : factor, .loc, eq
		247 : factor, .id ( args ), eq
		248 : factor, .num, eq
		249 : factor, .real, eq
		250 : factor, .true, eq
		251 : factor, .false, eq
		252 : factor, .( bool ), neq
		253 : factor, .loc, neq
		254 : factor, .id ( args ), neq
		255 : factor, .num, neq
		256 : factor, .real, neq
		257 : factor, .true, neq
		258 : factor, .false, neq
		259 : factor, .( bool ), +
		260 : factor, .loc, +
		261 : factor, .id ( args ), +
		262 : factor, .num, +
		263 : factor, .real, +
		264 : factor, .true, +
		265 : factor, .false, +
		266 : factor, .( bool ), -
		267 : factor, .loc, -
		268 : factor, .id ( args ), -
		269 : factor, .num, -
		270 : factor, .real, -
		271 : factor, .true, -
		272 : factor, .false, -
		273 : factor, .( bool ), *
		274 : factor, .loc, *
		275 : factor, .id ( args ), *
		276 : factor, .num, *
		277 : factor, .real, *
		278 : factor, .true, *
		279 : factor, .false, *
		280 : factor, .( bool ), /
		281 : factor, .loc, /
		282 : factor, .id ( args ), /
		283 : factor, .num, /
		284 : factor, .real, /
		285 : factor, .true, /
		286 : factor, .false, /
		287 : factor, .( bool ), mod
		288 : factor, .loc, mod
		289 : factor, .id ( args ), mod
		290 : factor, .num, mod
		291 : factor, .real, mod
		292 : factor, .true, mod
		293 : factor, .false, mod
		294 : loc, .loc [ bool ], <
		295 : loc, .id, <
		296 : loc, .loc [ bool ], <=
		297 : loc, .id, <=
		298 : loc, .loc [ bool ], >=
		299 : loc, .id, >=
		300 : loc, .loc [ bool ], >
		301 : loc, .id, >
		302 : loc, .loc [ bool ], or
		303 : loc, .id, or
		304 : loc, .loc [ bool ], and
		305 : loc, .id, and
		306 : loc, .loc [ bool ], eq
		307 : loc, .id, eq
		308 : loc, .loc [ bool ], neq
		309 : loc, .id, neq
		310 : loc, .loc [ bool ], +
		311 : loc, .id, +
		312 : loc, .loc [ bool ], -
		313 : loc, .id, -
		314 : loc, .loc [ bool ], *
		315 : loc, .id, *
		316 : loc, .loc [ bool ], /
		317 : loc, .id, /
		318 : loc, .loc [ bool ], mod
		319 : loc, .id, mod
	[36] 
		0 : decl, type id ; ., [
		1 : decl, type id ; ., id
		2 : decl, type id ; ., if
		3 : decl, type id ; ., while
		4 : decl, type id ; ., do
		5 : decl, type id ; ., return
		6 : decl, type id ; ., {
		7 : decl, type id ; ., }
		8 : decl, type id ; ., basic
	[37] 
		0 : loc, loc [ .bool ], =
		1 : loc, loc [ .bool ], [
		2 : bool, .bool or join, ]
		3 : bool, .join, ]
		4 : bool, .bool or join, or
		5 : bool, .join, or
		6 : join, .join and equality, ]
		7 : join, .equality, ]
		8 : join, .join and equality, or
		9 : join, .equality, or
		10 : join, .join and equality, and
		11 : join, .equality, and
		12 : equality, .equality eq rel, ]
		13 : equality, .equality neq rel, ]
		14 : equality, .rel, ]
		15 : equality, .equality eq rel, or
		16 : equality, .equality neq rel, or
		17 : equality, .rel, or
		18 : equality, .equality eq rel, and
		19 : equality, .equality neq rel, and
		20 : equality, .rel, and
		21 : equality, .equality eq rel, eq
		22 : equality, .equality neq rel, eq
		23 : equality, .rel, eq
		24 : equality, .equality eq rel, neq
		25 : equality, .equality neq rel, neq
		26 : equality, .rel, neq
		27 : rel, .expr < expr, ]
		28 : rel, .expr <= expr, ]
		29 : rel, .expr >= expr, ]
		30 : rel, .expr > expr, ]
		31 : rel, .expr, ]
		32 : rel, .expr < expr, or
		33 : rel, .expr <= expr, or
		34 : rel, .expr >= expr, or
		35 : rel, .expr > expr, or
		36 : rel, .expr, or
		37 : rel, .expr < expr, and
		38 : rel, .expr <= expr, and
		39 : rel, .expr >= expr, and
		40 : rel, .expr > expr, and
		41 : rel, .expr, and
		42 : rel, .expr < expr, eq
		43 : rel, .expr <= expr, eq
		44 : rel, .expr >= expr, eq
		45 : rel, .expr > expr, eq
		46 : rel, .expr, eq
		47 : rel, .expr < expr, neq
		48 : rel, .expr <= expr, neq
		49 : rel, .expr >= expr, neq
		50 : rel, .expr > expr, neq
		51 : rel, .expr, neq
		52 : expr, .expr + term, <
		53 : expr, .expr - term, <
		54 : expr, .term, <
		55 : expr, .expr + term, <=
		56 : expr, .expr - term, <=
		57 : expr, .term, <=
		58 : expr, .expr + term, >=
		59 : expr, .expr - term, >=
		60 : expr, .term, >=
		61 : expr, .expr + term, >
		62 : expr, .expr - term, >
		63 : expr, .term, >
		64 : expr, .expr + term, ]
		65 : expr, .expr - term, ]
		66 : expr, .term, ]
		67 : expr, .expr + term, or
		68 : expr, .expr - term, or
		69 : expr, .term, or
		70 : expr, .expr + term, and
		71 : expr, .expr - term, and
		72 : expr, .term, and
		73 : expr, .expr + term, eq
		74 : expr, .expr - term, eq
		75 : expr, .term, eq
		76 : expr, .expr + term, neq
		77 : expr, .expr - term, neq
		78 : expr, .term, neq
		79 : expr, .expr + term, +
		80 : expr, .expr - term, +
		81 : expr, .term, +
		82 : expr, .expr + term, -
		83 : expr, .expr - term, -
		84 : expr, .term, -
		85 : term, .term * unary, <
		86 : term, .term / unary, <
		87 : term, .term mod unary, <
		88 : term, .unary, <
		89 : term, .term * unary, <=
		90 : term, .term / unary, <=
		91 : term, .term mod unary, <=
		92 : term, .unary, <=
		93 : term, .term * unary, >=
		94 : term, .term / unary, >=
		95 : term, .term mod unary, >=
		96 : term, .unary, >=
		97 : term, .term * unary, >
		98 : term, .term / unary, >
		99 : term, .term mod unary, >
		100 : term, .unary, >
		101 : term, .term * unary, ]
		102 : term, .term / unary, ]
		103 : term, .term mod unary, ]
		104 : term, .unary, ]
		105 : term, .term * unary, or
		106 : term, .term / unary, or
		107 : term, .term mod unary, or
		108 : term, .unary, or
		109 : term, .term * unary, and
		110 : term, .term / unary, and
		111 : term, .term mod unary, and
		112 : term, .unary, and
		113 : term, .term * unary, eq
		114 : term, .term / unary, eq
		115 : term, .term mod unary, eq
		116 : term, .unary, eq
		117 : term, .term * unary, neq
		118 : term, .term / unary, neq
		119 : term, .term mod unary, neq
		120 : term, .unary, neq
		121 : term, .term * unary, +
		122 : term, .term / unary, +
		123 : term, .term mod unary, +
		124 : term, .unary, +
		125 : term, .term * unary, -
		126 : term, .term / unary, -
		127 : term, .term mod unary, -
		128 : term, .unary, -
		129 : term, .term * unary, *
		130 : term, .term / unary, *
		131 : term, .term mod unary, *
		132 : term, .unary, *
		133 : term, .term * unary, /
		134 : term, .term / unary, /
		135 : term, .term mod unary, /
		136 : term, .unary, /
		137 : term, .term * unary, mod
		138 : term, .term / unary, mod
		139 : term, .term mod unary, mod
		140 : term, .unary, mod
		141 : unary, .! unary, <
		142 : unary, .- unary, <
		143 : unary, .factor, <
		144 : unary, .! unary, <=
		145 : unary, .- unary, <=
		146 : unary, .factor, <=
		147 : unary, .! unary, >=
		148 : unary, .- unary, >=
		149 : unary, .factor, >=
		150 : unary, .! unary, >
		151 : unary, .- unary, >
		152 : unary, .factor, >
		153 : unary, .! unary, ]
		154 : unary, .- unary, ]
		155 : unary, .factor, ]
		156 : unary, .! unary, or
		157 : unary, .- unary, or
		158 : unary, .factor, or
		159 : unary, .! unary, and
		160 : unary, .- unary, and
		161 : unary, .factor, and
		162 : unary, .! unary, eq
		163 : unary, .- unary, eq
		164 : unary, .factor, eq
		165 : unary, .! unary, neq
		166 : unary, .- unary, neq
		167 : unary, .factor, neq
		168 : unary, .! unary, +
		169 : unary, .- unary, +
		170 : unary, .factor, +
		171 : unary, .! unary, -
		172 : unary, .- unary, -
		173 : unary, .factor, -
		174 : unary, .! unary, *
		175 : unary, .- unary, *
		176 : unary, .factor, *
		177 : unary, .! unary, /
		178 : unary, .- unary, /
		179 : unary, .factor, /
		180 : unary, .! unary, mod
		181 : unary, .- unary, mod
		182 : unary, .factor, mod
		183 : factor, .( bool ), <
		184 : factor, .loc, <
		185 : factor, .id ( args ), <
		186 : factor, .num, <
		187 : factor, .real, <
		188 : factor, .true, <
		189 : factor, .false, <
		190 : factor, .( bool ), <=
		191 : factor, .loc, <=
		192 : factor, .id ( args ), <=
		193 : factor, .num, <=
		194 : factor, .real, <=
		195 : factor, .true, <=
		196 : factor, .false, <=
		197 : factor, .( bool ), >=
		198 : factor, .loc, >=
		199 : factor, .id ( args ), >=
		200 : factor, .num, >=
		201 : factor, .real, >=
		202 : factor, .true, >=
		203 : factor, .false, >=
		204 : factor, .( bool ), >
		205 : factor, .loc, >
		206 : factor, .id ( args ), >
		207 : factor, .num, >
		208 : factor, .real, >
		209 : factor, .true, >
		210 : factor, .false, >
		211 : factor, .( bool ), ]
		212 : factor, .loc, ]
		213 : factor, .id ( args ), ]
		214 : factor, .num, ]
		215 : factor, .real, ]
		216 : factor, .true, ]
		217 : factor, .false, ]
		218 : factor, .( bool ), or
		219 : factor, .loc, or
		220 : factor, .id ( args ), or
		221 : factor, .num, or
		222 : factor, .real, or
		223 : factor, .true, or
		224 : factor, .false, or
		225 : factor, .( bool ), and
		226 : factor, .loc, and
		227 : factor, .id ( args ), and
		228 : factor, .num, and
		229 : factor, .real, and
		230 : factor, .true, and
		231 : factor, .false, and
		232 : factor, .( bool ), eq
		233 : factor, .loc, eq
		234 : factor, .id ( args ), eq
		235 : factor, .num, eq
		236 : factor, .real, eq
		237 : factor, .true, eq
		238 : factor, .false, eq
		239 : factor, .( bool ), neq
		240 : factor, .loc, neq
		241 : factor, .id ( args ), neq
		242 : factor, .num, neq
		243 : factor, .real, neq
		244 : factor, .true, neq
		245 : factor, .false, neq
		246 : factor, .( bool ), +
		247 : factor, .loc, +
		248 : factor, .id ( args ), +
		249 : factor, .num, +
		250 : factor, .real, +
		251 : factor, .true, +
		252 : factor, .false, +
		253 : factor, .( bool ), -
		254 : factor, .loc, -
		255 : factor, .id ( args ), -
		256 : factor, .num, -
		257 : factor, .real, -
		258 : factor, .true, -
		259 : factor, .false, -
		260 : factor, .( bool ), *
		261 : factor, .loc, *
		262 : factor, .id ( args ), *
		263 : factor, .num, *
		264 : factor, .real, *
		265 : factor, .true, *
		266 : factor, .false, *
		267 : factor, .( bool ), /
		268 : factor, .loc, /
		269 : factor, .id ( args ), /
		270 : factor, .num, /
		271 : factor, .real, /
		272 : factor, .true, /
		273 : factor, .false, /
		274 : factor, .( bool ), mod
		275 : factor, .loc, mod
		276 : factor, .id ( args ), mod
		277 : factor, .num, mod
		278 : factor, .real, mod
		279 : factor, .true, mod
		280 : factor, .false, mod
		281 : loc, .loc [ bool ], <
		282 : loc, .id, <
		283 : loc, .loc [ bool ], <=
		284 : loc, .id, <=
		285 : loc, .loc [ bool ], >=
		286 : loc, .id, >=
		287 : loc, .loc [ bool ], >
		288 : loc, .id, >
		289 : loc, .loc [ bool ], ]
		290 : loc, .id, ]
		291 : loc, .loc [ bool ], or
		292 : loc, .id, or
		293 : loc, .loc [ bool ], and
		294 : loc, .id, and
		295 : loc, .loc [ bool ], eq
		296 : loc, .id, eq
		297 : loc, .loc [ bool ], neq
		298 : loc, .id, neq
		299 : loc, .loc [ bool ], +
		300 : loc, .id, +
		301 : loc, .loc [ bool ], -
		302 : loc, .id, -
		303 : loc, .loc [ bool ], *
		304 : loc, .id, *
		305 : loc, .loc [ bool ], /
		306 : loc, .id, /
		307 : loc, .loc [ bool ], mod
		308 : loc, .id, mod
		309 : loc, .loc [ bool ], [
		310 : loc, .id, [
	[38] 
		0 : stmt, loc = .bool ;, }
		1 : stmt, loc = .bool ;, [
		2 : stmt, loc = .bool ;, id
		3 : stmt, loc = .bool ;, if
		4 : stmt, loc = .bool ;, while
		5 : stmt, loc = .bool ;, do
		6 : stmt, loc = .bool ;, return
		7 : stmt, loc = .bool ;, {
		8 : stmt, loc = .bool ;, else
		9 : bool, .bool or join, ;
		10 : bool, .join, ;
		11 : bool, .bool or join, or
		12 : bool, .join, or
		13 : join, .join and equality, ;
		14 : join, .equality, ;
		15 : join, .join and equality, or
		16 : join, .equality, or
		17 : join, .join and equality, and
		18 : join, .equality, and
		19 : equality, .equality eq rel, ;
		20 : equality, .equality neq rel, ;
		21 : equality, .rel, ;
		22 : equality, .equality eq rel, or
		23 : equality, .equality neq rel, or
		24 : equality, .rel, or
		25 : equality, .equality eq rel, and
		26 : equality, .equality neq rel, and
		27 : equality, .rel, and
		28 : equality, .equality eq rel, eq
		29 : equality, .equality neq rel, eq
		30 : equality, .rel, eq
		31 : equality, .equality eq rel, neq
		32 : equality, .equality neq rel, neq
		33 : equality, .rel, neq
		34 : rel, .expr < expr, ;
		35 : rel, .expr <= expr, ;
		36 : rel, .expr >= expr, ;
		37 : rel, .expr > expr, ;
		38 : rel, .expr, ;
		39 : rel, .expr < expr, or
		40 : rel, .expr <= expr, or
		41 : rel, .expr >= expr, or
		42 : rel, .expr > expr, or
		43 : rel, .expr, or
		44 : rel, .expr < expr, and
		45 : rel, .expr <= expr, and
		46 : rel, .expr >= expr, and
		47 : rel, .expr > expr, and
		48 : rel, .expr, and
		49 : rel, .expr < expr, eq
		50 : rel, .expr <= expr, eq
		51 : rel, .expr >= expr, eq
		52 : rel, .expr > expr, eq
		53 : rel, .expr, eq
		54 : rel, .expr < expr, neq
		55 : rel, .expr <= expr, neq
		56 : rel, .expr >= expr, neq
		57 : rel, .expr > expr, neq
		58 : rel, .expr, neq
		59 : expr, .expr + term, <
		60 : expr, .expr - term, <
		61 : expr, .term, <
		62 : expr, .expr + term, <=
		63 : expr, .expr - term, <=
		64 : expr, .term, <=
		65 : expr, .expr + term, >=
		66 : expr, .expr - term, >=
		67 : expr, .term, >=
		68 : expr, .expr + term, >
		69 : expr, .expr - term, >
		70 : expr, .term, >
		71 : expr, .expr + term, ;
		72 : expr, .expr - term, ;
		73 : expr, .term, ;
		74 : expr, .expr + term, or
		75 : expr, .expr - term, or
		76 : expr, .term, or
		77 : expr, .expr + term, and
		78 : expr, .expr - term, and
		79 : expr, .term, and
		80 : expr, .expr + term, eq
		81 : expr, .expr - term, eq
		82 : expr, .term, eq
		83 : expr, .expr + term, neq
		84 : expr, .expr - term, neq
		85 : expr, .term, neq
		86 : expr, .expr + term, +
		87 : expr, .expr - term, +
		88 : expr, .term, +
		89 : expr, .expr + term, -
		90 : expr, .expr - term, -
		91 : expr, .term, -
		92 : term, .term * unary, <
		93 : term, .term / unary, <
		94 : term, .term mod unary, <
		95 : term, .unary, <
		96 : term, .term * unary, <=
		97 : term, .term / unary, <=
		98 : term, .term mod unary, <=
		99 : term, .unary, <=
		100 : term, .term * unary, >=
		101 : term, .term / unary, >=
		102 : term, .term mod unary, >=
		103 : term, .unary, >=
		104 : term, .term * unary, >
		105 : term, .term / unary, >
		106 : term, .term mod unary, >
		107 : term, .unary, >
		108 : term, .term * unary, ;
		109 : term, .term / unary, ;
		110 : term, .term mod unary, ;
		111 : term, .unary, ;
		112 : term, .term * unary, or
		113 : term, .term / unary, or
		114 : term, .term mod unary, or
		115 : term, .unary, or
		116 : term, .term * unary, and
		117 : term, .term / unary, and
		118 : term, .term mod unary, and
		119 : term, .unary, and
		120 : term, .term * unary, eq
		121 : term, .term / unary, eq
		122 : term, .term mod unary, eq
		123 : term, .unary, eq
		124 : term, .term * unary, neq
		125 : term, .term / unary, neq
		126 : term, .term mod unary, neq
		127 : term, .unary, neq
		128 : term, .term * unary, +
		129 : term, .term / unary, +
		130 : term, .term mod unary, +
		131 : term, .unary, +
		132 : term, .term * unary, -
		133 : term, .term / unary, -
		134 : term, .term mod unary, -
		135 : term, .unary, -
		136 : term, .term * unary, *
		137 : term, .term / unary, *
		138 : term, .term mod unary, *
		139 : term, .unary, *
		140 : term, .term * unary, /
		141 : term, .term / unary, /
		142 : term, .term mod unary, /
		143 : term, .unary, /
		144 : term, .term * unary, mod
		145 : term, .term / unary, mod
		146 : term, .term mod unary, mod
		147 : term, .unary, mod
		148 : unary, .! unary, <
		149 : unary, .- unary, <
		150 : unary, .factor, <
		151 : unary, .! unary, <=
		152 : unary, .- unary, <=
		153 : unary, .factor, <=
		154 : unary, .! unary, >=
		155 : unary, .- unary, >=
		156 : unary, .factor, >=
		157 : unary, .! unary, >
		158 : unary, .- unary, >
		159 : unary, .factor, >
		160 : unary, .! unary, ;
		161 : unary, .- unary, ;
		162 : unary, .factor, ;
		163 : unary, .! unary, or
		164 : unary, .- unary, or
		165 : unary, .factor, or
		166 : unary, .! unary, and
		167 : unary, .- unary, and
		168 : unary, .factor, and
		169 : unary, .! unary, eq
		170 : unary, .- unary, eq
		171 : unary, .factor, eq
		172 : unary, .! unary, neq
		173 : unary, .- unary, neq
		174 : unary, .factor, neq
		175 : unary, .! unary, +
		176 : unary, .- unary, +
		177 : unary, .factor, +
		178 : unary, .! unary, -
		179 : unary, .- unary, -
		180 : unary, .factor, -
		181 : unary, .! unary, *
		182 : unary, .- unary, *
		183 : unary, .factor, *
		184 : unary, .! unary, /
		185 : unary, .- unary, /
		186 : unary, .factor, /
		187 : unary, .! unary, mod
		188 : unary, .- unary, mod
		189 : unary, .factor, mod
		190 : factor, .( bool ), <
		191 : factor, .loc, <
		192 : factor, .id ( args ), <
		193 : factor, .num, <
		194 : factor, .real, <
		195 : factor, .true, <
		196 : factor, .false, <
		197 : factor, .( bool ), <=
		198 : factor, .loc, <=
		199 : factor, .id ( args ), <=
		200 : factor, .num, <=
		201 : factor, .real, <=
		202 : factor, .true, <=
		203 : factor, .false, <=
		204 : factor, .( bool ), >=
		205 : factor, .loc, >=
		206 : factor, .id ( args ), >=
		207 : factor, .num, >=
		208 : factor, .real, >=
		209 : factor, .true, >=
		210 : factor, .false, >=
		211 : factor, .( bool ), >
		212 : factor, .loc, >
		213 : factor, .id ( args ), >
		214 : factor, .num, >
		215 : factor, .real, >
		216 : factor, .true, >
		217 : factor, .false, >
		218 : factor, .( bool ), ;
		219 : factor, .loc, ;
		220 : factor, .id ( args ), ;
		221 : factor, .num, ;
		222 : factor, .real, ;
		223 : factor, .true, ;
		224 : factor, .false, ;
		225 : factor, .( bool ), or
		226 : factor, .loc, or
		227 : factor, .id ( args ), or
		228 : factor, .num, or
		229 : factor, .real, or
		230 : factor, .true, or
		231 : factor, .false, or
		232 : factor, .( bool ), and
		233 : factor, .loc, and
		234 : factor, .id ( args ), and
		235 : factor, .num, and
		236 : factor, .real, and
		237 : factor, .true, and
		238 : factor, .false, and
		239 : factor, .( bool ), eq
		240 : factor, .loc, eq
		241 : factor, .id ( args ), eq
		242 : factor, .num, eq
		243 : factor, .real, eq
		244 : factor, .true, eq
		245 : factor, .false, eq
		246 : factor, .( bool ), neq
		247 : factor, .loc, neq
		248 : factor, .id ( args ), neq
		249 : factor, .num, neq
		250 : factor, .real, neq
		251 : factor, .true, neq
		252 : factor, .false, neq
		253 : factor, .( bool ), +
		254 : factor, .loc, +
		255 : factor, .id ( args ), +
		256 : factor, .num, +
		257 : factor, .real, +
		258 : factor, .true, +
		259 : factor, .false, +
		260 : factor, .( bool ), -
		261 : factor, .loc, -
		262 : factor, .id ( args ), -
		263 : factor, .num, -
		264 : factor, .real, -
		265 : factor, .true, -
		266 : factor, .false, -
		267 : factor, .( bool ), *
		268 : factor, .loc, *
		269 : factor, .id ( args ), *
		270 : factor, .num, *
		271 : factor, .real, *
		272 : factor, .true, *
		273 : factor, .false, *
		274 : factor, .( bool ), /
		275 : factor, .loc, /
		276 : factor, .id ( args ), /
		277 : factor, .num, /
		278 : factor, .real, /
		279 : factor, .true, /
		280 : factor, .false, /
		281 : factor, .( bool ), mod
		282 : factor, .loc, mod
		283 : factor, .id ( args ), mod
		284 : factor, .num, mod
		285 : factor, .real, mod
		286 : factor, .true, mod
		287 : factor, .false, mod
		288 : loc, .loc [ bool ], <
		289 : loc, .id, <
		290 : loc, .loc [ bool ], <=
		291 : loc, .id, <=
		292 : loc, .loc [ bool ], >=
		293 : loc, .id, >=
		294 : loc, .loc [ bool ], >
		295 : loc, .id, >
		296 : loc, .loc [ bool ], ;
		297 : loc, .id, ;
		298 : loc, .loc [ bool ], or
		299 : loc, .id, or
		300 : loc, .loc [ bool ], and
		301 : loc, .id, and
		302 : loc, .loc [ bool ], eq
		303 : loc, .id, eq
		304 : loc, .loc [ bool ], neq
		305 : loc, .id, neq
		306 : loc, .loc [ bool ], +
		307 : loc, .id, +
		308 : loc, .loc [ bool ], -
		309 : loc, .id, -
		310 : loc, .loc [ bool ], *
		311 : loc, .id, *
		312 : loc, .loc [ bool ], /
		313 : loc, .id, /
		314 : loc, .loc [ bool ], mod
		315 : loc, .id, mod
		316 : loc, .loc [ bool ], [
		317 : loc, .id, [
	[39] 
		0 : block, { decls .stmts }, }
		1 : block, { decls .stmts }, [
		2 : block, { decls .stmts }, id
		3 : block, { decls .stmts }, if
		4 : block, { decls .stmts }, while
		5 : block, { decls .stmts }, do
		6 : block, { decls .stmts }, return
		7 : block, { decls .stmts }, {
		8 : block, { decls .stmts }, else
		9 : decls, decls .decl, [
		10 : decls, decls .decl, id
		11 : decls, decls .decl, if
		12 : decls, decls .decl, while
		13 : decls, decls .decl, do
		14 : decls, decls .decl, return
		15 : decls, decls .decl, {
		16 : decls, decls .decl, }
		17 : decls, decls .decl, basic
		18 : stmts, .stmts stmt, }
		19 : stmts, ., }
		20 : decl, .type id ;, [
		21 : decl, .type id ;, id
		22 : decl, .type id ;, if
		23 : decl, .type id ;, while
		24 : decl, .type id ;, do
		25 : decl, .type id ;, return
		26 : decl, .type id ;, {
		27 : decl, .type id ;, }
		28 : decl, .type id ;, basic
		29 : stmts, .stmts stmt, [
		30 : stmts, .stmts stmt, id
		31 : stmts, .stmts stmt, if
		32 : stmts, .stmts stmt, while
		33 : stmts, .stmts stmt, do
		34 : stmts, .stmts stmt, return
		35 : stmts, .stmts stmt, {
		36 : stmts, .stmts stmt, else
		37 : stmts, ., [
		38 : stmts, ., id
		39 : stmts, ., if
		40 : stmts, ., while
		41 : stmts, ., do
		42 : stmts, ., return
		43 : stmts, ., {
		44 : stmts, ., else
		45 : type, .type [ num ], id
		46 : type, .basic, id
		47 : type, .type [ num ], [
		48 : type, .basic, [
	[40] 
		0 : stmt, if ( .bool ) M stmt, }
		1 : stmt, if ( .bool ) M stmt else M stmt, }
		2 : stmt, if ( .bool ) M stmt, [
		3 : stmt, if ( .bool ) M stmt else M stmt, [
		4 : stmt, if ( .bool ) M stmt, id
		5 : stmt, if ( .bool ) M stmt else M stmt, id
		6 : stmt, if ( .bool ) M stmt, if
		7 : stmt, if ( .bool ) M stmt else M stmt, if
		8 : stmt, if ( .bool ) M stmt, while
		9 : stmt, if ( .bool ) M stmt else M stmt, while
		10 : stmt, if ( .bool ) M stmt, do
		11 : stmt, if ( .bool ) M stmt else M stmt, do
		12 : stmt, if ( .bool ) M stmt, return
		13 : stmt, if ( .bool ) M stmt else M stmt, return
		14 : stmt, if ( .bool ) M stmt, {
		15 : stmt, if ( .bool ) M stmt else M stmt, {
		16 : stmt, if ( .bool ) M stmt, else
		17 : stmt, if ( .bool ) M stmt else M stmt, else
		18 : bool, .bool or join, )
		19 : bool, .join, )
		20 : bool, .bool or join, or
		21 : bool, .join, or
		22 : join, .join and equality, )
		23 : join, .equality, )
		24 : join, .join and equality, or
		25 : join, .equality, or
		26 : join, .join and equality, and
		27 : join, .equality, and
		28 : equality, .equality eq rel, )
		29 : equality, .equality neq rel, )
		30 : equality, .rel, )
		31 : equality, .equality eq rel, or
		32 : equality, .equality neq rel, or
		33 : equality, .rel, or
		34 : equality, .equality eq rel, and
		35 : equality, .equality neq rel, and
		36 : equality, .rel, and
		37 : equality, .equality eq rel, eq
		38 : equality, .equality neq rel, eq
		39 : equality, .rel, eq
		40 : equality, .equality eq rel, neq
		41 : equality, .equality neq rel, neq
		42 : equality, .rel, neq
		43 : rel, .expr < expr, )
		44 : rel, .expr <= expr, )
		45 : rel, .expr >= expr, )
		46 : rel, .expr > expr, )
		47 : rel, .expr, )
		48 : rel, .expr < expr, or
		49 : rel, .expr <= expr, or
		50 : rel, .expr >= expr, or
		51 : rel, .expr > expr, or
		52 : rel, .expr, or
		53 : rel, .expr < expr, and
		54 : rel, .expr <= expr, and
		55 : rel, .expr >= expr, and
		56 : rel, .expr > expr, and
		57 : rel, .expr, and
		58 : rel, .expr < expr, eq
		59 : rel, .expr <= expr, eq
		60 : rel, .expr >= expr, eq
		61 : rel, .expr > expr, eq
		62 : rel, .expr, eq
		63 : rel, .expr < expr, neq
		64 : rel, .expr <= expr, neq
		65 : rel, .expr >= expr, neq
		66 : rel, .expr > expr, neq
		67 : rel, .expr, neq
		68 : expr, .expr + term, <
		69 : expr, .expr - term, <
		70 : expr, .term, <
		71 : expr, .expr + term, <=
		72 : expr, .expr - term, <=
		73 : expr, .term, <=
		74 : expr, .expr + term, >=
		75 : expr, .expr - term, >=
		76 : expr, .term, >=
		77 : expr, .expr + term, >
		78 : expr, .expr - term, >
		79 : expr, .term, >
		80 : expr, .expr + term, )
		81 : expr, .expr - term, )
		82 : expr, .term, )
		83 : expr, .expr + term, or
		84 : expr, .expr - term, or
		85 : expr, .term, or
		86 : expr, .expr + term, and
		87 : expr, .expr - term, and
		88 : expr, .term, and
		89 : expr, .expr + term, eq
		90 : expr, .expr - term, eq
		91 : expr, .term, eq
		92 : expr, .expr + term, neq
		93 : expr, .expr - term, neq
		94 : expr, .term, neq
		95 : expr, .expr + term, +
		96 : expr, .expr - term, +
		97 : expr, .term, +
		98 : expr, .expr + term, -
		99 : expr, .expr - term, -
		100 : expr, .term, -
		101 : term, .term * unary, <
		102 : term, .term / unary, <
		103 : term, .term mod unary, <
		104 : term, .unary, <
		105 : term, .term * unary, <=
		106 : term, .term / unary, <=
		107 : term, .term mod unary, <=
		108 : term, .unary, <=
		109 : term, .term * unary, >=
		110 : term, .term / unary, >=
		111 : term, .term mod unary, >=
		112 : term, .unary, >=
		113 : term, .term * unary, >
		114 : term, .term / unary, >
		115 : term, .term mod unary, >
		116 : term, .unary, >
		117 : term, .term * unary, )
		118 : term, .term / unary, )
		119 : term, .term mod unary, )
		120 : term, .unary, )
		121 : term, .term * unary, or
		122 : term, .term / unary, or
		123 : term, .term mod unary, or
		124 : term, .unary, or
		125 : term, .term * unary, and
		126 : term, .term / unary, and
		127 : term, .term mod unary, and
		128 : term, .unary, and
		129 : term, .term * unary, eq
		130 : term, .term / unary, eq
		131 : term, .term mod unary, eq
		132 : term, .unary, eq
		133 : term, .term * unary, neq
		134 : term, .term / unary, neq
		135 : term, .term mod unary, neq
		136 : term, .unary, neq
		137 : term, .term * unary, +
		138 : term, .term / unary, +
		139 : term, .term mod unary, +
		140 : term, .unary, +
		141 : term, .term * unary, -
		142 : term, .term / unary, -
		143 : term, .term mod unary, -
		144 : term, .unary, -
		145 : term, .term * unary, *
		146 : term, .term / unary, *
		147 : term, .term mod unary, *
		148 : term, .unary, *
		149 : term, .term * unary, /
		150 : term, .term / unary, /
		151 : term, .term mod unary, /
		152 : term, .unary, /
		153 : term, .term * unary, mod
		154 : term, .term / unary, mod
		155 : term, .term mod unary, mod
		156 : term, .unary, mod
		157 : unary, .! unary, <
		158 : unary, .- unary, <
		159 : unary, .factor, <
		160 : unary, .! unary, <=
		161 : unary, .- unary, <=
		162 : unary, .factor, <=
		163 : unary, .! unary, >=
		164 : unary, .- unary, >=
		165 : unary, .factor, >=
		166 : unary, .! unary, >
		167 : unary, .- unary, >
		168 : unary, .factor, >
		169 : unary, .! unary, )
		170 : unary, .- unary, )
		171 : unary, .factor, )
		172 : unary, .! unary, or
		173 : unary, .- unary, or
		174 : unary, .factor, or
		175 : unary, .! unary, and
		176 : unary, .- unary, and
		177 : unary, .factor, and
		178 : unary, .! unary, eq
		179 : unary, .- unary, eq
		180 : unary, .factor, eq
		181 : unary, .! unary, neq
		182 : unary, .- unary, neq
		183 : unary, .factor, neq
		184 : unary, .! unary, +
		185 : unary, .- unary, +
		186 : unary, .factor, +
		187 : unary, .! unary, -
		188 : unary, .- unary, -
		189 : unary, .factor, -
		190 : unary, .! unary, *
		191 : unary, .- unary, *
		192 : unary, .factor, *
		193 : unary, .! unary, /
		194 : unary, .- unary, /
		195 : unary, .factor, /
		196 : unary, .! unary, mod
		197 : unary, .- unary, mod
		198 : unary, .factor, mod
		199 : factor, .( bool ), <
		200 : factor, .loc, <
		201 : factor, .id ( args ), <
		202 : factor, .num, <
		203 : factor, .real, <
		204 : factor, .true, <
		205 : factor, .false, <
		206 : factor, .( bool ), <=
		207 : factor, .loc, <=
		208 : factor, .id ( args ), <=
		209 : factor, .num, <=
		210 : factor, .real, <=
		211 : factor, .true, <=
		212 : factor, .false, <=
		213 : factor, .( bool ), >=
		214 : factor, .loc, >=
		215 : factor, .id ( args ), >=
		216 : factor, .num, >=
		217 : factor, .real, >=
		218 : factor, .true, >=
		219 : factor, .false, >=
		220 : factor, .( bool ), >
		221 : factor, .loc, >
		222 : factor, .id ( args ), >
		223 : factor, .num, >
		224 : factor, .real, >
		225 : factor, .true, >
		226 : factor, .false, >
		227 : factor, .( bool ), )
		228 : factor, .loc, )
		229 : factor, .id ( args ), )
		230 : factor, .num, )
		231 : factor, .real, )
		232 : factor, .true, )
		233 : factor, .false, )
		234 : factor, .( bool ), or
		235 : factor, .loc, or
		236 : factor, .id ( args ), or
		237 : factor, .num, or
		238 : factor, .real, or
		239 : factor, .true, or
		240 : factor, .false, or
		241 : factor, .( bool ), and
		242 : factor, .loc, and
		243 : factor, .id ( args ), and
		244 : factor, .num, and
		245 : factor, .real, and
		246 : factor, .true, and
		247 : factor, .false, and
		248 : factor, .( bool ), eq
		249 : factor, .loc, eq
		250 : factor, .id ( args ), eq
		251 : factor, .num, eq
		252 : factor, .real, eq
		253 : factor, .true, eq
		254 : factor, .false, eq
		255 : factor, .( bool ), neq
		256 : factor, .loc, neq
		257 : factor, .id ( args ), neq
		258 : factor, .num, neq
		259 : factor, .real, neq
		260 : factor, .true, neq
		261 : factor, .false, neq
		262 : factor, .( bool ), +
		263 : factor, .loc, +
		264 : factor, .id ( args ), +
		265 : factor, .num, +
		266 : factor, .real, +
		267 : factor, .true, +
		268 : factor, .false, +
		269 : factor, .( bool ), -
		270 : factor, .loc, -
		271 : factor, .id ( args ), -
		272 : factor, .num, -
		273 : factor, .real, -
		274 : factor, .true, -
		275 : factor, .false, -
		276 : factor, .( bool ), *
		277 : factor, .loc, *
		278 : factor, .id ( args ), *
		279 : factor, .num, *
		280 : factor, .real, *
		281 : factor, .true, *
		282 : factor, .false, *
		283 : factor, .( bool ), /
		284 : factor, .loc, /
		285 : factor, .id ( args ), /
		286 : factor, .num, /
		287 : factor, .real, /
		288 : factor, .true, /
		289 : factor, .false, /
		290 : factor, .( bool ), mod
		291 : factor, .loc, mod
		292 : factor, .id ( args ), mod
		293 : factor, .num, mod
		294 : factor, .real, mod
		295 : factor, .true, mod
		296 : factor, .false, mod
		297 : loc, .loc [ bool ], <
		298 : loc, .id, <
		299 : loc, .loc [ bool ], <=
		300 : loc, .id, <=
		301 : loc, .loc [ bool ], >=
		302 : loc, .id, >=
		303 : loc, .loc [ bool ], >
		304 : loc, .id, >
		305 : loc, .loc [ bool ], )
		306 : loc, .id, )
		307 : loc, .loc [ bool ], or
		308 : loc, .id, or
		309 : loc, .loc [ bool ], and
		310 : loc, .id, and
		311 : loc, .loc [ bool ], eq
		312 : loc, .id, eq
		313 : loc, .loc [ bool ], neq
		314 : loc, .id, neq
		315 : loc, .loc [ bool ], +
		316 : loc, .id, +
		317 : loc, .loc [ bool ], -
		318 : loc, .id, -
		319 : loc, .loc [ bool ], *
		320 : loc, .id, *
		321 : loc, .loc [ bool ], /
		322 : loc, .id, /
		323 : loc, .loc [ bool ], mod
		324 : loc, .id, mod
		325 : loc, .loc [ bool ], [
		326 : loc, .id, [
	[41] 
		0 : stmt, while N .( bool ) M stmt, }
		1 : stmt, while N .( bool ) M stmt, [
		2 : stmt, while N .( bool ) M stmt, id
		3 : stmt, while N .( bool ) M stmt, if
		4 : stmt, while N .( bool ) M stmt, while
		5 : stmt, while N .( bool ) M stmt, do
		6 : stmt, while N .( bool ) M stmt, return
		7 : stmt, while N .( bool ) M stmt, {
		8 : stmt, while N .( bool ) M stmt, else
	[42] 
		0 : stmt, do N .stmt while ( bool ) M ;, }
		1 : stmt, do N .stmt while ( bool ) M ;, [
		2 : stmt, do N .stmt while ( bool ) M ;, id
		3 : stmt, do N .stmt while ( bool ) M ;, if
		4 : stmt, do N .stmt while ( bool ) M ;, while
		5 : stmt, do N .stmt while ( bool ) M ;, do
		6 : stmt, do N .stmt while ( bool ) M ;, return
		7 : stmt, do N .stmt while ( bool ) M ;, {
		8 : stmt, do N .stmt while ( bool ) M ;, else
		9 : stmt, .loc = bool ;, while
		10 : stmt, .if ( bool ) M stmt, while
		11 : stmt, .if ( bool ) M stmt else M stmt, while
		12 : stmt, .while N ( bool ) M stmt, while
		13 : stmt, .do N stmt while ( bool ) M ;, while
		14 : stmt, .return arg ;, while
		15 : stmt, .block, while
		16 : loc, .loc [ bool ], =
		17 : loc, .id, =
		18 : block, .{ decls stmts }, while
		19 : loc, .loc [ bool ], [
		20 : loc, .id, [
	[43] 
		0 : arg, loc ., ;
		1 : loc, loc .[ bool ], ;
		2 : loc, loc .[ bool ], [
		3 : factor, loc ., <
		4 : factor, loc ., <=
		5 : factor, loc ., >=
		6 : factor, loc ., >
		7 : factor, loc ., ;
		8 : factor, loc ., or
		9 : factor, loc ., and
		10 : factor, loc ., eq
		11 : factor, loc ., neq
		12 : factor, loc ., +
		13 : factor, loc ., -
		14 : factor, loc ., *
		15 : factor, loc ., /
		16 : factor, loc ., mod
		17 : loc, loc .[ bool ], <
		18 : loc, loc .[ bool ], <=
		19 : loc, loc .[ bool ], >=
		20 : loc, loc .[ bool ], >
		21 : loc, loc .[ bool ], or
		22 : loc, loc .[ bool ], and
		23 : loc, loc .[ bool ], eq
		24 : loc, loc .[ bool ], neq
		25 : loc, loc .[ bool ], +
		26 : loc, loc .[ bool ], -
		27 : loc, loc .[ bool ], *
		28 : loc, loc .[ bool ], /
		29 : loc, loc .[ bool ], mod
	[44] 
		0 : arg, bool ., ;
		1 : bool, bool .or join, ;
		2 : bool, bool .or join, or
	[45] 
		0 : bool, join ., ;
		1 : bool, join ., or
		2 : join, join .and equality, ;
		3 : join, join .and equality, or
		4 : join, join .and equality, and
	[46] 
		0 : join, equality ., ;
		1 : join, equality ., or
		2 : join, equality ., and
		3 : equality, equality .eq rel, ;
		4 : equality, equality .neq rel, ;
		5 : equality, equality .eq rel, or
		6 : equality, equality .neq rel, or
		7 : equality, equality .eq rel, and
		8 : equality, equality .neq rel, and
		9 : equality, equality .eq rel, eq
		10 : equality, equality .neq rel, eq
		11 : equality, equality .eq rel, neq
		12 : equality, equality .neq rel, neq
	[47] 
		0 : equality, rel ., ;
		1 : equality, rel ., or
		2 : equality, rel ., and
		3 : equality, rel ., eq
		4 : equality, rel ., neq
	[48] 
		0 : rel, expr .< expr, ;
		1 : rel, expr .<= expr, ;
		2 : rel, expr .>= expr, ;
		3 : rel, expr .> expr, ;
		4 : rel, expr ., ;
		5 : rel, expr .< expr, or
		6 : rel, expr .<= expr, or
		7 : rel, expr .>= expr, or
		8 : rel, expr .> expr, or
		9 : rel, expr ., or
		10 : rel, expr .< expr, and
		11 : rel, expr .<= expr, and
		12 : rel, expr .>= expr, and
		13 : rel, expr .> expr, and
		14 : rel, expr ., and
		15 : rel, expr .< expr, eq
		16 : rel, expr .<= expr, eq
		17 : rel, expr .>= expr, eq
		18 : rel, expr .> expr, eq
		19 : rel, expr ., eq
		20 : rel, expr .< expr, neq
		21 : rel, expr .<= expr, neq
		22 : rel, expr .>= expr, neq
		23 : rel, expr .> expr, neq
		24 : rel, expr ., neq
		25 : expr, expr .+ term, <
		26 : expr, expr .- term, <
		27 : expr, expr .+ term, <=
		28 : expr, expr .- term, <=
		29 : expr, expr .+ term, >=
		30 : expr, expr .- term, >=
		31 : expr, expr .+ term, >
		32 : expr, expr .- term, >
		33 : expr, expr .+ term, ;
		34 : expr, expr .- term, ;
		35 : expr, expr .+ term, or
		36 : expr, expr .- term, or
		37 : expr, expr .+ term, and
		38 : expr, expr .- term, and
		39 : expr, expr .+ term, eq
		40 : expr, expr .- term, eq
		41 : expr, expr .+ term, neq
		42 : expr, expr .- term, neq
		43 : expr, expr .+ term, +
		44 : expr, expr .- term, +
		45 : expr, expr .+ term, -
		46 : expr, expr .- term, -
	[49] 
		0 : expr, term ., <
		1 : expr, term ., <=
		2 : expr, term ., >=
		3 : expr, term ., >
		4 : expr, term ., ;
		5 : expr, term ., or
		6 : expr, term ., and
		7 : expr, term ., eq
		8 : expr, term ., neq
		9 : expr, term ., +
		10 : expr, term ., -
		11 : term, term .* unary, <
		12 : term, term ./ unary, <
		13 : term, term .mod unary, <
		14 : term, term .* unary, <=
		15 : term, term ./ unary, <=
		16 : term, term .mod unary, <=
		17 : term, term .* unary, >=
		18 : term, term ./ unary, >=
		19 : term, term .mod unary, >=
		20 : term, term .* unary, >
		21 : term, term ./ unary, >
		22 : term, term .mod unary, >
		23 : term, term .* unary, ;
		24 : term, term ./ unary, ;
		25 : term, term .mod unary, ;
		26 : term, term .* unary, or
		27 : term, term ./ unary, or
		28 : term, term .mod unary, or
		29 : term, term .* unary, and
		30 : term, term ./ unary, and
		31 : term, term .mod unary, and
		32 : term, term .* unary, eq
		33 : term, term ./ unary, eq
		34 : term, term .mod unary, eq
		35 : term, term .* unary, neq
		36 : term, term ./ unary, neq
		37 : term, term .mod unary, neq
		38 : term, term .* unary, +
		39 : term, term ./ unary, +
		40 : term, term .mod unary, +
		41 : term, term .* unary, -
		42 : term, term ./ unary, -
		43 : term, term .mod unary, -
		44 : term, term .* unary, *
		45 : term, term ./ unary, *
		46 : term, term .mod unary, *
		47 : term, term .* unary, /
		48 : term, term ./ unary, /
		49 : term, term .mod unary, /
		50 : term, term .* unary, mod
		51 : term, term ./ unary, mod
		52 : term, term .mod unary, mod
	[50] 
		0 : term, unary ., <
		1 : term, unary ., <=
		2 : term, unary ., >=
		3 : term, unary ., >
		4 : term, unary ., ;
		5 : term, unary ., or
		6 : term, unary ., and
		7 : term, unary ., eq
		8 : term, unary ., neq
		9 : term, unary ., +
		10 : term, unary ., -
		11 : term, unary ., *
		12 : term, unary ., /
		13 : term, unary ., mod
	[51] 
		0 : unary, factor ., <
		1 : unary, factor ., <=
		2 : unary, factor ., >=
		3 : unary, factor ., >
		4 : unary, factor ., ;
		5 : unary, factor ., or
		6 : unary, factor ., and
		7 : unary, factor ., eq
		8 : unary, factor ., neq
		9 : unary, factor ., +
		10 : unary, factor ., -
		11 : unary, factor ., *
		12 : unary, factor ., /
		13 : unary, factor ., mod
	[52] 
		0 : stmt, return arg .;, }
		1 : stmt, return arg .;, [
		2 : stmt, return arg .;, id
		3 : stmt, return arg .;, if
		4 : stmt, return arg .;, while
		5 : stmt, return arg .;, do
		6 : stmt, return arg .;, return
		7 : stmt, return arg .;, {
		8 : stmt, return arg .;, else
	[53] 
		0 : loc, id ., ;
		1 : loc, id ., [
		2 : factor, id .( args ), <
		3 : factor, id .( args ), <=
		4 : factor, id .( args ), >=
		5 : factor, id .( args ), >
		6 : factor, id .( args ), ;
		7 : factor, id .( args ), or
		8 : factor, id .( args ), and
		9 : factor, id .( args ), eq
		10 : factor, id .( args ), neq
		11 : factor, id .( args ), +
		12 : factor, id .( args ), -
		13 : factor, id .( args ), *
		14 : factor, id .( args ), /
		15 : factor, id .( args ), mod
		16 : loc, id ., <
		17 : loc, id ., <=
		18 : loc, id ., >=
		19 : loc, id ., >
		20 : loc, id ., or
		21 : loc, id ., and
		22 : loc, id ., eq
		23 : loc, id ., neq
		24 : loc, id ., +
		25 : loc, id ., -
		26 : loc, id ., *
		27 : loc, id ., /
		28 : loc, id ., mod
	[54] 
		0 : factor, ( .bool ), <
		1 : factor, ( .bool ), <=
		2 : factor, ( .bool ), >=
		3 : factor, ( .bool ), >
		4 : factor, ( .bool ), ;
		5 : factor, ( .bool ), or
		6 : factor, ( .bool ), and
		7 : factor, ( .bool ), eq
		8 : factor, ( .bool ), neq
		9 : factor, ( .bool ), +
		10 : factor, ( .bool ), -
		11 : factor, ( .bool ), *
		12 : factor, ( .bool ), /
		13 : factor, ( .bool ), mod
		14 : bool, .bool or join, )
		15 : bool, .join, )
		16 : bool, .bool or join, or
		17 : bool, .join, or
		18 : join, .join and equality, )
		19 : join, .equality, )
		20 : join, .join and equality, or
		21 : join, .equality, or
		22 : join, .join and equality, and
		23 : join, .equality, and
		24 : equality, .equality eq rel, )
		25 : equality, .equality neq rel, )
		26 : equality, .rel, )
		27 : equality, .equality eq rel, or
		28 : equality, .equality neq rel, or
		29 : equality, .rel, or
		30 : equality, .equality eq rel, and
		31 : equality, .equality neq rel, and
		32 : equality, .rel, and
		33 : equality, .equality eq rel, eq
		34 : equality, .equality neq rel, eq
		35 : equality, .rel, eq
		36 : equality, .equality eq rel, neq
		37 : equality, .equality neq rel, neq
		38 : equality, .rel, neq
		39 : rel, .expr < expr, )
		40 : rel, .expr <= expr, )
		41 : rel, .expr >= expr, )
		42 : rel, .expr > expr, )
		43 : rel, .expr, )
		44 : rel, .expr < expr, or
		45 : rel, .expr <= expr, or
		46 : rel, .expr >= expr, or
		47 : rel, .expr > expr, or
		48 : rel, .expr, or
		49 : rel, .expr < expr, and
		50 : rel, .expr <= expr, and
		51 : rel, .expr >= expr, and
		52 : rel, .expr > expr, and
		53 : rel, .expr, and
		54 : rel, .expr < expr, eq
		55 : rel, .expr <= expr, eq
		56 : rel, .expr >= expr, eq
		57 : rel, .expr > expr, eq
		58 : rel, .expr, eq
		59 : rel, .expr < expr, neq
		60 : rel, .expr <= expr, neq
		61 : rel, .expr >= expr, neq
		62 : rel, .expr > expr, neq
		63 : rel, .expr, neq
		64 : expr, .expr + term, <
		65 : expr, .expr - term, <
		66 : expr, .term, <
		67 : expr, .expr + term, <=
		68 : expr, .expr - term, <=
		69 : expr, .term, <=
		70 : expr, .expr + term, >=
		71 : expr, .expr - term, >=
		72 : expr, .term, >=
		73 : expr, .expr + term, >
		74 : expr, .expr - term, >
		75 : expr, .term, >
		76 : expr, .expr + term, )
		77 : expr, .expr - term, )
		78 : expr, .term, )
		79 : expr, .expr + term, or
		80 : expr, .expr - term, or
		81 : expr, .term, or
		82 : expr, .expr + term, and
		83 : expr, .expr - term, and
		84 : expr, .term, and
		85 : expr, .expr + term, eq
		86 : expr, .expr - term, eq
		87 : expr, .term, eq
		88 : expr, .expr + term, neq
		89 : expr, .expr - term, neq
		90 : expr, .term, neq
		91 : expr, .expr + term, +
		92 : expr, .expr - term, +
		93 : expr, .term, +
		94 : expr, .expr + term, -
		95 : expr, .expr - term, -
		96 : expr, .term, -
		97 : term, .term * unary, <
		98 : term, .term / unary, <
		99 : term, .term mod unary, <
		100 : term, .unary, <
		101 : term, .term * unary, <=
		102 : term, .term / unary, <=
		103 : term, .term mod unary, <=
		104 : term, .unary, <=
		105 : term, .term * unary, >=
		106 : term, .term / unary, >=
		107 : term, .term mod unary, >=
		108 : term, .unary, >=
		109 : term, .term * unary, >
		110 : term, .term / unary, >
		111 : term, .term mod unary, >
		112 : term, .unary, >
		113 : term, .term * unary, )
		114 : term, .term / unary, )
		115 : term, .term mod unary, )
		116 : term, .unary, )
		117 : term, .term * unary, or
		118 : term, .term / unary, or
		119 : term, .term mod unary, or
		120 : term, .unary, or
		121 : term, .term * unary, and
		122 : term, .term / unary, and
		123 : term, .term mod unary, and
		124 : term, .unary, and
		125 : term, .term * unary, eq
		126 : term, .term / unary, eq
		127 : term, .term mod unary, eq
		128 : term, .unary, eq
		129 : term, .term * unary, neq
		130 : term, .term / unary, neq
		131 : term, .term mod unary, neq
		132 : term, .unary, neq
		133 : term, .term * unary, +
		134 : term, .term / unary, +
		135 : term, .term mod unary, +
		136 : term, .unary, +
		137 : term, .term * unary, -
		138 : term, .term / unary, -
		139 : term, .term mod unary, -
		140 : term, .unary, -
		141 : term, .term * unary, *
		142 : term, .term / unary, *
		143 : term, .term mod unary, *
		144 : term, .unary, *
		145 : term, .term * unary, /
		146 : term, .term / unary, /
		147 : term, .term mod unary, /
		148 : term, .unary, /
		149 : term, .term * unary, mod
		150 : term, .term / unary, mod
		151 : term, .term mod unary, mod
		152 : term, .unary, mod
		153 : unary, .! unary, <
		154 : unary, .- unary, <
		155 : unary, .factor, <
		156 : unary, .! unary, <=
		157 : unary, .- unary, <=
		158 : unary, .factor, <=
		159 : unary, .! unary, >=
		160 : unary, .- unary, >=
		161 : unary, .factor, >=
		162 : unary, .! unary, >
		163 : unary, .- unary, >
		164 : unary, .factor, >
		165 : unary, .! unary, )
		166 : unary, .- unary, )
		167 : unary, .factor, )
		168 : unary, .! unary, or
		169 : unary, .- unary, or
		170 : unary, .factor, or
		171 : unary, .! unary, and
		172 : unary, .- unary, and
		173 : unary, .factor, and
		174 : unary, .! unary, eq
		175 : unary, .- unary, eq
		176 : unary, .factor, eq
		177 : unary, .! unary, neq
		178 : unary, .- unary, neq
		179 : unary, .factor, neq
		180 : unary, .! unary, +
		181 : unary, .- unary, +
		182 : unary, .factor, +
		183 : unary, .! unary, -
		184 : unary, .- unary, -
		185 : unary, .factor, -
		186 : unary, .! unary, *
		187 : unary, .- unary, *
		188 : unary, .factor, *
		189 : unary, .! unary, /
		190 : unary, .- unary, /
		191 : unary, .factor, /
		192 : unary, .! unary, mod
		193 : unary, .- unary, mod
		194 : unary, .factor, mod
		195 : factor, .( bool ), <
		196 : factor, .loc, <
		197 : factor, .id ( args ), <
		198 : factor, .num, <
		199 : factor, .real, <
		200 : factor, .true, <
		201 : factor, .false, <
		202 : factor, .( bool ), <=
		203 : factor, .loc, <=
		204 : factor, .id ( args ), <=
		205 : factor, .num, <=
		206 : factor, .real, <=
		207 : factor, .true, <=
		208 : factor, .false, <=
		209 : factor, .( bool ), >=
		210 : factor, .loc, >=
		211 : factor, .id ( args ), >=
		212 : factor, .num, >=
		213 : factor, .real, >=
		214 : factor, .true, >=
		215 : factor, .false, >=
		216 : factor, .( bool ), >
		217 : factor, .loc, >
		218 : factor, .id ( args ), >
		219 : factor, .num, >
		220 : factor, .real, >
		221 : factor, .true, >
		222 : factor, .false, >
		223 : factor, .( bool ), )
		224 : factor, .loc, )
		225 : factor, .id ( args ), )
		226 : factor, .num, )
		227 : factor, .real, )
		228 : factor, .true, )
		229 : factor, .false, )
		230 : factor, .( bool ), or
		231 : factor, .loc, or
		232 : factor, .id ( args ), or
		233 : factor, .num, or
		234 : factor, .real, or
		235 : factor, .true, or
		236 : factor, .false, or
		237 : factor, .( bool ), and
		238 : factor, .loc, and
		239 : factor, .id ( args ), and
		240 : factor, .num, and
		241 : factor, .real, and
		242 : factor, .true, and
		243 : factor, .false, and
		244 : factor, .( bool ), eq
		245 : factor, .loc, eq
		246 : factor, .id ( args ), eq
		247 : factor, .num, eq
		248 : factor, .real, eq
		249 : factor, .true, eq
		250 : factor, .false, eq
		251 : factor, .( bool ), neq
		252 : factor, .loc, neq
		253 : factor, .id ( args ), neq
		254 : factor, .num, neq
		255 : factor, .real, neq
		256 : factor, .true, neq
		257 : factor, .false, neq
		258 : factor, .( bool ), +
		259 : factor, .loc, +
		260 : factor, .id ( args ), +
		261 : factor, .num, +
		262 : factor, .real, +
		263 : factor, .true, +
		264 : factor, .false, +
		265 : factor, .( bool ), -
		266 : factor, .loc, -
		267 : factor, .id ( args ), -
		268 : factor, .num, -
		269 : factor, .real, -
		270 : factor, .true, -
		271 : factor, .false, -
		272 : factor, .( bool ), *
		273 : factor, .loc, *
		274 : factor, .id ( args ), *
		275 : factor, .num, *
		276 : factor, .real, *
		277 : factor, .true, *
		278 : factor, .false, *
		279 : factor, .( bool ), /
		280 : factor, .loc, /
		281 : factor, .id ( args ), /
		282 : factor, .num, /
		283 : factor, .real, /
		284 : factor, .true, /
		285 : factor, .false, /
		286 : factor, .( bool ), mod
		287 : factor, .loc, mod
		288 : factor, .id ( args ), mod
		289 : factor, .num, mod
		290 : factor, .real, mod
		291 : factor, .true, mod
		292 : factor, .false, mod
		293 : loc, .loc [ bool ], <
		294 : loc, .id, <
		295 : loc, .loc [ bool ], <=
		296 : loc, .id, <=
		297 : loc, .loc [ bool ], >=
		298 : loc, .id, >=
		299 : loc, .loc [ bool ], >
		300 : loc, .id, >
		301 : loc, .loc [ bool ], )
		302 : loc, .id, )
		303 : loc, .loc [ bool ], or
		304 : loc, .id, or
		305 : loc, .loc [ bool ], and
		306 : loc, .id, and
		307 : loc, .loc [ bool ], eq
		308 : loc, .id, eq
		309 : loc, .loc [ bool ], neq
		310 : loc, .id, neq
		311 : loc, .loc [ bool ], +
		312 : loc, .id, +
		313 : loc, .loc [ bool ], -
		314 : loc, .id, -
		315 : loc, .loc [ bool ], *
		316 : loc, .id, *
		317 : loc, .loc [ bool ], /
		318 : loc, .id, /
		319 : loc, .loc [ bool ], mod
		320 : loc, .id, mod
		321 : loc, .loc [ bool ], [
		322 : loc, .id, [
	[55] 
		0 : unary, - .unary, <
		1 : unary, - .unary, <=
		2 : unary, - .unary, >=
		3 : unary, - .unary, >
		4 : unary, - .unary, ;
		5 : unary, - .unary, or
		6 : unary, - .unary, and
		7 : unary, - .unary, eq
		8 : unary, - .unary, neq
		9 : unary, - .unary, +
		10 : unary, - .unary, -
		11 : unary, - .unary, *
		12 : unary, - .unary, /
		13 : unary, - .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, ;
		27 : unary, .- unary, ;
		28 : unary, .factor, ;
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), ;
		85 : factor, .loc, ;
		86 : factor, .id ( args ), ;
		87 : factor, .num, ;
		88 : factor, .real, ;
		89 : factor, .true, ;
		90 : factor, .false, ;
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], ;
		163 : loc, .id, ;
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[56] 
		0 : unary, ! .unary, <
		1 : unary, ! .unary, <=
		2 : unary, ! .unary, >=
		3 : unary, ! .unary, >
		4 : unary, ! .unary, ;
		5 : unary, ! .unary, or
		6 : unary, ! .unary, and
		7 : unary, ! .unary, eq
		8 : unary, ! .unary, neq
		9 : unary, ! .unary, +
		10 : unary, ! .unary, -
		11 : unary, ! .unary, *
		12 : unary, ! .unary, /
		13 : unary, ! .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, ;
		27 : unary, .- unary, ;
		28 : unary, .factor, ;
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), ;
		85 : factor, .loc, ;
		86 : factor, .id ( args ), ;
		87 : factor, .num, ;
		88 : factor, .real, ;
		89 : factor, .true, ;
		90 : factor, .false, ;
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], ;
		163 : loc, .id, ;
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[57] 
		0 : factor, num ., <
		1 : factor, num ., <=
		2 : factor, num ., >=
		3 : factor, num ., >
		4 : factor, num ., ;
		5 : factor, num ., or
		6 : factor, num ., and
		7 : factor, num ., eq
		8 : factor, num ., neq
		9 : factor, num ., +
		10 : factor, num ., -
		11 : factor, num ., *
		12 : factor, num ., /
		13 : factor, num ., mod
	[58] 
		0 : factor, real ., <
		1 : factor, real ., <=
		2 : factor, real ., >=
		3 : factor, real ., >
		4 : factor, real ., ;
		5 : factor, real ., or
		6 : factor, real ., and
		7 : factor, real ., eq
		8 : factor, real ., neq
		9 : factor, real ., +
		10 : factor, real ., -
		11 : factor, real ., *
		12 : factor, real ., /
		13 : factor, real ., mod
	[59] 
		0 : factor, true ., <
		1 : factor, true ., <=
		2 : factor, true ., >=
		3 : factor, true ., >
		4 : factor, true ., ;
		5 : factor, true ., or
		6 : factor, true ., and
		7 : factor, true ., eq
		8 : factor, true ., neq
		9 : factor, true ., +
		10 : factor, true ., -
		11 : factor, true ., *
		12 : factor, true ., /
		13 : factor, true ., mod
	[60] 
		0 : factor, false ., <
		1 : factor, false ., <=
		2 : factor, false ., >=
		3 : factor, false ., >
		4 : factor, false ., ;
		5 : factor, false ., or
		6 : factor, false ., and
		7 : factor, false ., eq
		8 : factor, false ., neq
		9 : factor, false ., +
		10 : factor, false ., -
		11 : factor, false ., *
		12 : factor, false ., /
		13 : factor, false ., mod
	[61] 
		0 : factor, loc ., <
		1 : factor, loc ., <=
		2 : factor, loc ., >=
		3 : factor, loc ., >
		4 : factor, loc ., ]
		5 : factor, loc ., or
		6 : factor, loc ., and
		7 : factor, loc ., eq
		8 : factor, loc ., neq
		9 : factor, loc ., +
		10 : factor, loc ., -
		11 : factor, loc ., *
		12 : factor, loc ., /
		13 : factor, loc ., mod
		14 : loc, loc .[ bool ], <
		15 : loc, loc .[ bool ], <=
		16 : loc, loc .[ bool ], >=
		17 : loc, loc .[ bool ], >
		18 : loc, loc .[ bool ], ]
		19 : loc, loc .[ bool ], or
		20 : loc, loc .[ bool ], and
		21 : loc, loc .[ bool ], eq
		22 : loc, loc .[ bool ], neq
		23 : loc, loc .[ bool ], +
		24 : loc, loc .[ bool ], -
		25 : loc, loc .[ bool ], *
		26 : loc, loc .[ bool ], /
		27 : loc, loc .[ bool ], mod
		28 : loc, loc .[ bool ], [
	[62] 
		0 : loc, loc [ bool .], =
		1 : loc, loc [ bool .], [
		2 : bool, bool .or join, ]
		3 : bool, bool .or join, or
	[63] 
		0 : bool, join ., ]
		1 : bool, join ., or
		2 : join, join .and equality, ]
		3 : join, join .and equality, or
		4 : join, join .and equality, and
	[64] 
		0 : join, equality ., ]
		1 : join, equality ., or
		2 : join, equality ., and
		3 : equality, equality .eq rel, ]
		4 : equality, equality .neq rel, ]
		5 : equality, equality .eq rel, or
		6 : equality, equality .neq rel, or
		7 : equality, equality .eq rel, and
		8 : equality, equality .neq rel, and
		9 : equality, equality .eq rel, eq
		10 : equality, equality .neq rel, eq
		11 : equality, equality .eq rel, neq
		12 : equality, equality .neq rel, neq
	[65] 
		0 : equality, rel ., ]
		1 : equality, rel ., or
		2 : equality, rel ., and
		3 : equality, rel ., eq
		4 : equality, rel ., neq
	[66] 
		0 : rel, expr .< expr, ]
		1 : rel, expr .<= expr, ]
		2 : rel, expr .>= expr, ]
		3 : rel, expr .> expr, ]
		4 : rel, expr ., ]
		5 : rel, expr .< expr, or
		6 : rel, expr .<= expr, or
		7 : rel, expr .>= expr, or
		8 : rel, expr .> expr, or
		9 : rel, expr ., or
		10 : rel, expr .< expr, and
		11 : rel, expr .<= expr, and
		12 : rel, expr .>= expr, and
		13 : rel, expr .> expr, and
		14 : rel, expr ., and
		15 : rel, expr .< expr, eq
		16 : rel, expr .<= expr, eq
		17 : rel, expr .>= expr, eq
		18 : rel, expr .> expr, eq
		19 : rel, expr ., eq
		20 : rel, expr .< expr, neq
		21 : rel, expr .<= expr, neq
		22 : rel, expr .>= expr, neq
		23 : rel, expr .> expr, neq
		24 : rel, expr ., neq
		25 : expr, expr .+ term, <
		26 : expr, expr .- term, <
		27 : expr, expr .+ term, <=
		28 : expr, expr .- term, <=
		29 : expr, expr .+ term, >=
		30 : expr, expr .- term, >=
		31 : expr, expr .+ term, >
		32 : expr, expr .- term, >
		33 : expr, expr .+ term, ]
		34 : expr, expr .- term, ]
		35 : expr, expr .+ term, or
		36 : expr, expr .- term, or
		37 : expr, expr .+ term, and
		38 : expr, expr .- term, and
		39 : expr, expr .+ term, eq
		40 : expr, expr .- term, eq
		41 : expr, expr .+ term, neq
		42 : expr, expr .- term, neq
		43 : expr, expr .+ term, +
		44 : expr, expr .- term, +
		45 : expr, expr .+ term, -
		46 : expr, expr .- term, -
	[67] 
		0 : expr, term ., <
		1 : expr, term ., <=
		2 : expr, term ., >=
		3 : expr, term ., >
		4 : expr, term ., ]
		5 : expr, term ., or
		6 : expr, term ., and
		7 : expr, term ., eq
		8 : expr, term ., neq
		9 : expr, term ., +
		10 : expr, term ., -
		11 : term, term .* unary, <
		12 : term, term ./ unary, <
		13 : term, term .mod unary, <
		14 : term, term .* unary, <=
		15 : term, term ./ unary, <=
		16 : term, term .mod unary, <=
		17 : term, term .* unary, >=
		18 : term, term ./ unary, >=
		19 : term, term .mod unary, >=
		20 : term, term .* unary, >
		21 : term, term ./ unary, >
		22 : term, term .mod unary, >
		23 : term, term .* unary, ]
		24 : term, term ./ unary, ]
		25 : term, term .mod unary, ]
		26 : term, term .* unary, or
		27 : term, term ./ unary, or
		28 : term, term .mod unary, or
		29 : term, term .* unary, and
		30 : term, term ./ unary, and
		31 : term, term .mod unary, and
		32 : term, term .* unary, eq
		33 : term, term ./ unary, eq
		34 : term, term .mod unary, eq
		35 : term, term .* unary, neq
		36 : term, term ./ unary, neq
		37 : term, term .mod unary, neq
		38 : term, term .* unary, +
		39 : term, term ./ unary, +
		40 : term, term .mod unary, +
		41 : term, term .* unary, -
		42 : term, term ./ unary, -
		43 : term, term .mod unary, -
		44 : term, term .* unary, *
		45 : term, term ./ unary, *
		46 : term, term .mod unary, *
		47 : term, term .* unary, /
		48 : term, term ./ unary, /
		49 : term, term .mod unary, /
		50 : term, term .* unary, mod
		51 : term, term ./ unary, mod
		52 : term, term .mod unary, mod
	[68] 
		0 : term, unary ., <
		1 : term, unary ., <=
		2 : term, unary ., >=
		3 : term, unary ., >
		4 : term, unary ., ]
		5 : term, unary ., or
		6 : term, unary ., and
		7 : term, unary ., eq
		8 : term, unary ., neq
		9 : term, unary ., +
		10 : term, unary ., -
		11 : term, unary ., *
		12 : term, unary ., /
		13 : term, unary ., mod
	[69] 
		0 : unary, factor ., <
		1 : unary, factor ., <=
		2 : unary, factor ., >=
		3 : unary, factor ., >
		4 : unary, factor ., ]
		5 : unary, factor ., or
		6 : unary, factor ., and
		7 : unary, factor ., eq
		8 : unary, factor ., neq
		9 : unary, factor ., +
		10 : unary, factor ., -
		11 : unary, factor ., *
		12 : unary, factor ., /
		13 : unary, factor ., mod
	[70] 
		0 : factor, id .( args ), <
		1 : factor, id .( args ), <=
		2 : factor, id .( args ), >=
		3 : factor, id .( args ), >
		4 : factor, id .( args ), ]
		5 : factor, id .( args ), or
		6 : factor, id .( args ), and
		7 : factor, id .( args ), eq
		8 : factor, id .( args ), neq
		9 : factor, id .( args ), +
		10 : factor, id .( args ), -
		11 : factor, id .( args ), *
		12 : factor, id .( args ), /
		13 : factor, id .( args ), mod
		14 : loc, id ., <
		15 : loc, id ., <=
		16 : loc, id ., >=
		17 : loc, id ., >
		18 : loc, id ., ]
		19 : loc, id ., or
		20 : loc, id ., and
		21 : loc, id ., eq
		22 : loc, id ., neq
		23 : loc, id ., +
		24 : loc, id ., -
		25 : loc, id ., *
		26 : loc, id ., /
		27 : loc, id ., mod
		28 : loc, id ., [
	[71] 
		0 : factor, ( .bool ), <
		1 : factor, ( .bool ), <=
		2 : factor, ( .bool ), >=
		3 : factor, ( .bool ), >
		4 : factor, ( .bool ), ]
		5 : factor, ( .bool ), or
		6 : factor, ( .bool ), and
		7 : factor, ( .bool ), eq
		8 : factor, ( .bool ), neq
		9 : factor, ( .bool ), +
		10 : factor, ( .bool ), -
		11 : factor, ( .bool ), *
		12 : factor, ( .bool ), /
		13 : factor, ( .bool ), mod
		14 : bool, .bool or join, )
		15 : bool, .join, )
		16 : bool, .bool or join, or
		17 : bool, .join, or
		18 : join, .join and equality, )
		19 : join, .equality, )
		20 : join, .join and equality, or
		21 : join, .equality, or
		22 : join, .join and equality, and
		23 : join, .equality, and
		24 : equality, .equality eq rel, )
		25 : equality, .equality neq rel, )
		26 : equality, .rel, )
		27 : equality, .equality eq rel, or
		28 : equality, .equality neq rel, or
		29 : equality, .rel, or
		30 : equality, .equality eq rel, and
		31 : equality, .equality neq rel, and
		32 : equality, .rel, and
		33 : equality, .equality eq rel, eq
		34 : equality, .equality neq rel, eq
		35 : equality, .rel, eq
		36 : equality, .equality eq rel, neq
		37 : equality, .equality neq rel, neq
		38 : equality, .rel, neq
		39 : rel, .expr < expr, )
		40 : rel, .expr <= expr, )
		41 : rel, .expr >= expr, )
		42 : rel, .expr > expr, )
		43 : rel, .expr, )
		44 : rel, .expr < expr, or
		45 : rel, .expr <= expr, or
		46 : rel, .expr >= expr, or
		47 : rel, .expr > expr, or
		48 : rel, .expr, or
		49 : rel, .expr < expr, and
		50 : rel, .expr <= expr, and
		51 : rel, .expr >= expr, and
		52 : rel, .expr > expr, and
		53 : rel, .expr, and
		54 : rel, .expr < expr, eq
		55 : rel, .expr <= expr, eq
		56 : rel, .expr >= expr, eq
		57 : rel, .expr > expr, eq
		58 : rel, .expr, eq
		59 : rel, .expr < expr, neq
		60 : rel, .expr <= expr, neq
		61 : rel, .expr >= expr, neq
		62 : rel, .expr > expr, neq
		63 : rel, .expr, neq
		64 : expr, .expr + term, <
		65 : expr, .expr - term, <
		66 : expr, .term, <
		67 : expr, .expr + term, <=
		68 : expr, .expr - term, <=
		69 : expr, .term, <=
		70 : expr, .expr + term, >=
		71 : expr, .expr - term, >=
		72 : expr, .term, >=
		73 : expr, .expr + term, >
		74 : expr, .expr - term, >
		75 : expr, .term, >
		76 : expr, .expr + term, )
		77 : expr, .expr - term, )
		78 : expr, .term, )
		79 : expr, .expr + term, or
		80 : expr, .expr - term, or
		81 : expr, .term, or
		82 : expr, .expr + term, and
		83 : expr, .expr - term, and
		84 : expr, .term, and
		85 : expr, .expr + term, eq
		86 : expr, .expr - term, eq
		87 : expr, .term, eq
		88 : expr, .expr + term, neq
		89 : expr, .expr - term, neq
		90 : expr, .term, neq
		91 : expr, .expr + term, +
		92 : expr, .expr - term, +
		93 : expr, .term, +
		94 : expr, .expr + term, -
		95 : expr, .expr - term, -
		96 : expr, .term, -
		97 : term, .term * unary, <
		98 : term, .term / unary, <
		99 : term, .term mod unary, <
		100 : term, .unary, <
		101 : term, .term * unary, <=
		102 : term, .term / unary, <=
		103 : term, .term mod unary, <=
		104 : term, .unary, <=
		105 : term, .term * unary, >=
		106 : term, .term / unary, >=
		107 : term, .term mod unary, >=
		108 : term, .unary, >=
		109 : term, .term * unary, >
		110 : term, .term / unary, >
		111 : term, .term mod unary, >
		112 : term, .unary, >
		113 : term, .term * unary, )
		114 : term, .term / unary, )
		115 : term, .term mod unary, )
		116 : term, .unary, )
		117 : term, .term * unary, or
		118 : term, .term / unary, or
		119 : term, .term mod unary, or
		120 : term, .unary, or
		121 : term, .term * unary, and
		122 : term, .term / unary, and
		123 : term, .term mod unary, and
		124 : term, .unary, and
		125 : term, .term * unary, eq
		126 : term, .term / unary, eq
		127 : term, .term mod unary, eq
		128 : term, .unary, eq
		129 : term, .term * unary, neq
		130 : term, .term / unary, neq
		131 : term, .term mod unary, neq
		132 : term, .unary, neq
		133 : term, .term * unary, +
		134 : term, .term / unary, +
		135 : term, .term mod unary, +
		136 : term, .unary, +
		137 : term, .term * unary, -
		138 : term, .term / unary, -
		139 : term, .term mod unary, -
		140 : term, .unary, -
		141 : term, .term * unary, *
		142 : term, .term / unary, *
		143 : term, .term mod unary, *
		144 : term, .unary, *
		145 : term, .term * unary, /
		146 : term, .term / unary, /
		147 : term, .term mod unary, /
		148 : term, .unary, /
		149 : term, .term * unary, mod
		150 : term, .term / unary, mod
		151 : term, .term mod unary, mod
		152 : term, .unary, mod
		153 : unary, .! unary, <
		154 : unary, .- unary, <
		155 : unary, .factor, <
		156 : unary, .! unary, <=
		157 : unary, .- unary, <=
		158 : unary, .factor, <=
		159 : unary, .! unary, >=
		160 : unary, .- unary, >=
		161 : unary, .factor, >=
		162 : unary, .! unary, >
		163 : unary, .- unary, >
		164 : unary, .factor, >
		165 : unary, .! unary, )
		166 : unary, .- unary, )
		167 : unary, .factor, )
		168 : unary, .! unary, or
		169 : unary, .- unary, or
		170 : unary, .factor, or
		171 : unary, .! unary, and
		172 : unary, .- unary, and
		173 : unary, .factor, and
		174 : unary, .! unary, eq
		175 : unary, .- unary, eq
		176 : unary, .factor, eq
		177 : unary, .! unary, neq
		178 : unary, .- unary, neq
		179 : unary, .factor, neq
		180 : unary, .! unary, +
		181 : unary, .- unary, +
		182 : unary, .factor, +
		183 : unary, .! unary, -
		184 : unary, .- unary, -
		185 : unary, .factor, -
		186 : unary, .! unary, *
		187 : unary, .- unary, *
		188 : unary, .factor, *
		189 : unary, .! unary, /
		190 : unary, .- unary, /
		191 : unary, .factor, /
		192 : unary, .! unary, mod
		193 : unary, .- unary, mod
		194 : unary, .factor, mod
		195 : factor, .( bool ), <
		196 : factor, .loc, <
		197 : factor, .id ( args ), <
		198 : factor, .num, <
		199 : factor, .real, <
		200 : factor, .true, <
		201 : factor, .false, <
		202 : factor, .( bool ), <=
		203 : factor, .loc, <=
		204 : factor, .id ( args ), <=
		205 : factor, .num, <=
		206 : factor, .real, <=
		207 : factor, .true, <=
		208 : factor, .false, <=
		209 : factor, .( bool ), >=
		210 : factor, .loc, >=
		211 : factor, .id ( args ), >=
		212 : factor, .num, >=
		213 : factor, .real, >=
		214 : factor, .true, >=
		215 : factor, .false, >=
		216 : factor, .( bool ), >
		217 : factor, .loc, >
		218 : factor, .id ( args ), >
		219 : factor, .num, >
		220 : factor, .real, >
		221 : factor, .true, >
		222 : factor, .false, >
		223 : factor, .( bool ), )
		224 : factor, .loc, )
		225 : factor, .id ( args ), )
		226 : factor, .num, )
		227 : factor, .real, )
		228 : factor, .true, )
		229 : factor, .false, )
		230 : factor, .( bool ), or
		231 : factor, .loc, or
		232 : factor, .id ( args ), or
		233 : factor, .num, or
		234 : factor, .real, or
		235 : factor, .true, or
		236 : factor, .false, or
		237 : factor, .( bool ), and
		238 : factor, .loc, and
		239 : factor, .id ( args ), and
		240 : factor, .num, and
		241 : factor, .real, and
		242 : factor, .true, and
		243 : factor, .false, and
		244 : factor, .( bool ), eq
		245 : factor, .loc, eq
		246 : factor, .id ( args ), eq
		247 : factor, .num, eq
		248 : factor, .real, eq
		249 : factor, .true, eq
		250 : factor, .false, eq
		251 : factor, .( bool ), neq
		252 : factor, .loc, neq
		253 : factor, .id ( args ), neq
		254 : factor, .num, neq
		255 : factor, .real, neq
		256 : factor, .true, neq
		257 : factor, .false, neq
		258 : factor, .( bool ), +
		259 : factor, .loc, +
		260 : factor, .id ( args ), +
		261 : factor, .num, +
		262 : factor, .real, +
		263 : factor, .true, +
		264 : factor, .false, +
		265 : factor, .( bool ), -
		266 : factor, .loc, -
		267 : factor, .id ( args ), -
		268 : factor, .num, -
		269 : factor, .real, -
		270 : factor, .true, -
		271 : factor, .false, -
		272 : factor, .( bool ), *
		273 : factor, .loc, *
		274 : factor, .id ( args ), *
		275 : factor, .num, *
		276 : factor, .real, *
		277 : factor, .true, *
		278 : factor, .false, *
		279 : factor, .( bool ), /
		280 : factor, .loc, /
		281 : factor, .id ( args ), /
		282 : factor, .num, /
		283 : factor, .real, /
		284 : factor, .true, /
		285 : factor, .false, /
		286 : factor, .( bool ), mod
		287 : factor, .loc, mod
		288 : factor, .id ( args ), mod
		289 : factor, .num, mod
		290 : factor, .real, mod
		291 : factor, .true, mod
		292 : factor, .false, mod
		293 : loc, .loc [ bool ], <
		294 : loc, .id, <
		295 : loc, .loc [ bool ], <=
		296 : loc, .id, <=
		297 : loc, .loc [ bool ], >=
		298 : loc, .id, >=
		299 : loc, .loc [ bool ], >
		300 : loc, .id, >
		301 : loc, .loc [ bool ], )
		302 : loc, .id, )
		303 : loc, .loc [ bool ], or
		304 : loc, .id, or
		305 : loc, .loc [ bool ], and
		306 : loc, .id, and
		307 : loc, .loc [ bool ], eq
		308 : loc, .id, eq
		309 : loc, .loc [ bool ], neq
		310 : loc, .id, neq
		311 : loc, .loc [ bool ], +
		312 : loc, .id, +
		313 : loc, .loc [ bool ], -
		314 : loc, .id, -
		315 : loc, .loc [ bool ], *
		316 : loc, .id, *
		317 : loc, .loc [ bool ], /
		318 : loc, .id, /
		319 : loc, .loc [ bool ], mod
		320 : loc, .id, mod
		321 : loc, .loc [ bool ], [
		322 : loc, .id, [
	[72] 
		0 : unary, - .unary, <
		1 : unary, - .unary, <=
		2 : unary, - .unary, >=
		3 : unary, - .unary, >
		4 : unary, - .unary, ]
		5 : unary, - .unary, or
		6 : unary, - .unary, and
		7 : unary, - .unary, eq
		8 : unary, - .unary, neq
		9 : unary, - .unary, +
		10 : unary, - .unary, -
		11 : unary, - .unary, *
		12 : unary, - .unary, /
		13 : unary, - .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, ]
		27 : unary, .- unary, ]
		28 : unary, .factor, ]
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), ]
		85 : factor, .loc, ]
		86 : factor, .id ( args ), ]
		87 : factor, .num, ]
		88 : factor, .real, ]
		89 : factor, .true, ]
		90 : factor, .false, ]
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], ]
		163 : loc, .id, ]
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[73] 
		0 : unary, ! .unary, <
		1 : unary, ! .unary, <=
		2 : unary, ! .unary, >=
		3 : unary, ! .unary, >
		4 : unary, ! .unary, ]
		5 : unary, ! .unary, or
		6 : unary, ! .unary, and
		7 : unary, ! .unary, eq
		8 : unary, ! .unary, neq
		9 : unary, ! .unary, +
		10 : unary, ! .unary, -
		11 : unary, ! .unary, *
		12 : unary, ! .unary, /
		13 : unary, ! .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, ]
		27 : unary, .- unary, ]
		28 : unary, .factor, ]
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), ]
		85 : factor, .loc, ]
		86 : factor, .id ( args ), ]
		87 : factor, .num, ]
		88 : factor, .real, ]
		89 : factor, .true, ]
		90 : factor, .false, ]
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], ]
		163 : loc, .id, ]
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[74] 
		0 : factor, num ., <
		1 : factor, num ., <=
		2 : factor, num ., >=
		3 : factor, num ., >
		4 : factor, num ., ]
		5 : factor, num ., or
		6 : factor, num ., and
		7 : factor, num ., eq
		8 : factor, num ., neq
		9 : factor, num ., +
		10 : factor, num ., -
		11 : factor, num ., *
		12 : factor, num ., /
		13 : factor, num ., mod
	[75] 
		0 : factor, real ., <
		1 : factor, real ., <=
		2 : factor, real ., >=
		3 : factor, real ., >
		4 : factor, real ., ]
		5 : factor, real ., or
		6 : factor, real ., and
		7 : factor, real ., eq
		8 : factor, real ., neq
		9 : factor, real ., +
		10 : factor, real ., -
		11 : factor, real ., *
		12 : factor, real ., /
		13 : factor, real ., mod
	[76] 
		0 : factor, true ., <
		1 : factor, true ., <=
		2 : factor, true ., >=
		3 : factor, true ., >
		4 : factor, true ., ]
		5 : factor, true ., or
		6 : factor, true ., and
		7 : factor, true ., eq
		8 : factor, true ., neq
		9 : factor, true ., +
		10 : factor, true ., -
		11 : factor, true ., *
		12 : factor, true ., /
		13 : factor, true ., mod
	[77] 
		0 : factor, false ., <
		1 : factor, false ., <=
		2 : factor, false ., >=
		3 : factor, false ., >
		4 : factor, false ., ]
		5 : factor, false ., or
		6 : factor, false ., and
		7 : factor, false ., eq
		8 : factor, false ., neq
		9 : factor, false ., +
		10 : factor, false ., -
		11 : factor, false ., *
		12 : factor, false ., /
		13 : factor, false ., mod
	[78] 
		0 : factor, loc ., <
		1 : factor, loc ., <=
		2 : factor, loc ., >=
		3 : factor, loc ., >
		4 : factor, loc ., ;
		5 : factor, loc ., or
		6 : factor, loc ., and
		7 : factor, loc ., eq
		8 : factor, loc ., neq
		9 : factor, loc ., +
		10 : factor, loc ., -
		11 : factor, loc ., *
		12 : factor, loc ., /
		13 : factor, loc ., mod
		14 : loc, loc .[ bool ], <
		15 : loc, loc .[ bool ], <=
		16 : loc, loc .[ bool ], >=
		17 : loc, loc .[ bool ], >
		18 : loc, loc .[ bool ], ;
		19 : loc, loc .[ bool ], or
		20 : loc, loc .[ bool ], and
		21 : loc, loc .[ bool ], eq
		22 : loc, loc .[ bool ], neq
		23 : loc, loc .[ bool ], +
		24 : loc, loc .[ bool ], -
		25 : loc, loc .[ bool ], *
		26 : loc, loc .[ bool ], /
		27 : loc, loc .[ bool ], mod
		28 : loc, loc .[ bool ], [
	[79] 
		0 : stmt, loc = bool .;, }
		1 : stmt, loc = bool .;, [
		2 : stmt, loc = bool .;, id
		3 : stmt, loc = bool .;, if
		4 : stmt, loc = bool .;, while
		5 : stmt, loc = bool .;, do
		6 : stmt, loc = bool .;, return
		7 : stmt, loc = bool .;, {
		8 : stmt, loc = bool .;, else
		9 : bool, bool .or join, ;
		10 : bool, bool .or join, or
	[80] 
		0 : factor, id .( args ), <
		1 : factor, id .( args ), <=
		2 : factor, id .( args ), >=
		3 : factor, id .( args ), >
		4 : factor, id .( args ), ;
		5 : factor, id .( args ), or
		6 : factor, id .( args ), and
		7 : factor, id .( args ), eq
		8 : factor, id .( args ), neq
		9 : factor, id .( args ), +
		10 : factor, id .( args ), -
		11 : factor, id .( args ), *
		12 : factor, id .( args ), /
		13 : factor, id .( args ), mod
		14 : loc, id ., <
		15 : loc, id ., <=
		16 : loc, id ., >=
		17 : loc, id ., >
		18 : loc, id ., ;
		19 : loc, id ., or
		20 : loc, id ., and
		21 : loc, id ., eq
		22 : loc, id ., neq
		23 : loc, id ., +
		24 : loc, id ., -
		25 : loc, id ., *
		26 : loc, id ., /
		27 : loc, id ., mod
		28 : loc, id ., [
	[81] 
		0 : block, { decls stmts .}, }
		1 : block, { decls stmts .}, [
		2 : block, { decls stmts .}, id
		3 : block, { decls stmts .}, if
		4 : block, { decls stmts .}, while
		5 : block, { decls stmts .}, do
		6 : block, { decls stmts .}, return
		7 : block, { decls stmts .}, {
		8 : block, { decls stmts .}, else
		9 : stmts, stmts .stmt, }
		10 : stmts, stmts .stmt, [
		11 : stmts, stmts .stmt, id
		12 : stmts, stmts .stmt, if
		13 : stmts, stmts .stmt, while
		14 : stmts, stmts .stmt, do
		15 : stmts, stmts .stmt, return
		16 : stmts, stmts .stmt, {
		17 : stmts, stmts .stmt, else
		18 : stmt, .loc = bool ;, }
		19 : stmt, .if ( bool ) M stmt, }
		20 : stmt, .if ( bool ) M stmt else M stmt, }
		21 : stmt, .while N ( bool ) M stmt, }
		22 : stmt, .do N stmt while ( bool ) M ;, }
		23 : stmt, .return arg ;, }
		24 : stmt, .block, }
		25 : stmt, .loc = bool ;, [
		26 : stmt, .if ( bool ) M stmt, [
		27 : stmt, .if ( bool ) M stmt else M stmt, [
		28 : stmt, .while N ( bool ) M stmt, [
		29 : stmt, .do N stmt while ( bool ) M ;, [
		30 : stmt, .return arg ;, [
		31 : stmt, .block, [
		32 : stmt, .loc = bool ;, id
		33 : stmt, .if ( bool ) M stmt, id
		34 : stmt, .if ( bool ) M stmt else M stmt, id
		35 : stmt, .while N ( bool ) M stmt, id
		36 : stmt, .do N stmt while ( bool ) M ;, id
		37 : stmt, .return arg ;, id
		38 : stmt, .block, id
		39 : stmt, .loc = bool ;, if
		40 : stmt, .if ( bool ) M stmt, if
		41 : stmt, .if ( bool ) M stmt else M stmt, if
		42 : stmt, .while N ( bool ) M stmt, if
		43 : stmt, .do N stmt while ( bool ) M ;, if
		44 : stmt, .return arg ;, if
		45 : stmt, .block, if
		46 : stmt, .loc = bool ;, while
		47 : stmt, .if ( bool ) M stmt, while
		48 : stmt, .if ( bool ) M stmt else M stmt, while
		49 : stmt, .while N ( bool ) M stmt, while
		50 : stmt, .do N stmt while ( bool ) M ;, while
		51 : stmt, .return arg ;, while
		52 : stmt, .block, while
		53 : stmt, .loc = bool ;, do
		54 : stmt, .if ( bool ) M stmt, do
		55 : stmt, .if ( bool ) M stmt else M stmt, do
		56 : stmt, .while N ( bool ) M stmt, do
		57 : stmt, .do N stmt while ( bool ) M ;, do
		58 : stmt, .return arg ;, do
		59 : stmt, .block, do
		60 : stmt, .loc = bool ;, return
		61 : stmt, .if ( bool ) M stmt, return
		62 : stmt, .if ( bool ) M stmt else M stmt, return
		63 : stmt, .while N ( bool ) M stmt, return
		64 : stmt, .do N stmt while ( bool ) M ;, return
		65 : stmt, .return arg ;, return
		66 : stmt, .block, return
		67 : stmt, .loc = bool ;, {
		68 : stmt, .if ( bool ) M stmt, {
		69 : stmt, .if ( bool ) M stmt else M stmt, {
		70 : stmt, .while N ( bool ) M stmt, {
		71 : stmt, .do N stmt while ( bool ) M ;, {
		72 : stmt, .return arg ;, {
		73 : stmt, .block, {
		74 : stmt, .loc = bool ;, else
		75 : stmt, .if ( bool ) M stmt, else
		76 : stmt, .if ( bool ) M stmt else M stmt, else
		77 : stmt, .while N ( bool ) M stmt, else
		78 : stmt, .do N stmt while ( bool ) M ;, else
		79 : stmt, .return arg ;, else
		80 : stmt, .block, else
		81 : loc, .loc [ bool ], =
		82 : loc, .id, =
		83 : block, .{ decls stmts }, }
		84 : block, .{ decls stmts }, [
		85 : block, .{ decls stmts }, id
		86 : block, .{ decls stmts }, if
		87 : block, .{ decls stmts }, while
		88 : block, .{ decls stmts }, do
		89 : block, .{ decls stmts }, return
		90 : block, .{ decls stmts }, {
		91 : block, .{ decls stmts }, else
		92 : loc, .loc [ bool ], [
		93 : loc, .id, [
	[82] 
		0 : factor, loc ., <
		1 : factor, loc ., <=
		2 : factor, loc ., >=
		3 : factor, loc ., >
		4 : factor, loc ., )
		5 : factor, loc ., or
		6 : factor, loc ., and
		7 : factor, loc ., eq
		8 : factor, loc ., neq
		9 : factor, loc ., +
		10 : factor, loc ., -
		11 : factor, loc ., *
		12 : factor, loc ., /
		13 : factor, loc ., mod
		14 : loc, loc .[ bool ], <
		15 : loc, loc .[ bool ], <=
		16 : loc, loc .[ bool ], >=
		17 : loc, loc .[ bool ], >
		18 : loc, loc .[ bool ], )
		19 : loc, loc .[ bool ], or
		20 : loc, loc .[ bool ], and
		21 : loc, loc .[ bool ], eq
		22 : loc, loc .[ bool ], neq
		23 : loc, loc .[ bool ], +
		24 : loc, loc .[ bool ], -
		25 : loc, loc .[ bool ], *
		26 : loc, loc .[ bool ], /
		27 : loc, loc .[ bool ], mod
		28 : loc, loc .[ bool ], [
	[83] 
		0 : stmt, if ( bool .) M stmt, }
		1 : stmt, if ( bool .) M stmt else M stmt, }
		2 : stmt, if ( bool .) M stmt, [
		3 : stmt, if ( bool .) M stmt else M stmt, [
		4 : stmt, if ( bool .) M stmt, id
		5 : stmt, if ( bool .) M stmt else M stmt, id
		6 : stmt, if ( bool .) M stmt, if
		7 : stmt, if ( bool .) M stmt else M stmt, if
		8 : stmt, if ( bool .) M stmt, while
		9 : stmt, if ( bool .) M stmt else M stmt, while
		10 : stmt, if ( bool .) M stmt, do
		11 : stmt, if ( bool .) M stmt else M stmt, do
		12 : stmt, if ( bool .) M stmt, return
		13 : stmt, if ( bool .) M stmt else M stmt, return
		14 : stmt, if ( bool .) M stmt, {
		15 : stmt, if ( bool .) M stmt else M stmt, {
		16 : stmt, if ( bool .) M stmt, else
		17 : stmt, if ( bool .) M stmt else M stmt, else
		18 : bool, bool .or join, )
		19 : bool, bool .or join, or
	[84] 
		0 : bool, join ., )
		1 : bool, join ., or
		2 : join, join .and equality, )
		3 : join, join .and equality, or
		4 : join, join .and equality, and
	[85] 
		0 : join, equality ., )
		1 : join, equality ., or
		2 : join, equality ., and
		3 : equality, equality .eq rel, )
		4 : equality, equality .neq rel, )
		5 : equality, equality .eq rel, or
		6 : equality, equality .neq rel, or
		7 : equality, equality .eq rel, and
		8 : equality, equality .neq rel, and
		9 : equality, equality .eq rel, eq
		10 : equality, equality .neq rel, eq
		11 : equality, equality .eq rel, neq
		12 : equality, equality .neq rel, neq
	[86] 
		0 : equality, rel ., )
		1 : equality, rel ., or
		2 : equality, rel ., and
		3 : equality, rel ., eq
		4 : equality, rel ., neq
	[87] 
		0 : rel, expr .< expr, )
		1 : rel, expr .<= expr, )
		2 : rel, expr .>= expr, )
		3 : rel, expr .> expr, )
		4 : rel, expr ., )
		5 : rel, expr .< expr, or
		6 : rel, expr .<= expr, or
		7 : rel, expr .>= expr, or
		8 : rel, expr .> expr, or
		9 : rel, expr ., or
		10 : rel, expr .< expr, and
		11 : rel, expr .<= expr, and
		12 : rel, expr .>= expr, and
		13 : rel, expr .> expr, and
		14 : rel, expr ., and
		15 : rel, expr .< expr, eq
		16 : rel, expr .<= expr, eq
		17 : rel, expr .>= expr, eq
		18 : rel, expr .> expr, eq
		19 : rel, expr ., eq
		20 : rel, expr .< expr, neq
		21 : rel, expr .<= expr, neq
		22 : rel, expr .>= expr, neq
		23 : rel, expr .> expr, neq
		24 : rel, expr ., neq
		25 : expr, expr .+ term, <
		26 : expr, expr .- term, <
		27 : expr, expr .+ term, <=
		28 : expr, expr .- term, <=
		29 : expr, expr .+ term, >=
		30 : expr, expr .- term, >=
		31 : expr, expr .+ term, >
		32 : expr, expr .- term, >
		33 : expr, expr .+ term, )
		34 : expr, expr .- term, )
		35 : expr, expr .+ term, or
		36 : expr, expr .- term, or
		37 : expr, expr .+ term, and
		38 : expr, expr .- term, and
		39 : expr, expr .+ term, eq
		40 : expr, expr .- term, eq
		41 : expr, expr .+ term, neq
		42 : expr, expr .- term, neq
		43 : expr, expr .+ term, +
		44 : expr, expr .- term, +
		45 : expr, expr .+ term, -
		46 : expr, expr .- term, -
	[88] 
		0 : expr, term ., <
		1 : expr, term ., <=
		2 : expr, term ., >=
		3 : expr, term ., >
		4 : expr, term ., )
		5 : expr, term ., or
		6 : expr, term ., and
		7 : expr, term ., eq
		8 : expr, term ., neq
		9 : expr, term ., +
		10 : expr, term ., -
		11 : term, term .* unary, <
		12 : term, term ./ unary, <
		13 : term, term .mod unary, <
		14 : term, term .* unary, <=
		15 : term, term ./ unary, <=
		16 : term, term .mod unary, <=
		17 : term, term .* unary, >=
		18 : term, term ./ unary, >=
		19 : term, term .mod unary, >=
		20 : term, term .* unary, >
		21 : term, term ./ unary, >
		22 : term, term .mod unary, >
		23 : term, term .* unary, )
		24 : term, term ./ unary, )
		25 : term, term .mod unary, )
		26 : term, term .* unary, or
		27 : term, term ./ unary, or
		28 : term, term .mod unary, or
		29 : term, term .* unary, and
		30 : term, term ./ unary, and
		31 : term, term .mod unary, and
		32 : term, term .* unary, eq
		33 : term, term ./ unary, eq
		34 : term, term .mod unary, eq
		35 : term, term .* unary, neq
		36 : term, term ./ unary, neq
		37 : term, term .mod unary, neq
		38 : term, term .* unary, +
		39 : term, term ./ unary, +
		40 : term, term .mod unary, +
		41 : term, term .* unary, -
		42 : term, term ./ unary, -
		43 : term, term .mod unary, -
		44 : term, term .* unary, *
		45 : term, term ./ unary, *
		46 : term, term .mod unary, *
		47 : term, term .* unary, /
		48 : term, term ./ unary, /
		49 : term, term .mod unary, /
		50 : term, term .* unary, mod
		51 : term, term ./ unary, mod
		52 : term, term .mod unary, mod
	[89] 
		0 : term, unary ., <
		1 : term, unary ., <=
		2 : term, unary ., >=
		3 : term, unary ., >
		4 : term, unary ., )
		5 : term, unary ., or
		6 : term, unary ., and
		7 : term, unary ., eq
		8 : term, unary ., neq
		9 : term, unary ., +
		10 : term, unary ., -
		11 : term, unary ., *
		12 : term, unary ., /
		13 : term, unary ., mod
	[90] 
		0 : unary, factor ., <
		1 : unary, factor ., <=
		2 : unary, factor ., >=
		3 : unary, factor ., >
		4 : unary, factor ., )
		5 : unary, factor ., or
		6 : unary, factor ., and
		7 : unary, factor ., eq
		8 : unary, factor ., neq
		9 : unary, factor ., +
		10 : unary, factor ., -
		11 : unary, factor ., *
		12 : unary, factor ., /
		13 : unary, factor ., mod
	[91] 
		0 : factor, id .( args ), <
		1 : factor, id .( args ), <=
		2 : factor, id .( args ), >=
		3 : factor, id .( args ), >
		4 : factor, id .( args ), )
		5 : factor, id .( args ), or
		6 : factor, id .( args ), and
		7 : factor, id .( args ), eq
		8 : factor, id .( args ), neq
		9 : factor, id .( args ), +
		10 : factor, id .( args ), -
		11 : factor, id .( args ), *
		12 : factor, id .( args ), /
		13 : factor, id .( args ), mod
		14 : loc, id ., <
		15 : loc, id ., <=
		16 : loc, id ., >=
		17 : loc, id ., >
		18 : loc, id ., )
		19 : loc, id ., or
		20 : loc, id ., and
		21 : loc, id ., eq
		22 : loc, id ., neq
		23 : loc, id ., +
		24 : loc, id ., -
		25 : loc, id ., *
		26 : loc, id ., /
		27 : loc, id ., mod
		28 : loc, id ., [
	[92] 
		0 : factor, ( .bool ), <
		1 : factor, ( .bool ), <=
		2 : factor, ( .bool ), >=
		3 : factor, ( .bool ), >
		4 : factor, ( .bool ), )
		5 : factor, ( .bool ), or
		6 : factor, ( .bool ), and
		7 : factor, ( .bool ), eq
		8 : factor, ( .bool ), neq
		9 : factor, ( .bool ), +
		10 : factor, ( .bool ), -
		11 : factor, ( .bool ), *
		12 : factor, ( .bool ), /
		13 : factor, ( .bool ), mod
		14 : bool, .bool or join, )
		15 : bool, .join, )
		16 : bool, .bool or join, or
		17 : bool, .join, or
		18 : join, .join and equality, )
		19 : join, .equality, )
		20 : join, .join and equality, or
		21 : join, .equality, or
		22 : join, .join and equality, and
		23 : join, .equality, and
		24 : equality, .equality eq rel, )
		25 : equality, .equality neq rel, )
		26 : equality, .rel, )
		27 : equality, .equality eq rel, or
		28 : equality, .equality neq rel, or
		29 : equality, .rel, or
		30 : equality, .equality eq rel, and
		31 : equality, .equality neq rel, and
		32 : equality, .rel, and
		33 : equality, .equality eq rel, eq
		34 : equality, .equality neq rel, eq
		35 : equality, .rel, eq
		36 : equality, .equality eq rel, neq
		37 : equality, .equality neq rel, neq
		38 : equality, .rel, neq
		39 : rel, .expr < expr, )
		40 : rel, .expr <= expr, )
		41 : rel, .expr >= expr, )
		42 : rel, .expr > expr, )
		43 : rel, .expr, )
		44 : rel, .expr < expr, or
		45 : rel, .expr <= expr, or
		46 : rel, .expr >= expr, or
		47 : rel, .expr > expr, or
		48 : rel, .expr, or
		49 : rel, .expr < expr, and
		50 : rel, .expr <= expr, and
		51 : rel, .expr >= expr, and
		52 : rel, .expr > expr, and
		53 : rel, .expr, and
		54 : rel, .expr < expr, eq
		55 : rel, .expr <= expr, eq
		56 : rel, .expr >= expr, eq
		57 : rel, .expr > expr, eq
		58 : rel, .expr, eq
		59 : rel, .expr < expr, neq
		60 : rel, .expr <= expr, neq
		61 : rel, .expr >= expr, neq
		62 : rel, .expr > expr, neq
		63 : rel, .expr, neq
		64 : expr, .expr + term, <
		65 : expr, .expr - term, <
		66 : expr, .term, <
		67 : expr, .expr + term, <=
		68 : expr, .expr - term, <=
		69 : expr, .term, <=
		70 : expr, .expr + term, >=
		71 : expr, .expr - term, >=
		72 : expr, .term, >=
		73 : expr, .expr + term, >
		74 : expr, .expr - term, >
		75 : expr, .term, >
		76 : expr, .expr + term, )
		77 : expr, .expr - term, )
		78 : expr, .term, )
		79 : expr, .expr + term, or
		80 : expr, .expr - term, or
		81 : expr, .term, or
		82 : expr, .expr + term, and
		83 : expr, .expr - term, and
		84 : expr, .term, and
		85 : expr, .expr + term, eq
		86 : expr, .expr - term, eq
		87 : expr, .term, eq
		88 : expr, .expr + term, neq
		89 : expr, .expr - term, neq
		90 : expr, .term, neq
		91 : expr, .expr + term, +
		92 : expr, .expr - term, +
		93 : expr, .term, +
		94 : expr, .expr + term, -
		95 : expr, .expr - term, -
		96 : expr, .term, -
		97 : term, .term * unary, <
		98 : term, .term / unary, <
		99 : term, .term mod unary, <
		100 : term, .unary, <
		101 : term, .term * unary, <=
		102 : term, .term / unary, <=
		103 : term, .term mod unary, <=
		104 : term, .unary, <=
		105 : term, .term * unary, >=
		106 : term, .term / unary, >=
		107 : term, .term mod unary, >=
		108 : term, .unary, >=
		109 : term, .term * unary, >
		110 : term, .term / unary, >
		111 : term, .term mod unary, >
		112 : term, .unary, >
		113 : term, .term * unary, )
		114 : term, .term / unary, )
		115 : term, .term mod unary, )
		116 : term, .unary, )
		117 : term, .term * unary, or
		118 : term, .term / unary, or
		119 : term, .term mod unary, or
		120 : term, .unary, or
		121 : term, .term * unary, and
		122 : term, .term / unary, and
		123 : term, .term mod unary, and
		124 : term, .unary, and
		125 : term, .term * unary, eq
		126 : term, .term / unary, eq
		127 : term, .term mod unary, eq
		128 : term, .unary, eq
		129 : term, .term * unary, neq
		130 : term, .term / unary, neq
		131 : term, .term mod unary, neq
		132 : term, .unary, neq
		133 : term, .term * unary, +
		134 : term, .term / unary, +
		135 : term, .term mod unary, +
		136 : term, .unary, +
		137 : term, .term * unary, -
		138 : term, .term / unary, -
		139 : term, .term mod unary, -
		140 : term, .unary, -
		141 : term, .term * unary, *
		142 : term, .term / unary, *
		143 : term, .term mod unary, *
		144 : term, .unary, *
		145 : term, .term * unary, /
		146 : term, .term / unary, /
		147 : term, .term mod unary, /
		148 : term, .unary, /
		149 : term, .term * unary, mod
		150 : term, .term / unary, mod
		151 : term, .term mod unary, mod
		152 : term, .unary, mod
		153 : unary, .! unary, <
		154 : unary, .- unary, <
		155 : unary, .factor, <
		156 : unary, .! unary, <=
		157 : unary, .- unary, <=
		158 : unary, .factor, <=
		159 : unary, .! unary, >=
		160 : unary, .- unary, >=
		161 : unary, .factor, >=
		162 : unary, .! unary, >
		163 : unary, .- unary, >
		164 : unary, .factor, >
		165 : unary, .! unary, )
		166 : unary, .- unary, )
		167 : unary, .factor, )
		168 : unary, .! unary, or
		169 : unary, .- unary, or
		170 : unary, .factor, or
		171 : unary, .! unary, and
		172 : unary, .- unary, and
		173 : unary, .factor, and
		174 : unary, .! unary, eq
		175 : unary, .- unary, eq
		176 : unary, .factor, eq
		177 : unary, .! unary, neq
		178 : unary, .- unary, neq
		179 : unary, .factor, neq
		180 : unary, .! unary, +
		181 : unary, .- unary, +
		182 : unary, .factor, +
		183 : unary, .! unary, -
		184 : unary, .- unary, -
		185 : unary, .factor, -
		186 : unary, .! unary, *
		187 : unary, .- unary, *
		188 : unary, .factor, *
		189 : unary, .! unary, /
		190 : unary, .- unary, /
		191 : unary, .factor, /
		192 : unary, .! unary, mod
		193 : unary, .- unary, mod
		194 : unary, .factor, mod
		195 : factor, .( bool ), <
		196 : factor, .loc, <
		197 : factor, .id ( args ), <
		198 : factor, .num, <
		199 : factor, .real, <
		200 : factor, .true, <
		201 : factor, .false, <
		202 : factor, .( bool ), <=
		203 : factor, .loc, <=
		204 : factor, .id ( args ), <=
		205 : factor, .num, <=
		206 : factor, .real, <=
		207 : factor, .true, <=
		208 : factor, .false, <=
		209 : factor, .( bool ), >=
		210 : factor, .loc, >=
		211 : factor, .id ( args ), >=
		212 : factor, .num, >=
		213 : factor, .real, >=
		214 : factor, .true, >=
		215 : factor, .false, >=
		216 : factor, .( bool ), >
		217 : factor, .loc, >
		218 : factor, .id ( args ), >
		219 : factor, .num, >
		220 : factor, .real, >
		221 : factor, .true, >
		222 : factor, .false, >
		223 : factor, .( bool ), )
		224 : factor, .loc, )
		225 : factor, .id ( args ), )
		226 : factor, .num, )
		227 : factor, .real, )
		228 : factor, .true, )
		229 : factor, .false, )
		230 : factor, .( bool ), or
		231 : factor, .loc, or
		232 : factor, .id ( args ), or
		233 : factor, .num, or
		234 : factor, .real, or
		235 : factor, .true, or
		236 : factor, .false, or
		237 : factor, .( bool ), and
		238 : factor, .loc, and
		239 : factor, .id ( args ), and
		240 : factor, .num, and
		241 : factor, .real, and
		242 : factor, .true, and
		243 : factor, .false, and
		244 : factor, .( bool ), eq
		245 : factor, .loc, eq
		246 : factor, .id ( args ), eq
		247 : factor, .num, eq
		248 : factor, .real, eq
		249 : factor, .true, eq
		250 : factor, .false, eq
		251 : factor, .( bool ), neq
		252 : factor, .loc, neq
		253 : factor, .id ( args ), neq
		254 : factor, .num, neq
		255 : factor, .real, neq
		256 : factor, .true, neq
		257 : factor, .false, neq
		258 : factor, .( bool ), +
		259 : factor, .loc, +
		260 : factor, .id ( args ), +
		261 : factor, .num, +
		262 : factor, .real, +
		263 : factor, .true, +
		264 : factor, .false, +
		265 : factor, .( bool ), -
		266 : factor, .loc, -
		267 : factor, .id ( args ), -
		268 : factor, .num, -
		269 : factor, .real, -
		270 : factor, .true, -
		271 : factor, .false, -
		272 : factor, .( bool ), *
		273 : factor, .loc, *
		274 : factor, .id ( args ), *
		275 : factor, .num, *
		276 : factor, .real, *
		277 : factor, .true, *
		278 : factor, .false, *
		279 : factor, .( bool ), /
		280 : factor, .loc, /
		281 : factor, .id ( args ), /
		282 : factor, .num, /
		283 : factor, .real, /
		284 : factor, .true, /
		285 : factor, .false, /
		286 : factor, .( bool ), mod
		287 : factor, .loc, mod
		288 : factor, .id ( args ), mod
		289 : factor, .num, mod
		290 : factor, .real, mod
		291 : factor, .true, mod
		292 : factor, .false, mod
		293 : loc, .loc [ bool ], <
		294 : loc, .id, <
		295 : loc, .loc [ bool ], <=
		296 : loc, .id, <=
		297 : loc, .loc [ bool ], >=
		298 : loc, .id, >=
		299 : loc, .loc [ bool ], >
		300 : loc, .id, >
		301 : loc, .loc [ bool ], )
		302 : loc, .id, )
		303 : loc, .loc [ bool ], or
		304 : loc, .id, or
		305 : loc, .loc [ bool ], and
		306 : loc, .id, and
		307 : loc, .loc [ bool ], eq
		308 : loc, .id, eq
		309 : loc, .loc [ bool ], neq
		310 : loc, .id, neq
		311 : loc, .loc [ bool ], +
		312 : loc, .id, +
		313 : loc, .loc [ bool ], -
		314 : loc, .id, -
		315 : loc, .loc [ bool ], *
		316 : loc, .id, *
		317 : loc, .loc [ bool ], /
		318 : loc, .id, /
		319 : loc, .loc [ bool ], mod
		320 : loc, .id, mod
		321 : loc, .loc [ bool ], [
		322 : loc, .id, [
	[93] 
		0 : unary, - .unary, <
		1 : unary, - .unary, <=
		2 : unary, - .unary, >=
		3 : unary, - .unary, >
		4 : unary, - .unary, )
		5 : unary, - .unary, or
		6 : unary, - .unary, and
		7 : unary, - .unary, eq
		8 : unary, - .unary, neq
		9 : unary, - .unary, +
		10 : unary, - .unary, -
		11 : unary, - .unary, *
		12 : unary, - .unary, /
		13 : unary, - .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, )
		27 : unary, .- unary, )
		28 : unary, .factor, )
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), )
		85 : factor, .loc, )
		86 : factor, .id ( args ), )
		87 : factor, .num, )
		88 : factor, .real, )
		89 : factor, .true, )
		90 : factor, .false, )
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], )
		163 : loc, .id, )
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[94] 
		0 : unary, ! .unary, <
		1 : unary, ! .unary, <=
		2 : unary, ! .unary, >=
		3 : unary, ! .unary, >
		4 : unary, ! .unary, )
		5 : unary, ! .unary, or
		6 : unary, ! .unary, and
		7 : unary, ! .unary, eq
		8 : unary, ! .unary, neq
		9 : unary, ! .unary, +
		10 : unary, ! .unary, -
		11 : unary, ! .unary, *
		12 : unary, ! .unary, /
		13 : unary, ! .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, )
		27 : unary, .- unary, )
		28 : unary, .factor, )
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), )
		85 : factor, .loc, )
		86 : factor, .id ( args ), )
		87 : factor, .num, )
		88 : factor, .real, )
		89 : factor, .true, )
		90 : factor, .false, )
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], )
		163 : loc, .id, )
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[95] 
		0 : factor, num ., <
		1 : factor, num ., <=
		2 : factor, num ., >=
		3 : factor, num ., >
		4 : factor, num ., )
		5 : factor, num ., or
		6 : factor, num ., and
		7 : factor, num ., eq
		8 : factor, num ., neq
		9 : factor, num ., +
		10 : factor, num ., -
		11 : factor, num ., *
		12 : factor, num ., /
		13 : factor, num ., mod
	[96] 
		0 : factor, real ., <
		1 : factor, real ., <=
		2 : factor, real ., >=
		3 : factor, real ., >
		4 : factor, real ., )
		5 : factor, real ., or
		6 : factor, real ., and
		7 : factor, real ., eq
		8 : factor, real ., neq
		9 : factor, real ., +
		10 : factor, real ., -
		11 : factor, real ., *
		12 : factor, real ., /
		13 : factor, real ., mod
	[97] 
		0 : factor, true ., <
		1 : factor, true ., <=
		2 : factor, true ., >=
		3 : factor, true ., >
		4 : factor, true ., )
		5 : factor, true ., or
		6 : factor, true ., and
		7 : factor, true ., eq
		8 : factor, true ., neq
		9 : factor, true ., +
		10 : factor, true ., -
		11 : factor, true ., *
		12 : factor, true ., /
		13 : factor, true ., mod
	[98] 
		0 : factor, false ., <
		1 : factor, false ., <=
		2 : factor, false ., >=
		3 : factor, false ., >
		4 : factor, false ., )
		5 : factor, false ., or
		6 : factor, false ., and
		7 : factor, false ., eq
		8 : factor, false ., neq
		9 : factor, false ., +
		10 : factor, false ., -
		11 : factor, false ., *
		12 : factor, false ., /
		13 : factor, false ., mod
	[99] 
		0 : stmt, while N ( .bool ) M stmt, }
		1 : stmt, while N ( .bool ) M stmt, [
		2 : stmt, while N ( .bool ) M stmt, id
		3 : stmt, while N ( .bool ) M stmt, if
		4 : stmt, while N ( .bool ) M stmt, while
		5 : stmt, while N ( .bool ) M stmt, do
		6 : stmt, while N ( .bool ) M stmt, return
		7 : stmt, while N ( .bool ) M stmt, {
		8 : stmt, while N ( .bool ) M stmt, else
		9 : bool, .bool or join, )
		10 : bool, .join, )
		11 : bool, .bool or join, or
		12 : bool, .join, or
		13 : join, .join and equality, )
		14 : join, .equality, )
		15 : join, .join and equality, or
		16 : join, .equality, or
		17 : join, .join and equality, and
		18 : join, .equality, and
		19 : equality, .equality eq rel, )
		20 : equality, .equality neq rel, )
		21 : equality, .rel, )
		22 : equality, .equality eq rel, or
		23 : equality, .equality neq rel, or
		24 : equality, .rel, or
		25 : equality, .equality eq rel, and
		26 : equality, .equality neq rel, and
		27 : equality, .rel, and
		28 : equality, .equality eq rel, eq
		29 : equality, .equality neq rel, eq
		30 : equality, .rel, eq
		31 : equality, .equality eq rel, neq
		32 : equality, .equality neq rel, neq
		33 : equality, .rel, neq
		34 : rel, .expr < expr, )
		35 : rel, .expr <= expr, )
		36 : rel, .expr >= expr, )
		37 : rel, .expr > expr, )
		38 : rel, .expr, )
		39 : rel, .expr < expr, or
		40 : rel, .expr <= expr, or
		41 : rel, .expr >= expr, or
		42 : rel, .expr > expr, or
		43 : rel, .expr, or
		44 : rel, .expr < expr, and
		45 : rel, .expr <= expr, and
		46 : rel, .expr >= expr, and
		47 : rel, .expr > expr, and
		48 : rel, .expr, and
		49 : rel, .expr < expr, eq
		50 : rel, .expr <= expr, eq
		51 : rel, .expr >= expr, eq
		52 : rel, .expr > expr, eq
		53 : rel, .expr, eq
		54 : rel, .expr < expr, neq
		55 : rel, .expr <= expr, neq
		56 : rel, .expr >= expr, neq
		57 : rel, .expr > expr, neq
		58 : rel, .expr, neq
		59 : expr, .expr + term, <
		60 : expr, .expr - term, <
		61 : expr, .term, <
		62 : expr, .expr + term, <=
		63 : expr, .expr - term, <=
		64 : expr, .term, <=
		65 : expr, .expr + term, >=
		66 : expr, .expr - term, >=
		67 : expr, .term, >=
		68 : expr, .expr + term, >
		69 : expr, .expr - term, >
		70 : expr, .term, >
		71 : expr, .expr + term, )
		72 : expr, .expr - term, )
		73 : expr, .term, )
		74 : expr, .expr + term, or
		75 : expr, .expr - term, or
		76 : expr, .term, or
		77 : expr, .expr + term, and
		78 : expr, .expr - term, and
		79 : expr, .term, and
		80 : expr, .expr + term, eq
		81 : expr, .expr - term, eq
		82 : expr, .term, eq
		83 : expr, .expr + term, neq
		84 : expr, .expr - term, neq
		85 : expr, .term, neq
		86 : expr, .expr + term, +
		87 : expr, .expr - term, +
		88 : expr, .term, +
		89 : expr, .expr + term, -
		90 : expr, .expr - term, -
		91 : expr, .term, -
		92 : term, .term * unary, <
		93 : term, .term / unary, <
		94 : term, .term mod unary, <
		95 : term, .unary, <
		96 : term, .term * unary, <=
		97 : term, .term / unary, <=
		98 : term, .term mod unary, <=
		99 : term, .unary, <=
		100 : term, .term * unary, >=
		101 : term, .term / unary, >=
		102 : term, .term mod unary, >=
		103 : term, .unary, >=
		104 : term, .term * unary, >
		105 : term, .term / unary, >
		106 : term, .term mod unary, >
		107 : term, .unary, >
		108 : term, .term * unary, )
		109 : term, .term / unary, )
		110 : term, .term mod unary, )
		111 : term, .unary, )
		112 : term, .term * unary, or
		113 : term, .term / unary, or
		114 : term, .term mod unary, or
		115 : term, .unary, or
		116 : term, .term * unary, and
		117 : term, .term / unary, and
		118 : term, .term mod unary, and
		119 : term, .unary, and
		120 : term, .term * unary, eq
		121 : term, .term / unary, eq
		122 : term, .term mod unary, eq
		123 : term, .unary, eq
		124 : term, .term * unary, neq
		125 : term, .term / unary, neq
		126 : term, .term mod unary, neq
		127 : term, .unary, neq
		128 : term, .term * unary, +
		129 : term, .term / unary, +
		130 : term, .term mod unary, +
		131 : term, .unary, +
		132 : term, .term * unary, -
		133 : term, .term / unary, -
		134 : term, .term mod unary, -
		135 : term, .unary, -
		136 : term, .term * unary, *
		137 : term, .term / unary, *
		138 : term, .term mod unary, *
		139 : term, .unary, *
		140 : term, .term * unary, /
		141 : term, .term / unary, /
		142 : term, .term mod unary, /
		143 : term, .unary, /
		144 : term, .term * unary, mod
		145 : term, .term / unary, mod
		146 : term, .term mod unary, mod
		147 : term, .unary, mod
		148 : unary, .! unary, <
		149 : unary, .- unary, <
		150 : unary, .factor, <
		151 : unary, .! unary, <=
		152 : unary, .- unary, <=
		153 : unary, .factor, <=
		154 : unary, .! unary, >=
		155 : unary, .- unary, >=
		156 : unary, .factor, >=
		157 : unary, .! unary, >
		158 : unary, .- unary, >
		159 : unary, .factor, >
		160 : unary, .! unary, )
		161 : unary, .- unary, )
		162 : unary, .factor, )
		163 : unary, .! unary, or
		164 : unary, .- unary, or
		165 : unary, .factor, or
		166 : unary, .! unary, and
		167 : unary, .- unary, and
		168 : unary, .factor, and
		169 : unary, .! unary, eq
		170 : unary, .- unary, eq
		171 : unary, .factor, eq
		172 : unary, .! unary, neq
		173 : unary, .- unary, neq
		174 : unary, .factor, neq
		175 : unary, .! unary, +
		176 : unary, .- unary, +
		177 : unary, .factor, +
		178 : unary, .! unary, -
		179 : unary, .- unary, -
		180 : unary, .factor, -
		181 : unary, .! unary, *
		182 : unary, .- unary, *
		183 : unary, .factor, *
		184 : unary, .! unary, /
		185 : unary, .- unary, /
		186 : unary, .factor, /
		187 : unary, .! unary, mod
		188 : unary, .- unary, mod
		189 : unary, .factor, mod
		190 : factor, .( bool ), <
		191 : factor, .loc, <
		192 : factor, .id ( args ), <
		193 : factor, .num, <
		194 : factor, .real, <
		195 : factor, .true, <
		196 : factor, .false, <
		197 : factor, .( bool ), <=
		198 : factor, .loc, <=
		199 : factor, .id ( args ), <=
		200 : factor, .num, <=
		201 : factor, .real, <=
		202 : factor, .true, <=
		203 : factor, .false, <=
		204 : factor, .( bool ), >=
		205 : factor, .loc, >=
		206 : factor, .id ( args ), >=
		207 : factor, .num, >=
		208 : factor, .real, >=
		209 : factor, .true, >=
		210 : factor, .false, >=
		211 : factor, .( bool ), >
		212 : factor, .loc, >
		213 : factor, .id ( args ), >
		214 : factor, .num, >
		215 : factor, .real, >
		216 : factor, .true, >
		217 : factor, .false, >
		218 : factor, .( bool ), )
		219 : factor, .loc, )
		220 : factor, .id ( args ), )
		221 : factor, .num, )
		222 : factor, .real, )
		223 : factor, .true, )
		224 : factor, .false, )
		225 : factor, .( bool ), or
		226 : factor, .loc, or
		227 : factor, .id ( args ), or
		228 : factor, .num, or
		229 : factor, .real, or
		230 : factor, .true, or
		231 : factor, .false, or
		232 : factor, .( bool ), and
		233 : factor, .loc, and
		234 : factor, .id ( args ), and
		235 : factor, .num, and
		236 : factor, .real, and
		237 : factor, .true, and
		238 : factor, .false, and
		239 : factor, .( bool ), eq
		240 : factor, .loc, eq
		241 : factor, .id ( args ), eq
		242 : factor, .num, eq
		243 : factor, .real, eq
		244 : factor, .true, eq
		245 : factor, .false, eq
		246 : factor, .( bool ), neq
		247 : factor, .loc, neq
		248 : factor, .id ( args ), neq
		249 : factor, .num, neq
		250 : factor, .real, neq
		251 : factor, .true, neq
		252 : factor, .false, neq
		253 : factor, .( bool ), +
		254 : factor, .loc, +
		255 : factor, .id ( args ), +
		256 : factor, .num, +
		257 : factor, .real, +
		258 : factor, .true, +
		259 : factor, .false, +
		260 : factor, .( bool ), -
		261 : factor, .loc, -
		262 : factor, .id ( args ), -
		263 : factor, .num, -
		264 : factor, .real, -
		265 : factor, .true, -
		266 : factor, .false, -
		267 : factor, .( bool ), *
		268 : factor, .loc, *
		269 : factor, .id ( args ), *
		270 : factor, .num, *
		271 : factor, .real, *
		272 : factor, .true, *
		273 : factor, .false, *
		274 : factor, .( bool ), /
		275 : factor, .loc, /
		276 : factor, .id ( args ), /
		277 : factor, .num, /
		278 : factor, .real, /
		279 : factor, .true, /
		280 : factor, .false, /
		281 : factor, .( bool ), mod
		282 : factor, .loc, mod
		283 : factor, .id ( args ), mod
		284 : factor, .num, mod
		285 : factor, .real, mod
		286 : factor, .true, mod
		287 : factor, .false, mod
		288 : loc, .loc [ bool ], <
		289 : loc, .id, <
		290 : loc, .loc [ bool ], <=
		291 : loc, .id, <=
		292 : loc, .loc [ bool ], >=
		293 : loc, .id, >=
		294 : loc, .loc [ bool ], >
		295 : loc, .id, >
		296 : loc, .loc [ bool ], )
		297 : loc, .id, )
		298 : loc, .loc [ bool ], or
		299 : loc, .id, or
		300 : loc, .loc [ bool ], and
		301 : loc, .id, and
		302 : loc, .loc [ bool ], eq
		303 : loc, .id, eq
		304 : loc, .loc [ bool ], neq
		305 : loc, .id, neq
		306 : loc, .loc [ bool ], +
		307 : loc, .id, +
		308 : loc, .loc [ bool ], -
		309 : loc, .id, -
		310 : loc, .loc [ bool ], *
		311 : loc, .id, *
		312 : loc, .loc [ bool ], /
		313 : loc, .id, /
		314 : loc, .loc [ bool ], mod
		315 : loc, .id, mod
		316 : loc, .loc [ bool ], [
		317 : loc, .id, [
	[100] 
		0 : stmt, block ., while
	[101] 
		0 : stmt, do N stmt .while ( bool ) M ;, }
		1 : stmt, do N stmt .while ( bool ) M ;, [
		2 : stmt, do N stmt .while ( bool ) M ;, id
		3 : stmt, do N stmt .while ( bool ) M ;, if
		4 : stmt, do N stmt .while ( bool ) M ;, while
		5 : stmt, do N stmt .while ( bool ) M ;, do
		6 : stmt, do N stmt .while ( bool ) M ;, return
		7 : stmt, do N stmt .while ( bool ) M ;, {
		8 : stmt, do N stmt .while ( bool ) M ;, else
	[102] 
		0 : stmt, loc .= bool ;, while
		1 : loc, loc .[ bool ], =
		2 : loc, loc .[ bool ], [
	[103] 
		0 : block, { .decls stmts }, while
		1 : decls, .decls decl, [
		2 : decls, .decls decl, id
		3 : decls, .decls decl, if
		4 : decls, .decls decl, while
		5 : decls, .decls decl, do
		6 : decls, .decls decl, return
		7 : decls, .decls decl, {
		8 : decls, .decls decl, }
		9 : decls, ., [
		10 : decls, ., id
		11 : decls, ., if
		12 : decls, ., while
		13 : decls, ., do
		14 : decls, ., return
		15 : decls, ., {
		16 : decls, ., }
		17 : decls, .decls decl, basic
		18 : decls, ., basic
	[104] 
		0 : stmt, if .( bool ) M stmt, while
		1 : stmt, if .( bool ) M stmt else M stmt, while
	[105] 
		0 : stmt, while .N ( bool ) M stmt, while
		1 : N, ., (
		2 : N, ., [
		3 : N, ., id
		4 : N, ., if
		5 : N, ., while
		6 : N, ., do
		7 : N, ., return
		8 : N, ., {
	[106] 
		0 : stmt, do .N stmt while ( bool ) M ;, while
		1 : N, ., (
		2 : N, ., [
		3 : N, ., id
		4 : N, ., if
		5 : N, ., while
		6 : N, ., do
		7 : N, ., return
		8 : N, ., {
	[107] 
		0 : stmt, return .arg ;, while
		1 : arg, .loc, ;
		2 : arg, .bool, ;
		3 : loc, .loc [ bool ], ;
		4 : loc, .id, ;
		5 : bool, .bool or join, ;
		6 : bool, .join, ;
		7 : loc, .loc [ bool ], [
		8 : loc, .id, [
		9 : bool, .bool or join, or
		10 : bool, .join, or
		11 : join, .join and equality, ;
		12 : join, .equality, ;
		13 : join, .join and equality, or
		14 : join, .equality, or
		15 : join, .join and equality, and
		16 : join, .equality, and
		17 : equality, .equality eq rel, ;
		18 : equality, .equality neq rel, ;
		19 : equality, .rel, ;
		20 : equality, .equality eq rel, or
		21 : equality, .equality neq rel, or
		22 : equality, .rel, or
		23 : equality, .equality eq rel, and
		24 : equality, .equality neq rel, and
		25 : equality, .rel, and
		26 : equality, .equality eq rel, eq
		27 : equality, .equality neq rel, eq
		28 : equality, .rel, eq
		29 : equality, .equality eq rel, neq
		30 : equality, .equality neq rel, neq
		31 : equality, .rel, neq
		32 : rel, .expr < expr, ;
		33 : rel, .expr <= expr, ;
		34 : rel, .expr >= expr, ;
		35 : rel, .expr > expr, ;
		36 : rel, .expr, ;
		37 : rel, .expr < expr, or
		38 : rel, .expr <= expr, or
		39 : rel, .expr >= expr, or
		40 : rel, .expr > expr, or
		41 : rel, .expr, or
		42 : rel, .expr < expr, and
		43 : rel, .expr <= expr, and
		44 : rel, .expr >= expr, and
		45 : rel, .expr > expr, and
		46 : rel, .expr, and
		47 : rel, .expr < expr, eq
		48 : rel, .expr <= expr, eq
		49 : rel, .expr >= expr, eq
		50 : rel, .expr > expr, eq
		51 : rel, .expr, eq
		52 : rel, .expr < expr, neq
		53 : rel, .expr <= expr, neq
		54 : rel, .expr >= expr, neq
		55 : rel, .expr > expr, neq
		56 : rel, .expr, neq
		57 : expr, .expr + term, <
		58 : expr, .expr - term, <
		59 : expr, .term, <
		60 : expr, .expr + term, <=
		61 : expr, .expr - term, <=
		62 : expr, .term, <=
		63 : expr, .expr + term, >=
		64 : expr, .expr - term, >=
		65 : expr, .term, >=
		66 : expr, .expr + term, >
		67 : expr, .expr - term, >
		68 : expr, .term, >
		69 : expr, .expr + term, ;
		70 : expr, .expr - term, ;
		71 : expr, .term, ;
		72 : expr, .expr + term, or
		73 : expr, .expr - term, or
		74 : expr, .term, or
		75 : expr, .expr + term, and
		76 : expr, .expr - term, and
		77 : expr, .term, and
		78 : expr, .expr + term, eq
		79 : expr, .expr - term, eq
		80 : expr, .term, eq
		81 : expr, .expr + term, neq
		82 : expr, .expr - term, neq
		83 : expr, .term, neq
		84 : expr, .expr + term, +
		85 : expr, .expr - term, +
		86 : expr, .term, +
		87 : expr, .expr + term, -
		88 : expr, .expr - term, -
		89 : expr, .term, -
		90 : term, .term * unary, <
		91 : term, .term / unary, <
		92 : term, .term mod unary, <
		93 : term, .unary, <
		94 : term, .term * unary, <=
		95 : term, .term / unary, <=
		96 : term, .term mod unary, <=
		97 : term, .unary, <=
		98 : term, .term * unary, >=
		99 : term, .term / unary, >=
		100 : term, .term mod unary, >=
		101 : term, .unary, >=
		102 : term, .term * unary, >
		103 : term, .term / unary, >
		104 : term, .term mod unary, >
		105 : term, .unary, >
		106 : term, .term * unary, ;
		107 : term, .term / unary, ;
		108 : term, .term mod unary, ;
		109 : term, .unary, ;
		110 : term, .term * unary, or
		111 : term, .term / unary, or
		112 : term, .term mod unary, or
		113 : term, .unary, or
		114 : term, .term * unary, and
		115 : term, .term / unary, and
		116 : term, .term mod unary, and
		117 : term, .unary, and
		118 : term, .term * unary, eq
		119 : term, .term / unary, eq
		120 : term, .term mod unary, eq
		121 : term, .unary, eq
		122 : term, .term * unary, neq
		123 : term, .term / unary, neq
		124 : term, .term mod unary, neq
		125 : term, .unary, neq
		126 : term, .term * unary, +
		127 : term, .term / unary, +
		128 : term, .term mod unary, +
		129 : term, .unary, +
		130 : term, .term * unary, -
		131 : term, .term / unary, -
		132 : term, .term mod unary, -
		133 : term, .unary, -
		134 : term, .term * unary, *
		135 : term, .term / unary, *
		136 : term, .term mod unary, *
		137 : term, .unary, *
		138 : term, .term * unary, /
		139 : term, .term / unary, /
		140 : term, .term mod unary, /
		141 : term, .unary, /
		142 : term, .term * unary, mod
		143 : term, .term / unary, mod
		144 : term, .term mod unary, mod
		145 : term, .unary, mod
		146 : unary, .! unary, <
		147 : unary, .- unary, <
		148 : unary, .factor, <
		149 : unary, .! unary, <=
		150 : unary, .- unary, <=
		151 : unary, .factor, <=
		152 : unary, .! unary, >=
		153 : unary, .- unary, >=
		154 : unary, .factor, >=
		155 : unary, .! unary, >
		156 : unary, .- unary, >
		157 : unary, .factor, >
		158 : unary, .! unary, ;
		159 : unary, .- unary, ;
		160 : unary, .factor, ;
		161 : unary, .! unary, or
		162 : unary, .- unary, or
		163 : unary, .factor, or
		164 : unary, .! unary, and
		165 : unary, .- unary, and
		166 : unary, .factor, and
		167 : unary, .! unary, eq
		168 : unary, .- unary, eq
		169 : unary, .factor, eq
		170 : unary, .! unary, neq
		171 : unary, .- unary, neq
		172 : unary, .factor, neq
		173 : unary, .! unary, +
		174 : unary, .- unary, +
		175 : unary, .factor, +
		176 : unary, .! unary, -
		177 : unary, .- unary, -
		178 : unary, .factor, -
		179 : unary, .! unary, *
		180 : unary, .- unary, *
		181 : unary, .factor, *
		182 : unary, .! unary, /
		183 : unary, .- unary, /
		184 : unary, .factor, /
		185 : unary, .! unary, mod
		186 : unary, .- unary, mod
		187 : unary, .factor, mod
		188 : factor, .( bool ), <
		189 : factor, .loc, <
		190 : factor, .id ( args ), <
		191 : factor, .num, <
		192 : factor, .real, <
		193 : factor, .true, <
		194 : factor, .false, <
		195 : factor, .( bool ), <=
		196 : factor, .loc, <=
		197 : factor, .id ( args ), <=
		198 : factor, .num, <=
		199 : factor, .real, <=
		200 : factor, .true, <=
		201 : factor, .false, <=
		202 : factor, .( bool ), >=
		203 : factor, .loc, >=
		204 : factor, .id ( args ), >=
		205 : factor, .num, >=
		206 : factor, .real, >=
		207 : factor, .true, >=
		208 : factor, .false, >=
		209 : factor, .( bool ), >
		210 : factor, .loc, >
		211 : factor, .id ( args ), >
		212 : factor, .num, >
		213 : factor, .real, >
		214 : factor, .true, >
		215 : factor, .false, >
		216 : factor, .( bool ), ;
		217 : factor, .loc, ;
		218 : factor, .id ( args ), ;
		219 : factor, .num, ;
		220 : factor, .real, ;
		221 : factor, .true, ;
		222 : factor, .false, ;
		223 : factor, .( bool ), or
		224 : factor, .loc, or
		225 : factor, .id ( args ), or
		226 : factor, .num, or
		227 : factor, .real, or
		228 : factor, .true, or
		229 : factor, .false, or
		230 : factor, .( bool ), and
		231 : factor, .loc, and
		232 : factor, .id ( args ), and
		233 : factor, .num, and
		234 : factor, .real, and
		235 : factor, .true, and
		236 : factor, .false, and
		237 : factor, .( bool ), eq
		238 : factor, .loc, eq
		239 : factor, .id ( args ), eq
		240 : factor, .num, eq
		241 : factor, .real, eq
		242 : factor, .true, eq
		243 : factor, .false, eq
		244 : factor, .( bool ), neq
		245 : factor, .loc, neq
		246 : factor, .id ( args ), neq
		247 : factor, .num, neq
		248 : factor, .real, neq
		249 : factor, .true, neq
		250 : factor, .false, neq
		251 : factor, .( bool ), +
		252 : factor, .loc, +
		253 : factor, .id ( args ), +
		254 : factor, .num, +
		255 : factor, .real, +
		256 : factor, .true, +
		257 : factor, .false, +
		258 : factor, .( bool ), -
		259 : factor, .loc, -
		260 : factor, .id ( args ), -
		261 : factor, .num, -
		262 : factor, .real, -
		263 : factor, .true, -
		264 : factor, .false, -
		265 : factor, .( bool ), *
		266 : factor, .loc, *
		267 : factor, .id ( args ), *
		268 : factor, .num, *
		269 : factor, .real, *
		270 : factor, .true, *
		271 : factor, .false, *
		272 : factor, .( bool ), /
		273 : factor, .loc, /
		274 : factor, .id ( args ), /
		275 : factor, .num, /
		276 : factor, .real, /
		277 : factor, .true, /
		278 : factor, .false, /
		279 : factor, .( bool ), mod
		280 : factor, .loc, mod
		281 : factor, .id ( args ), mod
		282 : factor, .num, mod
		283 : factor, .real, mod
		284 : factor, .true, mod
		285 : factor, .false, mod
		286 : loc, .loc [ bool ], <
		287 : loc, .id, <
		288 : loc, .loc [ bool ], <=
		289 : loc, .id, <=
		290 : loc, .loc [ bool ], >=
		291 : loc, .id, >=
		292 : loc, .loc [ bool ], >
		293 : loc, .id, >
		294 : loc, .loc [ bool ], or
		295 : loc, .id, or
		296 : loc, .loc [ bool ], and
		297 : loc, .id, and
		298 : loc, .loc [ bool ], eq
		299 : loc, .id, eq
		300 : loc, .loc [ bool ], neq
		301 : loc, .id, neq
		302 : loc, .loc [ bool ], +
		303 : loc, .id, +
		304 : loc, .loc [ bool ], -
		305 : loc, .id, -
		306 : loc, .loc [ bool ], *
		307 : loc, .id, *
		308 : loc, .loc [ bool ], /
		309 : loc, .id, /
		310 : loc, .loc [ bool ], mod
		311 : loc, .id, mod
	[108] 
		0 : loc, loc [ .bool ], ;
		1 : loc, loc [ .bool ], [
		2 : loc, loc [ .bool ], <
		3 : loc, loc [ .bool ], <=
		4 : loc, loc [ .bool ], >=
		5 : loc, loc [ .bool ], >
		6 : loc, loc [ .bool ], or
		7 : loc, loc [ .bool ], and
		8 : loc, loc [ .bool ], eq
		9 : loc, loc [ .bool ], neq
		10 : loc, loc [ .bool ], +
		11 : loc, loc [ .bool ], -
		12 : loc, loc [ .bool ], *
		13 : loc, loc [ .bool ], /
		14 : loc, loc [ .bool ], mod
		15 : bool, .bool or join, ]
		16 : bool, .join, ]
		17 : bool, .bool or join, or
		18 : bool, .join, or
		19 : join, .join and equality, ]
		20 : join, .equality, ]
		21 : join, .join and equality, or
		22 : join, .equality, or
		23 : join, .join and equality, and
		24 : join, .equality, and
		25 : equality, .equality eq rel, ]
		26 : equality, .equality neq rel, ]
		27 : equality, .rel, ]
		28 : equality, .equality eq rel, or
		29 : equality, .equality neq rel, or
		30 : equality, .rel, or
		31 : equality, .equality eq rel, and
		32 : equality, .equality neq rel, and
		33 : equality, .rel, and
		34 : equality, .equality eq rel, eq
		35 : equality, .equality neq rel, eq
		36 : equality, .rel, eq
		37 : equality, .equality eq rel, neq
		38 : equality, .equality neq rel, neq
		39 : equality, .rel, neq
		40 : rel, .expr < expr, ]
		41 : rel, .expr <= expr, ]
		42 : rel, .expr >= expr, ]
		43 : rel, .expr > expr, ]
		44 : rel, .expr, ]
		45 : rel, .expr < expr, or
		46 : rel, .expr <= expr, or
		47 : rel, .expr >= expr, or
		48 : rel, .expr > expr, or
		49 : rel, .expr, or
		50 : rel, .expr < expr, and
		51 : rel, .expr <= expr, and
		52 : rel, .expr >= expr, and
		53 : rel, .expr > expr, and
		54 : rel, .expr, and
		55 : rel, .expr < expr, eq
		56 : rel, .expr <= expr, eq
		57 : rel, .expr >= expr, eq
		58 : rel, .expr > expr, eq
		59 : rel, .expr, eq
		60 : rel, .expr < expr, neq
		61 : rel, .expr <= expr, neq
		62 : rel, .expr >= expr, neq
		63 : rel, .expr > expr, neq
		64 : rel, .expr, neq
		65 : expr, .expr + term, <
		66 : expr, .expr - term, <
		67 : expr, .term, <
		68 : expr, .expr + term, <=
		69 : expr, .expr - term, <=
		70 : expr, .term, <=
		71 : expr, .expr + term, >=
		72 : expr, .expr - term, >=
		73 : expr, .term, >=
		74 : expr, .expr + term, >
		75 : expr, .expr - term, >
		76 : expr, .term, >
		77 : expr, .expr + term, ]
		78 : expr, .expr - term, ]
		79 : expr, .term, ]
		80 : expr, .expr + term, or
		81 : expr, .expr - term, or
		82 : expr, .term, or
		83 : expr, .expr + term, and
		84 : expr, .expr - term, and
		85 : expr, .term, and
		86 : expr, .expr + term, eq
		87 : expr, .expr - term, eq
		88 : expr, .term, eq
		89 : expr, .expr + term, neq
		90 : expr, .expr - term, neq
		91 : expr, .term, neq
		92 : expr, .expr + term, +
		93 : expr, .expr - term, +
		94 : expr, .term, +
		95 : expr, .expr + term, -
		96 : expr, .expr - term, -
		97 : expr, .term, -
		98 : term, .term * unary, <
		99 : term, .term / unary, <
		100 : term, .term mod unary, <
		101 : term, .unary, <
		102 : term, .term * unary, <=
		103 : term, .term / unary, <=
		104 : term, .term mod unary, <=
		105 : term, .unary, <=
		106 : term, .term * unary, >=
		107 : term, .term / unary, >=
		108 : term, .term mod unary, >=
		109 : term, .unary, >=
		110 : term, .term * unary, >
		111 : term, .term / unary, >
		112 : term, .term mod unary, >
		113 : term, .unary, >
		114 : term, .term * unary, ]
		115 : term, .term / unary, ]
		116 : term, .term mod unary, ]
		117 : term, .unary, ]
		118 : term, .term * unary, or
		119 : term, .term / unary, or
		120 : term, .term mod unary, or
		121 : term, .unary, or
		122 : term, .term * unary, and
		123 : term, .term / unary, and
		124 : term, .term mod unary, and
		125 : term, .unary, and
		126 : term, .term * unary, eq
		127 : term, .term / unary, eq
		128 : term, .term mod unary, eq
		129 : term, .unary, eq
		130 : term, .term * unary, neq
		131 : term, .term / unary, neq
		132 : term, .term mod unary, neq
		133 : term, .unary, neq
		134 : term, .term * unary, +
		135 : term, .term / unary, +
		136 : term, .term mod unary, +
		137 : term, .unary, +
		138 : term, .term * unary, -
		139 : term, .term / unary, -
		140 : term, .term mod unary, -
		141 : term, .unary, -
		142 : term, .term * unary, *
		143 : term, .term / unary, *
		144 : term, .term mod unary, *
		145 : term, .unary, *
		146 : term, .term * unary, /
		147 : term, .term / unary, /
		148 : term, .term mod unary, /
		149 : term, .unary, /
		150 : term, .term * unary, mod
		151 : term, .term / unary, mod
		152 : term, .term mod unary, mod
		153 : term, .unary, mod
		154 : unary, .! unary, <
		155 : unary, .- unary, <
		156 : unary, .factor, <
		157 : unary, .! unary, <=
		158 : unary, .- unary, <=
		159 : unary, .factor, <=
		160 : unary, .! unary, >=
		161 : unary, .- unary, >=
		162 : unary, .factor, >=
		163 : unary, .! unary, >
		164 : unary, .- unary, >
		165 : unary, .factor, >
		166 : unary, .! unary, ]
		167 : unary, .- unary, ]
		168 : unary, .factor, ]
		169 : unary, .! unary, or
		170 : unary, .- unary, or
		171 : unary, .factor, or
		172 : unary, .! unary, and
		173 : unary, .- unary, and
		174 : unary, .factor, and
		175 : unary, .! unary, eq
		176 : unary, .- unary, eq
		177 : unary, .factor, eq
		178 : unary, .! unary, neq
		179 : unary, .- unary, neq
		180 : unary, .factor, neq
		181 : unary, .! unary, +
		182 : unary, .- unary, +
		183 : unary, .factor, +
		184 : unary, .! unary, -
		185 : unary, .- unary, -
		186 : unary, .factor, -
		187 : unary, .! unary, *
		188 : unary, .- unary, *
		189 : unary, .factor, *
		190 : unary, .! unary, /
		191 : unary, .- unary, /
		192 : unary, .factor, /
		193 : unary, .! unary, mod
		194 : unary, .- unary, mod
		195 : unary, .factor, mod
		196 : factor, .( bool ), <
		197 : factor, .loc, <
		198 : factor, .id ( args ), <
		199 : factor, .num, <
		200 : factor, .real, <
		201 : factor, .true, <
		202 : factor, .false, <
		203 : factor, .( bool ), <=
		204 : factor, .loc, <=
		205 : factor, .id ( args ), <=
		206 : factor, .num, <=
		207 : factor, .real, <=
		208 : factor, .true, <=
		209 : factor, .false, <=
		210 : factor, .( bool ), >=
		211 : factor, .loc, >=
		212 : factor, .id ( args ), >=
		213 : factor, .num, >=
		214 : factor, .real, >=
		215 : factor, .true, >=
		216 : factor, .false, >=
		217 : factor, .( bool ), >
		218 : factor, .loc, >
		219 : factor, .id ( args ), >
		220 : factor, .num, >
		221 : factor, .real, >
		222 : factor, .true, >
		223 : factor, .false, >
		224 : factor, .( bool ), ]
		225 : factor, .loc, ]
		226 : factor, .id ( args ), ]
		227 : factor, .num, ]
		228 : factor, .real, ]
		229 : factor, .true, ]
		230 : factor, .false, ]
		231 : factor, .( bool ), or
		232 : factor, .loc, or
		233 : factor, .id ( args ), or
		234 : factor, .num, or
		235 : factor, .real, or
		236 : factor, .true, or
		237 : factor, .false, or
		238 : factor, .( bool ), and
		239 : factor, .loc, and
		240 : factor, .id ( args ), and
		241 : factor, .num, and
		242 : factor, .real, and
		243 : factor, .true, and
		244 : factor, .false, and
		245 : factor, .( bool ), eq
		246 : factor, .loc, eq
		247 : factor, .id ( args ), eq
		248 : factor, .num, eq
		249 : factor, .real, eq
		250 : factor, .true, eq
		251 : factor, .false, eq
		252 : factor, .( bool ), neq
		253 : factor, .loc, neq
		254 : factor, .id ( args ), neq
		255 : factor, .num, neq
		256 : factor, .real, neq
		257 : factor, .true, neq
		258 : factor, .false, neq
		259 : factor, .( bool ), +
		260 : factor, .loc, +
		261 : factor, .id ( args ), +
		262 : factor, .num, +
		263 : factor, .real, +
		264 : factor, .true, +
		265 : factor, .false, +
		266 : factor, .( bool ), -
		267 : factor, .loc, -
		268 : factor, .id ( args ), -
		269 : factor, .num, -
		270 : factor, .real, -
		271 : factor, .true, -
		272 : factor, .false, -
		273 : factor, .( bool ), *
		274 : factor, .loc, *
		275 : factor, .id ( args ), *
		276 : factor, .num, *
		277 : factor, .real, *
		278 : factor, .true, *
		279 : factor, .false, *
		280 : factor, .( bool ), /
		281 : factor, .loc, /
		282 : factor, .id ( args ), /
		283 : factor, .num, /
		284 : factor, .real, /
		285 : factor, .true, /
		286 : factor, .false, /
		287 : factor, .( bool ), mod
		288 : factor, .loc, mod
		289 : factor, .id ( args ), mod
		290 : factor, .num, mod
		291 : factor, .real, mod
		292 : factor, .true, mod
		293 : factor, .false, mod
		294 : loc, .loc [ bool ], <
		295 : loc, .id, <
		296 : loc, .loc [ bool ], <=
		297 : loc, .id, <=
		298 : loc, .loc [ bool ], >=
		299 : loc, .id, >=
		300 : loc, .loc [ bool ], >
		301 : loc, .id, >
		302 : loc, .loc [ bool ], ]
		303 : loc, .id, ]
		304 : loc, .loc [ bool ], or
		305 : loc, .id, or
		306 : loc, .loc [ bool ], and
		307 : loc, .id, and
		308 : loc, .loc [ bool ], eq
		309 : loc, .id, eq
		310 : loc, .loc [ bool ], neq
		311 : loc, .id, neq
		312 : loc, .loc [ bool ], +
		313 : loc, .id, +
		314 : loc, .loc [ bool ], -
		315 : loc, .id, -
		316 : loc, .loc [ bool ], *
		317 : loc, .id, *
		318 : loc, .loc [ bool ], /
		319 : loc, .id, /
		320 : loc, .loc [ bool ], mod
		321 : loc, .id, mod
		322 : loc, .loc [ bool ], [
		323 : loc, .id, [
	[109] 
		0 : bool, bool or .join, ;
		1 : bool, bool or .join, or
		2 : join, .join and equality, ;
		3 : join, .equality, ;
		4 : join, .join and equality, or
		5 : join, .equality, or
		6 : join, .join and equality, and
		7 : join, .equality, and
		8 : equality, .equality eq rel, ;
		9 : equality, .equality neq rel, ;
		10 : equality, .rel, ;
		11 : equality, .equality eq rel, or
		12 : equality, .equality neq rel, or
		13 : equality, .rel, or
		14 : equality, .equality eq rel, and
		15 : equality, .equality neq rel, and
		16 : equality, .rel, and
		17 : equality, .equality eq rel, eq
		18 : equality, .equality neq rel, eq
		19 : equality, .rel, eq
		20 : equality, .equality eq rel, neq
		21 : equality, .equality neq rel, neq
		22 : equality, .rel, neq
		23 : rel, .expr < expr, ;
		24 : rel, .expr <= expr, ;
		25 : rel, .expr >= expr, ;
		26 : rel, .expr > expr, ;
		27 : rel, .expr, ;
		28 : rel, .expr < expr, or
		29 : rel, .expr <= expr, or
		30 : rel, .expr >= expr, or
		31 : rel, .expr > expr, or
		32 : rel, .expr, or
		33 : rel, .expr < expr, and
		34 : rel, .expr <= expr, and
		35 : rel, .expr >= expr, and
		36 : rel, .expr > expr, and
		37 : rel, .expr, and
		38 : rel, .expr < expr, eq
		39 : rel, .expr <= expr, eq
		40 : rel, .expr >= expr, eq
		41 : rel, .expr > expr, eq
		42 : rel, .expr, eq
		43 : rel, .expr < expr, neq
		44 : rel, .expr <= expr, neq
		45 : rel, .expr >= expr, neq
		46 : rel, .expr > expr, neq
		47 : rel, .expr, neq
		48 : expr, .expr + term, <
		49 : expr, .expr - term, <
		50 : expr, .term, <
		51 : expr, .expr + term, <=
		52 : expr, .expr - term, <=
		53 : expr, .term, <=
		54 : expr, .expr + term, >=
		55 : expr, .expr - term, >=
		56 : expr, .term, >=
		57 : expr, .expr + term, >
		58 : expr, .expr - term, >
		59 : expr, .term, >
		60 : expr, .expr + term, ;
		61 : expr, .expr - term, ;
		62 : expr, .term, ;
		63 : expr, .expr + term, or
		64 : expr, .expr - term, or
		65 : expr, .term, or
		66 : expr, .expr + term, and
		67 : expr, .expr - term, and
		68 : expr, .term, and
		69 : expr, .expr + term, eq
		70 : expr, .expr - term, eq
		71 : expr, .term, eq
		72 : expr, .expr + term, neq
		73 : expr, .expr - term, neq
		74 : expr, .term, neq
		75 : expr, .expr + term, +
		76 : expr, .expr - term, +
		77 : expr, .term, +
		78 : expr, .expr + term, -
		79 : expr, .expr - term, -
		80 : expr, .term, -
		81 : term, .term * unary, <
		82 : term, .term / unary, <
		83 : term, .term mod unary, <
		84 : term, .unary, <
		85 : term, .term * unary, <=
		86 : term, .term / unary, <=
		87 : term, .term mod unary, <=
		88 : term, .unary, <=
		89 : term, .term * unary, >=
		90 : term, .term / unary, >=
		91 : term, .term mod unary, >=
		92 : term, .unary, >=
		93 : term, .term * unary, >
		94 : term, .term / unary, >
		95 : term, .term mod unary, >
		96 : term, .unary, >
		97 : term, .term * unary, ;
		98 : term, .term / unary, ;
		99 : term, .term mod unary, ;
		100 : term, .unary, ;
		101 : term, .term * unary, or
		102 : term, .term / unary, or
		103 : term, .term mod unary, or
		104 : term, .unary, or
		105 : term, .term * unary, and
		106 : term, .term / unary, and
		107 : term, .term mod unary, and
		108 : term, .unary, and
		109 : term, .term * unary, eq
		110 : term, .term / unary, eq
		111 : term, .term mod unary, eq
		112 : term, .unary, eq
		113 : term, .term * unary, neq
		114 : term, .term / unary, neq
		115 : term, .term mod unary, neq
		116 : term, .unary, neq
		117 : term, .term * unary, +
		118 : term, .term / unary, +
		119 : term, .term mod unary, +
		120 : term, .unary, +
		121 : term, .term * unary, -
		122 : term, .term / unary, -
		123 : term, .term mod unary, -
		124 : term, .unary, -
		125 : term, .term * unary, *
		126 : term, .term / unary, *
		127 : term, .term mod unary, *
		128 : term, .unary, *
		129 : term, .term * unary, /
		130 : term, .term / unary, /
		131 : term, .term mod unary, /
		132 : term, .unary, /
		133 : term, .term * unary, mod
		134 : term, .term / unary, mod
		135 : term, .term mod unary, mod
		136 : term, .unary, mod
		137 : unary, .! unary, <
		138 : unary, .- unary, <
		139 : unary, .factor, <
		140 : unary, .! unary, <=
		141 : unary, .- unary, <=
		142 : unary, .factor, <=
		143 : unary, .! unary, >=
		144 : unary, .- unary, >=
		145 : unary, .factor, >=
		146 : unary, .! unary, >
		147 : unary, .- unary, >
		148 : unary, .factor, >
		149 : unary, .! unary, ;
		150 : unary, .- unary, ;
		151 : unary, .factor, ;
		152 : unary, .! unary, or
		153 : unary, .- unary, or
		154 : unary, .factor, or
		155 : unary, .! unary, and
		156 : unary, .- unary, and
		157 : unary, .factor, and
		158 : unary, .! unary, eq
		159 : unary, .- unary, eq
		160 : unary, .factor, eq
		161 : unary, .! unary, neq
		162 : unary, .- unary, neq
		163 : unary, .factor, neq
		164 : unary, .! unary, +
		165 : unary, .- unary, +
		166 : unary, .factor, +
		167 : unary, .! unary, -
		168 : unary, .- unary, -
		169 : unary, .factor, -
		170 : unary, .! unary, *
		171 : unary, .- unary, *
		172 : unary, .factor, *
		173 : unary, .! unary, /
		174 : unary, .- unary, /
		175 : unary, .factor, /
		176 : unary, .! unary, mod
		177 : unary, .- unary, mod
		178 : unary, .factor, mod
		179 : factor, .( bool ), <
		180 : factor, .loc, <
		181 : factor, .id ( args ), <
		182 : factor, .num, <
		183 : factor, .real, <
		184 : factor, .true, <
		185 : factor, .false, <
		186 : factor, .( bool ), <=
		187 : factor, .loc, <=
		188 : factor, .id ( args ), <=
		189 : factor, .num, <=
		190 : factor, .real, <=
		191 : factor, .true, <=
		192 : factor, .false, <=
		193 : factor, .( bool ), >=
		194 : factor, .loc, >=
		195 : factor, .id ( args ), >=
		196 : factor, .num, >=
		197 : factor, .real, >=
		198 : factor, .true, >=
		199 : factor, .false, >=
		200 : factor, .( bool ), >
		201 : factor, .loc, >
		202 : factor, .id ( args ), >
		203 : factor, .num, >
		204 : factor, .real, >
		205 : factor, .true, >
		206 : factor, .false, >
		207 : factor, .( bool ), ;
		208 : factor, .loc, ;
		209 : factor, .id ( args ), ;
		210 : factor, .num, ;
		211 : factor, .real, ;
		212 : factor, .true, ;
		213 : factor, .false, ;
		214 : factor, .( bool ), or
		215 : factor, .loc, or
		216 : factor, .id ( args ), or
		217 : factor, .num, or
		218 : factor, .real, or
		219 : factor, .true, or
		220 : factor, .false, or
		221 : factor, .( bool ), and
		222 : factor, .loc, and
		223 : factor, .id ( args ), and
		224 : factor, .num, and
		225 : factor, .real, and
		226 : factor, .true, and
		227 : factor, .false, and
		228 : factor, .( bool ), eq
		229 : factor, .loc, eq
		230 : factor, .id ( args ), eq
		231 : factor, .num, eq
		232 : factor, .real, eq
		233 : factor, .true, eq
		234 : factor, .false, eq
		235 : factor, .( bool ), neq
		236 : factor, .loc, neq
		237 : factor, .id ( args ), neq
		238 : factor, .num, neq
		239 : factor, .real, neq
		240 : factor, .true, neq
		241 : factor, .false, neq
		242 : factor, .( bool ), +
		243 : factor, .loc, +
		244 : factor, .id ( args ), +
		245 : factor, .num, +
		246 : factor, .real, +
		247 : factor, .true, +
		248 : factor, .false, +
		249 : factor, .( bool ), -
		250 : factor, .loc, -
		251 : factor, .id ( args ), -
		252 : factor, .num, -
		253 : factor, .real, -
		254 : factor, .true, -
		255 : factor, .false, -
		256 : factor, .( bool ), *
		257 : factor, .loc, *
		258 : factor, .id ( args ), *
		259 : factor, .num, *
		260 : factor, .real, *
		261 : factor, .true, *
		262 : factor, .false, *
		263 : factor, .( bool ), /
		264 : factor, .loc, /
		265 : factor, .id ( args ), /
		266 : factor, .num, /
		267 : factor, .real, /
		268 : factor, .true, /
		269 : factor, .false, /
		270 : factor, .( bool ), mod
		271 : factor, .loc, mod
		272 : factor, .id ( args ), mod
		273 : factor, .num, mod
		274 : factor, .real, mod
		275 : factor, .true, mod
		276 : factor, .false, mod
		277 : loc, .loc [ bool ], <
		278 : loc, .id, <
		279 : loc, .loc [ bool ], <=
		280 : loc, .id, <=
		281 : loc, .loc [ bool ], >=
		282 : loc, .id, >=
		283 : loc, .loc [ bool ], >
		284 : loc, .id, >
		285 : loc, .loc [ bool ], ;
		286 : loc, .id, ;
		287 : loc, .loc [ bool ], or
		288 : loc, .id, or
		289 : loc, .loc [ bool ], and
		290 : loc, .id, and
		291 : loc, .loc [ bool ], eq
		292 : loc, .id, eq
		293 : loc, .loc [ bool ], neq
		294 : loc, .id, neq
		295 : loc, .loc [ bool ], +
		296 : loc, .id, +
		297 : loc, .loc [ bool ], -
		298 : loc, .id, -
		299 : loc, .loc [ bool ], *
		300 : loc, .id, *
		301 : loc, .loc [ bool ], /
		302 : loc, .id, /
		303 : loc, .loc [ bool ], mod
		304 : loc, .id, mod
		305 : loc, .loc [ bool ], [
		306 : loc, .id, [
	[110] 
		0 : join, join and .equality, ;
		1 : join, join and .equality, or
		2 : join, join and .equality, and
		3 : equality, .equality eq rel, ;
		4 : equality, .equality neq rel, ;
		5 : equality, .rel, ;
		6 : equality, .equality eq rel, or
		7 : equality, .equality neq rel, or
		8 : equality, .rel, or
		9 : equality, .equality eq rel, and
		10 : equality, .equality neq rel, and
		11 : equality, .rel, and
		12 : equality, .equality eq rel, eq
		13 : equality, .equality neq rel, eq
		14 : equality, .rel, eq
		15 : equality, .equality eq rel, neq
		16 : equality, .equality neq rel, neq
		17 : equality, .rel, neq
		18 : rel, .expr < expr, ;
		19 : rel, .expr <= expr, ;
		20 : rel, .expr >= expr, ;
		21 : rel, .expr > expr, ;
		22 : rel, .expr, ;
		23 : rel, .expr < expr, or
		24 : rel, .expr <= expr, or
		25 : rel, .expr >= expr, or
		26 : rel, .expr > expr, or
		27 : rel, .expr, or
		28 : rel, .expr < expr, and
		29 : rel, .expr <= expr, and
		30 : rel, .expr >= expr, and
		31 : rel, .expr > expr, and
		32 : rel, .expr, and
		33 : rel, .expr < expr, eq
		34 : rel, .expr <= expr, eq
		35 : rel, .expr >= expr, eq
		36 : rel, .expr > expr, eq
		37 : rel, .expr, eq
		38 : rel, .expr < expr, neq
		39 : rel, .expr <= expr, neq
		40 : rel, .expr >= expr, neq
		41 : rel, .expr > expr, neq
		42 : rel, .expr, neq
		43 : expr, .expr + term, <
		44 : expr, .expr - term, <
		45 : expr, .term, <
		46 : expr, .expr + term, <=
		47 : expr, .expr - term, <=
		48 : expr, .term, <=
		49 : expr, .expr + term, >=
		50 : expr, .expr - term, >=
		51 : expr, .term, >=
		52 : expr, .expr + term, >
		53 : expr, .expr - term, >
		54 : expr, .term, >
		55 : expr, .expr + term, ;
		56 : expr, .expr - term, ;
		57 : expr, .term, ;
		58 : expr, .expr + term, or
		59 : expr, .expr - term, or
		60 : expr, .term, or
		61 : expr, .expr + term, and
		62 : expr, .expr - term, and
		63 : expr, .term, and
		64 : expr, .expr + term, eq
		65 : expr, .expr - term, eq
		66 : expr, .term, eq
		67 : expr, .expr + term, neq
		68 : expr, .expr - term, neq
		69 : expr, .term, neq
		70 : expr, .expr + term, +
		71 : expr, .expr - term, +
		72 : expr, .term, +
		73 : expr, .expr + term, -
		74 : expr, .expr - term, -
		75 : expr, .term, -
		76 : term, .term * unary, <
		77 : term, .term / unary, <
		78 : term, .term mod unary, <
		79 : term, .unary, <
		80 : term, .term * unary, <=
		81 : term, .term / unary, <=
		82 : term, .term mod unary, <=
		83 : term, .unary, <=
		84 : term, .term * unary, >=
		85 : term, .term / unary, >=
		86 : term, .term mod unary, >=
		87 : term, .unary, >=
		88 : term, .term * unary, >
		89 : term, .term / unary, >
		90 : term, .term mod unary, >
		91 : term, .unary, >
		92 : term, .term * unary, ;
		93 : term, .term / unary, ;
		94 : term, .term mod unary, ;
		95 : term, .unary, ;
		96 : term, .term * unary, or
		97 : term, .term / unary, or
		98 : term, .term mod unary, or
		99 : term, .unary, or
		100 : term, .term * unary, and
		101 : term, .term / unary, and
		102 : term, .term mod unary, and
		103 : term, .unary, and
		104 : term, .term * unary, eq
		105 : term, .term / unary, eq
		106 : term, .term mod unary, eq
		107 : term, .unary, eq
		108 : term, .term * unary, neq
		109 : term, .term / unary, neq
		110 : term, .term mod unary, neq
		111 : term, .unary, neq
		112 : term, .term * unary, +
		113 : term, .term / unary, +
		114 : term, .term mod unary, +
		115 : term, .unary, +
		116 : term, .term * unary, -
		117 : term, .term / unary, -
		118 : term, .term mod unary, -
		119 : term, .unary, -
		120 : term, .term * unary, *
		121 : term, .term / unary, *
		122 : term, .term mod unary, *
		123 : term, .unary, *
		124 : term, .term * unary, /
		125 : term, .term / unary, /
		126 : term, .term mod unary, /
		127 : term, .unary, /
		128 : term, .term * unary, mod
		129 : term, .term / unary, mod
		130 : term, .term mod unary, mod
		131 : term, .unary, mod
		132 : unary, .! unary, <
		133 : unary, .- unary, <
		134 : unary, .factor, <
		135 : unary, .! unary, <=
		136 : unary, .- unary, <=
		137 : unary, .factor, <=
		138 : unary, .! unary, >=
		139 : unary, .- unary, >=
		140 : unary, .factor, >=
		141 : unary, .! unary, >
		142 : unary, .- unary, >
		143 : unary, .factor, >
		144 : unary, .! unary, ;
		145 : unary, .- unary, ;
		146 : unary, .factor, ;
		147 : unary, .! unary, or
		148 : unary, .- unary, or
		149 : unary, .factor, or
		150 : unary, .! unary, and
		151 : unary, .- unary, and
		152 : unary, .factor, and
		153 : unary, .! unary, eq
		154 : unary, .- unary, eq
		155 : unary, .factor, eq
		156 : unary, .! unary, neq
		157 : unary, .- unary, neq
		158 : unary, .factor, neq
		159 : unary, .! unary, +
		160 : unary, .- unary, +
		161 : unary, .factor, +
		162 : unary, .! unary, -
		163 : unary, .- unary, -
		164 : unary, .factor, -
		165 : unary, .! unary, *
		166 : unary, .- unary, *
		167 : unary, .factor, *
		168 : unary, .! unary, /
		169 : unary, .- unary, /
		170 : unary, .factor, /
		171 : unary, .! unary, mod
		172 : unary, .- unary, mod
		173 : unary, .factor, mod
		174 : factor, .( bool ), <
		175 : factor, .loc, <
		176 : factor, .id ( args ), <
		177 : factor, .num, <
		178 : factor, .real, <
		179 : factor, .true, <
		180 : factor, .false, <
		181 : factor, .( bool ), <=
		182 : factor, .loc, <=
		183 : factor, .id ( args ), <=
		184 : factor, .num, <=
		185 : factor, .real, <=
		186 : factor, .true, <=
		187 : factor, .false, <=
		188 : factor, .( bool ), >=
		189 : factor, .loc, >=
		190 : factor, .id ( args ), >=
		191 : factor, .num, >=
		192 : factor, .real, >=
		193 : factor, .true, >=
		194 : factor, .false, >=
		195 : factor, .( bool ), >
		196 : factor, .loc, >
		197 : factor, .id ( args ), >
		198 : factor, .num, >
		199 : factor, .real, >
		200 : factor, .true, >
		201 : factor, .false, >
		202 : factor, .( bool ), ;
		203 : factor, .loc, ;
		204 : factor, .id ( args ), ;
		205 : factor, .num, ;
		206 : factor, .real, ;
		207 : factor, .true, ;
		208 : factor, .false, ;
		209 : factor, .( bool ), or
		210 : factor, .loc, or
		211 : factor, .id ( args ), or
		212 : factor, .num, or
		213 : factor, .real, or
		214 : factor, .true, or
		215 : factor, .false, or
		216 : factor, .( bool ), and
		217 : factor, .loc, and
		218 : factor, .id ( args ), and
		219 : factor, .num, and
		220 : factor, .real, and
		221 : factor, .true, and
		222 : factor, .false, and
		223 : factor, .( bool ), eq
		224 : factor, .loc, eq
		225 : factor, .id ( args ), eq
		226 : factor, .num, eq
		227 : factor, .real, eq
		228 : factor, .true, eq
		229 : factor, .false, eq
		230 : factor, .( bool ), neq
		231 : factor, .loc, neq
		232 : factor, .id ( args ), neq
		233 : factor, .num, neq
		234 : factor, .real, neq
		235 : factor, .true, neq
		236 : factor, .false, neq
		237 : factor, .( bool ), +
		238 : factor, .loc, +
		239 : factor, .id ( args ), +
		240 : factor, .num, +
		241 : factor, .real, +
		242 : factor, .true, +
		243 : factor, .false, +
		244 : factor, .( bool ), -
		245 : factor, .loc, -
		246 : factor, .id ( args ), -
		247 : factor, .num, -
		248 : factor, .real, -
		249 : factor, .true, -
		250 : factor, .false, -
		251 : factor, .( bool ), *
		252 : factor, .loc, *
		253 : factor, .id ( args ), *
		254 : factor, .num, *
		255 : factor, .real, *
		256 : factor, .true, *
		257 : factor, .false, *
		258 : factor, .( bool ), /
		259 : factor, .loc, /
		260 : factor, .id ( args ), /
		261 : factor, .num, /
		262 : factor, .real, /
		263 : factor, .true, /
		264 : factor, .false, /
		265 : factor, .( bool ), mod
		266 : factor, .loc, mod
		267 : factor, .id ( args ), mod
		268 : factor, .num, mod
		269 : factor, .real, mod
		270 : factor, .true, mod
		271 : factor, .false, mod
		272 : loc, .loc [ bool ], <
		273 : loc, .id, <
		274 : loc, .loc [ bool ], <=
		275 : loc, .id, <=
		276 : loc, .loc [ bool ], >=
		277 : loc, .id, >=
		278 : loc, .loc [ bool ], >
		279 : loc, .id, >
		280 : loc, .loc [ bool ], ;
		281 : loc, .id, ;
		282 : loc, .loc [ bool ], or
		283 : loc, .id, or
		284 : loc, .loc [ bool ], and
		285 : loc, .id, and
		286 : loc, .loc [ bool ], eq
		287 : loc, .id, eq
		288 : loc, .loc [ bool ], neq
		289 : loc, .id, neq
		290 : loc, .loc [ bool ], +
		291 : loc, .id, +
		292 : loc, .loc [ bool ], -
		293 : loc, .id, -
		294 : loc, .loc [ bool ], *
		295 : loc, .id, *
		296 : loc, .loc [ bool ], /
		297 : loc, .id, /
		298 : loc, .loc [ bool ], mod
		299 : loc, .id, mod
		300 : loc, .loc [ bool ], [
		301 : loc, .id, [
	[111] 
		0 : equality, equality eq .rel, ;
		1 : equality, equality eq .rel, or
		2 : equality, equality eq .rel, and
		3 : equality, equality eq .rel, eq
		4 : equality, equality eq .rel, neq
		5 : rel, .expr < expr, ;
		6 : rel, .expr <= expr, ;
		7 : rel, .expr >= expr, ;
		8 : rel, .expr > expr, ;
		9 : rel, .expr, ;
		10 : rel, .expr < expr, or
		11 : rel, .expr <= expr, or
		12 : rel, .expr >= expr, or
		13 : rel, .expr > expr, or
		14 : rel, .expr, or
		15 : rel, .expr < expr, and
		16 : rel, .expr <= expr, and
		17 : rel, .expr >= expr, and
		18 : rel, .expr > expr, and
		19 : rel, .expr, and
		20 : rel, .expr < expr, eq
		21 : rel, .expr <= expr, eq
		22 : rel, .expr >= expr, eq
		23 : rel, .expr > expr, eq
		24 : rel, .expr, eq
		25 : rel, .expr < expr, neq
		26 : rel, .expr <= expr, neq
		27 : rel, .expr >= expr, neq
		28 : rel, .expr > expr, neq
		29 : rel, .expr, neq
		30 : expr, .expr + term, <
		31 : expr, .expr - term, <
		32 : expr, .term, <
		33 : expr, .expr + term, <=
		34 : expr, .expr - term, <=
		35 : expr, .term, <=
		36 : expr, .expr + term, >=
		37 : expr, .expr - term, >=
		38 : expr, .term, >=
		39 : expr, .expr + term, >
		40 : expr, .expr - term, >
		41 : expr, .term, >
		42 : expr, .expr + term, ;
		43 : expr, .expr - term, ;
		44 : expr, .term, ;
		45 : expr, .expr + term, or
		46 : expr, .expr - term, or
		47 : expr, .term, or
		48 : expr, .expr + term, and
		49 : expr, .expr - term, and
		50 : expr, .term, and
		51 : expr, .expr + term, eq
		52 : expr, .expr - term, eq
		53 : expr, .term, eq
		54 : expr, .expr + term, neq
		55 : expr, .expr - term, neq
		56 : expr, .term, neq
		57 : expr, .expr + term, +
		58 : expr, .expr - term, +
		59 : expr, .term, +
		60 : expr, .expr + term, -
		61 : expr, .expr - term, -
		62 : expr, .term, -
		63 : term, .term * unary, <
		64 : term, .term / unary, <
		65 : term, .term mod unary, <
		66 : term, .unary, <
		67 : term, .term * unary, <=
		68 : term, .term / unary, <=
		69 : term, .term mod unary, <=
		70 : term, .unary, <=
		71 : term, .term * unary, >=
		72 : term, .term / unary, >=
		73 : term, .term mod unary, >=
		74 : term, .unary, >=
		75 : term, .term * unary, >
		76 : term, .term / unary, >
		77 : term, .term mod unary, >
		78 : term, .unary, >
		79 : term, .term * unary, ;
		80 : term, .term / unary, ;
		81 : term, .term mod unary, ;
		82 : term, .unary, ;
		83 : term, .term * unary, or
		84 : term, .term / unary, or
		85 : term, .term mod unary, or
		86 : term, .unary, or
		87 : term, .term * unary, and
		88 : term, .term / unary, and
		89 : term, .term mod unary, and
		90 : term, .unary, and
		91 : term, .term * unary, eq
		92 : term, .term / unary, eq
		93 : term, .term mod unary, eq
		94 : term, .unary, eq
		95 : term, .term * unary, neq
		96 : term, .term / unary, neq
		97 : term, .term mod unary, neq
		98 : term, .unary, neq
		99 : term, .term * unary, +
		100 : term, .term / unary, +
		101 : term, .term mod unary, +
		102 : term, .unary, +
		103 : term, .term * unary, -
		104 : term, .term / unary, -
		105 : term, .term mod unary, -
		106 : term, .unary, -
		107 : term, .term * unary, *
		108 : term, .term / unary, *
		109 : term, .term mod unary, *
		110 : term, .unary, *
		111 : term, .term * unary, /
		112 : term, .term / unary, /
		113 : term, .term mod unary, /
		114 : term, .unary, /
		115 : term, .term * unary, mod
		116 : term, .term / unary, mod
		117 : term, .term mod unary, mod
		118 : term, .unary, mod
		119 : unary, .! unary, <
		120 : unary, .- unary, <
		121 : unary, .factor, <
		122 : unary, .! unary, <=
		123 : unary, .- unary, <=
		124 : unary, .factor, <=
		125 : unary, .! unary, >=
		126 : unary, .- unary, >=
		127 : unary, .factor, >=
		128 : unary, .! unary, >
		129 : unary, .- unary, >
		130 : unary, .factor, >
		131 : unary, .! unary, ;
		132 : unary, .- unary, ;
		133 : unary, .factor, ;
		134 : unary, .! unary, or
		135 : unary, .- unary, or
		136 : unary, .factor, or
		137 : unary, .! unary, and
		138 : unary, .- unary, and
		139 : unary, .factor, and
		140 : unary, .! unary, eq
		141 : unary, .- unary, eq
		142 : unary, .factor, eq
		143 : unary, .! unary, neq
		144 : unary, .- unary, neq
		145 : unary, .factor, neq
		146 : unary, .! unary, +
		147 : unary, .- unary, +
		148 : unary, .factor, +
		149 : unary, .! unary, -
		150 : unary, .- unary, -
		151 : unary, .factor, -
		152 : unary, .! unary, *
		153 : unary, .- unary, *
		154 : unary, .factor, *
		155 : unary, .! unary, /
		156 : unary, .- unary, /
		157 : unary, .factor, /
		158 : unary, .! unary, mod
		159 : unary, .- unary, mod
		160 : unary, .factor, mod
		161 : factor, .( bool ), <
		162 : factor, .loc, <
		163 : factor, .id ( args ), <
		164 : factor, .num, <
		165 : factor, .real, <
		166 : factor, .true, <
		167 : factor, .false, <
		168 : factor, .( bool ), <=
		169 : factor, .loc, <=
		170 : factor, .id ( args ), <=
		171 : factor, .num, <=
		172 : factor, .real, <=
		173 : factor, .true, <=
		174 : factor, .false, <=
		175 : factor, .( bool ), >=
		176 : factor, .loc, >=
		177 : factor, .id ( args ), >=
		178 : factor, .num, >=
		179 : factor, .real, >=
		180 : factor, .true, >=
		181 : factor, .false, >=
		182 : factor, .( bool ), >
		183 : factor, .loc, >
		184 : factor, .id ( args ), >
		185 : factor, .num, >
		186 : factor, .real, >
		187 : factor, .true, >
		188 : factor, .false, >
		189 : factor, .( bool ), ;
		190 : factor, .loc, ;
		191 : factor, .id ( args ), ;
		192 : factor, .num, ;
		193 : factor, .real, ;
		194 : factor, .true, ;
		195 : factor, .false, ;
		196 : factor, .( bool ), or
		197 : factor, .loc, or
		198 : factor, .id ( args ), or
		199 : factor, .num, or
		200 : factor, .real, or
		201 : factor, .true, or
		202 : factor, .false, or
		203 : factor, .( bool ), and
		204 : factor, .loc, and
		205 : factor, .id ( args ), and
		206 : factor, .num, and
		207 : factor, .real, and
		208 : factor, .true, and
		209 : factor, .false, and
		210 : factor, .( bool ), eq
		211 : factor, .loc, eq
		212 : factor, .id ( args ), eq
		213 : factor, .num, eq
		214 : factor, .real, eq
		215 : factor, .true, eq
		216 : factor, .false, eq
		217 : factor, .( bool ), neq
		218 : factor, .loc, neq
		219 : factor, .id ( args ), neq
		220 : factor, .num, neq
		221 : factor, .real, neq
		222 : factor, .true, neq
		223 : factor, .false, neq
		224 : factor, .( bool ), +
		225 : factor, .loc, +
		226 : factor, .id ( args ), +
		227 : factor, .num, +
		228 : factor, .real, +
		229 : factor, .true, +
		230 : factor, .false, +
		231 : factor, .( bool ), -
		232 : factor, .loc, -
		233 : factor, .id ( args ), -
		234 : factor, .num, -
		235 : factor, .real, -
		236 : factor, .true, -
		237 : factor, .false, -
		238 : factor, .( bool ), *
		239 : factor, .loc, *
		240 : factor, .id ( args ), *
		241 : factor, .num, *
		242 : factor, .real, *
		243 : factor, .true, *
		244 : factor, .false, *
		245 : factor, .( bool ), /
		246 : factor, .loc, /
		247 : factor, .id ( args ), /
		248 : factor, .num, /
		249 : factor, .real, /
		250 : factor, .true, /
		251 : factor, .false, /
		252 : factor, .( bool ), mod
		253 : factor, .loc, mod
		254 : factor, .id ( args ), mod
		255 : factor, .num, mod
		256 : factor, .real, mod
		257 : factor, .true, mod
		258 : factor, .false, mod
		259 : loc, .loc [ bool ], <
		260 : loc, .id, <
		261 : loc, .loc [ bool ], <=
		262 : loc, .id, <=
		263 : loc, .loc [ bool ], >=
		264 : loc, .id, >=
		265 : loc, .loc [ bool ], >
		266 : loc, .id, >
		267 : loc, .loc [ bool ], ;
		268 : loc, .id, ;
		269 : loc, .loc [ bool ], or
		270 : loc, .id, or
		271 : loc, .loc [ bool ], and
		272 : loc, .id, and
		273 : loc, .loc [ bool ], eq
		274 : loc, .id, eq
		275 : loc, .loc [ bool ], neq
		276 : loc, .id, neq
		277 : loc, .loc [ bool ], +
		278 : loc, .id, +
		279 : loc, .loc [ bool ], -
		280 : loc, .id, -
		281 : loc, .loc [ bool ], *
		282 : loc, .id, *
		283 : loc, .loc [ bool ], /
		284 : loc, .id, /
		285 : loc, .loc [ bool ], mod
		286 : loc, .id, mod
		287 : loc, .loc [ bool ], [
		288 : loc, .id, [
	[112] 
		0 : equality, equality neq .rel, ;
		1 : equality, equality neq .rel, or
		2 : equality, equality neq .rel, and
		3 : equality, equality neq .rel, eq
		4 : equality, equality neq .rel, neq
		5 : rel, .expr < expr, ;
		6 : rel, .expr <= expr, ;
		7 : rel, .expr >= expr, ;
		8 : rel, .expr > expr, ;
		9 : rel, .expr, ;
		10 : rel, .expr < expr, or
		11 : rel, .expr <= expr, or
		12 : rel, .expr >= expr, or
		13 : rel, .expr > expr, or
		14 : rel, .expr, or
		15 : rel, .expr < expr, and
		16 : rel, .expr <= expr, and
		17 : rel, .expr >= expr, and
		18 : rel, .expr > expr, and
		19 : rel, .expr, and
		20 : rel, .expr < expr, eq
		21 : rel, .expr <= expr, eq
		22 : rel, .expr >= expr, eq
		23 : rel, .expr > expr, eq
		24 : rel, .expr, eq
		25 : rel, .expr < expr, neq
		26 : rel, .expr <= expr, neq
		27 : rel, .expr >= expr, neq
		28 : rel, .expr > expr, neq
		29 : rel, .expr, neq
		30 : expr, .expr + term, <
		31 : expr, .expr - term, <
		32 : expr, .term, <
		33 : expr, .expr + term, <=
		34 : expr, .expr - term, <=
		35 : expr, .term, <=
		36 : expr, .expr + term, >=
		37 : expr, .expr - term, >=
		38 : expr, .term, >=
		39 : expr, .expr + term, >
		40 : expr, .expr - term, >
		41 : expr, .term, >
		42 : expr, .expr + term, ;
		43 : expr, .expr - term, ;
		44 : expr, .term, ;
		45 : expr, .expr + term, or
		46 : expr, .expr - term, or
		47 : expr, .term, or
		48 : expr, .expr + term, and
		49 : expr, .expr - term, and
		50 : expr, .term, and
		51 : expr, .expr + term, eq
		52 : expr, .expr - term, eq
		53 : expr, .term, eq
		54 : expr, .expr + term, neq
		55 : expr, .expr - term, neq
		56 : expr, .term, neq
		57 : expr, .expr + term, +
		58 : expr, .expr - term, +
		59 : expr, .term, +
		60 : expr, .expr + term, -
		61 : expr, .expr - term, -
		62 : expr, .term, -
		63 : term, .term * unary, <
		64 : term, .term / unary, <
		65 : term, .term mod unary, <
		66 : term, .unary, <
		67 : term, .term * unary, <=
		68 : term, .term / unary, <=
		69 : term, .term mod unary, <=
		70 : term, .unary, <=
		71 : term, .term * unary, >=
		72 : term, .term / unary, >=
		73 : term, .term mod unary, >=
		74 : term, .unary, >=
		75 : term, .term * unary, >
		76 : term, .term / unary, >
		77 : term, .term mod unary, >
		78 : term, .unary, >
		79 : term, .term * unary, ;
		80 : term, .term / unary, ;
		81 : term, .term mod unary, ;
		82 : term, .unary, ;
		83 : term, .term * unary, or
		84 : term, .term / unary, or
		85 : term, .term mod unary, or
		86 : term, .unary, or
		87 : term, .term * unary, and
		88 : term, .term / unary, and
		89 : term, .term mod unary, and
		90 : term, .unary, and
		91 : term, .term * unary, eq
		92 : term, .term / unary, eq
		93 : term, .term mod unary, eq
		94 : term, .unary, eq
		95 : term, .term * unary, neq
		96 : term, .term / unary, neq
		97 : term, .term mod unary, neq
		98 : term, .unary, neq
		99 : term, .term * unary, +
		100 : term, .term / unary, +
		101 : term, .term mod unary, +
		102 : term, .unary, +
		103 : term, .term * unary, -
		104 : term, .term / unary, -
		105 : term, .term mod unary, -
		106 : term, .unary, -
		107 : term, .term * unary, *
		108 : term, .term / unary, *
		109 : term, .term mod unary, *
		110 : term, .unary, *
		111 : term, .term * unary, /
		112 : term, .term / unary, /
		113 : term, .term mod unary, /
		114 : term, .unary, /
		115 : term, .term * unary, mod
		116 : term, .term / unary, mod
		117 : term, .term mod unary, mod
		118 : term, .unary, mod
		119 : unary, .! unary, <
		120 : unary, .- unary, <
		121 : unary, .factor, <
		122 : unary, .! unary, <=
		123 : unary, .- unary, <=
		124 : unary, .factor, <=
		125 : unary, .! unary, >=
		126 : unary, .- unary, >=
		127 : unary, .factor, >=
		128 : unary, .! unary, >
		129 : unary, .- unary, >
		130 : unary, .factor, >
		131 : unary, .! unary, ;
		132 : unary, .- unary, ;
		133 : unary, .factor, ;
		134 : unary, .! unary, or
		135 : unary, .- unary, or
		136 : unary, .factor, or
		137 : unary, .! unary, and
		138 : unary, .- unary, and
		139 : unary, .factor, and
		140 : unary, .! unary, eq
		141 : unary, .- unary, eq
		142 : unary, .factor, eq
		143 : unary, .! unary, neq
		144 : unary, .- unary, neq
		145 : unary, .factor, neq
		146 : unary, .! unary, +
		147 : unary, .- unary, +
		148 : unary, .factor, +
		149 : unary, .! unary, -
		150 : unary, .- unary, -
		151 : unary, .factor, -
		152 : unary, .! unary, *
		153 : unary, .- unary, *
		154 : unary, .factor, *
		155 : unary, .! unary, /
		156 : unary, .- unary, /
		157 : unary, .factor, /
		158 : unary, .! unary, mod
		159 : unary, .- unary, mod
		160 : unary, .factor, mod
		161 : factor, .( bool ), <
		162 : factor, .loc, <
		163 : factor, .id ( args ), <
		164 : factor, .num, <
		165 : factor, .real, <
		166 : factor, .true, <
		167 : factor, .false, <
		168 : factor, .( bool ), <=
		169 : factor, .loc, <=
		170 : factor, .id ( args ), <=
		171 : factor, .num, <=
		172 : factor, .real, <=
		173 : factor, .true, <=
		174 : factor, .false, <=
		175 : factor, .( bool ), >=
		176 : factor, .loc, >=
		177 : factor, .id ( args ), >=
		178 : factor, .num, >=
		179 : factor, .real, >=
		180 : factor, .true, >=
		181 : factor, .false, >=
		182 : factor, .( bool ), >
		183 : factor, .loc, >
		184 : factor, .id ( args ), >
		185 : factor, .num, >
		186 : factor, .real, >
		187 : factor, .true, >
		188 : factor, .false, >
		189 : factor, .( bool ), ;
		190 : factor, .loc, ;
		191 : factor, .id ( args ), ;
		192 : factor, .num, ;
		193 : factor, .real, ;
		194 : factor, .true, ;
		195 : factor, .false, ;
		196 : factor, .( bool ), or
		197 : factor, .loc, or
		198 : factor, .id ( args ), or
		199 : factor, .num, or
		200 : factor, .real, or
		201 : factor, .true, or
		202 : factor, .false, or
		203 : factor, .( bool ), and
		204 : factor, .loc, and
		205 : factor, .id ( args ), and
		206 : factor, .num, and
		207 : factor, .real, and
		208 : factor, .true, and
		209 : factor, .false, and
		210 : factor, .( bool ), eq
		211 : factor, .loc, eq
		212 : factor, .id ( args ), eq
		213 : factor, .num, eq
		214 : factor, .real, eq
		215 : factor, .true, eq
		216 : factor, .false, eq
		217 : factor, .( bool ), neq
		218 : factor, .loc, neq
		219 : factor, .id ( args ), neq
		220 : factor, .num, neq
		221 : factor, .real, neq
		222 : factor, .true, neq
		223 : factor, .false, neq
		224 : factor, .( bool ), +
		225 : factor, .loc, +
		226 : factor, .id ( args ), +
		227 : factor, .num, +
		228 : factor, .real, +
		229 : factor, .true, +
		230 : factor, .false, +
		231 : factor, .( bool ), -
		232 : factor, .loc, -
		233 : factor, .id ( args ), -
		234 : factor, .num, -
		235 : factor, .real, -
		236 : factor, .true, -
		237 : factor, .false, -
		238 : factor, .( bool ), *
		239 : factor, .loc, *
		240 : factor, .id ( args ), *
		241 : factor, .num, *
		242 : factor, .real, *
		243 : factor, .true, *
		244 : factor, .false, *
		245 : factor, .( bool ), /
		246 : factor, .loc, /
		247 : factor, .id ( args ), /
		248 : factor, .num, /
		249 : factor, .real, /
		250 : factor, .true, /
		251 : factor, .false, /
		252 : factor, .( bool ), mod
		253 : factor, .loc, mod
		254 : factor, .id ( args ), mod
		255 : factor, .num, mod
		256 : factor, .real, mod
		257 : factor, .true, mod
		258 : factor, .false, mod
		259 : loc, .loc [ bool ], <
		260 : loc, .id, <
		261 : loc, .loc [ bool ], <=
		262 : loc, .id, <=
		263 : loc, .loc [ bool ], >=
		264 : loc, .id, >=
		265 : loc, .loc [ bool ], >
		266 : loc, .id, >
		267 : loc, .loc [ bool ], ;
		268 : loc, .id, ;
		269 : loc, .loc [ bool ], or
		270 : loc, .id, or
		271 : loc, .loc [ bool ], and
		272 : loc, .id, and
		273 : loc, .loc [ bool ], eq
		274 : loc, .id, eq
		275 : loc, .loc [ bool ], neq
		276 : loc, .id, neq
		277 : loc, .loc [ bool ], +
		278 : loc, .id, +
		279 : loc, .loc [ bool ], -
		280 : loc, .id, -
		281 : loc, .loc [ bool ], *
		282 : loc, .id, *
		283 : loc, .loc [ bool ], /
		284 : loc, .id, /
		285 : loc, .loc [ bool ], mod
		286 : loc, .id, mod
		287 : loc, .loc [ bool ], [
		288 : loc, .id, [
	[113] 
		0 : rel, expr < .expr, ;
		1 : rel, expr < .expr, or
		2 : rel, expr < .expr, and
		3 : rel, expr < .expr, eq
		4 : rel, expr < .expr, neq
		5 : expr, .expr + term, ;
		6 : expr, .expr - term, ;
		7 : expr, .term, ;
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, ;
		27 : term, .term / unary, ;
		28 : term, .term mod unary, ;
		29 : term, .unary, ;
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, ;
		67 : unary, .- unary, ;
		68 : unary, .factor, ;
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), ;
		97 : factor, .loc, ;
		98 : factor, .id ( args ), ;
		99 : factor, .num, ;
		100 : factor, .real, ;
		101 : factor, .true, ;
		102 : factor, .false, ;
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], ;
		167 : loc, .id, ;
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[114] 
		0 : rel, expr <= .expr, ;
		1 : rel, expr <= .expr, or
		2 : rel, expr <= .expr, and
		3 : rel, expr <= .expr, eq
		4 : rel, expr <= .expr, neq
		5 : expr, .expr + term, ;
		6 : expr, .expr - term, ;
		7 : expr, .term, ;
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, ;
		27 : term, .term / unary, ;
		28 : term, .term mod unary, ;
		29 : term, .unary, ;
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, ;
		67 : unary, .- unary, ;
		68 : unary, .factor, ;
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), ;
		97 : factor, .loc, ;
		98 : factor, .id ( args ), ;
		99 : factor, .num, ;
		100 : factor, .real, ;
		101 : factor, .true, ;
		102 : factor, .false, ;
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], ;
		167 : loc, .id, ;
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[115] 
		0 : rel, expr >= .expr, ;
		1 : rel, expr >= .expr, or
		2 : rel, expr >= .expr, and
		3 : rel, expr >= .expr, eq
		4 : rel, expr >= .expr, neq
		5 : expr, .expr + term, ;
		6 : expr, .expr - term, ;
		7 : expr, .term, ;
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, ;
		27 : term, .term / unary, ;
		28 : term, .term mod unary, ;
		29 : term, .unary, ;
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, ;
		67 : unary, .- unary, ;
		68 : unary, .factor, ;
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), ;
		97 : factor, .loc, ;
		98 : factor, .id ( args ), ;
		99 : factor, .num, ;
		100 : factor, .real, ;
		101 : factor, .true, ;
		102 : factor, .false, ;
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], ;
		167 : loc, .id, ;
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[116] 
		0 : rel, expr > .expr, ;
		1 : rel, expr > .expr, or
		2 : rel, expr > .expr, and
		3 : rel, expr > .expr, eq
		4 : rel, expr > .expr, neq
		5 : expr, .expr + term, ;
		6 : expr, .expr - term, ;
		7 : expr, .term, ;
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, ;
		27 : term, .term / unary, ;
		28 : term, .term mod unary, ;
		29 : term, .unary, ;
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, ;
		67 : unary, .- unary, ;
		68 : unary, .factor, ;
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), ;
		97 : factor, .loc, ;
		98 : factor, .id ( args ), ;
		99 : factor, .num, ;
		100 : factor, .real, ;
		101 : factor, .true, ;
		102 : factor, .false, ;
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], ;
		167 : loc, .id, ;
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[117] 
		0 : expr, expr + .term, <
		1 : expr, expr + .term, <=
		2 : expr, expr + .term, >=
		3 : expr, expr + .term, >
		4 : expr, expr + .term, ;
		5 : expr, expr + .term, or
		6 : expr, expr + .term, and
		7 : expr, expr + .term, eq
		8 : expr, expr + .term, neq
		9 : expr, expr + .term, +
		10 : expr, expr + .term, -
		11 : term, .term * unary, <
		12 : term, .term / unary, <
		13 : term, .term mod unary, <
		14 : term, .unary, <
		15 : term, .term * unary, <=
		16 : term, .term / unary, <=
		17 : term, .term mod unary, <=
		18 : term, .unary, <=
		19 : term, .term * unary, >=
		20 : term, .term / unary, >=
		21 : term, .term mod unary, >=
		22 : term, .unary, >=
		23 : term, .term * unary, >
		24 : term, .term / unary, >
		25 : term, .term mod unary, >
		26 : term, .unary, >
		27 : term, .term * unary, ;
		28 : term, .term / unary, ;
		29 : term, .term mod unary, ;
		30 : term, .unary, ;
		31 : term, .term * unary, or
		32 : term, .term / unary, or
		33 : term, .term mod unary, or
		34 : term, .unary, or
		35 : term, .term * unary, and
		36 : term, .term / unary, and
		37 : term, .term mod unary, and
		38 : term, .unary, and
		39 : term, .term * unary, eq
		40 : term, .term / unary, eq
		41 : term, .term mod unary, eq
		42 : term, .unary, eq
		43 : term, .term * unary, neq
		44 : term, .term / unary, neq
		45 : term, .term mod unary, neq
		46 : term, .unary, neq
		47 : term, .term * unary, +
		48 : term, .term / unary, +
		49 : term, .term mod unary, +
		50 : term, .unary, +
		51 : term, .term * unary, -
		52 : term, .term / unary, -
		53 : term, .term mod unary, -
		54 : term, .unary, -
		55 : term, .term * unary, *
		56 : term, .term / unary, *
		57 : term, .term mod unary, *
		58 : term, .unary, *
		59 : term, .term * unary, /
		60 : term, .term / unary, /
		61 : term, .term mod unary, /
		62 : term, .unary, /
		63 : term, .term * unary, mod
		64 : term, .term / unary, mod
		65 : term, .term mod unary, mod
		66 : term, .unary, mod
		67 : unary, .! unary, <
		68 : unary, .- unary, <
		69 : unary, .factor, <
		70 : unary, .! unary, <=
		71 : unary, .- unary, <=
		72 : unary, .factor, <=
		73 : unary, .! unary, >=
		74 : unary, .- unary, >=
		75 : unary, .factor, >=
		76 : unary, .! unary, >
		77 : unary, .- unary, >
		78 : unary, .factor, >
		79 : unary, .! unary, ;
		80 : unary, .- unary, ;
		81 : unary, .factor, ;
		82 : unary, .! unary, or
		83 : unary, .- unary, or
		84 : unary, .factor, or
		85 : unary, .! unary, and
		86 : unary, .- unary, and
		87 : unary, .factor, and
		88 : unary, .! unary, eq
		89 : unary, .- unary, eq
		90 : unary, .factor, eq
		91 : unary, .! unary, neq
		92 : unary, .- unary, neq
		93 : unary, .factor, neq
		94 : unary, .! unary, +
		95 : unary, .- unary, +
		96 : unary, .factor, +
		97 : unary, .! unary, -
		98 : unary, .- unary, -
		99 : unary, .factor, -
		100 : unary, .! unary, *
		101 : unary, .- unary, *
		102 : unary, .factor, *
		103 : unary, .! unary, /
		104 : unary, .- unary, /
		105 : unary, .factor, /
		106 : unary, .! unary, mod
		107 : unary, .- unary, mod
		108 : unary, .factor, mod
		109 : factor, .( bool ), <
		110 : factor, .loc, <
		111 : factor, .id ( args ), <
		112 : factor, .num, <
		113 : factor, .real, <
		114 : factor, .true, <
		115 : factor, .false, <
		116 : factor, .( bool ), <=
		117 : factor, .loc, <=
		118 : factor, .id ( args ), <=
		119 : factor, .num, <=
		120 : factor, .real, <=
		121 : factor, .true, <=
		122 : factor, .false, <=
		123 : factor, .( bool ), >=
		124 : factor, .loc, >=
		125 : factor, .id ( args ), >=
		126 : factor, .num, >=
		127 : factor, .real, >=
		128 : factor, .true, >=
		129 : factor, .false, >=
		130 : factor, .( bool ), >
		131 : factor, .loc, >
		132 : factor, .id ( args ), >
		133 : factor, .num, >
		134 : factor, .real, >
		135 : factor, .true, >
		136 : factor, .false, >
		137 : factor, .( bool ), ;
		138 : factor, .loc, ;
		139 : factor, .id ( args ), ;
		140 : factor, .num, ;
		141 : factor, .real, ;
		142 : factor, .true, ;
		143 : factor, .false, ;
		144 : factor, .( bool ), or
		145 : factor, .loc, or
		146 : factor, .id ( args ), or
		147 : factor, .num, or
		148 : factor, .real, or
		149 : factor, .true, or
		150 : factor, .false, or
		151 : factor, .( bool ), and
		152 : factor, .loc, and
		153 : factor, .id ( args ), and
		154 : factor, .num, and
		155 : factor, .real, and
		156 : factor, .true, and
		157 : factor, .false, and
		158 : factor, .( bool ), eq
		159 : factor, .loc, eq
		160 : factor, .id ( args ), eq
		161 : factor, .num, eq
		162 : factor, .real, eq
		163 : factor, .true, eq
		164 : factor, .false, eq
		165 : factor, .( bool ), neq
		166 : factor, .loc, neq
		167 : factor, .id ( args ), neq
		168 : factor, .num, neq
		169 : factor, .real, neq
		170 : factor, .true, neq
		171 : factor, .false, neq
		172 : factor, .( bool ), +
		173 : factor, .loc, +
		174 : factor, .id ( args ), +
		175 : factor, .num, +
		176 : factor, .real, +
		177 : factor, .true, +
		178 : factor, .false, +
		179 : factor, .( bool ), -
		180 : factor, .loc, -
		181 : factor, .id ( args ), -
		182 : factor, .num, -
		183 : factor, .real, -
		184 : factor, .true, -
		185 : factor, .false, -
		186 : factor, .( bool ), *
		187 : factor, .loc, *
		188 : factor, .id ( args ), *
		189 : factor, .num, *
		190 : factor, .real, *
		191 : factor, .true, *
		192 : factor, .false, *
		193 : factor, .( bool ), /
		194 : factor, .loc, /
		195 : factor, .id ( args ), /
		196 : factor, .num, /
		197 : factor, .real, /
		198 : factor, .true, /
		199 : factor, .false, /
		200 : factor, .( bool ), mod
		201 : factor, .loc, mod
		202 : factor, .id ( args ), mod
		203 : factor, .num, mod
		204 : factor, .real, mod
		205 : factor, .true, mod
		206 : factor, .false, mod
		207 : loc, .loc [ bool ], <
		208 : loc, .id, <
		209 : loc, .loc [ bool ], <=
		210 : loc, .id, <=
		211 : loc, .loc [ bool ], >=
		212 : loc, .id, >=
		213 : loc, .loc [ bool ], >
		214 : loc, .id, >
		215 : loc, .loc [ bool ], ;
		216 : loc, .id, ;
		217 : loc, .loc [ bool ], or
		218 : loc, .id, or
		219 : loc, .loc [ bool ], and
		220 : loc, .id, and
		221 : loc, .loc [ bool ], eq
		222 : loc, .id, eq
		223 : loc, .loc [ bool ], neq
		224 : loc, .id, neq
		225 : loc, .loc [ bool ], +
		226 : loc, .id, +
		227 : loc, .loc [ bool ], -
		228 : loc, .id, -
		229 : loc, .loc [ bool ], *
		230 : loc, .id, *
		231 : loc, .loc [ bool ], /
		232 : loc, .id, /
		233 : loc, .loc [ bool ], mod
		234 : loc, .id, mod
		235 : loc, .loc [ bool ], [
		236 : loc, .id, [
	[118] 
		0 : expr, expr - .term, <
		1 : expr, expr - .term, <=
		2 : expr, expr - .term, >=
		3 : expr, expr - .term, >
		4 : expr, expr - .term, ;
		5 : expr, expr - .term, or
		6 : expr, expr - .term, and
		7 : expr, expr - .term, eq
		8 : expr, expr - .term, neq
		9 : expr, expr - .term, +
		10 : expr, expr - .term, -
		11 : term, .term * unary, <
		12 : term, .term / unary, <
		13 : term, .term mod unary, <
		14 : term, .unary, <
		15 : term, .term * unary, <=
		16 : term, .term / unary, <=
		17 : term, .term mod unary, <=
		18 : term, .unary, <=
		19 : term, .term * unary, >=
		20 : term, .term / unary, >=
		21 : term, .term mod unary, >=
		22 : term, .unary, >=
		23 : term, .term * unary, >
		24 : term, .term / unary, >
		25 : term, .term mod unary, >
		26 : term, .unary, >
		27 : term, .term * unary, ;
		28 : term, .term / unary, ;
		29 : term, .term mod unary, ;
		30 : term, .unary, ;
		31 : term, .term * unary, or
		32 : term, .term / unary, or
		33 : term, .term mod unary, or
		34 : term, .unary, or
		35 : term, .term * unary, and
		36 : term, .term / unary, and
		37 : term, .term mod unary, and
		38 : term, .unary, and
		39 : term, .term * unary, eq
		40 : term, .term / unary, eq
		41 : term, .term mod unary, eq
		42 : term, .unary, eq
		43 : term, .term * unary, neq
		44 : term, .term / unary, neq
		45 : term, .term mod unary, neq
		46 : term, .unary, neq
		47 : term, .term * unary, +
		48 : term, .term / unary, +
		49 : term, .term mod unary, +
		50 : term, .unary, +
		51 : term, .term * unary, -
		52 : term, .term / unary, -
		53 : term, .term mod unary, -
		54 : term, .unary, -
		55 : term, .term * unary, *
		56 : term, .term / unary, *
		57 : term, .term mod unary, *
		58 : term, .unary, *
		59 : term, .term * unary, /
		60 : term, .term / unary, /
		61 : term, .term mod unary, /
		62 : term, .unary, /
		63 : term, .term * unary, mod
		64 : term, .term / unary, mod
		65 : term, .term mod unary, mod
		66 : term, .unary, mod
		67 : unary, .! unary, <
		68 : unary, .- unary, <
		69 : unary, .factor, <
		70 : unary, .! unary, <=
		71 : unary, .- unary, <=
		72 : unary, .factor, <=
		73 : unary, .! unary, >=
		74 : unary, .- unary, >=
		75 : unary, .factor, >=
		76 : unary, .! unary, >
		77 : unary, .- unary, >
		78 : unary, .factor, >
		79 : unary, .! unary, ;
		80 : unary, .- unary, ;
		81 : unary, .factor, ;
		82 : unary, .! unary, or
		83 : unary, .- unary, or
		84 : unary, .factor, or
		85 : unary, .! unary, and
		86 : unary, .- unary, and
		87 : unary, .factor, and
		88 : unary, .! unary, eq
		89 : unary, .- unary, eq
		90 : unary, .factor, eq
		91 : unary, .! unary, neq
		92 : unary, .- unary, neq
		93 : unary, .factor, neq
		94 : unary, .! unary, +
		95 : unary, .- unary, +
		96 : unary, .factor, +
		97 : unary, .! unary, -
		98 : unary, .- unary, -
		99 : unary, .factor, -
		100 : unary, .! unary, *
		101 : unary, .- unary, *
		102 : unary, .factor, *
		103 : unary, .! unary, /
		104 : unary, .- unary, /
		105 : unary, .factor, /
		106 : unary, .! unary, mod
		107 : unary, .- unary, mod
		108 : unary, .factor, mod
		109 : factor, .( bool ), <
		110 : factor, .loc, <
		111 : factor, .id ( args ), <
		112 : factor, .num, <
		113 : factor, .real, <
		114 : factor, .true, <
		115 : factor, .false, <
		116 : factor, .( bool ), <=
		117 : factor, .loc, <=
		118 : factor, .id ( args ), <=
		119 : factor, .num, <=
		120 : factor, .real, <=
		121 : factor, .true, <=
		122 : factor, .false, <=
		123 : factor, .( bool ), >=
		124 : factor, .loc, >=
		125 : factor, .id ( args ), >=
		126 : factor, .num, >=
		127 : factor, .real, >=
		128 : factor, .true, >=
		129 : factor, .false, >=
		130 : factor, .( bool ), >
		131 : factor, .loc, >
		132 : factor, .id ( args ), >
		133 : factor, .num, >
		134 : factor, .real, >
		135 : factor, .true, >
		136 : factor, .false, >
		137 : factor, .( bool ), ;
		138 : factor, .loc, ;
		139 : factor, .id ( args ), ;
		140 : factor, .num, ;
		141 : factor, .real, ;
		142 : factor, .true, ;
		143 : factor, .false, ;
		144 : factor, .( bool ), or
		145 : factor, .loc, or
		146 : factor, .id ( args ), or
		147 : factor, .num, or
		148 : factor, .real, or
		149 : factor, .true, or
		150 : factor, .false, or
		151 : factor, .( bool ), and
		152 : factor, .loc, and
		153 : factor, .id ( args ), and
		154 : factor, .num, and
		155 : factor, .real, and
		156 : factor, .true, and
		157 : factor, .false, and
		158 : factor, .( bool ), eq
		159 : factor, .loc, eq
		160 : factor, .id ( args ), eq
		161 : factor, .num, eq
		162 : factor, .real, eq
		163 : factor, .true, eq
		164 : factor, .false, eq
		165 : factor, .( bool ), neq
		166 : factor, .loc, neq
		167 : factor, .id ( args ), neq
		168 : factor, .num, neq
		169 : factor, .real, neq
		170 : factor, .true, neq
		171 : factor, .false, neq
		172 : factor, .( bool ), +
		173 : factor, .loc, +
		174 : factor, .id ( args ), +
		175 : factor, .num, +
		176 : factor, .real, +
		177 : factor, .true, +
		178 : factor, .false, +
		179 : factor, .( bool ), -
		180 : factor, .loc, -
		181 : factor, .id ( args ), -
		182 : factor, .num, -
		183 : factor, .real, -
		184 : factor, .true, -
		185 : factor, .false, -
		186 : factor, .( bool ), *
		187 : factor, .loc, *
		188 : factor, .id ( args ), *
		189 : factor, .num, *
		190 : factor, .real, *
		191 : factor, .true, *
		192 : factor, .false, *
		193 : factor, .( bool ), /
		194 : factor, .loc, /
		195 : factor, .id ( args ), /
		196 : factor, .num, /
		197 : factor, .real, /
		198 : factor, .true, /
		199 : factor, .false, /
		200 : factor, .( bool ), mod
		201 : factor, .loc, mod
		202 : factor, .id ( args ), mod
		203 : factor, .num, mod
		204 : factor, .real, mod
		205 : factor, .true, mod
		206 : factor, .false, mod
		207 : loc, .loc [ bool ], <
		208 : loc, .id, <
		209 : loc, .loc [ bool ], <=
		210 : loc, .id, <=
		211 : loc, .loc [ bool ], >=
		212 : loc, .id, >=
		213 : loc, .loc [ bool ], >
		214 : loc, .id, >
		215 : loc, .loc [ bool ], ;
		216 : loc, .id, ;
		217 : loc, .loc [ bool ], or
		218 : loc, .id, or
		219 : loc, .loc [ bool ], and
		220 : loc, .id, and
		221 : loc, .loc [ bool ], eq
		222 : loc, .id, eq
		223 : loc, .loc [ bool ], neq
		224 : loc, .id, neq
		225 : loc, .loc [ bool ], +
		226 : loc, .id, +
		227 : loc, .loc [ bool ], -
		228 : loc, .id, -
		229 : loc, .loc [ bool ], *
		230 : loc, .id, *
		231 : loc, .loc [ bool ], /
		232 : loc, .id, /
		233 : loc, .loc [ bool ], mod
		234 : loc, .id, mod
		235 : loc, .loc [ bool ], [
		236 : loc, .id, [
	[119] 
		0 : term, term * .unary, <
		1 : term, term * .unary, <=
		2 : term, term * .unary, >=
		3 : term, term * .unary, >
		4 : term, term * .unary, ;
		5 : term, term * .unary, or
		6 : term, term * .unary, and
		7 : term, term * .unary, eq
		8 : term, term * .unary, neq
		9 : term, term * .unary, +
		10 : term, term * .unary, -
		11 : term, term * .unary, *
		12 : term, term * .unary, /
		13 : term, term * .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, ;
		27 : unary, .- unary, ;
		28 : unary, .factor, ;
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), ;
		85 : factor, .loc, ;
		86 : factor, .id ( args ), ;
		87 : factor, .num, ;
		88 : factor, .real, ;
		89 : factor, .true, ;
		90 : factor, .false, ;
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], ;
		163 : loc, .id, ;
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[120] 
		0 : term, term / .unary, <
		1 : term, term / .unary, <=
		2 : term, term / .unary, >=
		3 : term, term / .unary, >
		4 : term, term / .unary, ;
		5 : term, term / .unary, or
		6 : term, term / .unary, and
		7 : term, term / .unary, eq
		8 : term, term / .unary, neq
		9 : term, term / .unary, +
		10 : term, term / .unary, -
		11 : term, term / .unary, *
		12 : term, term / .unary, /
		13 : term, term / .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, ;
		27 : unary, .- unary, ;
		28 : unary, .factor, ;
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), ;
		85 : factor, .loc, ;
		86 : factor, .id ( args ), ;
		87 : factor, .num, ;
		88 : factor, .real, ;
		89 : factor, .true, ;
		90 : factor, .false, ;
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], ;
		163 : loc, .id, ;
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[121] 
		0 : term, term mod .unary, <
		1 : term, term mod .unary, <=
		2 : term, term mod .unary, >=
		3 : term, term mod .unary, >
		4 : term, term mod .unary, ;
		5 : term, term mod .unary, or
		6 : term, term mod .unary, and
		7 : term, term mod .unary, eq
		8 : term, term mod .unary, neq
		9 : term, term mod .unary, +
		10 : term, term mod .unary, -
		11 : term, term mod .unary, *
		12 : term, term mod .unary, /
		13 : term, term mod .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, ;
		27 : unary, .- unary, ;
		28 : unary, .factor, ;
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), ;
		85 : factor, .loc, ;
		86 : factor, .id ( args ), ;
		87 : factor, .num, ;
		88 : factor, .real, ;
		89 : factor, .true, ;
		90 : factor, .false, ;
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], ;
		163 : loc, .id, ;
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[122] 
		0 : stmt, return arg ; ., }
		1 : stmt, return arg ; ., [
		2 : stmt, return arg ; ., id
		3 : stmt, return arg ; ., if
		4 : stmt, return arg ; ., while
		5 : stmt, return arg ; ., do
		6 : stmt, return arg ; ., return
		7 : stmt, return arg ; ., {
		8 : stmt, return arg ; ., else
	[123] 
		0 : factor, id ( .args ), <
		1 : factor, id ( .args ), <=
		2 : factor, id ( .args ), >=
		3 : factor, id ( .args ), >
		4 : factor, id ( .args ), ;
		5 : factor, id ( .args ), or
		6 : factor, id ( .args ), and
		7 : factor, id ( .args ), eq
		8 : factor, id ( .args ), neq
		9 : factor, id ( .args ), +
		10 : factor, id ( .args ), -
		11 : factor, id ( .args ), *
		12 : factor, id ( .args ), /
		13 : factor, id ( .args ), mod
		14 : args, .args , arg, )
		15 : args, .arg, )
		16 : args, ., )
		17 : args, .args , arg, ,
		18 : args, .arg, ,
		19 : args, ., ,
		20 : arg, .loc, )
		21 : arg, .bool, )
		22 : arg, .loc, ,
		23 : arg, .bool, ,
		24 : loc, .loc [ bool ], )
		25 : loc, .id, )
		26 : bool, .bool or join, )
		27 : bool, .join, )
		28 : loc, .loc [ bool ], ,
		29 : loc, .id, ,
		30 : bool, .bool or join, ,
		31 : bool, .join, ,
		32 : loc, .loc [ bool ], [
		33 : loc, .id, [
		34 : bool, .bool or join, or
		35 : bool, .join, or
		36 : join, .join and equality, )
		37 : join, .equality, )
		38 : join, .join and equality, ,
		39 : join, .equality, ,
		40 : join, .join and equality, or
		41 : join, .equality, or
		42 : join, .join and equality, and
		43 : join, .equality, and
		44 : equality, .equality eq rel, )
		45 : equality, .equality neq rel, )
		46 : equality, .rel, )
		47 : equality, .equality eq rel, ,
		48 : equality, .equality neq rel, ,
		49 : equality, .rel, ,
		50 : equality, .equality eq rel, or
		51 : equality, .equality neq rel, or
		52 : equality, .rel, or
		53 : equality, .equality eq rel, and
		54 : equality, .equality neq rel, and
		55 : equality, .rel, and
		56 : equality, .equality eq rel, eq
		57 : equality, .equality neq rel, eq
		58 : equality, .rel, eq
		59 : equality, .equality eq rel, neq
		60 : equality, .equality neq rel, neq
		61 : equality, .rel, neq
		62 : rel, .expr < expr, )
		63 : rel, .expr <= expr, )
		64 : rel, .expr >= expr, )
		65 : rel, .expr > expr, )
		66 : rel, .expr, )
		67 : rel, .expr < expr, ,
		68 : rel, .expr <= expr, ,
		69 : rel, .expr >= expr, ,
		70 : rel, .expr > expr, ,
		71 : rel, .expr, ,
		72 : rel, .expr < expr, or
		73 : rel, .expr <= expr, or
		74 : rel, .expr >= expr, or
		75 : rel, .expr > expr, or
		76 : rel, .expr, or
		77 : rel, .expr < expr, and
		78 : rel, .expr <= expr, and
		79 : rel, .expr >= expr, and
		80 : rel, .expr > expr, and
		81 : rel, .expr, and
		82 : rel, .expr < expr, eq
		83 : rel, .expr <= expr, eq
		84 : rel, .expr >= expr, eq
		85 : rel, .expr > expr, eq
		86 : rel, .expr, eq
		87 : rel, .expr < expr, neq
		88 : rel, .expr <= expr, neq
		89 : rel, .expr >= expr, neq
		90 : rel, .expr > expr, neq
		91 : rel, .expr, neq
		92 : expr, .expr + term, <
		93 : expr, .expr - term, <
		94 : expr, .term, <
		95 : expr, .expr + term, <=
		96 : expr, .expr - term, <=
		97 : expr, .term, <=
		98 : expr, .expr + term, >=
		99 : expr, .expr - term, >=
		100 : expr, .term, >=
		101 : expr, .expr + term, >
		102 : expr, .expr - term, >
		103 : expr, .term, >
		104 : expr, .expr + term, )
		105 : expr, .expr - term, )
		106 : expr, .term, )
		107 : expr, .expr + term, ,
		108 : expr, .expr - term, ,
		109 : expr, .term, ,
		110 : expr, .expr + term, or
		111 : expr, .expr - term, or
		112 : expr, .term, or
		113 : expr, .expr + term, and
		114 : expr, .expr - term, and
		115 : expr, .term, and
		116 : expr, .expr + term, eq
		117 : expr, .expr - term, eq
		118 : expr, .term, eq
		119 : expr, .expr + term, neq
		120 : expr, .expr - term, neq
		121 : expr, .term, neq
		122 : expr, .expr + term, +
		123 : expr, .expr - term, +
		124 : expr, .term, +
		125 : expr, .expr + term, -
		126 : expr, .expr - term, -
		127 : expr, .term, -
		128 : term, .term * unary, <
		129 : term, .term / unary, <
		130 : term, .term mod unary, <
		131 : term, .unary, <
		132 : term, .term * unary, <=
		133 : term, .term / unary, <=
		134 : term, .term mod unary, <=
		135 : term, .unary, <=
		136 : term, .term * unary, >=
		137 : term, .term / unary, >=
		138 : term, .term mod unary, >=
		139 : term, .unary, >=
		140 : term, .term * unary, >
		141 : term, .term / unary, >
		142 : term, .term mod unary, >
		143 : term, .unary, >
		144 : term, .term * unary, )
		145 : term, .term / unary, )
		146 : term, .term mod unary, )
		147 : term, .unary, )
		148 : term, .term * unary, ,
		149 : term, .term / unary, ,
		150 : term, .term mod unary, ,
		151 : term, .unary, ,
		152 : term, .term * unary, or
		153 : term, .term / unary, or
		154 : term, .term mod unary, or
		155 : term, .unary, or
		156 : term, .term * unary, and
		157 : term, .term / unary, and
		158 : term, .term mod unary, and
		159 : term, .unary, and
		160 : term, .term * unary, eq
		161 : term, .term / unary, eq
		162 : term, .term mod unary, eq
		163 : term, .unary, eq
		164 : term, .term * unary, neq
		165 : term, .term / unary, neq
		166 : term, .term mod unary, neq
		167 : term, .unary, neq
		168 : term, .term * unary, +
		169 : term, .term / unary, +
		170 : term, .term mod unary, +
		171 : term, .unary, +
		172 : term, .term * unary, -
		173 : term, .term / unary, -
		174 : term, .term mod unary, -
		175 : term, .unary, -
		176 : term, .term * unary, *
		177 : term, .term / unary, *
		178 : term, .term mod unary, *
		179 : term, .unary, *
		180 : term, .term * unary, /
		181 : term, .term / unary, /
		182 : term, .term mod unary, /
		183 : term, .unary, /
		184 : term, .term * unary, mod
		185 : term, .term / unary, mod
		186 : term, .term mod unary, mod
		187 : term, .unary, mod
		188 : unary, .! unary, <
		189 : unary, .- unary, <
		190 : unary, .factor, <
		191 : unary, .! unary, <=
		192 : unary, .- unary, <=
		193 : unary, .factor, <=
		194 : unary, .! unary, >=
		195 : unary, .- unary, >=
		196 : unary, .factor, >=
		197 : unary, .! unary, >
		198 : unary, .- unary, >
		199 : unary, .factor, >
		200 : unary, .! unary, )
		201 : unary, .- unary, )
		202 : unary, .factor, )
		203 : unary, .! unary, ,
		204 : unary, .- unary, ,
		205 : unary, .factor, ,
		206 : unary, .! unary, or
		207 : unary, .- unary, or
		208 : unary, .factor, or
		209 : unary, .! unary, and
		210 : unary, .- unary, and
		211 : unary, .factor, and
		212 : unary, .! unary, eq
		213 : unary, .- unary, eq
		214 : unary, .factor, eq
		215 : unary, .! unary, neq
		216 : unary, .- unary, neq
		217 : unary, .factor, neq
		218 : unary, .! unary, +
		219 : unary, .- unary, +
		220 : unary, .factor, +
		221 : unary, .! unary, -
		222 : unary, .- unary, -
		223 : unary, .factor, -
		224 : unary, .! unary, *
		225 : unary, .- unary, *
		226 : unary, .factor, *
		227 : unary, .! unary, /
		228 : unary, .- unary, /
		229 : unary, .factor, /
		230 : unary, .! unary, mod
		231 : unary, .- unary, mod
		232 : unary, .factor, mod
		233 : factor, .( bool ), <
		234 : factor, .loc, <
		235 : factor, .id ( args ), <
		236 : factor, .num, <
		237 : factor, .real, <
		238 : factor, .true, <
		239 : factor, .false, <
		240 : factor, .( bool ), <=
		241 : factor, .loc, <=
		242 : factor, .id ( args ), <=
		243 : factor, .num, <=
		244 : factor, .real, <=
		245 : factor, .true, <=
		246 : factor, .false, <=
		247 : factor, .( bool ), >=
		248 : factor, .loc, >=
		249 : factor, .id ( args ), >=
		250 : factor, .num, >=
		251 : factor, .real, >=
		252 : factor, .true, >=
		253 : factor, .false, >=
		254 : factor, .( bool ), >
		255 : factor, .loc, >
		256 : factor, .id ( args ), >
		257 : factor, .num, >
		258 : factor, .real, >
		259 : factor, .true, >
		260 : factor, .false, >
		261 : factor, .( bool ), )
		262 : factor, .loc, )
		263 : factor, .id ( args ), )
		264 : factor, .num, )
		265 : factor, .real, )
		266 : factor, .true, )
		267 : factor, .false, )
		268 : factor, .( bool ), ,
		269 : factor, .loc, ,
		270 : factor, .id ( args ), ,
		271 : factor, .num, ,
		272 : factor, .real, ,
		273 : factor, .true, ,
		274 : factor, .false, ,
		275 : factor, .( bool ), or
		276 : factor, .loc, or
		277 : factor, .id ( args ), or
		278 : factor, .num, or
		279 : factor, .real, or
		280 : factor, .true, or
		281 : factor, .false, or
		282 : factor, .( bool ), and
		283 : factor, .loc, and
		284 : factor, .id ( args ), and
		285 : factor, .num, and
		286 : factor, .real, and
		287 : factor, .true, and
		288 : factor, .false, and
		289 : factor, .( bool ), eq
		290 : factor, .loc, eq
		291 : factor, .id ( args ), eq
		292 : factor, .num, eq
		293 : factor, .real, eq
		294 : factor, .true, eq
		295 : factor, .false, eq
		296 : factor, .( bool ), neq
		297 : factor, .loc, neq
		298 : factor, .id ( args ), neq
		299 : factor, .num, neq
		300 : factor, .real, neq
		301 : factor, .true, neq
		302 : factor, .false, neq
		303 : factor, .( bool ), +
		304 : factor, .loc, +
		305 : factor, .id ( args ), +
		306 : factor, .num, +
		307 : factor, .real, +
		308 : factor, .true, +
		309 : factor, .false, +
		310 : factor, .( bool ), -
		311 : factor, .loc, -
		312 : factor, .id ( args ), -
		313 : factor, .num, -
		314 : factor, .real, -
		315 : factor, .true, -
		316 : factor, .false, -
		317 : factor, .( bool ), *
		318 : factor, .loc, *
		319 : factor, .id ( args ), *
		320 : factor, .num, *
		321 : factor, .real, *
		322 : factor, .true, *
		323 : factor, .false, *
		324 : factor, .( bool ), /
		325 : factor, .loc, /
		326 : factor, .id ( args ), /
		327 : factor, .num, /
		328 : factor, .real, /
		329 : factor, .true, /
		330 : factor, .false, /
		331 : factor, .( bool ), mod
		332 : factor, .loc, mod
		333 : factor, .id ( args ), mod
		334 : factor, .num, mod
		335 : factor, .real, mod
		336 : factor, .true, mod
		337 : factor, .false, mod
		338 : loc, .loc [ bool ], <
		339 : loc, .id, <
		340 : loc, .loc [ bool ], <=
		341 : loc, .id, <=
		342 : loc, .loc [ bool ], >=
		343 : loc, .id, >=
		344 : loc, .loc [ bool ], >
		345 : loc, .id, >
		346 : loc, .loc [ bool ], or
		347 : loc, .id, or
		348 : loc, .loc [ bool ], and
		349 : loc, .id, and
		350 : loc, .loc [ bool ], eq
		351 : loc, .id, eq
		352 : loc, .loc [ bool ], neq
		353 : loc, .id, neq
		354 : loc, .loc [ bool ], +
		355 : loc, .id, +
		356 : loc, .loc [ bool ], -
		357 : loc, .id, -
		358 : loc, .loc [ bool ], *
		359 : loc, .id, *
		360 : loc, .loc [ bool ], /
		361 : loc, .id, /
		362 : loc, .loc [ bool ], mod
		363 : loc, .id, mod
	[124] 
		0 : factor, ( bool .), <
		1 : factor, ( bool .), <=
		2 : factor, ( bool .), >=
		3 : factor, ( bool .), >
		4 : factor, ( bool .), ;
		5 : factor, ( bool .), or
		6 : factor, ( bool .), and
		7 : factor, ( bool .), eq
		8 : factor, ( bool .), neq
		9 : factor, ( bool .), +
		10 : factor, ( bool .), -
		11 : factor, ( bool .), *
		12 : factor, ( bool .), /
		13 : factor, ( bool .), mod
		14 : bool, bool .or join, )
		15 : bool, bool .or join, or
	[125] 
		0 : unary, - unary ., <
		1 : unary, - unary ., <=
		2 : unary, - unary ., >=
		3 : unary, - unary ., >
		4 : unary, - unary ., ;
		5 : unary, - unary ., or
		6 : unary, - unary ., and
		7 : unary, - unary ., eq
		8 : unary, - unary ., neq
		9 : unary, - unary ., +
		10 : unary, - unary ., -
		11 : unary, - unary ., *
		12 : unary, - unary ., /
		13 : unary, - unary ., mod
	[126] 
		0 : unary, ! unary ., <
		1 : unary, ! unary ., <=
		2 : unary, ! unary ., >=
		3 : unary, ! unary ., >
		4 : unary, ! unary ., ;
		5 : unary, ! unary ., or
		6 : unary, ! unary ., and
		7 : unary, ! unary ., eq
		8 : unary, ! unary ., neq
		9 : unary, ! unary ., +
		10 : unary, ! unary ., -
		11 : unary, ! unary ., *
		12 : unary, ! unary ., /
		13 : unary, ! unary ., mod
	[127] 
		0 : loc, loc [ .bool ], <
		1 : loc, loc [ .bool ], <=
		2 : loc, loc [ .bool ], >=
		3 : loc, loc [ .bool ], >
		4 : loc, loc [ .bool ], ]
		5 : loc, loc [ .bool ], or
		6 : loc, loc [ .bool ], and
		7 : loc, loc [ .bool ], eq
		8 : loc, loc [ .bool ], neq
		9 : loc, loc [ .bool ], +
		10 : loc, loc [ .bool ], -
		11 : loc, loc [ .bool ], *
		12 : loc, loc [ .bool ], /
		13 : loc, loc [ .bool ], mod
		14 : loc, loc [ .bool ], [
		15 : bool, .bool or join, ]
		16 : bool, .join, ]
		17 : bool, .bool or join, or
		18 : bool, .join, or
		19 : join, .join and equality, ]
		20 : join, .equality, ]
		21 : join, .join and equality, or
		22 : join, .equality, or
		23 : join, .join and equality, and
		24 : join, .equality, and
		25 : equality, .equality eq rel, ]
		26 : equality, .equality neq rel, ]
		27 : equality, .rel, ]
		28 : equality, .equality eq rel, or
		29 : equality, .equality neq rel, or
		30 : equality, .rel, or
		31 : equality, .equality eq rel, and
		32 : equality, .equality neq rel, and
		33 : equality, .rel, and
		34 : equality, .equality eq rel, eq
		35 : equality, .equality neq rel, eq
		36 : equality, .rel, eq
		37 : equality, .equality eq rel, neq
		38 : equality, .equality neq rel, neq
		39 : equality, .rel, neq
		40 : rel, .expr < expr, ]
		41 : rel, .expr <= expr, ]
		42 : rel, .expr >= expr, ]
		43 : rel, .expr > expr, ]
		44 : rel, .expr, ]
		45 : rel, .expr < expr, or
		46 : rel, .expr <= expr, or
		47 : rel, .expr >= expr, or
		48 : rel, .expr > expr, or
		49 : rel, .expr, or
		50 : rel, .expr < expr, and
		51 : rel, .expr <= expr, and
		52 : rel, .expr >= expr, and
		53 : rel, .expr > expr, and
		54 : rel, .expr, and
		55 : rel, .expr < expr, eq
		56 : rel, .expr <= expr, eq
		57 : rel, .expr >= expr, eq
		58 : rel, .expr > expr, eq
		59 : rel, .expr, eq
		60 : rel, .expr < expr, neq
		61 : rel, .expr <= expr, neq
		62 : rel, .expr >= expr, neq
		63 : rel, .expr > expr, neq
		64 : rel, .expr, neq
		65 : expr, .expr + term, <
		66 : expr, .expr - term, <
		67 : expr, .term, <
		68 : expr, .expr + term, <=
		69 : expr, .expr - term, <=
		70 : expr, .term, <=
		71 : expr, .expr + term, >=
		72 : expr, .expr - term, >=
		73 : expr, .term, >=
		74 : expr, .expr + term, >
		75 : expr, .expr - term, >
		76 : expr, .term, >
		77 : expr, .expr + term, ]
		78 : expr, .expr - term, ]
		79 : expr, .term, ]
		80 : expr, .expr + term, or
		81 : expr, .expr - term, or
		82 : expr, .term, or
		83 : expr, .expr + term, and
		84 : expr, .expr - term, and
		85 : expr, .term, and
		86 : expr, .expr + term, eq
		87 : expr, .expr - term, eq
		88 : expr, .term, eq
		89 : expr, .expr + term, neq
		90 : expr, .expr - term, neq
		91 : expr, .term, neq
		92 : expr, .expr + term, +
		93 : expr, .expr - term, +
		94 : expr, .term, +
		95 : expr, .expr + term, -
		96 : expr, .expr - term, -
		97 : expr, .term, -
		98 : term, .term * unary, <
		99 : term, .term / unary, <
		100 : term, .term mod unary, <
		101 : term, .unary, <
		102 : term, .term * unary, <=
		103 : term, .term / unary, <=
		104 : term, .term mod unary, <=
		105 : term, .unary, <=
		106 : term, .term * unary, >=
		107 : term, .term / unary, >=
		108 : term, .term mod unary, >=
		109 : term, .unary, >=
		110 : term, .term * unary, >
		111 : term, .term / unary, >
		112 : term, .term mod unary, >
		113 : term, .unary, >
		114 : term, .term * unary, ]
		115 : term, .term / unary, ]
		116 : term, .term mod unary, ]
		117 : term, .unary, ]
		118 : term, .term * unary, or
		119 : term, .term / unary, or
		120 : term, .term mod unary, or
		121 : term, .unary, or
		122 : term, .term * unary, and
		123 : term, .term / unary, and
		124 : term, .term mod unary, and
		125 : term, .unary, and
		126 : term, .term * unary, eq
		127 : term, .term / unary, eq
		128 : term, .term mod unary, eq
		129 : term, .unary, eq
		130 : term, .term * unary, neq
		131 : term, .term / unary, neq
		132 : term, .term mod unary, neq
		133 : term, .unary, neq
		134 : term, .term * unary, +
		135 : term, .term / unary, +
		136 : term, .term mod unary, +
		137 : term, .unary, +
		138 : term, .term * unary, -
		139 : term, .term / unary, -
		140 : term, .term mod unary, -
		141 : term, .unary, -
		142 : term, .term * unary, *
		143 : term, .term / unary, *
		144 : term, .term mod unary, *
		145 : term, .unary, *
		146 : term, .term * unary, /
		147 : term, .term / unary, /
		148 : term, .term mod unary, /
		149 : term, .unary, /
		150 : term, .term * unary, mod
		151 : term, .term / unary, mod
		152 : term, .term mod unary, mod
		153 : term, .unary, mod
		154 : unary, .! unary, <
		155 : unary, .- unary, <
		156 : unary, .factor, <
		157 : unary, .! unary, <=
		158 : unary, .- unary, <=
		159 : unary, .factor, <=
		160 : unary, .! unary, >=
		161 : unary, .- unary, >=
		162 : unary, .factor, >=
		163 : unary, .! unary, >
		164 : unary, .- unary, >
		165 : unary, .factor, >
		166 : unary, .! unary, ]
		167 : unary, .- unary, ]
		168 : unary, .factor, ]
		169 : unary, .! unary, or
		170 : unary, .- unary, or
		171 : unary, .factor, or
		172 : unary, .! unary, and
		173 : unary, .- unary, and
		174 : unary, .factor, and
		175 : unary, .! unary, eq
		176 : unary, .- unary, eq
		177 : unary, .factor, eq
		178 : unary, .! unary, neq
		179 : unary, .- unary, neq
		180 : unary, .factor, neq
		181 : unary, .! unary, +
		182 : unary, .- unary, +
		183 : unary, .factor, +
		184 : unary, .! unary, -
		185 : unary, .- unary, -
		186 : unary, .factor, -
		187 : unary, .! unary, *
		188 : unary, .- unary, *
		189 : unary, .factor, *
		190 : unary, .! unary, /
		191 : unary, .- unary, /
		192 : unary, .factor, /
		193 : unary, .! unary, mod
		194 : unary, .- unary, mod
		195 : unary, .factor, mod
		196 : factor, .( bool ), <
		197 : factor, .loc, <
		198 : factor, .id ( args ), <
		199 : factor, .num, <
		200 : factor, .real, <
		201 : factor, .true, <
		202 : factor, .false, <
		203 : factor, .( bool ), <=
		204 : factor, .loc, <=
		205 : factor, .id ( args ), <=
		206 : factor, .num, <=
		207 : factor, .real, <=
		208 : factor, .true, <=
		209 : factor, .false, <=
		210 : factor, .( bool ), >=
		211 : factor, .loc, >=
		212 : factor, .id ( args ), >=
		213 : factor, .num, >=
		214 : factor, .real, >=
		215 : factor, .true, >=
		216 : factor, .false, >=
		217 : factor, .( bool ), >
		218 : factor, .loc, >
		219 : factor, .id ( args ), >
		220 : factor, .num, >
		221 : factor, .real, >
		222 : factor, .true, >
		223 : factor, .false, >
		224 : factor, .( bool ), ]
		225 : factor, .loc, ]
		226 : factor, .id ( args ), ]
		227 : factor, .num, ]
		228 : factor, .real, ]
		229 : factor, .true, ]
		230 : factor, .false, ]
		231 : factor, .( bool ), or
		232 : factor, .loc, or
		233 : factor, .id ( args ), or
		234 : factor, .num, or
		235 : factor, .real, or
		236 : factor, .true, or
		237 : factor, .false, or
		238 : factor, .( bool ), and
		239 : factor, .loc, and
		240 : factor, .id ( args ), and
		241 : factor, .num, and
		242 : factor, .real, and
		243 : factor, .true, and
		244 : factor, .false, and
		245 : factor, .( bool ), eq
		246 : factor, .loc, eq
		247 : factor, .id ( args ), eq
		248 : factor, .num, eq
		249 : factor, .real, eq
		250 : factor, .true, eq
		251 : factor, .false, eq
		252 : factor, .( bool ), neq
		253 : factor, .loc, neq
		254 : factor, .id ( args ), neq
		255 : factor, .num, neq
		256 : factor, .real, neq
		257 : factor, .true, neq
		258 : factor, .false, neq
		259 : factor, .( bool ), +
		260 : factor, .loc, +
		261 : factor, .id ( args ), +
		262 : factor, .num, +
		263 : factor, .real, +
		264 : factor, .true, +
		265 : factor, .false, +
		266 : factor, .( bool ), -
		267 : factor, .loc, -
		268 : factor, .id ( args ), -
		269 : factor, .num, -
		270 : factor, .real, -
		271 : factor, .true, -
		272 : factor, .false, -
		273 : factor, .( bool ), *
		274 : factor, .loc, *
		275 : factor, .id ( args ), *
		276 : factor, .num, *
		277 : factor, .real, *
		278 : factor, .true, *
		279 : factor, .false, *
		280 : factor, .( bool ), /
		281 : factor, .loc, /
		282 : factor, .id ( args ), /
		283 : factor, .num, /
		284 : factor, .real, /
		285 : factor, .true, /
		286 : factor, .false, /
		287 : factor, .( bool ), mod
		288 : factor, .loc, mod
		289 : factor, .id ( args ), mod
		290 : factor, .num, mod
		291 : factor, .real, mod
		292 : factor, .true, mod
		293 : factor, .false, mod
		294 : loc, .loc [ bool ], <
		295 : loc, .id, <
		296 : loc, .loc [ bool ], <=
		297 : loc, .id, <=
		298 : loc, .loc [ bool ], >=
		299 : loc, .id, >=
		300 : loc, .loc [ bool ], >
		301 : loc, .id, >
		302 : loc, .loc [ bool ], ]
		303 : loc, .id, ]
		304 : loc, .loc [ bool ], or
		305 : loc, .id, or
		306 : loc, .loc [ bool ], and
		307 : loc, .id, and
		308 : loc, .loc [ bool ], eq
		309 : loc, .id, eq
		310 : loc, .loc [ bool ], neq
		311 : loc, .id, neq
		312 : loc, .loc [ bool ], +
		313 : loc, .id, +
		314 : loc, .loc [ bool ], -
		315 : loc, .id, -
		316 : loc, .loc [ bool ], *
		317 : loc, .id, *
		318 : loc, .loc [ bool ], /
		319 : loc, .id, /
		320 : loc, .loc [ bool ], mod
		321 : loc, .id, mod
		322 : loc, .loc [ bool ], [
		323 : loc, .id, [
	[128] 
		0 : loc, loc [ bool ] ., =
		1 : loc, loc [ bool ] ., [
	[129] 
		0 : bool, bool or .join, ]
		1 : bool, bool or .join, or
		2 : join, .join and equality, ]
		3 : join, .equality, ]
		4 : join, .join and equality, or
		5 : join, .equality, or
		6 : join, .join and equality, and
		7 : join, .equality, and
		8 : equality, .equality eq rel, ]
		9 : equality, .equality neq rel, ]
		10 : equality, .rel, ]
		11 : equality, .equality eq rel, or
		12 : equality, .equality neq rel, or
		13 : equality, .rel, or
		14 : equality, .equality eq rel, and
		15 : equality, .equality neq rel, and
		16 : equality, .rel, and
		17 : equality, .equality eq rel, eq
		18 : equality, .equality neq rel, eq
		19 : equality, .rel, eq
		20 : equality, .equality eq rel, neq
		21 : equality, .equality neq rel, neq
		22 : equality, .rel, neq
		23 : rel, .expr < expr, ]
		24 : rel, .expr <= expr, ]
		25 : rel, .expr >= expr, ]
		26 : rel, .expr > expr, ]
		27 : rel, .expr, ]
		28 : rel, .expr < expr, or
		29 : rel, .expr <= expr, or
		30 : rel, .expr >= expr, or
		31 : rel, .expr > expr, or
		32 : rel, .expr, or
		33 : rel, .expr < expr, and
		34 : rel, .expr <= expr, and
		35 : rel, .expr >= expr, and
		36 : rel, .expr > expr, and
		37 : rel, .expr, and
		38 : rel, .expr < expr, eq
		39 : rel, .expr <= expr, eq
		40 : rel, .expr >= expr, eq
		41 : rel, .expr > expr, eq
		42 : rel, .expr, eq
		43 : rel, .expr < expr, neq
		44 : rel, .expr <= expr, neq
		45 : rel, .expr >= expr, neq
		46 : rel, .expr > expr, neq
		47 : rel, .expr, neq
		48 : expr, .expr + term, <
		49 : expr, .expr - term, <
		50 : expr, .term, <
		51 : expr, .expr + term, <=
		52 : expr, .expr - term, <=
		53 : expr, .term, <=
		54 : expr, .expr + term, >=
		55 : expr, .expr - term, >=
		56 : expr, .term, >=
		57 : expr, .expr + term, >
		58 : expr, .expr - term, >
		59 : expr, .term, >
		60 : expr, .expr + term, ]
		61 : expr, .expr - term, ]
		62 : expr, .term, ]
		63 : expr, .expr + term, or
		64 : expr, .expr - term, or
		65 : expr, .term, or
		66 : expr, .expr + term, and
		67 : expr, .expr - term, and
		68 : expr, .term, and
		69 : expr, .expr + term, eq
		70 : expr, .expr - term, eq
		71 : expr, .term, eq
		72 : expr, .expr + term, neq
		73 : expr, .expr - term, neq
		74 : expr, .term, neq
		75 : expr, .expr + term, +
		76 : expr, .expr - term, +
		77 : expr, .term, +
		78 : expr, .expr + term, -
		79 : expr, .expr - term, -
		80 : expr, .term, -
		81 : term, .term * unary, <
		82 : term, .term / unary, <
		83 : term, .term mod unary, <
		84 : term, .unary, <
		85 : term, .term * unary, <=
		86 : term, .term / unary, <=
		87 : term, .term mod unary, <=
		88 : term, .unary, <=
		89 : term, .term * unary, >=
		90 : term, .term / unary, >=
		91 : term, .term mod unary, >=
		92 : term, .unary, >=
		93 : term, .term * unary, >
		94 : term, .term / unary, >
		95 : term, .term mod unary, >
		96 : term, .unary, >
		97 : term, .term * unary, ]
		98 : term, .term / unary, ]
		99 : term, .term mod unary, ]
		100 : term, .unary, ]
		101 : term, .term * unary, or
		102 : term, .term / unary, or
		103 : term, .term mod unary, or
		104 : term, .unary, or
		105 : term, .term * unary, and
		106 : term, .term / unary, and
		107 : term, .term mod unary, and
		108 : term, .unary, and
		109 : term, .term * unary, eq
		110 : term, .term / unary, eq
		111 : term, .term mod unary, eq
		112 : term, .unary, eq
		113 : term, .term * unary, neq
		114 : term, .term / unary, neq
		115 : term, .term mod unary, neq
		116 : term, .unary, neq
		117 : term, .term * unary, +
		118 : term, .term / unary, +
		119 : term, .term mod unary, +
		120 : term, .unary, +
		121 : term, .term * unary, -
		122 : term, .term / unary, -
		123 : term, .term mod unary, -
		124 : term, .unary, -
		125 : term, .term * unary, *
		126 : term, .term / unary, *
		127 : term, .term mod unary, *
		128 : term, .unary, *
		129 : term, .term * unary, /
		130 : term, .term / unary, /
		131 : term, .term mod unary, /
		132 : term, .unary, /
		133 : term, .term * unary, mod
		134 : term, .term / unary, mod
		135 : term, .term mod unary, mod
		136 : term, .unary, mod
		137 : unary, .! unary, <
		138 : unary, .- unary, <
		139 : unary, .factor, <
		140 : unary, .! unary, <=
		141 : unary, .- unary, <=
		142 : unary, .factor, <=
		143 : unary, .! unary, >=
		144 : unary, .- unary, >=
		145 : unary, .factor, >=
		146 : unary, .! unary, >
		147 : unary, .- unary, >
		148 : unary, .factor, >
		149 : unary, .! unary, ]
		150 : unary, .- unary, ]
		151 : unary, .factor, ]
		152 : unary, .! unary, or
		153 : unary, .- unary, or
		154 : unary, .factor, or
		155 : unary, .! unary, and
		156 : unary, .- unary, and
		157 : unary, .factor, and
		158 : unary, .! unary, eq
		159 : unary, .- unary, eq
		160 : unary, .factor, eq
		161 : unary, .! unary, neq
		162 : unary, .- unary, neq
		163 : unary, .factor, neq
		164 : unary, .! unary, +
		165 : unary, .- unary, +
		166 : unary, .factor, +
		167 : unary, .! unary, -
		168 : unary, .- unary, -
		169 : unary, .factor, -
		170 : unary, .! unary, *
		171 : unary, .- unary, *
		172 : unary, .factor, *
		173 : unary, .! unary, /
		174 : unary, .- unary, /
		175 : unary, .factor, /
		176 : unary, .! unary, mod
		177 : unary, .- unary, mod
		178 : unary, .factor, mod
		179 : factor, .( bool ), <
		180 : factor, .loc, <
		181 : factor, .id ( args ), <
		182 : factor, .num, <
		183 : factor, .real, <
		184 : factor, .true, <
		185 : factor, .false, <
		186 : factor, .( bool ), <=
		187 : factor, .loc, <=
		188 : factor, .id ( args ), <=
		189 : factor, .num, <=
		190 : factor, .real, <=
		191 : factor, .true, <=
		192 : factor, .false, <=
		193 : factor, .( bool ), >=
		194 : factor, .loc, >=
		195 : factor, .id ( args ), >=
		196 : factor, .num, >=
		197 : factor, .real, >=
		198 : factor, .true, >=
		199 : factor, .false, >=
		200 : factor, .( bool ), >
		201 : factor, .loc, >
		202 : factor, .id ( args ), >
		203 : factor, .num, >
		204 : factor, .real, >
		205 : factor, .true, >
		206 : factor, .false, >
		207 : factor, .( bool ), ]
		208 : factor, .loc, ]
		209 : factor, .id ( args ), ]
		210 : factor, .num, ]
		211 : factor, .real, ]
		212 : factor, .true, ]
		213 : factor, .false, ]
		214 : factor, .( bool ), or
		215 : factor, .loc, or
		216 : factor, .id ( args ), or
		217 : factor, .num, or
		218 : factor, .real, or
		219 : factor, .true, or
		220 : factor, .false, or
		221 : factor, .( bool ), and
		222 : factor, .loc, and
		223 : factor, .id ( args ), and
		224 : factor, .num, and
		225 : factor, .real, and
		226 : factor, .true, and
		227 : factor, .false, and
		228 : factor, .( bool ), eq
		229 : factor, .loc, eq
		230 : factor, .id ( args ), eq
		231 : factor, .num, eq
		232 : factor, .real, eq
		233 : factor, .true, eq
		234 : factor, .false, eq
		235 : factor, .( bool ), neq
		236 : factor, .loc, neq
		237 : factor, .id ( args ), neq
		238 : factor, .num, neq
		239 : factor, .real, neq
		240 : factor, .true, neq
		241 : factor, .false, neq
		242 : factor, .( bool ), +
		243 : factor, .loc, +
		244 : factor, .id ( args ), +
		245 : factor, .num, +
		246 : factor, .real, +
		247 : factor, .true, +
		248 : factor, .false, +
		249 : factor, .( bool ), -
		250 : factor, .loc, -
		251 : factor, .id ( args ), -
		252 : factor, .num, -
		253 : factor, .real, -
		254 : factor, .true, -
		255 : factor, .false, -
		256 : factor, .( bool ), *
		257 : factor, .loc, *
		258 : factor, .id ( args ), *
		259 : factor, .num, *
		260 : factor, .real, *
		261 : factor, .true, *
		262 : factor, .false, *
		263 : factor, .( bool ), /
		264 : factor, .loc, /
		265 : factor, .id ( args ), /
		266 : factor, .num, /
		267 : factor, .real, /
		268 : factor, .true, /
		269 : factor, .false, /
		270 : factor, .( bool ), mod
		271 : factor, .loc, mod
		272 : factor, .id ( args ), mod
		273 : factor, .num, mod
		274 : factor, .real, mod
		275 : factor, .true, mod
		276 : factor, .false, mod
		277 : loc, .loc [ bool ], <
		278 : loc, .id, <
		279 : loc, .loc [ bool ], <=
		280 : loc, .id, <=
		281 : loc, .loc [ bool ], >=
		282 : loc, .id, >=
		283 : loc, .loc [ bool ], >
		284 : loc, .id, >
		285 : loc, .loc [ bool ], ]
		286 : loc, .id, ]
		287 : loc, .loc [ bool ], or
		288 : loc, .id, or
		289 : loc, .loc [ bool ], and
		290 : loc, .id, and
		291 : loc, .loc [ bool ], eq
		292 : loc, .id, eq
		293 : loc, .loc [ bool ], neq
		294 : loc, .id, neq
		295 : loc, .loc [ bool ], +
		296 : loc, .id, +
		297 : loc, .loc [ bool ], -
		298 : loc, .id, -
		299 : loc, .loc [ bool ], *
		300 : loc, .id, *
		301 : loc, .loc [ bool ], /
		302 : loc, .id, /
		303 : loc, .loc [ bool ], mod
		304 : loc, .id, mod
		305 : loc, .loc [ bool ], [
		306 : loc, .id, [
	[130] 
		0 : join, join and .equality, ]
		1 : join, join and .equality, or
		2 : join, join and .equality, and
		3 : equality, .equality eq rel, ]
		4 : equality, .equality neq rel, ]
		5 : equality, .rel, ]
		6 : equality, .equality eq rel, or
		7 : equality, .equality neq rel, or
		8 : equality, .rel, or
		9 : equality, .equality eq rel, and
		10 : equality, .equality neq rel, and
		11 : equality, .rel, and
		12 : equality, .equality eq rel, eq
		13 : equality, .equality neq rel, eq
		14 : equality, .rel, eq
		15 : equality, .equality eq rel, neq
		16 : equality, .equality neq rel, neq
		17 : equality, .rel, neq
		18 : rel, .expr < expr, ]
		19 : rel, .expr <= expr, ]
		20 : rel, .expr >= expr, ]
		21 : rel, .expr > expr, ]
		22 : rel, .expr, ]
		23 : rel, .expr < expr, or
		24 : rel, .expr <= expr, or
		25 : rel, .expr >= expr, or
		26 : rel, .expr > expr, or
		27 : rel, .expr, or
		28 : rel, .expr < expr, and
		29 : rel, .expr <= expr, and
		30 : rel, .expr >= expr, and
		31 : rel, .expr > expr, and
		32 : rel, .expr, and
		33 : rel, .expr < expr, eq
		34 : rel, .expr <= expr, eq
		35 : rel, .expr >= expr, eq
		36 : rel, .expr > expr, eq
		37 : rel, .expr, eq
		38 : rel, .expr < expr, neq
		39 : rel, .expr <= expr, neq
		40 : rel, .expr >= expr, neq
		41 : rel, .expr > expr, neq
		42 : rel, .expr, neq
		43 : expr, .expr + term, <
		44 : expr, .expr - term, <
		45 : expr, .term, <
		46 : expr, .expr + term, <=
		47 : expr, .expr - term, <=
		48 : expr, .term, <=
		49 : expr, .expr + term, >=
		50 : expr, .expr - term, >=
		51 : expr, .term, >=
		52 : expr, .expr + term, >
		53 : expr, .expr - term, >
		54 : expr, .term, >
		55 : expr, .expr + term, ]
		56 : expr, .expr - term, ]
		57 : expr, .term, ]
		58 : expr, .expr + term, or
		59 : expr, .expr - term, or
		60 : expr, .term, or
		61 : expr, .expr + term, and
		62 : expr, .expr - term, and
		63 : expr, .term, and
		64 : expr, .expr + term, eq
		65 : expr, .expr - term, eq
		66 : expr, .term, eq
		67 : expr, .expr + term, neq
		68 : expr, .expr - term, neq
		69 : expr, .term, neq
		70 : expr, .expr + term, +
		71 : expr, .expr - term, +
		72 : expr, .term, +
		73 : expr, .expr + term, -
		74 : expr, .expr - term, -
		75 : expr, .term, -
		76 : term, .term * unary, <
		77 : term, .term / unary, <
		78 : term, .term mod unary, <
		79 : term, .unary, <
		80 : term, .term * unary, <=
		81 : term, .term / unary, <=
		82 : term, .term mod unary, <=
		83 : term, .unary, <=
		84 : term, .term * unary, >=
		85 : term, .term / unary, >=
		86 : term, .term mod unary, >=
		87 : term, .unary, >=
		88 : term, .term * unary, >
		89 : term, .term / unary, >
		90 : term, .term mod unary, >
		91 : term, .unary, >
		92 : term, .term * unary, ]
		93 : term, .term / unary, ]
		94 : term, .term mod unary, ]
		95 : term, .unary, ]
		96 : term, .term * unary, or
		97 : term, .term / unary, or
		98 : term, .term mod unary, or
		99 : term, .unary, or
		100 : term, .term * unary, and
		101 : term, .term / unary, and
		102 : term, .term mod unary, and
		103 : term, .unary, and
		104 : term, .term * unary, eq
		105 : term, .term / unary, eq
		106 : term, .term mod unary, eq
		107 : term, .unary, eq
		108 : term, .term * unary, neq
		109 : term, .term / unary, neq
		110 : term, .term mod unary, neq
		111 : term, .unary, neq
		112 : term, .term * unary, +
		113 : term, .term / unary, +
		114 : term, .term mod unary, +
		115 : term, .unary, +
		116 : term, .term * unary, -
		117 : term, .term / unary, -
		118 : term, .term mod unary, -
		119 : term, .unary, -
		120 : term, .term * unary, *
		121 : term, .term / unary, *
		122 : term, .term mod unary, *
		123 : term, .unary, *
		124 : term, .term * unary, /
		125 : term, .term / unary, /
		126 : term, .term mod unary, /
		127 : term, .unary, /
		128 : term, .term * unary, mod
		129 : term, .term / unary, mod
		130 : term, .term mod unary, mod
		131 : term, .unary, mod
		132 : unary, .! unary, <
		133 : unary, .- unary, <
		134 : unary, .factor, <
		135 : unary, .! unary, <=
		136 : unary, .- unary, <=
		137 : unary, .factor, <=
		138 : unary, .! unary, >=
		139 : unary, .- unary, >=
		140 : unary, .factor, >=
		141 : unary, .! unary, >
		142 : unary, .- unary, >
		143 : unary, .factor, >
		144 : unary, .! unary, ]
		145 : unary, .- unary, ]
		146 : unary, .factor, ]
		147 : unary, .! unary, or
		148 : unary, .- unary, or
		149 : unary, .factor, or
		150 : unary, .! unary, and
		151 : unary, .- unary, and
		152 : unary, .factor, and
		153 : unary, .! unary, eq
		154 : unary, .- unary, eq
		155 : unary, .factor, eq
		156 : unary, .! unary, neq
		157 : unary, .- unary, neq
		158 : unary, .factor, neq
		159 : unary, .! unary, +
		160 : unary, .- unary, +
		161 : unary, .factor, +
		162 : unary, .! unary, -
		163 : unary, .- unary, -
		164 : unary, .factor, -
		165 : unary, .! unary, *
		166 : unary, .- unary, *
		167 : unary, .factor, *
		168 : unary, .! unary, /
		169 : unary, .- unary, /
		170 : unary, .factor, /
		171 : unary, .! unary, mod
		172 : unary, .- unary, mod
		173 : unary, .factor, mod
		174 : factor, .( bool ), <
		175 : factor, .loc, <
		176 : factor, .id ( args ), <
		177 : factor, .num, <
		178 : factor, .real, <
		179 : factor, .true, <
		180 : factor, .false, <
		181 : factor, .( bool ), <=
		182 : factor, .loc, <=
		183 : factor, .id ( args ), <=
		184 : factor, .num, <=
		185 : factor, .real, <=
		186 : factor, .true, <=
		187 : factor, .false, <=
		188 : factor, .( bool ), >=
		189 : factor, .loc, >=
		190 : factor, .id ( args ), >=
		191 : factor, .num, >=
		192 : factor, .real, >=
		193 : factor, .true, >=
		194 : factor, .false, >=
		195 : factor, .( bool ), >
		196 : factor, .loc, >
		197 : factor, .id ( args ), >
		198 : factor, .num, >
		199 : factor, .real, >
		200 : factor, .true, >
		201 : factor, .false, >
		202 : factor, .( bool ), ]
		203 : factor, .loc, ]
		204 : factor, .id ( args ), ]
		205 : factor, .num, ]
		206 : factor, .real, ]
		207 : factor, .true, ]
		208 : factor, .false, ]
		209 : factor, .( bool ), or
		210 : factor, .loc, or
		211 : factor, .id ( args ), or
		212 : factor, .num, or
		213 : factor, .real, or
		214 : factor, .true, or
		215 : factor, .false, or
		216 : factor, .( bool ), and
		217 : factor, .loc, and
		218 : factor, .id ( args ), and
		219 : factor, .num, and
		220 : factor, .real, and
		221 : factor, .true, and
		222 : factor, .false, and
		223 : factor, .( bool ), eq
		224 : factor, .loc, eq
		225 : factor, .id ( args ), eq
		226 : factor, .num, eq
		227 : factor, .real, eq
		228 : factor, .true, eq
		229 : factor, .false, eq
		230 : factor, .( bool ), neq
		231 : factor, .loc, neq
		232 : factor, .id ( args ), neq
		233 : factor, .num, neq
		234 : factor, .real, neq
		235 : factor, .true, neq
		236 : factor, .false, neq
		237 : factor, .( bool ), +
		238 : factor, .loc, +
		239 : factor, .id ( args ), +
		240 : factor, .num, +
		241 : factor, .real, +
		242 : factor, .true, +
		243 : factor, .false, +
		244 : factor, .( bool ), -
		245 : factor, .loc, -
		246 : factor, .id ( args ), -
		247 : factor, .num, -
		248 : factor, .real, -
		249 : factor, .true, -
		250 : factor, .false, -
		251 : factor, .( bool ), *
		252 : factor, .loc, *
		253 : factor, .id ( args ), *
		254 : factor, .num, *
		255 : factor, .real, *
		256 : factor, .true, *
		257 : factor, .false, *
		258 : factor, .( bool ), /
		259 : factor, .loc, /
		260 : factor, .id ( args ), /
		261 : factor, .num, /
		262 : factor, .real, /
		263 : factor, .true, /
		264 : factor, .false, /
		265 : factor, .( bool ), mod
		266 : factor, .loc, mod
		267 : factor, .id ( args ), mod
		268 : factor, .num, mod
		269 : factor, .real, mod
		270 : factor, .true, mod
		271 : factor, .false, mod
		272 : loc, .loc [ bool ], <
		273 : loc, .id, <
		274 : loc, .loc [ bool ], <=
		275 : loc, .id, <=
		276 : loc, .loc [ bool ], >=
		277 : loc, .id, >=
		278 : loc, .loc [ bool ], >
		279 : loc, .id, >
		280 : loc, .loc [ bool ], ]
		281 : loc, .id, ]
		282 : loc, .loc [ bool ], or
		283 : loc, .id, or
		284 : loc, .loc [ bool ], and
		285 : loc, .id, and
		286 : loc, .loc [ bool ], eq
		287 : loc, .id, eq
		288 : loc, .loc [ bool ], neq
		289 : loc, .id, neq
		290 : loc, .loc [ bool ], +
		291 : loc, .id, +
		292 : loc, .loc [ bool ], -
		293 : loc, .id, -
		294 : loc, .loc [ bool ], *
		295 : loc, .id, *
		296 : loc, .loc [ bool ], /
		297 : loc, .id, /
		298 : loc, .loc [ bool ], mod
		299 : loc, .id, mod
		300 : loc, .loc [ bool ], [
		301 : loc, .id, [
	[131] 
		0 : equality, equality eq .rel, ]
		1 : equality, equality eq .rel, or
		2 : equality, equality eq .rel, and
		3 : equality, equality eq .rel, eq
		4 : equality, equality eq .rel, neq
		5 : rel, .expr < expr, ]
		6 : rel, .expr <= expr, ]
		7 : rel, .expr >= expr, ]
		8 : rel, .expr > expr, ]
		9 : rel, .expr, ]
		10 : rel, .expr < expr, or
		11 : rel, .expr <= expr, or
		12 : rel, .expr >= expr, or
		13 : rel, .expr > expr, or
		14 : rel, .expr, or
		15 : rel, .expr < expr, and
		16 : rel, .expr <= expr, and
		17 : rel, .expr >= expr, and
		18 : rel, .expr > expr, and
		19 : rel, .expr, and
		20 : rel, .expr < expr, eq
		21 : rel, .expr <= expr, eq
		22 : rel, .expr >= expr, eq
		23 : rel, .expr > expr, eq
		24 : rel, .expr, eq
		25 : rel, .expr < expr, neq
		26 : rel, .expr <= expr, neq
		27 : rel, .expr >= expr, neq
		28 : rel, .expr > expr, neq
		29 : rel, .expr, neq
		30 : expr, .expr + term, <
		31 : expr, .expr - term, <
		32 : expr, .term, <
		33 : expr, .expr + term, <=
		34 : expr, .expr - term, <=
		35 : expr, .term, <=
		36 : expr, .expr + term, >=
		37 : expr, .expr - term, >=
		38 : expr, .term, >=
		39 : expr, .expr + term, >
		40 : expr, .expr - term, >
		41 : expr, .term, >
		42 : expr, .expr + term, ]
		43 : expr, .expr - term, ]
		44 : expr, .term, ]
		45 : expr, .expr + term, or
		46 : expr, .expr - term, or
		47 : expr, .term, or
		48 : expr, .expr + term, and
		49 : expr, .expr - term, and
		50 : expr, .term, and
		51 : expr, .expr + term, eq
		52 : expr, .expr - term, eq
		53 : expr, .term, eq
		54 : expr, .expr + term, neq
		55 : expr, .expr - term, neq
		56 : expr, .term, neq
		57 : expr, .expr + term, +
		58 : expr, .expr - term, +
		59 : expr, .term, +
		60 : expr, .expr + term, -
		61 : expr, .expr - term, -
		62 : expr, .term, -
		63 : term, .term * unary, <
		64 : term, .term / unary, <
		65 : term, .term mod unary, <
		66 : term, .unary, <
		67 : term, .term * unary, <=
		68 : term, .term / unary, <=
		69 : term, .term mod unary, <=
		70 : term, .unary, <=
		71 : term, .term * unary, >=
		72 : term, .term / unary, >=
		73 : term, .term mod unary, >=
		74 : term, .unary, >=
		75 : term, .term * unary, >
		76 : term, .term / unary, >
		77 : term, .term mod unary, >
		78 : term, .unary, >
		79 : term, .term * unary, ]
		80 : term, .term / unary, ]
		81 : term, .term mod unary, ]
		82 : term, .unary, ]
		83 : term, .term * unary, or
		84 : term, .term / unary, or
		85 : term, .term mod unary, or
		86 : term, .unary, or
		87 : term, .term * unary, and
		88 : term, .term / unary, and
		89 : term, .term mod unary, and
		90 : term, .unary, and
		91 : term, .term * unary, eq
		92 : term, .term / unary, eq
		93 : term, .term mod unary, eq
		94 : term, .unary, eq
		95 : term, .term * unary, neq
		96 : term, .term / unary, neq
		97 : term, .term mod unary, neq
		98 : term, .unary, neq
		99 : term, .term * unary, +
		100 : term, .term / unary, +
		101 : term, .term mod unary, +
		102 : term, .unary, +
		103 : term, .term * unary, -
		104 : term, .term / unary, -
		105 : term, .term mod unary, -
		106 : term, .unary, -
		107 : term, .term * unary, *
		108 : term, .term / unary, *
		109 : term, .term mod unary, *
		110 : term, .unary, *
		111 : term, .term * unary, /
		112 : term, .term / unary, /
		113 : term, .term mod unary, /
		114 : term, .unary, /
		115 : term, .term * unary, mod
		116 : term, .term / unary, mod
		117 : term, .term mod unary, mod
		118 : term, .unary, mod
		119 : unary, .! unary, <
		120 : unary, .- unary, <
		121 : unary, .factor, <
		122 : unary, .! unary, <=
		123 : unary, .- unary, <=
		124 : unary, .factor, <=
		125 : unary, .! unary, >=
		126 : unary, .- unary, >=
		127 : unary, .factor, >=
		128 : unary, .! unary, >
		129 : unary, .- unary, >
		130 : unary, .factor, >
		131 : unary, .! unary, ]
		132 : unary, .- unary, ]
		133 : unary, .factor, ]
		134 : unary, .! unary, or
		135 : unary, .- unary, or
		136 : unary, .factor, or
		137 : unary, .! unary, and
		138 : unary, .- unary, and
		139 : unary, .factor, and
		140 : unary, .! unary, eq
		141 : unary, .- unary, eq
		142 : unary, .factor, eq
		143 : unary, .! unary, neq
		144 : unary, .- unary, neq
		145 : unary, .factor, neq
		146 : unary, .! unary, +
		147 : unary, .- unary, +
		148 : unary, .factor, +
		149 : unary, .! unary, -
		150 : unary, .- unary, -
		151 : unary, .factor, -
		152 : unary, .! unary, *
		153 : unary, .- unary, *
		154 : unary, .factor, *
		155 : unary, .! unary, /
		156 : unary, .- unary, /
		157 : unary, .factor, /
		158 : unary, .! unary, mod
		159 : unary, .- unary, mod
		160 : unary, .factor, mod
		161 : factor, .( bool ), <
		162 : factor, .loc, <
		163 : factor, .id ( args ), <
		164 : factor, .num, <
		165 : factor, .real, <
		166 : factor, .true, <
		167 : factor, .false, <
		168 : factor, .( bool ), <=
		169 : factor, .loc, <=
		170 : factor, .id ( args ), <=
		171 : factor, .num, <=
		172 : factor, .real, <=
		173 : factor, .true, <=
		174 : factor, .false, <=
		175 : factor, .( bool ), >=
		176 : factor, .loc, >=
		177 : factor, .id ( args ), >=
		178 : factor, .num, >=
		179 : factor, .real, >=
		180 : factor, .true, >=
		181 : factor, .false, >=
		182 : factor, .( bool ), >
		183 : factor, .loc, >
		184 : factor, .id ( args ), >
		185 : factor, .num, >
		186 : factor, .real, >
		187 : factor, .true, >
		188 : factor, .false, >
		189 : factor, .( bool ), ]
		190 : factor, .loc, ]
		191 : factor, .id ( args ), ]
		192 : factor, .num, ]
		193 : factor, .real, ]
		194 : factor, .true, ]
		195 : factor, .false, ]
		196 : factor, .( bool ), or
		197 : factor, .loc, or
		198 : factor, .id ( args ), or
		199 : factor, .num, or
		200 : factor, .real, or
		201 : factor, .true, or
		202 : factor, .false, or
		203 : factor, .( bool ), and
		204 : factor, .loc, and
		205 : factor, .id ( args ), and
		206 : factor, .num, and
		207 : factor, .real, and
		208 : factor, .true, and
		209 : factor, .false, and
		210 : factor, .( bool ), eq
		211 : factor, .loc, eq
		212 : factor, .id ( args ), eq
		213 : factor, .num, eq
		214 : factor, .real, eq
		215 : factor, .true, eq
		216 : factor, .false, eq
		217 : factor, .( bool ), neq
		218 : factor, .loc, neq
		219 : factor, .id ( args ), neq
		220 : factor, .num, neq
		221 : factor, .real, neq
		222 : factor, .true, neq
		223 : factor, .false, neq
		224 : factor, .( bool ), +
		225 : factor, .loc, +
		226 : factor, .id ( args ), +
		227 : factor, .num, +
		228 : factor, .real, +
		229 : factor, .true, +
		230 : factor, .false, +
		231 : factor, .( bool ), -
		232 : factor, .loc, -
		233 : factor, .id ( args ), -
		234 : factor, .num, -
		235 : factor, .real, -
		236 : factor, .true, -
		237 : factor, .false, -
		238 : factor, .( bool ), *
		239 : factor, .loc, *
		240 : factor, .id ( args ), *
		241 : factor, .num, *
		242 : factor, .real, *
		243 : factor, .true, *
		244 : factor, .false, *
		245 : factor, .( bool ), /
		246 : factor, .loc, /
		247 : factor, .id ( args ), /
		248 : factor, .num, /
		249 : factor, .real, /
		250 : factor, .true, /
		251 : factor, .false, /
		252 : factor, .( bool ), mod
		253 : factor, .loc, mod
		254 : factor, .id ( args ), mod
		255 : factor, .num, mod
		256 : factor, .real, mod
		257 : factor, .true, mod
		258 : factor, .false, mod
		259 : loc, .loc [ bool ], <
		260 : loc, .id, <
		261 : loc, .loc [ bool ], <=
		262 : loc, .id, <=
		263 : loc, .loc [ bool ], >=
		264 : loc, .id, >=
		265 : loc, .loc [ bool ], >
		266 : loc, .id, >
		267 : loc, .loc [ bool ], ]
		268 : loc, .id, ]
		269 : loc, .loc [ bool ], or
		270 : loc, .id, or
		271 : loc, .loc [ bool ], and
		272 : loc, .id, and
		273 : loc, .loc [ bool ], eq
		274 : loc, .id, eq
		275 : loc, .loc [ bool ], neq
		276 : loc, .id, neq
		277 : loc, .loc [ bool ], +
		278 : loc, .id, +
		279 : loc, .loc [ bool ], -
		280 : loc, .id, -
		281 : loc, .loc [ bool ], *
		282 : loc, .id, *
		283 : loc, .loc [ bool ], /
		284 : loc, .id, /
		285 : loc, .loc [ bool ], mod
		286 : loc, .id, mod
		287 : loc, .loc [ bool ], [
		288 : loc, .id, [
	[132] 
		0 : equality, equality neq .rel, ]
		1 : equality, equality neq .rel, or
		2 : equality, equality neq .rel, and
		3 : equality, equality neq .rel, eq
		4 : equality, equality neq .rel, neq
		5 : rel, .expr < expr, ]
		6 : rel, .expr <= expr, ]
		7 : rel, .expr >= expr, ]
		8 : rel, .expr > expr, ]
		9 : rel, .expr, ]
		10 : rel, .expr < expr, or
		11 : rel, .expr <= expr, or
		12 : rel, .expr >= expr, or
		13 : rel, .expr > expr, or
		14 : rel, .expr, or
		15 : rel, .expr < expr, and
		16 : rel, .expr <= expr, and
		17 : rel, .expr >= expr, and
		18 : rel, .expr > expr, and
		19 : rel, .expr, and
		20 : rel, .expr < expr, eq
		21 : rel, .expr <= expr, eq
		22 : rel, .expr >= expr, eq
		23 : rel, .expr > expr, eq
		24 : rel, .expr, eq
		25 : rel, .expr < expr, neq
		26 : rel, .expr <= expr, neq
		27 : rel, .expr >= expr, neq
		28 : rel, .expr > expr, neq
		29 : rel, .expr, neq
		30 : expr, .expr + term, <
		31 : expr, .expr - term, <
		32 : expr, .term, <
		33 : expr, .expr + term, <=
		34 : expr, .expr - term, <=
		35 : expr, .term, <=
		36 : expr, .expr + term, >=
		37 : expr, .expr - term, >=
		38 : expr, .term, >=
		39 : expr, .expr + term, >
		40 : expr, .expr - term, >
		41 : expr, .term, >
		42 : expr, .expr + term, ]
		43 : expr, .expr - term, ]
		44 : expr, .term, ]
		45 : expr, .expr + term, or
		46 : expr, .expr - term, or
		47 : expr, .term, or
		48 : expr, .expr + term, and
		49 : expr, .expr - term, and
		50 : expr, .term, and
		51 : expr, .expr + term, eq
		52 : expr, .expr - term, eq
		53 : expr, .term, eq
		54 : expr, .expr + term, neq
		55 : expr, .expr - term, neq
		56 : expr, .term, neq
		57 : expr, .expr + term, +
		58 : expr, .expr - term, +
		59 : expr, .term, +
		60 : expr, .expr + term, -
		61 : expr, .expr - term, -
		62 : expr, .term, -
		63 : term, .term * unary, <
		64 : term, .term / unary, <
		65 : term, .term mod unary, <
		66 : term, .unary, <
		67 : term, .term * unary, <=
		68 : term, .term / unary, <=
		69 : term, .term mod unary, <=
		70 : term, .unary, <=
		71 : term, .term * unary, >=
		72 : term, .term / unary, >=
		73 : term, .term mod unary, >=
		74 : term, .unary, >=
		75 : term, .term * unary, >
		76 : term, .term / unary, >
		77 : term, .term mod unary, >
		78 : term, .unary, >
		79 : term, .term * unary, ]
		80 : term, .term / unary, ]
		81 : term, .term mod unary, ]
		82 : term, .unary, ]
		83 : term, .term * unary, or
		84 : term, .term / unary, or
		85 : term, .term mod unary, or
		86 : term, .unary, or
		87 : term, .term * unary, and
		88 : term, .term / unary, and
		89 : term, .term mod unary, and
		90 : term, .unary, and
		91 : term, .term * unary, eq
		92 : term, .term / unary, eq
		93 : term, .term mod unary, eq
		94 : term, .unary, eq
		95 : term, .term * unary, neq
		96 : term, .term / unary, neq
		97 : term, .term mod unary, neq
		98 : term, .unary, neq
		99 : term, .term * unary, +
		100 : term, .term / unary, +
		101 : term, .term mod unary, +
		102 : term, .unary, +
		103 : term, .term * unary, -
		104 : term, .term / unary, -
		105 : term, .term mod unary, -
		106 : term, .unary, -
		107 : term, .term * unary, *
		108 : term, .term / unary, *
		109 : term, .term mod unary, *
		110 : term, .unary, *
		111 : term, .term * unary, /
		112 : term, .term / unary, /
		113 : term, .term mod unary, /
		114 : term, .unary, /
		115 : term, .term * unary, mod
		116 : term, .term / unary, mod
		117 : term, .term mod unary, mod
		118 : term, .unary, mod
		119 : unary, .! unary, <
		120 : unary, .- unary, <
		121 : unary, .factor, <
		122 : unary, .! unary, <=
		123 : unary, .- unary, <=
		124 : unary, .factor, <=
		125 : unary, .! unary, >=
		126 : unary, .- unary, >=
		127 : unary, .factor, >=
		128 : unary, .! unary, >
		129 : unary, .- unary, >
		130 : unary, .factor, >
		131 : unary, .! unary, ]
		132 : unary, .- unary, ]
		133 : unary, .factor, ]
		134 : unary, .! unary, or
		135 : unary, .- unary, or
		136 : unary, .factor, or
		137 : unary, .! unary, and
		138 : unary, .- unary, and
		139 : unary, .factor, and
		140 : unary, .! unary, eq
		141 : unary, .- unary, eq
		142 : unary, .factor, eq
		143 : unary, .! unary, neq
		144 : unary, .- unary, neq
		145 : unary, .factor, neq
		146 : unary, .! unary, +
		147 : unary, .- unary, +
		148 : unary, .factor, +
		149 : unary, .! unary, -
		150 : unary, .- unary, -
		151 : unary, .factor, -
		152 : unary, .! unary, *
		153 : unary, .- unary, *
		154 : unary, .factor, *
		155 : unary, .! unary, /
		156 : unary, .- unary, /
		157 : unary, .factor, /
		158 : unary, .! unary, mod
		159 : unary, .- unary, mod
		160 : unary, .factor, mod
		161 : factor, .( bool ), <
		162 : factor, .loc, <
		163 : factor, .id ( args ), <
		164 : factor, .num, <
		165 : factor, .real, <
		166 : factor, .true, <
		167 : factor, .false, <
		168 : factor, .( bool ), <=
		169 : factor, .loc, <=
		170 : factor, .id ( args ), <=
		171 : factor, .num, <=
		172 : factor, .real, <=
		173 : factor, .true, <=
		174 : factor, .false, <=
		175 : factor, .( bool ), >=
		176 : factor, .loc, >=
		177 : factor, .id ( args ), >=
		178 : factor, .num, >=
		179 : factor, .real, >=
		180 : factor, .true, >=
		181 : factor, .false, >=
		182 : factor, .( bool ), >
		183 : factor, .loc, >
		184 : factor, .id ( args ), >
		185 : factor, .num, >
		186 : factor, .real, >
		187 : factor, .true, >
		188 : factor, .false, >
		189 : factor, .( bool ), ]
		190 : factor, .loc, ]
		191 : factor, .id ( args ), ]
		192 : factor, .num, ]
		193 : factor, .real, ]
		194 : factor, .true, ]
		195 : factor, .false, ]
		196 : factor, .( bool ), or
		197 : factor, .loc, or
		198 : factor, .id ( args ), or
		199 : factor, .num, or
		200 : factor, .real, or
		201 : factor, .true, or
		202 : factor, .false, or
		203 : factor, .( bool ), and
		204 : factor, .loc, and
		205 : factor, .id ( args ), and
		206 : factor, .num, and
		207 : factor, .real, and
		208 : factor, .true, and
		209 : factor, .false, and
		210 : factor, .( bool ), eq
		211 : factor, .loc, eq
		212 : factor, .id ( args ), eq
		213 : factor, .num, eq
		214 : factor, .real, eq
		215 : factor, .true, eq
		216 : factor, .false, eq
		217 : factor, .( bool ), neq
		218 : factor, .loc, neq
		219 : factor, .id ( args ), neq
		220 : factor, .num, neq
		221 : factor, .real, neq
		222 : factor, .true, neq
		223 : factor, .false, neq
		224 : factor, .( bool ), +
		225 : factor, .loc, +
		226 : factor, .id ( args ), +
		227 : factor, .num, +
		228 : factor, .real, +
		229 : factor, .true, +
		230 : factor, .false, +
		231 : factor, .( bool ), -
		232 : factor, .loc, -
		233 : factor, .id ( args ), -
		234 : factor, .num, -
		235 : factor, .real, -
		236 : factor, .true, -
		237 : factor, .false, -
		238 : factor, .( bool ), *
		239 : factor, .loc, *
		240 : factor, .id ( args ), *
		241 : factor, .num, *
		242 : factor, .real, *
		243 : factor, .true, *
		244 : factor, .false, *
		245 : factor, .( bool ), /
		246 : factor, .loc, /
		247 : factor, .id ( args ), /
		248 : factor, .num, /
		249 : factor, .real, /
		250 : factor, .true, /
		251 : factor, .false, /
		252 : factor, .( bool ), mod
		253 : factor, .loc, mod
		254 : factor, .id ( args ), mod
		255 : factor, .num, mod
		256 : factor, .real, mod
		257 : factor, .true, mod
		258 : factor, .false, mod
		259 : loc, .loc [ bool ], <
		260 : loc, .id, <
		261 : loc, .loc [ bool ], <=
		262 : loc, .id, <=
		263 : loc, .loc [ bool ], >=
		264 : loc, .id, >=
		265 : loc, .loc [ bool ], >
		266 : loc, .id, >
		267 : loc, .loc [ bool ], ]
		268 : loc, .id, ]
		269 : loc, .loc [ bool ], or
		270 : loc, .id, or
		271 : loc, .loc [ bool ], and
		272 : loc, .id, and
		273 : loc, .loc [ bool ], eq
		274 : loc, .id, eq
		275 : loc, .loc [ bool ], neq
		276 : loc, .id, neq
		277 : loc, .loc [ bool ], +
		278 : loc, .id, +
		279 : loc, .loc [ bool ], -
		280 : loc, .id, -
		281 : loc, .loc [ bool ], *
		282 : loc, .id, *
		283 : loc, .loc [ bool ], /
		284 : loc, .id, /
		285 : loc, .loc [ bool ], mod
		286 : loc, .id, mod
		287 : loc, .loc [ bool ], [
		288 : loc, .id, [
	[133] 
		0 : rel, expr < .expr, ]
		1 : rel, expr < .expr, or
		2 : rel, expr < .expr, and
		3 : rel, expr < .expr, eq
		4 : rel, expr < .expr, neq
		5 : expr, .expr + term, ]
		6 : expr, .expr - term, ]
		7 : expr, .term, ]
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, ]
		27 : term, .term / unary, ]
		28 : term, .term mod unary, ]
		29 : term, .unary, ]
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, ]
		67 : unary, .- unary, ]
		68 : unary, .factor, ]
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), ]
		97 : factor, .loc, ]
		98 : factor, .id ( args ), ]
		99 : factor, .num, ]
		100 : factor, .real, ]
		101 : factor, .true, ]
		102 : factor, .false, ]
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], ]
		167 : loc, .id, ]
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[134] 
		0 : rel, expr <= .expr, ]
		1 : rel, expr <= .expr, or
		2 : rel, expr <= .expr, and
		3 : rel, expr <= .expr, eq
		4 : rel, expr <= .expr, neq
		5 : expr, .expr + term, ]
		6 : expr, .expr - term, ]
		7 : expr, .term, ]
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, ]
		27 : term, .term / unary, ]
		28 : term, .term mod unary, ]
		29 : term, .unary, ]
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, ]
		67 : unary, .- unary, ]
		68 : unary, .factor, ]
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), ]
		97 : factor, .loc, ]
		98 : factor, .id ( args ), ]
		99 : factor, .num, ]
		100 : factor, .real, ]
		101 : factor, .true, ]
		102 : factor, .false, ]
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], ]
		167 : loc, .id, ]
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[135] 
		0 : rel, expr >= .expr, ]
		1 : rel, expr >= .expr, or
		2 : rel, expr >= .expr, and
		3 : rel, expr >= .expr, eq
		4 : rel, expr >= .expr, neq
		5 : expr, .expr + term, ]
		6 : expr, .expr - term, ]
		7 : expr, .term, ]
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, ]
		27 : term, .term / unary, ]
		28 : term, .term mod unary, ]
		29 : term, .unary, ]
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, ]
		67 : unary, .- unary, ]
		68 : unary, .factor, ]
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), ]
		97 : factor, .loc, ]
		98 : factor, .id ( args ), ]
		99 : factor, .num, ]
		100 : factor, .real, ]
		101 : factor, .true, ]
		102 : factor, .false, ]
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], ]
		167 : loc, .id, ]
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[136] 
		0 : rel, expr > .expr, ]
		1 : rel, expr > .expr, or
		2 : rel, expr > .expr, and
		3 : rel, expr > .expr, eq
		4 : rel, expr > .expr, neq
		5 : expr, .expr + term, ]
		6 : expr, .expr - term, ]
		7 : expr, .term, ]
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, ]
		27 : term, .term / unary, ]
		28 : term, .term mod unary, ]
		29 : term, .unary, ]
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, ]
		67 : unary, .- unary, ]
		68 : unary, .factor, ]
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), ]
		97 : factor, .loc, ]
		98 : factor, .id ( args ), ]
		99 : factor, .num, ]
		100 : factor, .real, ]
		101 : factor, .true, ]
		102 : factor, .false, ]
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], ]
		167 : loc, .id, ]
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[137] 
		0 : expr, expr + .term, <
		1 : expr, expr + .term, <=
		2 : expr, expr + .term, >=
		3 : expr, expr + .term, >
		4 : expr, expr + .term, ]
		5 : expr, expr + .term, or
		6 : expr, expr + .term, and
		7 : expr, expr + .term, eq
		8 : expr, expr + .term, neq
		9 : expr, expr + .term, +
		10 : expr, expr + .term, -
		11 : term, .term * unary, <
		12 : term, .term / unary, <
		13 : term, .term mod unary, <
		14 : term, .unary, <
		15 : term, .term * unary, <=
		16 : term, .term / unary, <=
		17 : term, .term mod unary, <=
		18 : term, .unary, <=
		19 : term, .term * unary, >=
		20 : term, .term / unary, >=
		21 : term, .term mod unary, >=
		22 : term, .unary, >=
		23 : term, .term * unary, >
		24 : term, .term / unary, >
		25 : term, .term mod unary, >
		26 : term, .unary, >
		27 : term, .term * unary, ]
		28 : term, .term / unary, ]
		29 : term, .term mod unary, ]
		30 : term, .unary, ]
		31 : term, .term * unary, or
		32 : term, .term / unary, or
		33 : term, .term mod unary, or
		34 : term, .unary, or
		35 : term, .term * unary, and
		36 : term, .term / unary, and
		37 : term, .term mod unary, and
		38 : term, .unary, and
		39 : term, .term * unary, eq
		40 : term, .term / unary, eq
		41 : term, .term mod unary, eq
		42 : term, .unary, eq
		43 : term, .term * unary, neq
		44 : term, .term / unary, neq
		45 : term, .term mod unary, neq
		46 : term, .unary, neq
		47 : term, .term * unary, +
		48 : term, .term / unary, +
		49 : term, .term mod unary, +
		50 : term, .unary, +
		51 : term, .term * unary, -
		52 : term, .term / unary, -
		53 : term, .term mod unary, -
		54 : term, .unary, -
		55 : term, .term * unary, *
		56 : term, .term / unary, *
		57 : term, .term mod unary, *
		58 : term, .unary, *
		59 : term, .term * unary, /
		60 : term, .term / unary, /
		61 : term, .term mod unary, /
		62 : term, .unary, /
		63 : term, .term * unary, mod
		64 : term, .term / unary, mod
		65 : term, .term mod unary, mod
		66 : term, .unary, mod
		67 : unary, .! unary, <
		68 : unary, .- unary, <
		69 : unary, .factor, <
		70 : unary, .! unary, <=
		71 : unary, .- unary, <=
		72 : unary, .factor, <=
		73 : unary, .! unary, >=
		74 : unary, .- unary, >=
		75 : unary, .factor, >=
		76 : unary, .! unary, >
		77 : unary, .- unary, >
		78 : unary, .factor, >
		79 : unary, .! unary, ]
		80 : unary, .- unary, ]
		81 : unary, .factor, ]
		82 : unary, .! unary, or
		83 : unary, .- unary, or
		84 : unary, .factor, or
		85 : unary, .! unary, and
		86 : unary, .- unary, and
		87 : unary, .factor, and
		88 : unary, .! unary, eq
		89 : unary, .- unary, eq
		90 : unary, .factor, eq
		91 : unary, .! unary, neq
		92 : unary, .- unary, neq
		93 : unary, .factor, neq
		94 : unary, .! unary, +
		95 : unary, .- unary, +
		96 : unary, .factor, +
		97 : unary, .! unary, -
		98 : unary, .- unary, -
		99 : unary, .factor, -
		100 : unary, .! unary, *
		101 : unary, .- unary, *
		102 : unary, .factor, *
		103 : unary, .! unary, /
		104 : unary, .- unary, /
		105 : unary, .factor, /
		106 : unary, .! unary, mod
		107 : unary, .- unary, mod
		108 : unary, .factor, mod
		109 : factor, .( bool ), <
		110 : factor, .loc, <
		111 : factor, .id ( args ), <
		112 : factor, .num, <
		113 : factor, .real, <
		114 : factor, .true, <
		115 : factor, .false, <
		116 : factor, .( bool ), <=
		117 : factor, .loc, <=
		118 : factor, .id ( args ), <=
		119 : factor, .num, <=
		120 : factor, .real, <=
		121 : factor, .true, <=
		122 : factor, .false, <=
		123 : factor, .( bool ), >=
		124 : factor, .loc, >=
		125 : factor, .id ( args ), >=
		126 : factor, .num, >=
		127 : factor, .real, >=
		128 : factor, .true, >=
		129 : factor, .false, >=
		130 : factor, .( bool ), >
		131 : factor, .loc, >
		132 : factor, .id ( args ), >
		133 : factor, .num, >
		134 : factor, .real, >
		135 : factor, .true, >
		136 : factor, .false, >
		137 : factor, .( bool ), ]
		138 : factor, .loc, ]
		139 : factor, .id ( args ), ]
		140 : factor, .num, ]
		141 : factor, .real, ]
		142 : factor, .true, ]
		143 : factor, .false, ]
		144 : factor, .( bool ), or
		145 : factor, .loc, or
		146 : factor, .id ( args ), or
		147 : factor, .num, or
		148 : factor, .real, or
		149 : factor, .true, or
		150 : factor, .false, or
		151 : factor, .( bool ), and
		152 : factor, .loc, and
		153 : factor, .id ( args ), and
		154 : factor, .num, and
		155 : factor, .real, and
		156 : factor, .true, and
		157 : factor, .false, and
		158 : factor, .( bool ), eq
		159 : factor, .loc, eq
		160 : factor, .id ( args ), eq
		161 : factor, .num, eq
		162 : factor, .real, eq
		163 : factor, .true, eq
		164 : factor, .false, eq
		165 : factor, .( bool ), neq
		166 : factor, .loc, neq
		167 : factor, .id ( args ), neq
		168 : factor, .num, neq
		169 : factor, .real, neq
		170 : factor, .true, neq
		171 : factor, .false, neq
		172 : factor, .( bool ), +
		173 : factor, .loc, +
		174 : factor, .id ( args ), +
		175 : factor, .num, +
		176 : factor, .real, +
		177 : factor, .true, +
		178 : factor, .false, +
		179 : factor, .( bool ), -
		180 : factor, .loc, -
		181 : factor, .id ( args ), -
		182 : factor, .num, -
		183 : factor, .real, -
		184 : factor, .true, -
		185 : factor, .false, -
		186 : factor, .( bool ), *
		187 : factor, .loc, *
		188 : factor, .id ( args ), *
		189 : factor, .num, *
		190 : factor, .real, *
		191 : factor, .true, *
		192 : factor, .false, *
		193 : factor, .( bool ), /
		194 : factor, .loc, /
		195 : factor, .id ( args ), /
		196 : factor, .num, /
		197 : factor, .real, /
		198 : factor, .true, /
		199 : factor, .false, /
		200 : factor, .( bool ), mod
		201 : factor, .loc, mod
		202 : factor, .id ( args ), mod
		203 : factor, .num, mod
		204 : factor, .real, mod
		205 : factor, .true, mod
		206 : factor, .false, mod
		207 : loc, .loc [ bool ], <
		208 : loc, .id, <
		209 : loc, .loc [ bool ], <=
		210 : loc, .id, <=
		211 : loc, .loc [ bool ], >=
		212 : loc, .id, >=
		213 : loc, .loc [ bool ], >
		214 : loc, .id, >
		215 : loc, .loc [ bool ], ]
		216 : loc, .id, ]
		217 : loc, .loc [ bool ], or
		218 : loc, .id, or
		219 : loc, .loc [ bool ], and
		220 : loc, .id, and
		221 : loc, .loc [ bool ], eq
		222 : loc, .id, eq
		223 : loc, .loc [ bool ], neq
		224 : loc, .id, neq
		225 : loc, .loc [ bool ], +
		226 : loc, .id, +
		227 : loc, .loc [ bool ], -
		228 : loc, .id, -
		229 : loc, .loc [ bool ], *
		230 : loc, .id, *
		231 : loc, .loc [ bool ], /
		232 : loc, .id, /
		233 : loc, .loc [ bool ], mod
		234 : loc, .id, mod
		235 : loc, .loc [ bool ], [
		236 : loc, .id, [
	[138] 
		0 : expr, expr - .term, <
		1 : expr, expr - .term, <=
		2 : expr, expr - .term, >=
		3 : expr, expr - .term, >
		4 : expr, expr - .term, ]
		5 : expr, expr - .term, or
		6 : expr, expr - .term, and
		7 : expr, expr - .term, eq
		8 : expr, expr - .term, neq
		9 : expr, expr - .term, +
		10 : expr, expr - .term, -
		11 : term, .term * unary, <
		12 : term, .term / unary, <
		13 : term, .term mod unary, <
		14 : term, .unary, <
		15 : term, .term * unary, <=
		16 : term, .term / unary, <=
		17 : term, .term mod unary, <=
		18 : term, .unary, <=
		19 : term, .term * unary, >=
		20 : term, .term / unary, >=
		21 : term, .term mod unary, >=
		22 : term, .unary, >=
		23 : term, .term * unary, >
		24 : term, .term / unary, >
		25 : term, .term mod unary, >
		26 : term, .unary, >
		27 : term, .term * unary, ]
		28 : term, .term / unary, ]
		29 : term, .term mod unary, ]
		30 : term, .unary, ]
		31 : term, .term * unary, or
		32 : term, .term / unary, or
		33 : term, .term mod unary, or
		34 : term, .unary, or
		35 : term, .term * unary, and
		36 : term, .term / unary, and
		37 : term, .term mod unary, and
		38 : term, .unary, and
		39 : term, .term * unary, eq
		40 : term, .term / unary, eq
		41 : term, .term mod unary, eq
		42 : term, .unary, eq
		43 : term, .term * unary, neq
		44 : term, .term / unary, neq
		45 : term, .term mod unary, neq
		46 : term, .unary, neq
		47 : term, .term * unary, +
		48 : term, .term / unary, +
		49 : term, .term mod unary, +
		50 : term, .unary, +
		51 : term, .term * unary, -
		52 : term, .term / unary, -
		53 : term, .term mod unary, -
		54 : term, .unary, -
		55 : term, .term * unary, *
		56 : term, .term / unary, *
		57 : term, .term mod unary, *
		58 : term, .unary, *
		59 : term, .term * unary, /
		60 : term, .term / unary, /
		61 : term, .term mod unary, /
		62 : term, .unary, /
		63 : term, .term * unary, mod
		64 : term, .term / unary, mod
		65 : term, .term mod unary, mod
		66 : term, .unary, mod
		67 : unary, .! unary, <
		68 : unary, .- unary, <
		69 : unary, .factor, <
		70 : unary, .! unary, <=
		71 : unary, .- unary, <=
		72 : unary, .factor, <=
		73 : unary, .! unary, >=
		74 : unary, .- unary, >=
		75 : unary, .factor, >=
		76 : unary, .! unary, >
		77 : unary, .- unary, >
		78 : unary, .factor, >
		79 : unary, .! unary, ]
		80 : unary, .- unary, ]
		81 : unary, .factor, ]
		82 : unary, .! unary, or
		83 : unary, .- unary, or
		84 : unary, .factor, or
		85 : unary, .! unary, and
		86 : unary, .- unary, and
		87 : unary, .factor, and
		88 : unary, .! unary, eq
		89 : unary, .- unary, eq
		90 : unary, .factor, eq
		91 : unary, .! unary, neq
		92 : unary, .- unary, neq
		93 : unary, .factor, neq
		94 : unary, .! unary, +
		95 : unary, .- unary, +
		96 : unary, .factor, +
		97 : unary, .! unary, -
		98 : unary, .- unary, -
		99 : unary, .factor, -
		100 : unary, .! unary, *
		101 : unary, .- unary, *
		102 : unary, .factor, *
		103 : unary, .! unary, /
		104 : unary, .- unary, /
		105 : unary, .factor, /
		106 : unary, .! unary, mod
		107 : unary, .- unary, mod
		108 : unary, .factor, mod
		109 : factor, .( bool ), <
		110 : factor, .loc, <
		111 : factor, .id ( args ), <
		112 : factor, .num, <
		113 : factor, .real, <
		114 : factor, .true, <
		115 : factor, .false, <
		116 : factor, .( bool ), <=
		117 : factor, .loc, <=
		118 : factor, .id ( args ), <=
		119 : factor, .num, <=
		120 : factor, .real, <=
		121 : factor, .true, <=
		122 : factor, .false, <=
		123 : factor, .( bool ), >=
		124 : factor, .loc, >=
		125 : factor, .id ( args ), >=
		126 : factor, .num, >=
		127 : factor, .real, >=
		128 : factor, .true, >=
		129 : factor, .false, >=
		130 : factor, .( bool ), >
		131 : factor, .loc, >
		132 : factor, .id ( args ), >
		133 : factor, .num, >
		134 : factor, .real, >
		135 : factor, .true, >
		136 : factor, .false, >
		137 : factor, .( bool ), ]
		138 : factor, .loc, ]
		139 : factor, .id ( args ), ]
		140 : factor, .num, ]
		141 : factor, .real, ]
		142 : factor, .true, ]
		143 : factor, .false, ]
		144 : factor, .( bool ), or
		145 : factor, .loc, or
		146 : factor, .id ( args ), or
		147 : factor, .num, or
		148 : factor, .real, or
		149 : factor, .true, or
		150 : factor, .false, or
		151 : factor, .( bool ), and
		152 : factor, .loc, and
		153 : factor, .id ( args ), and
		154 : factor, .num, and
		155 : factor, .real, and
		156 : factor, .true, and
		157 : factor, .false, and
		158 : factor, .( bool ), eq
		159 : factor, .loc, eq
		160 : factor, .id ( args ), eq
		161 : factor, .num, eq
		162 : factor, .real, eq
		163 : factor, .true, eq
		164 : factor, .false, eq
		165 : factor, .( bool ), neq
		166 : factor, .loc, neq
		167 : factor, .id ( args ), neq
		168 : factor, .num, neq
		169 : factor, .real, neq
		170 : factor, .true, neq
		171 : factor, .false, neq
		172 : factor, .( bool ), +
		173 : factor, .loc, +
		174 : factor, .id ( args ), +
		175 : factor, .num, +
		176 : factor, .real, +
		177 : factor, .true, +
		178 : factor, .false, +
		179 : factor, .( bool ), -
		180 : factor, .loc, -
		181 : factor, .id ( args ), -
		182 : factor, .num, -
		183 : factor, .real, -
		184 : factor, .true, -
		185 : factor, .false, -
		186 : factor, .( bool ), *
		187 : factor, .loc, *
		188 : factor, .id ( args ), *
		189 : factor, .num, *
		190 : factor, .real, *
		191 : factor, .true, *
		192 : factor, .false, *
		193 : factor, .( bool ), /
		194 : factor, .loc, /
		195 : factor, .id ( args ), /
		196 : factor, .num, /
		197 : factor, .real, /
		198 : factor, .true, /
		199 : factor, .false, /
		200 : factor, .( bool ), mod
		201 : factor, .loc, mod
		202 : factor, .id ( args ), mod
		203 : factor, .num, mod
		204 : factor, .real, mod
		205 : factor, .true, mod
		206 : factor, .false, mod
		207 : loc, .loc [ bool ], <
		208 : loc, .id, <
		209 : loc, .loc [ bool ], <=
		210 : loc, .id, <=
		211 : loc, .loc [ bool ], >=
		212 : loc, .id, >=
		213 : loc, .loc [ bool ], >
		214 : loc, .id, >
		215 : loc, .loc [ bool ], ]
		216 : loc, .id, ]
		217 : loc, .loc [ bool ], or
		218 : loc, .id, or
		219 : loc, .loc [ bool ], and
		220 : loc, .id, and
		221 : loc, .loc [ bool ], eq
		222 : loc, .id, eq
		223 : loc, .loc [ bool ], neq
		224 : loc, .id, neq
		225 : loc, .loc [ bool ], +
		226 : loc, .id, +
		227 : loc, .loc [ bool ], -
		228 : loc, .id, -
		229 : loc, .loc [ bool ], *
		230 : loc, .id, *
		231 : loc, .loc [ bool ], /
		232 : loc, .id, /
		233 : loc, .loc [ bool ], mod
		234 : loc, .id, mod
		235 : loc, .loc [ bool ], [
		236 : loc, .id, [
	[139] 
		0 : term, term * .unary, <
		1 : term, term * .unary, <=
		2 : term, term * .unary, >=
		3 : term, term * .unary, >
		4 : term, term * .unary, ]
		5 : term, term * .unary, or
		6 : term, term * .unary, and
		7 : term, term * .unary, eq
		8 : term, term * .unary, neq
		9 : term, term * .unary, +
		10 : term, term * .unary, -
		11 : term, term * .unary, *
		12 : term, term * .unary, /
		13 : term, term * .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, ]
		27 : unary, .- unary, ]
		28 : unary, .factor, ]
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), ]
		85 : factor, .loc, ]
		86 : factor, .id ( args ), ]
		87 : factor, .num, ]
		88 : factor, .real, ]
		89 : factor, .true, ]
		90 : factor, .false, ]
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], ]
		163 : loc, .id, ]
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[140] 
		0 : term, term / .unary, <
		1 : term, term / .unary, <=
		2 : term, term / .unary, >=
		3 : term, term / .unary, >
		4 : term, term / .unary, ]
		5 : term, term / .unary, or
		6 : term, term / .unary, and
		7 : term, term / .unary, eq
		8 : term, term / .unary, neq
		9 : term, term / .unary, +
		10 : term, term / .unary, -
		11 : term, term / .unary, *
		12 : term, term / .unary, /
		13 : term, term / .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, ]
		27 : unary, .- unary, ]
		28 : unary, .factor, ]
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), ]
		85 : factor, .loc, ]
		86 : factor, .id ( args ), ]
		87 : factor, .num, ]
		88 : factor, .real, ]
		89 : factor, .true, ]
		90 : factor, .false, ]
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], ]
		163 : loc, .id, ]
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[141] 
		0 : term, term mod .unary, <
		1 : term, term mod .unary, <=
		2 : term, term mod .unary, >=
		3 : term, term mod .unary, >
		4 : term, term mod .unary, ]
		5 : term, term mod .unary, or
		6 : term, term mod .unary, and
		7 : term, term mod .unary, eq
		8 : term, term mod .unary, neq
		9 : term, term mod .unary, +
		10 : term, term mod .unary, -
		11 : term, term mod .unary, *
		12 : term, term mod .unary, /
		13 : term, term mod .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, ]
		27 : unary, .- unary, ]
		28 : unary, .factor, ]
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), ]
		85 : factor, .loc, ]
		86 : factor, .id ( args ), ]
		87 : factor, .num, ]
		88 : factor, .real, ]
		89 : factor, .true, ]
		90 : factor, .false, ]
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], ]
		163 : loc, .id, ]
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[142] 
		0 : factor, id ( .args ), <
		1 : factor, id ( .args ), <=
		2 : factor, id ( .args ), >=
		3 : factor, id ( .args ), >
		4 : factor, id ( .args ), ]
		5 : factor, id ( .args ), or
		6 : factor, id ( .args ), and
		7 : factor, id ( .args ), eq
		8 : factor, id ( .args ), neq
		9 : factor, id ( .args ), +
		10 : factor, id ( .args ), -
		11 : factor, id ( .args ), *
		12 : factor, id ( .args ), /
		13 : factor, id ( .args ), mod
		14 : args, .args , arg, )
		15 : args, .arg, )
		16 : args, ., )
		17 : args, .args , arg, ,
		18 : args, .arg, ,
		19 : args, ., ,
		20 : arg, .loc, )
		21 : arg, .bool, )
		22 : arg, .loc, ,
		23 : arg, .bool, ,
		24 : loc, .loc [ bool ], )
		25 : loc, .id, )
		26 : bool, .bool or join, )
		27 : bool, .join, )
		28 : loc, .loc [ bool ], ,
		29 : loc, .id, ,
		30 : bool, .bool or join, ,
		31 : bool, .join, ,
		32 : loc, .loc [ bool ], [
		33 : loc, .id, [
		34 : bool, .bool or join, or
		35 : bool, .join, or
		36 : join, .join and equality, )
		37 : join, .equality, )
		38 : join, .join and equality, ,
		39 : join, .equality, ,
		40 : join, .join and equality, or
		41 : join, .equality, or
		42 : join, .join and equality, and
		43 : join, .equality, and
		44 : equality, .equality eq rel, )
		45 : equality, .equality neq rel, )
		46 : equality, .rel, )
		47 : equality, .equality eq rel, ,
		48 : equality, .equality neq rel, ,
		49 : equality, .rel, ,
		50 : equality, .equality eq rel, or
		51 : equality, .equality neq rel, or
		52 : equality, .rel, or
		53 : equality, .equality eq rel, and
		54 : equality, .equality neq rel, and
		55 : equality, .rel, and
		56 : equality, .equality eq rel, eq
		57 : equality, .equality neq rel, eq
		58 : equality, .rel, eq
		59 : equality, .equality eq rel, neq
		60 : equality, .equality neq rel, neq
		61 : equality, .rel, neq
		62 : rel, .expr < expr, )
		63 : rel, .expr <= expr, )
		64 : rel, .expr >= expr, )
		65 : rel, .expr > expr, )
		66 : rel, .expr, )
		67 : rel, .expr < expr, ,
		68 : rel, .expr <= expr, ,
		69 : rel, .expr >= expr, ,
		70 : rel, .expr > expr, ,
		71 : rel, .expr, ,
		72 : rel, .expr < expr, or
		73 : rel, .expr <= expr, or
		74 : rel, .expr >= expr, or
		75 : rel, .expr > expr, or
		76 : rel, .expr, or
		77 : rel, .expr < expr, and
		78 : rel, .expr <= expr, and
		79 : rel, .expr >= expr, and
		80 : rel, .expr > expr, and
		81 : rel, .expr, and
		82 : rel, .expr < expr, eq
		83 : rel, .expr <= expr, eq
		84 : rel, .expr >= expr, eq
		85 : rel, .expr > expr, eq
		86 : rel, .expr, eq
		87 : rel, .expr < expr, neq
		88 : rel, .expr <= expr, neq
		89 : rel, .expr >= expr, neq
		90 : rel, .expr > expr, neq
		91 : rel, .expr, neq
		92 : expr, .expr + term, <
		93 : expr, .expr - term, <
		94 : expr, .term, <
		95 : expr, .expr + term, <=
		96 : expr, .expr - term, <=
		97 : expr, .term, <=
		98 : expr, .expr + term, >=
		99 : expr, .expr - term, >=
		100 : expr, .term, >=
		101 : expr, .expr + term, >
		102 : expr, .expr - term, >
		103 : expr, .term, >
		104 : expr, .expr + term, )
		105 : expr, .expr - term, )
		106 : expr, .term, )
		107 : expr, .expr + term, ,
		108 : expr, .expr - term, ,
		109 : expr, .term, ,
		110 : expr, .expr + term, or
		111 : expr, .expr - term, or
		112 : expr, .term, or
		113 : expr, .expr + term, and
		114 : expr, .expr - term, and
		115 : expr, .term, and
		116 : expr, .expr + term, eq
		117 : expr, .expr - term, eq
		118 : expr, .term, eq
		119 : expr, .expr + term, neq
		120 : expr, .expr - term, neq
		121 : expr, .term, neq
		122 : expr, .expr + term, +
		123 : expr, .expr - term, +
		124 : expr, .term, +
		125 : expr, .expr + term, -
		126 : expr, .expr - term, -
		127 : expr, .term, -
		128 : term, .term * unary, <
		129 : term, .term / unary, <
		130 : term, .term mod unary, <
		131 : term, .unary, <
		132 : term, .term * unary, <=
		133 : term, .term / unary, <=
		134 : term, .term mod unary, <=
		135 : term, .unary, <=
		136 : term, .term * unary, >=
		137 : term, .term / unary, >=
		138 : term, .term mod unary, >=
		139 : term, .unary, >=
		140 : term, .term * unary, >
		141 : term, .term / unary, >
		142 : term, .term mod unary, >
		143 : term, .unary, >
		144 : term, .term * unary, )
		145 : term, .term / unary, )
		146 : term, .term mod unary, )
		147 : term, .unary, )
		148 : term, .term * unary, ,
		149 : term, .term / unary, ,
		150 : term, .term mod unary, ,
		151 : term, .unary, ,
		152 : term, .term * unary, or
		153 : term, .term / unary, or
		154 : term, .term mod unary, or
		155 : term, .unary, or
		156 : term, .term * unary, and
		157 : term, .term / unary, and
		158 : term, .term mod unary, and
		159 : term, .unary, and
		160 : term, .term * unary, eq
		161 : term, .term / unary, eq
		162 : term, .term mod unary, eq
		163 : term, .unary, eq
		164 : term, .term * unary, neq
		165 : term, .term / unary, neq
		166 : term, .term mod unary, neq
		167 : term, .unary, neq
		168 : term, .term * unary, +
		169 : term, .term / unary, +
		170 : term, .term mod unary, +
		171 : term, .unary, +
		172 : term, .term * unary, -
		173 : term, .term / unary, -
		174 : term, .term mod unary, -
		175 : term, .unary, -
		176 : term, .term * unary, *
		177 : term, .term / unary, *
		178 : term, .term mod unary, *
		179 : term, .unary, *
		180 : term, .term * unary, /
		181 : term, .term / unary, /
		182 : term, .term mod unary, /
		183 : term, .unary, /
		184 : term, .term * unary, mod
		185 : term, .term / unary, mod
		186 : term, .term mod unary, mod
		187 : term, .unary, mod
		188 : unary, .! unary, <
		189 : unary, .- unary, <
		190 : unary, .factor, <
		191 : unary, .! unary, <=
		192 : unary, .- unary, <=
		193 : unary, .factor, <=
		194 : unary, .! unary, >=
		195 : unary, .- unary, >=
		196 : unary, .factor, >=
		197 : unary, .! unary, >
		198 : unary, .- unary, >
		199 : unary, .factor, >
		200 : unary, .! unary, )
		201 : unary, .- unary, )
		202 : unary, .factor, )
		203 : unary, .! unary, ,
		204 : unary, .- unary, ,
		205 : unary, .factor, ,
		206 : unary, .! unary, or
		207 : unary, .- unary, or
		208 : unary, .factor, or
		209 : unary, .! unary, and
		210 : unary, .- unary, and
		211 : unary, .factor, and
		212 : unary, .! unary, eq
		213 : unary, .- unary, eq
		214 : unary, .factor, eq
		215 : unary, .! unary, neq
		216 : unary, .- unary, neq
		217 : unary, .factor, neq
		218 : unary, .! unary, +
		219 : unary, .- unary, +
		220 : unary, .factor, +
		221 : unary, .! unary, -
		222 : unary, .- unary, -
		223 : unary, .factor, -
		224 : unary, .! unary, *
		225 : unary, .- unary, *
		226 : unary, .factor, *
		227 : unary, .! unary, /
		228 : unary, .- unary, /
		229 : unary, .factor, /
		230 : unary, .! unary, mod
		231 : unary, .- unary, mod
		232 : unary, .factor, mod
		233 : factor, .( bool ), <
		234 : factor, .loc, <
		235 : factor, .id ( args ), <
		236 : factor, .num, <
		237 : factor, .real, <
		238 : factor, .true, <
		239 : factor, .false, <
		240 : factor, .( bool ), <=
		241 : factor, .loc, <=
		242 : factor, .id ( args ), <=
		243 : factor, .num, <=
		244 : factor, .real, <=
		245 : factor, .true, <=
		246 : factor, .false, <=
		247 : factor, .( bool ), >=
		248 : factor, .loc, >=
		249 : factor, .id ( args ), >=
		250 : factor, .num, >=
		251 : factor, .real, >=
		252 : factor, .true, >=
		253 : factor, .false, >=
		254 : factor, .( bool ), >
		255 : factor, .loc, >
		256 : factor, .id ( args ), >
		257 : factor, .num, >
		258 : factor, .real, >
		259 : factor, .true, >
		260 : factor, .false, >
		261 : factor, .( bool ), )
		262 : factor, .loc, )
		263 : factor, .id ( args ), )
		264 : factor, .num, )
		265 : factor, .real, )
		266 : factor, .true, )
		267 : factor, .false, )
		268 : factor, .( bool ), ,
		269 : factor, .loc, ,
		270 : factor, .id ( args ), ,
		271 : factor, .num, ,
		272 : factor, .real, ,
		273 : factor, .true, ,
		274 : factor, .false, ,
		275 : factor, .( bool ), or
		276 : factor, .loc, or
		277 : factor, .id ( args ), or
		278 : factor, .num, or
		279 : factor, .real, or
		280 : factor, .true, or
		281 : factor, .false, or
		282 : factor, .( bool ), and
		283 : factor, .loc, and
		284 : factor, .id ( args ), and
		285 : factor, .num, and
		286 : factor, .real, and
		287 : factor, .true, and
		288 : factor, .false, and
		289 : factor, .( bool ), eq
		290 : factor, .loc, eq
		291 : factor, .id ( args ), eq
		292 : factor, .num, eq
		293 : factor, .real, eq
		294 : factor, .true, eq
		295 : factor, .false, eq
		296 : factor, .( bool ), neq
		297 : factor, .loc, neq
		298 : factor, .id ( args ), neq
		299 : factor, .num, neq
		300 : factor, .real, neq
		301 : factor, .true, neq
		302 : factor, .false, neq
		303 : factor, .( bool ), +
		304 : factor, .loc, +
		305 : factor, .id ( args ), +
		306 : factor, .num, +
		307 : factor, .real, +
		308 : factor, .true, +
		309 : factor, .false, +
		310 : factor, .( bool ), -
		311 : factor, .loc, -
		312 : factor, .id ( args ), -
		313 : factor, .num, -
		314 : factor, .real, -
		315 : factor, .true, -
		316 : factor, .false, -
		317 : factor, .( bool ), *
		318 : factor, .loc, *
		319 : factor, .id ( args ), *
		320 : factor, .num, *
		321 : factor, .real, *
		322 : factor, .true, *
		323 : factor, .false, *
		324 : factor, .( bool ), /
		325 : factor, .loc, /
		326 : factor, .id ( args ), /
		327 : factor, .num, /
		328 : factor, .real, /
		329 : factor, .true, /
		330 : factor, .false, /
		331 : factor, .( bool ), mod
		332 : factor, .loc, mod
		333 : factor, .id ( args ), mod
		334 : factor, .num, mod
		335 : factor, .real, mod
		336 : factor, .true, mod
		337 : factor, .false, mod
		338 : loc, .loc [ bool ], <
		339 : loc, .id, <
		340 : loc, .loc [ bool ], <=
		341 : loc, .id, <=
		342 : loc, .loc [ bool ], >=
		343 : loc, .id, >=
		344 : loc, .loc [ bool ], >
		345 : loc, .id, >
		346 : loc, .loc [ bool ], or
		347 : loc, .id, or
		348 : loc, .loc [ bool ], and
		349 : loc, .id, and
		350 : loc, .loc [ bool ], eq
		351 : loc, .id, eq
		352 : loc, .loc [ bool ], neq
		353 : loc, .id, neq
		354 : loc, .loc [ bool ], +
		355 : loc, .id, +
		356 : loc, .loc [ bool ], -
		357 : loc, .id, -
		358 : loc, .loc [ bool ], *
		359 : loc, .id, *
		360 : loc, .loc [ bool ], /
		361 : loc, .id, /
		362 : loc, .loc [ bool ], mod
		363 : loc, .id, mod
	[143] 
		0 : factor, ( bool .), <
		1 : factor, ( bool .), <=
		2 : factor, ( bool .), >=
		3 : factor, ( bool .), >
		4 : factor, ( bool .), ]
		5 : factor, ( bool .), or
		6 : factor, ( bool .), and
		7 : factor, ( bool .), eq
		8 : factor, ( bool .), neq
		9 : factor, ( bool .), +
		10 : factor, ( bool .), -
		11 : factor, ( bool .), *
		12 : factor, ( bool .), /
		13 : factor, ( bool .), mod
		14 : bool, bool .or join, )
		15 : bool, bool .or join, or
	[144] 
		0 : unary, - unary ., <
		1 : unary, - unary ., <=
		2 : unary, - unary ., >=
		3 : unary, - unary ., >
		4 : unary, - unary ., ]
		5 : unary, - unary ., or
		6 : unary, - unary ., and
		7 : unary, - unary ., eq
		8 : unary, - unary ., neq
		9 : unary, - unary ., +
		10 : unary, - unary ., -
		11 : unary, - unary ., *
		12 : unary, - unary ., /
		13 : unary, - unary ., mod
	[145] 
		0 : unary, ! unary ., <
		1 : unary, ! unary ., <=
		2 : unary, ! unary ., >=
		3 : unary, ! unary ., >
		4 : unary, ! unary ., ]
		5 : unary, ! unary ., or
		6 : unary, ! unary ., and
		7 : unary, ! unary ., eq
		8 : unary, ! unary ., neq
		9 : unary, ! unary ., +
		10 : unary, ! unary ., -
		11 : unary, ! unary ., *
		12 : unary, ! unary ., /
		13 : unary, ! unary ., mod
	[146] 
		0 : loc, loc [ .bool ], <
		1 : loc, loc [ .bool ], <=
		2 : loc, loc [ .bool ], >=
		3 : loc, loc [ .bool ], >
		4 : loc, loc [ .bool ], ;
		5 : loc, loc [ .bool ], or
		6 : loc, loc [ .bool ], and
		7 : loc, loc [ .bool ], eq
		8 : loc, loc [ .bool ], neq
		9 : loc, loc [ .bool ], +
		10 : loc, loc [ .bool ], -
		11 : loc, loc [ .bool ], *
		12 : loc, loc [ .bool ], /
		13 : loc, loc [ .bool ], mod
		14 : loc, loc [ .bool ], [
		15 : bool, .bool or join, ]
		16 : bool, .join, ]
		17 : bool, .bool or join, or
		18 : bool, .join, or
		19 : join, .join and equality, ]
		20 : join, .equality, ]
		21 : join, .join and equality, or
		22 : join, .equality, or
		23 : join, .join and equality, and
		24 : join, .equality, and
		25 : equality, .equality eq rel, ]
		26 : equality, .equality neq rel, ]
		27 : equality, .rel, ]
		28 : equality, .equality eq rel, or
		29 : equality, .equality neq rel, or
		30 : equality, .rel, or
		31 : equality, .equality eq rel, and
		32 : equality, .equality neq rel, and
		33 : equality, .rel, and
		34 : equality, .equality eq rel, eq
		35 : equality, .equality neq rel, eq
		36 : equality, .rel, eq
		37 : equality, .equality eq rel, neq
		38 : equality, .equality neq rel, neq
		39 : equality, .rel, neq
		40 : rel, .expr < expr, ]
		41 : rel, .expr <= expr, ]
		42 : rel, .expr >= expr, ]
		43 : rel, .expr > expr, ]
		44 : rel, .expr, ]
		45 : rel, .expr < expr, or
		46 : rel, .expr <= expr, or
		47 : rel, .expr >= expr, or
		48 : rel, .expr > expr, or
		49 : rel, .expr, or
		50 : rel, .expr < expr, and
		51 : rel, .expr <= expr, and
		52 : rel, .expr >= expr, and
		53 : rel, .expr > expr, and
		54 : rel, .expr, and
		55 : rel, .expr < expr, eq
		56 : rel, .expr <= expr, eq
		57 : rel, .expr >= expr, eq
		58 : rel, .expr > expr, eq
		59 : rel, .expr, eq
		60 : rel, .expr < expr, neq
		61 : rel, .expr <= expr, neq
		62 : rel, .expr >= expr, neq
		63 : rel, .expr > expr, neq
		64 : rel, .expr, neq
		65 : expr, .expr + term, <
		66 : expr, .expr - term, <
		67 : expr, .term, <
		68 : expr, .expr + term, <=
		69 : expr, .expr - term, <=
		70 : expr, .term, <=
		71 : expr, .expr + term, >=
		72 : expr, .expr - term, >=
		73 : expr, .term, >=
		74 : expr, .expr + term, >
		75 : expr, .expr - term, >
		76 : expr, .term, >
		77 : expr, .expr + term, ]
		78 : expr, .expr - term, ]
		79 : expr, .term, ]
		80 : expr, .expr + term, or
		81 : expr, .expr - term, or
		82 : expr, .term, or
		83 : expr, .expr + term, and
		84 : expr, .expr - term, and
		85 : expr, .term, and
		86 : expr, .expr + term, eq
		87 : expr, .expr - term, eq
		88 : expr, .term, eq
		89 : expr, .expr + term, neq
		90 : expr, .expr - term, neq
		91 : expr, .term, neq
		92 : expr, .expr + term, +
		93 : expr, .expr - term, +
		94 : expr, .term, +
		95 : expr, .expr + term, -
		96 : expr, .expr - term, -
		97 : expr, .term, -
		98 : term, .term * unary, <
		99 : term, .term / unary, <
		100 : term, .term mod unary, <
		101 : term, .unary, <
		102 : term, .term * unary, <=
		103 : term, .term / unary, <=
		104 : term, .term mod unary, <=
		105 : term, .unary, <=
		106 : term, .term * unary, >=
		107 : term, .term / unary, >=
		108 : term, .term mod unary, >=
		109 : term, .unary, >=
		110 : term, .term * unary, >
		111 : term, .term / unary, >
		112 : term, .term mod unary, >
		113 : term, .unary, >
		114 : term, .term * unary, ]
		115 : term, .term / unary, ]
		116 : term, .term mod unary, ]
		117 : term, .unary, ]
		118 : term, .term * unary, or
		119 : term, .term / unary, or
		120 : term, .term mod unary, or
		121 : term, .unary, or
		122 : term, .term * unary, and
		123 : term, .term / unary, and
		124 : term, .term mod unary, and
		125 : term, .unary, and
		126 : term, .term * unary, eq
		127 : term, .term / unary, eq
		128 : term, .term mod unary, eq
		129 : term, .unary, eq
		130 : term, .term * unary, neq
		131 : term, .term / unary, neq
		132 : term, .term mod unary, neq
		133 : term, .unary, neq
		134 : term, .term * unary, +
		135 : term, .term / unary, +
		136 : term, .term mod unary, +
		137 : term, .unary, +
		138 : term, .term * unary, -
		139 : term, .term / unary, -
		140 : term, .term mod unary, -
		141 : term, .unary, -
		142 : term, .term * unary, *
		143 : term, .term / unary, *
		144 : term, .term mod unary, *
		145 : term, .unary, *
		146 : term, .term * unary, /
		147 : term, .term / unary, /
		148 : term, .term mod unary, /
		149 : term, .unary, /
		150 : term, .term * unary, mod
		151 : term, .term / unary, mod
		152 : term, .term mod unary, mod
		153 : term, .unary, mod
		154 : unary, .! unary, <
		155 : unary, .- unary, <
		156 : unary, .factor, <
		157 : unary, .! unary, <=
		158 : unary, .- unary, <=
		159 : unary, .factor, <=
		160 : unary, .! unary, >=
		161 : unary, .- unary, >=
		162 : unary, .factor, >=
		163 : unary, .! unary, >
		164 : unary, .- unary, >
		165 : unary, .factor, >
		166 : unary, .! unary, ]
		167 : unary, .- unary, ]
		168 : unary, .factor, ]
		169 : unary, .! unary, or
		170 : unary, .- unary, or
		171 : unary, .factor, or
		172 : unary, .! unary, and
		173 : unary, .- unary, and
		174 : unary, .factor, and
		175 : unary, .! unary, eq
		176 : unary, .- unary, eq
		177 : unary, .factor, eq
		178 : unary, .! unary, neq
		179 : unary, .- unary, neq
		180 : unary, .factor, neq
		181 : unary, .! unary, +
		182 : unary, .- unary, +
		183 : unary, .factor, +
		184 : unary, .! unary, -
		185 : unary, .- unary, -
		186 : unary, .factor, -
		187 : unary, .! unary, *
		188 : unary, .- unary, *
		189 : unary, .factor, *
		190 : unary, .! unary, /
		191 : unary, .- unary, /
		192 : unary, .factor, /
		193 : unary, .! unary, mod
		194 : unary, .- unary, mod
		195 : unary, .factor, mod
		196 : factor, .( bool ), <
		197 : factor, .loc, <
		198 : factor, .id ( args ), <
		199 : factor, .num, <
		200 : factor, .real, <
		201 : factor, .true, <
		202 : factor, .false, <
		203 : factor, .( bool ), <=
		204 : factor, .loc, <=
		205 : factor, .id ( args ), <=
		206 : factor, .num, <=
		207 : factor, .real, <=
		208 : factor, .true, <=
		209 : factor, .false, <=
		210 : factor, .( bool ), >=
		211 : factor, .loc, >=
		212 : factor, .id ( args ), >=
		213 : factor, .num, >=
		214 : factor, .real, >=
		215 : factor, .true, >=
		216 : factor, .false, >=
		217 : factor, .( bool ), >
		218 : factor, .loc, >
		219 : factor, .id ( args ), >
		220 : factor, .num, >
		221 : factor, .real, >
		222 : factor, .true, >
		223 : factor, .false, >
		224 : factor, .( bool ), ]
		225 : factor, .loc, ]
		226 : factor, .id ( args ), ]
		227 : factor, .num, ]
		228 : factor, .real, ]
		229 : factor, .true, ]
		230 : factor, .false, ]
		231 : factor, .( bool ), or
		232 : factor, .loc, or
		233 : factor, .id ( args ), or
		234 : factor, .num, or
		235 : factor, .real, or
		236 : factor, .true, or
		237 : factor, .false, or
		238 : factor, .( bool ), and
		239 : factor, .loc, and
		240 : factor, .id ( args ), and
		241 : factor, .num, and
		242 : factor, .real, and
		243 : factor, .true, and
		244 : factor, .false, and
		245 : factor, .( bool ), eq
		246 : factor, .loc, eq
		247 : factor, .id ( args ), eq
		248 : factor, .num, eq
		249 : factor, .real, eq
		250 : factor, .true, eq
		251 : factor, .false, eq
		252 : factor, .( bool ), neq
		253 : factor, .loc, neq
		254 : factor, .id ( args ), neq
		255 : factor, .num, neq
		256 : factor, .real, neq
		257 : factor, .true, neq
		258 : factor, .false, neq
		259 : factor, .( bool ), +
		260 : factor, .loc, +
		261 : factor, .id ( args ), +
		262 : factor, .num, +
		263 : factor, .real, +
		264 : factor, .true, +
		265 : factor, .false, +
		266 : factor, .( bool ), -
		267 : factor, .loc, -
		268 : factor, .id ( args ), -
		269 : factor, .num, -
		270 : factor, .real, -
		271 : factor, .true, -
		272 : factor, .false, -
		273 : factor, .( bool ), *
		274 : factor, .loc, *
		275 : factor, .id ( args ), *
		276 : factor, .num, *
		277 : factor, .real, *
		278 : factor, .true, *
		279 : factor, .false, *
		280 : factor, .( bool ), /
		281 : factor, .loc, /
		282 : factor, .id ( args ), /
		283 : factor, .num, /
		284 : factor, .real, /
		285 : factor, .true, /
		286 : factor, .false, /
		287 : factor, .( bool ), mod
		288 : factor, .loc, mod
		289 : factor, .id ( args ), mod
		290 : factor, .num, mod
		291 : factor, .real, mod
		292 : factor, .true, mod
		293 : factor, .false, mod
		294 : loc, .loc [ bool ], <
		295 : loc, .id, <
		296 : loc, .loc [ bool ], <=
		297 : loc, .id, <=
		298 : loc, .loc [ bool ], >=
		299 : loc, .id, >=
		300 : loc, .loc [ bool ], >
		301 : loc, .id, >
		302 : loc, .loc [ bool ], ]
		303 : loc, .id, ]
		304 : loc, .loc [ bool ], or
		305 : loc, .id, or
		306 : loc, .loc [ bool ], and
		307 : loc, .id, and
		308 : loc, .loc [ bool ], eq
		309 : loc, .id, eq
		310 : loc, .loc [ bool ], neq
		311 : loc, .id, neq
		312 : loc, .loc [ bool ], +
		313 : loc, .id, +
		314 : loc, .loc [ bool ], -
		315 : loc, .id, -
		316 : loc, .loc [ bool ], *
		317 : loc, .id, *
		318 : loc, .loc [ bool ], /
		319 : loc, .id, /
		320 : loc, .loc [ bool ], mod
		321 : loc, .id, mod
		322 : loc, .loc [ bool ], [
		323 : loc, .id, [
	[147] 
		0 : stmt, loc = bool ; ., }
		1 : stmt, loc = bool ; ., [
		2 : stmt, loc = bool ; ., id
		3 : stmt, loc = bool ; ., if
		4 : stmt, loc = bool ; ., while
		5 : stmt, loc = bool ; ., do
		6 : stmt, loc = bool ; ., return
		7 : stmt, loc = bool ; ., {
		8 : stmt, loc = bool ; ., else
	[148] 
		0 : block, { decls stmts } ., }
		1 : block, { decls stmts } ., [
		2 : block, { decls stmts } ., id
		3 : block, { decls stmts } ., if
		4 : block, { decls stmts } ., while
		5 : block, { decls stmts } ., do
		6 : block, { decls stmts } ., return
		7 : block, { decls stmts } ., {
		8 : block, { decls stmts } ., else
	[149] 
		0 : loc, loc [ .bool ], <
		1 : loc, loc [ .bool ], <=
		2 : loc, loc [ .bool ], >=
		3 : loc, loc [ .bool ], >
		4 : loc, loc [ .bool ], )
		5 : loc, loc [ .bool ], or
		6 : loc, loc [ .bool ], and
		7 : loc, loc [ .bool ], eq
		8 : loc, loc [ .bool ], neq
		9 : loc, loc [ .bool ], +
		10 : loc, loc [ .bool ], -
		11 : loc, loc [ .bool ], *
		12 : loc, loc [ .bool ], /
		13 : loc, loc [ .bool ], mod
		14 : loc, loc [ .bool ], [
		15 : bool, .bool or join, ]
		16 : bool, .join, ]
		17 : bool, .bool or join, or
		18 : bool, .join, or
		19 : join, .join and equality, ]
		20 : join, .equality, ]
		21 : join, .join and equality, or
		22 : join, .equality, or
		23 : join, .join and equality, and
		24 : join, .equality, and
		25 : equality, .equality eq rel, ]
		26 : equality, .equality neq rel, ]
		27 : equality, .rel, ]
		28 : equality, .equality eq rel, or
		29 : equality, .equality neq rel, or
		30 : equality, .rel, or
		31 : equality, .equality eq rel, and
		32 : equality, .equality neq rel, and
		33 : equality, .rel, and
		34 : equality, .equality eq rel, eq
		35 : equality, .equality neq rel, eq
		36 : equality, .rel, eq
		37 : equality, .equality eq rel, neq
		38 : equality, .equality neq rel, neq
		39 : equality, .rel, neq
		40 : rel, .expr < expr, ]
		41 : rel, .expr <= expr, ]
		42 : rel, .expr >= expr, ]
		43 : rel, .expr > expr, ]
		44 : rel, .expr, ]
		45 : rel, .expr < expr, or
		46 : rel, .expr <= expr, or
		47 : rel, .expr >= expr, or
		48 : rel, .expr > expr, or
		49 : rel, .expr, or
		50 : rel, .expr < expr, and
		51 : rel, .expr <= expr, and
		52 : rel, .expr >= expr, and
		53 : rel, .expr > expr, and
		54 : rel, .expr, and
		55 : rel, .expr < expr, eq
		56 : rel, .expr <= expr, eq
		57 : rel, .expr >= expr, eq
		58 : rel, .expr > expr, eq
		59 : rel, .expr, eq
		60 : rel, .expr < expr, neq
		61 : rel, .expr <= expr, neq
		62 : rel, .expr >= expr, neq
		63 : rel, .expr > expr, neq
		64 : rel, .expr, neq
		65 : expr, .expr + term, <
		66 : expr, .expr - term, <
		67 : expr, .term, <
		68 : expr, .expr + term, <=
		69 : expr, .expr - term, <=
		70 : expr, .term, <=
		71 : expr, .expr + term, >=
		72 : expr, .expr - term, >=
		73 : expr, .term, >=
		74 : expr, .expr + term, >
		75 : expr, .expr - term, >
		76 : expr, .term, >
		77 : expr, .expr + term, ]
		78 : expr, .expr - term, ]
		79 : expr, .term, ]
		80 : expr, .expr + term, or
		81 : expr, .expr - term, or
		82 : expr, .term, or
		83 : expr, .expr + term, and
		84 : expr, .expr - term, and
		85 : expr, .term, and
		86 : expr, .expr + term, eq
		87 : expr, .expr - term, eq
		88 : expr, .term, eq
		89 : expr, .expr + term, neq
		90 : expr, .expr - term, neq
		91 : expr, .term, neq
		92 : expr, .expr + term, +
		93 : expr, .expr - term, +
		94 : expr, .term, +
		95 : expr, .expr + term, -
		96 : expr, .expr - term, -
		97 : expr, .term, -
		98 : term, .term * unary, <
		99 : term, .term / unary, <
		100 : term, .term mod unary, <
		101 : term, .unary, <
		102 : term, .term * unary, <=
		103 : term, .term / unary, <=
		104 : term, .term mod unary, <=
		105 : term, .unary, <=
		106 : term, .term * unary, >=
		107 : term, .term / unary, >=
		108 : term, .term mod unary, >=
		109 : term, .unary, >=
		110 : term, .term * unary, >
		111 : term, .term / unary, >
		112 : term, .term mod unary, >
		113 : term, .unary, >
		114 : term, .term * unary, ]
		115 : term, .term / unary, ]
		116 : term, .term mod unary, ]
		117 : term, .unary, ]
		118 : term, .term * unary, or
		119 : term, .term / unary, or
		120 : term, .term mod unary, or
		121 : term, .unary, or
		122 : term, .term * unary, and
		123 : term, .term / unary, and
		124 : term, .term mod unary, and
		125 : term, .unary, and
		126 : term, .term * unary, eq
		127 : term, .term / unary, eq
		128 : term, .term mod unary, eq
		129 : term, .unary, eq
		130 : term, .term * unary, neq
		131 : term, .term / unary, neq
		132 : term, .term mod unary, neq
		133 : term, .unary, neq
		134 : term, .term * unary, +
		135 : term, .term / unary, +
		136 : term, .term mod unary, +
		137 : term, .unary, +
		138 : term, .term * unary, -
		139 : term, .term / unary, -
		140 : term, .term mod unary, -
		141 : term, .unary, -
		142 : term, .term * unary, *
		143 : term, .term / unary, *
		144 : term, .term mod unary, *
		145 : term, .unary, *
		146 : term, .term * unary, /
		147 : term, .term / unary, /
		148 : term, .term mod unary, /
		149 : term, .unary, /
		150 : term, .term * unary, mod
		151 : term, .term / unary, mod
		152 : term, .term mod unary, mod
		153 : term, .unary, mod
		154 : unary, .! unary, <
		155 : unary, .- unary, <
		156 : unary, .factor, <
		157 : unary, .! unary, <=
		158 : unary, .- unary, <=
		159 : unary, .factor, <=
		160 : unary, .! unary, >=
		161 : unary, .- unary, >=
		162 : unary, .factor, >=
		163 : unary, .! unary, >
		164 : unary, .- unary, >
		165 : unary, .factor, >
		166 : unary, .! unary, ]
		167 : unary, .- unary, ]
		168 : unary, .factor, ]
		169 : unary, .! unary, or
		170 : unary, .- unary, or
		171 : unary, .factor, or
		172 : unary, .! unary, and
		173 : unary, .- unary, and
		174 : unary, .factor, and
		175 : unary, .! unary, eq
		176 : unary, .- unary, eq
		177 : unary, .factor, eq
		178 : unary, .! unary, neq
		179 : unary, .- unary, neq
		180 : unary, .factor, neq
		181 : unary, .! unary, +
		182 : unary, .- unary, +
		183 : unary, .factor, +
		184 : unary, .! unary, -
		185 : unary, .- unary, -
		186 : unary, .factor, -
		187 : unary, .! unary, *
		188 : unary, .- unary, *
		189 : unary, .factor, *
		190 : unary, .! unary, /
		191 : unary, .- unary, /
		192 : unary, .factor, /
		193 : unary, .! unary, mod
		194 : unary, .- unary, mod
		195 : unary, .factor, mod
		196 : factor, .( bool ), <
		197 : factor, .loc, <
		198 : factor, .id ( args ), <
		199 : factor, .num, <
		200 : factor, .real, <
		201 : factor, .true, <
		202 : factor, .false, <
		203 : factor, .( bool ), <=
		204 : factor, .loc, <=
		205 : factor, .id ( args ), <=
		206 : factor, .num, <=
		207 : factor, .real, <=
		208 : factor, .true, <=
		209 : factor, .false, <=
		210 : factor, .( bool ), >=
		211 : factor, .loc, >=
		212 : factor, .id ( args ), >=
		213 : factor, .num, >=
		214 : factor, .real, >=
		215 : factor, .true, >=
		216 : factor, .false, >=
		217 : factor, .( bool ), >
		218 : factor, .loc, >
		219 : factor, .id ( args ), >
		220 : factor, .num, >
		221 : factor, .real, >
		222 : factor, .true, >
		223 : factor, .false, >
		224 : factor, .( bool ), ]
		225 : factor, .loc, ]
		226 : factor, .id ( args ), ]
		227 : factor, .num, ]
		228 : factor, .real, ]
		229 : factor, .true, ]
		230 : factor, .false, ]
		231 : factor, .( bool ), or
		232 : factor, .loc, or
		233 : factor, .id ( args ), or
		234 : factor, .num, or
		235 : factor, .real, or
		236 : factor, .true, or
		237 : factor, .false, or
		238 : factor, .( bool ), and
		239 : factor, .loc, and
		240 : factor, .id ( args ), and
		241 : factor, .num, and
		242 : factor, .real, and
		243 : factor, .true, and
		244 : factor, .false, and
		245 : factor, .( bool ), eq
		246 : factor, .loc, eq
		247 : factor, .id ( args ), eq
		248 : factor, .num, eq
		249 : factor, .real, eq
		250 : factor, .true, eq
		251 : factor, .false, eq
		252 : factor, .( bool ), neq
		253 : factor, .loc, neq
		254 : factor, .id ( args ), neq
		255 : factor, .num, neq
		256 : factor, .real, neq
		257 : factor, .true, neq
		258 : factor, .false, neq
		259 : factor, .( bool ), +
		260 : factor, .loc, +
		261 : factor, .id ( args ), +
		262 : factor, .num, +
		263 : factor, .real, +
		264 : factor, .true, +
		265 : factor, .false, +
		266 : factor, .( bool ), -
		267 : factor, .loc, -
		268 : factor, .id ( args ), -
		269 : factor, .num, -
		270 : factor, .real, -
		271 : factor, .true, -
		272 : factor, .false, -
		273 : factor, .( bool ), *
		274 : factor, .loc, *
		275 : factor, .id ( args ), *
		276 : factor, .num, *
		277 : factor, .real, *
		278 : factor, .true, *
		279 : factor, .false, *
		280 : factor, .( bool ), /
		281 : factor, .loc, /
		282 : factor, .id ( args ), /
		283 : factor, .num, /
		284 : factor, .real, /
		285 : factor, .true, /
		286 : factor, .false, /
		287 : factor, .( bool ), mod
		288 : factor, .loc, mod
		289 : factor, .id ( args ), mod
		290 : factor, .num, mod
		291 : factor, .real, mod
		292 : factor, .true, mod
		293 : factor, .false, mod
		294 : loc, .loc [ bool ], <
		295 : loc, .id, <
		296 : loc, .loc [ bool ], <=
		297 : loc, .id, <=
		298 : loc, .loc [ bool ], >=
		299 : loc, .id, >=
		300 : loc, .loc [ bool ], >
		301 : loc, .id, >
		302 : loc, .loc [ bool ], ]
		303 : loc, .id, ]
		304 : loc, .loc [ bool ], or
		305 : loc, .id, or
		306 : loc, .loc [ bool ], and
		307 : loc, .id, and
		308 : loc, .loc [ bool ], eq
		309 : loc, .id, eq
		310 : loc, .loc [ bool ], neq
		311 : loc, .id, neq
		312 : loc, .loc [ bool ], +
		313 : loc, .id, +
		314 : loc, .loc [ bool ], -
		315 : loc, .id, -
		316 : loc, .loc [ bool ], *
		317 : loc, .id, *
		318 : loc, .loc [ bool ], /
		319 : loc, .id, /
		320 : loc, .loc [ bool ], mod
		321 : loc, .id, mod
		322 : loc, .loc [ bool ], [
		323 : loc, .id, [
	[150] 
		0 : stmt, if ( bool ) .M stmt, }
		1 : stmt, if ( bool ) .M stmt else M stmt, }
		2 : stmt, if ( bool ) .M stmt, [
		3 : stmt, if ( bool ) .M stmt else M stmt, [
		4 : stmt, if ( bool ) .M stmt, id
		5 : stmt, if ( bool ) .M stmt else M stmt, id
		6 : stmt, if ( bool ) .M stmt, if
		7 : stmt, if ( bool ) .M stmt else M stmt, if
		8 : stmt, if ( bool ) .M stmt, while
		9 : stmt, if ( bool ) .M stmt else M stmt, while
		10 : stmt, if ( bool ) .M stmt, do
		11 : stmt, if ( bool ) .M stmt else M stmt, do
		12 : stmt, if ( bool ) .M stmt, return
		13 : stmt, if ( bool ) .M stmt else M stmt, return
		14 : stmt, if ( bool ) .M stmt, {
		15 : stmt, if ( bool ) .M stmt else M stmt, {
		16 : stmt, if ( bool ) .M stmt, else
		17 : stmt, if ( bool ) .M stmt else M stmt, else
		18 : M, ., [
		19 : M, ., id
		20 : M, ., if
		21 : M, ., while
		22 : M, ., do
		23 : M, ., return
		24 : M, ., {
		25 : M, ., ;
	[151] 
		0 : bool, bool or .join, )
		1 : bool, bool or .join, or
		2 : join, .join and equality, )
		3 : join, .equality, )
		4 : join, .join and equality, or
		5 : join, .equality, or
		6 : join, .join and equality, and
		7 : join, .equality, and
		8 : equality, .equality eq rel, )
		9 : equality, .equality neq rel, )
		10 : equality, .rel, )
		11 : equality, .equality eq rel, or
		12 : equality, .equality neq rel, or
		13 : equality, .rel, or
		14 : equality, .equality eq rel, and
		15 : equality, .equality neq rel, and
		16 : equality, .rel, and
		17 : equality, .equality eq rel, eq
		18 : equality, .equality neq rel, eq
		19 : equality, .rel, eq
		20 : equality, .equality eq rel, neq
		21 : equality, .equality neq rel, neq
		22 : equality, .rel, neq
		23 : rel, .expr < expr, )
		24 : rel, .expr <= expr, )
		25 : rel, .expr >= expr, )
		26 : rel, .expr > expr, )
		27 : rel, .expr, )
		28 : rel, .expr < expr, or
		29 : rel, .expr <= expr, or
		30 : rel, .expr >= expr, or
		31 : rel, .expr > expr, or
		32 : rel, .expr, or
		33 : rel, .expr < expr, and
		34 : rel, .expr <= expr, and
		35 : rel, .expr >= expr, and
		36 : rel, .expr > expr, and
		37 : rel, .expr, and
		38 : rel, .expr < expr, eq
		39 : rel, .expr <= expr, eq
		40 : rel, .expr >= expr, eq
		41 : rel, .expr > expr, eq
		42 : rel, .expr, eq
		43 : rel, .expr < expr, neq
		44 : rel, .expr <= expr, neq
		45 : rel, .expr >= expr, neq
		46 : rel, .expr > expr, neq
		47 : rel, .expr, neq
		48 : expr, .expr + term, <
		49 : expr, .expr - term, <
		50 : expr, .term, <
		51 : expr, .expr + term, <=
		52 : expr, .expr - term, <=
		53 : expr, .term, <=
		54 : expr, .expr + term, >=
		55 : expr, .expr - term, >=
		56 : expr, .term, >=
		57 : expr, .expr + term, >
		58 : expr, .expr - term, >
		59 : expr, .term, >
		60 : expr, .expr + term, )
		61 : expr, .expr - term, )
		62 : expr, .term, )
		63 : expr, .expr + term, or
		64 : expr, .expr - term, or
		65 : expr, .term, or
		66 : expr, .expr + term, and
		67 : expr, .expr - term, and
		68 : expr, .term, and
		69 : expr, .expr + term, eq
		70 : expr, .expr - term, eq
		71 : expr, .term, eq
		72 : expr, .expr + term, neq
		73 : expr, .expr - term, neq
		74 : expr, .term, neq
		75 : expr, .expr + term, +
		76 : expr, .expr - term, +
		77 : expr, .term, +
		78 : expr, .expr + term, -
		79 : expr, .expr - term, -
		80 : expr, .term, -
		81 : term, .term * unary, <
		82 : term, .term / unary, <
		83 : term, .term mod unary, <
		84 : term, .unary, <
		85 : term, .term * unary, <=
		86 : term, .term / unary, <=
		87 : term, .term mod unary, <=
		88 : term, .unary, <=
		89 : term, .term * unary, >=
		90 : term, .term / unary, >=
		91 : term, .term mod unary, >=
		92 : term, .unary, >=
		93 : term, .term * unary, >
		94 : term, .term / unary, >
		95 : term, .term mod unary, >
		96 : term, .unary, >
		97 : term, .term * unary, )
		98 : term, .term / unary, )
		99 : term, .term mod unary, )
		100 : term, .unary, )
		101 : term, .term * unary, or
		102 : term, .term / unary, or
		103 : term, .term mod unary, or
		104 : term, .unary, or
		105 : term, .term * unary, and
		106 : term, .term / unary, and
		107 : term, .term mod unary, and
		108 : term, .unary, and
		109 : term, .term * unary, eq
		110 : term, .term / unary, eq
		111 : term, .term mod unary, eq
		112 : term, .unary, eq
		113 : term, .term * unary, neq
		114 : term, .term / unary, neq
		115 : term, .term mod unary, neq
		116 : term, .unary, neq
		117 : term, .term * unary, +
		118 : term, .term / unary, +
		119 : term, .term mod unary, +
		120 : term, .unary, +
		121 : term, .term * unary, -
		122 : term, .term / unary, -
		123 : term, .term mod unary, -
		124 : term, .unary, -
		125 : term, .term * unary, *
		126 : term, .term / unary, *
		127 : term, .term mod unary, *
		128 : term, .unary, *
		129 : term, .term * unary, /
		130 : term, .term / unary, /
		131 : term, .term mod unary, /
		132 : term, .unary, /
		133 : term, .term * unary, mod
		134 : term, .term / unary, mod
		135 : term, .term mod unary, mod
		136 : term, .unary, mod
		137 : unary, .! unary, <
		138 : unary, .- unary, <
		139 : unary, .factor, <
		140 : unary, .! unary, <=
		141 : unary, .- unary, <=
		142 : unary, .factor, <=
		143 : unary, .! unary, >=
		144 : unary, .- unary, >=
		145 : unary, .factor, >=
		146 : unary, .! unary, >
		147 : unary, .- unary, >
		148 : unary, .factor, >
		149 : unary, .! unary, )
		150 : unary, .- unary, )
		151 : unary, .factor, )
		152 : unary, .! unary, or
		153 : unary, .- unary, or
		154 : unary, .factor, or
		155 : unary, .! unary, and
		156 : unary, .- unary, and
		157 : unary, .factor, and
		158 : unary, .! unary, eq
		159 : unary, .- unary, eq
		160 : unary, .factor, eq
		161 : unary, .! unary, neq
		162 : unary, .- unary, neq
		163 : unary, .factor, neq
		164 : unary, .! unary, +
		165 : unary, .- unary, +
		166 : unary, .factor, +
		167 : unary, .! unary, -
		168 : unary, .- unary, -
		169 : unary, .factor, -
		170 : unary, .! unary, *
		171 : unary, .- unary, *
		172 : unary, .factor, *
		173 : unary, .! unary, /
		174 : unary, .- unary, /
		175 : unary, .factor, /
		176 : unary, .! unary, mod
		177 : unary, .- unary, mod
		178 : unary, .factor, mod
		179 : factor, .( bool ), <
		180 : factor, .loc, <
		181 : factor, .id ( args ), <
		182 : factor, .num, <
		183 : factor, .real, <
		184 : factor, .true, <
		185 : factor, .false, <
		186 : factor, .( bool ), <=
		187 : factor, .loc, <=
		188 : factor, .id ( args ), <=
		189 : factor, .num, <=
		190 : factor, .real, <=
		191 : factor, .true, <=
		192 : factor, .false, <=
		193 : factor, .( bool ), >=
		194 : factor, .loc, >=
		195 : factor, .id ( args ), >=
		196 : factor, .num, >=
		197 : factor, .real, >=
		198 : factor, .true, >=
		199 : factor, .false, >=
		200 : factor, .( bool ), >
		201 : factor, .loc, >
		202 : factor, .id ( args ), >
		203 : factor, .num, >
		204 : factor, .real, >
		205 : factor, .true, >
		206 : factor, .false, >
		207 : factor, .( bool ), )
		208 : factor, .loc, )
		209 : factor, .id ( args ), )
		210 : factor, .num, )
		211 : factor, .real, )
		212 : factor, .true, )
		213 : factor, .false, )
		214 : factor, .( bool ), or
		215 : factor, .loc, or
		216 : factor, .id ( args ), or
		217 : factor, .num, or
		218 : factor, .real, or
		219 : factor, .true, or
		220 : factor, .false, or
		221 : factor, .( bool ), and
		222 : factor, .loc, and
		223 : factor, .id ( args ), and
		224 : factor, .num, and
		225 : factor, .real, and
		226 : factor, .true, and
		227 : factor, .false, and
		228 : factor, .( bool ), eq
		229 : factor, .loc, eq
		230 : factor, .id ( args ), eq
		231 : factor, .num, eq
		232 : factor, .real, eq
		233 : factor, .true, eq
		234 : factor, .false, eq
		235 : factor, .( bool ), neq
		236 : factor, .loc, neq
		237 : factor, .id ( args ), neq
		238 : factor, .num, neq
		239 : factor, .real, neq
		240 : factor, .true, neq
		241 : factor, .false, neq
		242 : factor, .( bool ), +
		243 : factor, .loc, +
		244 : factor, .id ( args ), +
		245 : factor, .num, +
		246 : factor, .real, +
		247 : factor, .true, +
		248 : factor, .false, +
		249 : factor, .( bool ), -
		250 : factor, .loc, -
		251 : factor, .id ( args ), -
		252 : factor, .num, -
		253 : factor, .real, -
		254 : factor, .true, -
		255 : factor, .false, -
		256 : factor, .( bool ), *
		257 : factor, .loc, *
		258 : factor, .id ( args ), *
		259 : factor, .num, *
		260 : factor, .real, *
		261 : factor, .true, *
		262 : factor, .false, *
		263 : factor, .( bool ), /
		264 : factor, .loc, /
		265 : factor, .id ( args ), /
		266 : factor, .num, /
		267 : factor, .real, /
		268 : factor, .true, /
		269 : factor, .false, /
		270 : factor, .( bool ), mod
		271 : factor, .loc, mod
		272 : factor, .id ( args ), mod
		273 : factor, .num, mod
		274 : factor, .real, mod
		275 : factor, .true, mod
		276 : factor, .false, mod
		277 : loc, .loc [ bool ], <
		278 : loc, .id, <
		279 : loc, .loc [ bool ], <=
		280 : loc, .id, <=
		281 : loc, .loc [ bool ], >=
		282 : loc, .id, >=
		283 : loc, .loc [ bool ], >
		284 : loc, .id, >
		285 : loc, .loc [ bool ], )
		286 : loc, .id, )
		287 : loc, .loc [ bool ], or
		288 : loc, .id, or
		289 : loc, .loc [ bool ], and
		290 : loc, .id, and
		291 : loc, .loc [ bool ], eq
		292 : loc, .id, eq
		293 : loc, .loc [ bool ], neq
		294 : loc, .id, neq
		295 : loc, .loc [ bool ], +
		296 : loc, .id, +
		297 : loc, .loc [ bool ], -
		298 : loc, .id, -
		299 : loc, .loc [ bool ], *
		300 : loc, .id, *
		301 : loc, .loc [ bool ], /
		302 : loc, .id, /
		303 : loc, .loc [ bool ], mod
		304 : loc, .id, mod
		305 : loc, .loc [ bool ], [
		306 : loc, .id, [
	[152] 
		0 : join, join and .equality, )
		1 : join, join and .equality, or
		2 : join, join and .equality, and
		3 : equality, .equality eq rel, )
		4 : equality, .equality neq rel, )
		5 : equality, .rel, )
		6 : equality, .equality eq rel, or
		7 : equality, .equality neq rel, or
		8 : equality, .rel, or
		9 : equality, .equality eq rel, and
		10 : equality, .equality neq rel, and
		11 : equality, .rel, and
		12 : equality, .equality eq rel, eq
		13 : equality, .equality neq rel, eq
		14 : equality, .rel, eq
		15 : equality, .equality eq rel, neq
		16 : equality, .equality neq rel, neq
		17 : equality, .rel, neq
		18 : rel, .expr < expr, )
		19 : rel, .expr <= expr, )
		20 : rel, .expr >= expr, )
		21 : rel, .expr > expr, )
		22 : rel, .expr, )
		23 : rel, .expr < expr, or
		24 : rel, .expr <= expr, or
		25 : rel, .expr >= expr, or
		26 : rel, .expr > expr, or
		27 : rel, .expr, or
		28 : rel, .expr < expr, and
		29 : rel, .expr <= expr, and
		30 : rel, .expr >= expr, and
		31 : rel, .expr > expr, and
		32 : rel, .expr, and
		33 : rel, .expr < expr, eq
		34 : rel, .expr <= expr, eq
		35 : rel, .expr >= expr, eq
		36 : rel, .expr > expr, eq
		37 : rel, .expr, eq
		38 : rel, .expr < expr, neq
		39 : rel, .expr <= expr, neq
		40 : rel, .expr >= expr, neq
		41 : rel, .expr > expr, neq
		42 : rel, .expr, neq
		43 : expr, .expr + term, <
		44 : expr, .expr - term, <
		45 : expr, .term, <
		46 : expr, .expr + term, <=
		47 : expr, .expr - term, <=
		48 : expr, .term, <=
		49 : expr, .expr + term, >=
		50 : expr, .expr - term, >=
		51 : expr, .term, >=
		52 : expr, .expr + term, >
		53 : expr, .expr - term, >
		54 : expr, .term, >
		55 : expr, .expr + term, )
		56 : expr, .expr - term, )
		57 : expr, .term, )
		58 : expr, .expr + term, or
		59 : expr, .expr - term, or
		60 : expr, .term, or
		61 : expr, .expr + term, and
		62 : expr, .expr - term, and
		63 : expr, .term, and
		64 : expr, .expr + term, eq
		65 : expr, .expr - term, eq
		66 : expr, .term, eq
		67 : expr, .expr + term, neq
		68 : expr, .expr - term, neq
		69 : expr, .term, neq
		70 : expr, .expr + term, +
		71 : expr, .expr - term, +
		72 : expr, .term, +
		73 : expr, .expr + term, -
		74 : expr, .expr - term, -
		75 : expr, .term, -
		76 : term, .term * unary, <
		77 : term, .term / unary, <
		78 : term, .term mod unary, <
		79 : term, .unary, <
		80 : term, .term * unary, <=
		81 : term, .term / unary, <=
		82 : term, .term mod unary, <=
		83 : term, .unary, <=
		84 : term, .term * unary, >=
		85 : term, .term / unary, >=
		86 : term, .term mod unary, >=
		87 : term, .unary, >=
		88 : term, .term * unary, >
		89 : term, .term / unary, >
		90 : term, .term mod unary, >
		91 : term, .unary, >
		92 : term, .term * unary, )
		93 : term, .term / unary, )
		94 : term, .term mod unary, )
		95 : term, .unary, )
		96 : term, .term * unary, or
		97 : term, .term / unary, or
		98 : term, .term mod unary, or
		99 : term, .unary, or
		100 : term, .term * unary, and
		101 : term, .term / unary, and
		102 : term, .term mod unary, and
		103 : term, .unary, and
		104 : term, .term * unary, eq
		105 : term, .term / unary, eq
		106 : term, .term mod unary, eq
		107 : term, .unary, eq
		108 : term, .term * unary, neq
		109 : term, .term / unary, neq
		110 : term, .term mod unary, neq
		111 : term, .unary, neq
		112 : term, .term * unary, +
		113 : term, .term / unary, +
		114 : term, .term mod unary, +
		115 : term, .unary, +
		116 : term, .term * unary, -
		117 : term, .term / unary, -
		118 : term, .term mod unary, -
		119 : term, .unary, -
		120 : term, .term * unary, *
		121 : term, .term / unary, *
		122 : term, .term mod unary, *
		123 : term, .unary, *
		124 : term, .term * unary, /
		125 : term, .term / unary, /
		126 : term, .term mod unary, /
		127 : term, .unary, /
		128 : term, .term * unary, mod
		129 : term, .term / unary, mod
		130 : term, .term mod unary, mod
		131 : term, .unary, mod
		132 : unary, .! unary, <
		133 : unary, .- unary, <
		134 : unary, .factor, <
		135 : unary, .! unary, <=
		136 : unary, .- unary, <=
		137 : unary, .factor, <=
		138 : unary, .! unary, >=
		139 : unary, .- unary, >=
		140 : unary, .factor, >=
		141 : unary, .! unary, >
		142 : unary, .- unary, >
		143 : unary, .factor, >
		144 : unary, .! unary, )
		145 : unary, .- unary, )
		146 : unary, .factor, )
		147 : unary, .! unary, or
		148 : unary, .- unary, or
		149 : unary, .factor, or
		150 : unary, .! unary, and
		151 : unary, .- unary, and
		152 : unary, .factor, and
		153 : unary, .! unary, eq
		154 : unary, .- unary, eq
		155 : unary, .factor, eq
		156 : unary, .! unary, neq
		157 : unary, .- unary, neq
		158 : unary, .factor, neq
		159 : unary, .! unary, +
		160 : unary, .- unary, +
		161 : unary, .factor, +
		162 : unary, .! unary, -
		163 : unary, .- unary, -
		164 : unary, .factor, -
		165 : unary, .! unary, *
		166 : unary, .- unary, *
		167 : unary, .factor, *
		168 : unary, .! unary, /
		169 : unary, .- unary, /
		170 : unary, .factor, /
		171 : unary, .! unary, mod
		172 : unary, .- unary, mod
		173 : unary, .factor, mod
		174 : factor, .( bool ), <
		175 : factor, .loc, <
		176 : factor, .id ( args ), <
		177 : factor, .num, <
		178 : factor, .real, <
		179 : factor, .true, <
		180 : factor, .false, <
		181 : factor, .( bool ), <=
		182 : factor, .loc, <=
		183 : factor, .id ( args ), <=
		184 : factor, .num, <=
		185 : factor, .real, <=
		186 : factor, .true, <=
		187 : factor, .false, <=
		188 : factor, .( bool ), >=
		189 : factor, .loc, >=
		190 : factor, .id ( args ), >=
		191 : factor, .num, >=
		192 : factor, .real, >=
		193 : factor, .true, >=
		194 : factor, .false, >=
		195 : factor, .( bool ), >
		196 : factor, .loc, >
		197 : factor, .id ( args ), >
		198 : factor, .num, >
		199 : factor, .real, >
		200 : factor, .true, >
		201 : factor, .false, >
		202 : factor, .( bool ), )
		203 : factor, .loc, )
		204 : factor, .id ( args ), )
		205 : factor, .num, )
		206 : factor, .real, )
		207 : factor, .true, )
		208 : factor, .false, )
		209 : factor, .( bool ), or
		210 : factor, .loc, or
		211 : factor, .id ( args ), or
		212 : factor, .num, or
		213 : factor, .real, or
		214 : factor, .true, or
		215 : factor, .false, or
		216 : factor, .( bool ), and
		217 : factor, .loc, and
		218 : factor, .id ( args ), and
		219 : factor, .num, and
		220 : factor, .real, and
		221 : factor, .true, and
		222 : factor, .false, and
		223 : factor, .( bool ), eq
		224 : factor, .loc, eq
		225 : factor, .id ( args ), eq
		226 : factor, .num, eq
		227 : factor, .real, eq
		228 : factor, .true, eq
		229 : factor, .false, eq
		230 : factor, .( bool ), neq
		231 : factor, .loc, neq
		232 : factor, .id ( args ), neq
		233 : factor, .num, neq
		234 : factor, .real, neq
		235 : factor, .true, neq
		236 : factor, .false, neq
		237 : factor, .( bool ), +
		238 : factor, .loc, +
		239 : factor, .id ( args ), +
		240 : factor, .num, +
		241 : factor, .real, +
		242 : factor, .true, +
		243 : factor, .false, +
		244 : factor, .( bool ), -
		245 : factor, .loc, -
		246 : factor, .id ( args ), -
		247 : factor, .num, -
		248 : factor, .real, -
		249 : factor, .true, -
		250 : factor, .false, -
		251 : factor, .( bool ), *
		252 : factor, .loc, *
		253 : factor, .id ( args ), *
		254 : factor, .num, *
		255 : factor, .real, *
		256 : factor, .true, *
		257 : factor, .false, *
		258 : factor, .( bool ), /
		259 : factor, .loc, /
		260 : factor, .id ( args ), /
		261 : factor, .num, /
		262 : factor, .real, /
		263 : factor, .true, /
		264 : factor, .false, /
		265 : factor, .( bool ), mod
		266 : factor, .loc, mod
		267 : factor, .id ( args ), mod
		268 : factor, .num, mod
		269 : factor, .real, mod
		270 : factor, .true, mod
		271 : factor, .false, mod
		272 : loc, .loc [ bool ], <
		273 : loc, .id, <
		274 : loc, .loc [ bool ], <=
		275 : loc, .id, <=
		276 : loc, .loc [ bool ], >=
		277 : loc, .id, >=
		278 : loc, .loc [ bool ], >
		279 : loc, .id, >
		280 : loc, .loc [ bool ], )
		281 : loc, .id, )
		282 : loc, .loc [ bool ], or
		283 : loc, .id, or
		284 : loc, .loc [ bool ], and
		285 : loc, .id, and
		286 : loc, .loc [ bool ], eq
		287 : loc, .id, eq
		288 : loc, .loc [ bool ], neq
		289 : loc, .id, neq
		290 : loc, .loc [ bool ], +
		291 : loc, .id, +
		292 : loc, .loc [ bool ], -
		293 : loc, .id, -
		294 : loc, .loc [ bool ], *
		295 : loc, .id, *
		296 : loc, .loc [ bool ], /
		297 : loc, .id, /
		298 : loc, .loc [ bool ], mod
		299 : loc, .id, mod
		300 : loc, .loc [ bool ], [
		301 : loc, .id, [
	[153] 
		0 : equality, equality eq .rel, )
		1 : equality, equality eq .rel, or
		2 : equality, equality eq .rel, and
		3 : equality, equality eq .rel, eq
		4 : equality, equality eq .rel, neq
		5 : rel, .expr < expr, )
		6 : rel, .expr <= expr, )
		7 : rel, .expr >= expr, )
		8 : rel, .expr > expr, )
		9 : rel, .expr, )
		10 : rel, .expr < expr, or
		11 : rel, .expr <= expr, or
		12 : rel, .expr >= expr, or
		13 : rel, .expr > expr, or
		14 : rel, .expr, or
		15 : rel, .expr < expr, and
		16 : rel, .expr <= expr, and
		17 : rel, .expr >= expr, and
		18 : rel, .expr > expr, and
		19 : rel, .expr, and
		20 : rel, .expr < expr, eq
		21 : rel, .expr <= expr, eq
		22 : rel, .expr >= expr, eq
		23 : rel, .expr > expr, eq
		24 : rel, .expr, eq
		25 : rel, .expr < expr, neq
		26 : rel, .expr <= expr, neq
		27 : rel, .expr >= expr, neq
		28 : rel, .expr > expr, neq
		29 : rel, .expr, neq
		30 : expr, .expr + term, <
		31 : expr, .expr - term, <
		32 : expr, .term, <
		33 : expr, .expr + term, <=
		34 : expr, .expr - term, <=
		35 : expr, .term, <=
		36 : expr, .expr + term, >=
		37 : expr, .expr - term, >=
		38 : expr, .term, >=
		39 : expr, .expr + term, >
		40 : expr, .expr - term, >
		41 : expr, .term, >
		42 : expr, .expr + term, )
		43 : expr, .expr - term, )
		44 : expr, .term, )
		45 : expr, .expr + term, or
		46 : expr, .expr - term, or
		47 : expr, .term, or
		48 : expr, .expr + term, and
		49 : expr, .expr - term, and
		50 : expr, .term, and
		51 : expr, .expr + term, eq
		52 : expr, .expr - term, eq
		53 : expr, .term, eq
		54 : expr, .expr + term, neq
		55 : expr, .expr - term, neq
		56 : expr, .term, neq
		57 : expr, .expr + term, +
		58 : expr, .expr - term, +
		59 : expr, .term, +
		60 : expr, .expr + term, -
		61 : expr, .expr - term, -
		62 : expr, .term, -
		63 : term, .term * unary, <
		64 : term, .term / unary, <
		65 : term, .term mod unary, <
		66 : term, .unary, <
		67 : term, .term * unary, <=
		68 : term, .term / unary, <=
		69 : term, .term mod unary, <=
		70 : term, .unary, <=
		71 : term, .term * unary, >=
		72 : term, .term / unary, >=
		73 : term, .term mod unary, >=
		74 : term, .unary, >=
		75 : term, .term * unary, >
		76 : term, .term / unary, >
		77 : term, .term mod unary, >
		78 : term, .unary, >
		79 : term, .term * unary, )
		80 : term, .term / unary, )
		81 : term, .term mod unary, )
		82 : term, .unary, )
		83 : term, .term * unary, or
		84 : term, .term / unary, or
		85 : term, .term mod unary, or
		86 : term, .unary, or
		87 : term, .term * unary, and
		88 : term, .term / unary, and
		89 : term, .term mod unary, and
		90 : term, .unary, and
		91 : term, .term * unary, eq
		92 : term, .term / unary, eq
		93 : term, .term mod unary, eq
		94 : term, .unary, eq
		95 : term, .term * unary, neq
		96 : term, .term / unary, neq
		97 : term, .term mod unary, neq
		98 : term, .unary, neq
		99 : term, .term * unary, +
		100 : term, .term / unary, +
		101 : term, .term mod unary, +
		102 : term, .unary, +
		103 : term, .term * unary, -
		104 : term, .term / unary, -
		105 : term, .term mod unary, -
		106 : term, .unary, -
		107 : term, .term * unary, *
		108 : term, .term / unary, *
		109 : term, .term mod unary, *
		110 : term, .unary, *
		111 : term, .term * unary, /
		112 : term, .term / unary, /
		113 : term, .term mod unary, /
		114 : term, .unary, /
		115 : term, .term * unary, mod
		116 : term, .term / unary, mod
		117 : term, .term mod unary, mod
		118 : term, .unary, mod
		119 : unary, .! unary, <
		120 : unary, .- unary, <
		121 : unary, .factor, <
		122 : unary, .! unary, <=
		123 : unary, .- unary, <=
		124 : unary, .factor, <=
		125 : unary, .! unary, >=
		126 : unary, .- unary, >=
		127 : unary, .factor, >=
		128 : unary, .! unary, >
		129 : unary, .- unary, >
		130 : unary, .factor, >
		131 : unary, .! unary, )
		132 : unary, .- unary, )
		133 : unary, .factor, )
		134 : unary, .! unary, or
		135 : unary, .- unary, or
		136 : unary, .factor, or
		137 : unary, .! unary, and
		138 : unary, .- unary, and
		139 : unary, .factor, and
		140 : unary, .! unary, eq
		141 : unary, .- unary, eq
		142 : unary, .factor, eq
		143 : unary, .! unary, neq
		144 : unary, .- unary, neq
		145 : unary, .factor, neq
		146 : unary, .! unary, +
		147 : unary, .- unary, +
		148 : unary, .factor, +
		149 : unary, .! unary, -
		150 : unary, .- unary, -
		151 : unary, .factor, -
		152 : unary, .! unary, *
		153 : unary, .- unary, *
		154 : unary, .factor, *
		155 : unary, .! unary, /
		156 : unary, .- unary, /
		157 : unary, .factor, /
		158 : unary, .! unary, mod
		159 : unary, .- unary, mod
		160 : unary, .factor, mod
		161 : factor, .( bool ), <
		162 : factor, .loc, <
		163 : factor, .id ( args ), <
		164 : factor, .num, <
		165 : factor, .real, <
		166 : factor, .true, <
		167 : factor, .false, <
		168 : factor, .( bool ), <=
		169 : factor, .loc, <=
		170 : factor, .id ( args ), <=
		171 : factor, .num, <=
		172 : factor, .real, <=
		173 : factor, .true, <=
		174 : factor, .false, <=
		175 : factor, .( bool ), >=
		176 : factor, .loc, >=
		177 : factor, .id ( args ), >=
		178 : factor, .num, >=
		179 : factor, .real, >=
		180 : factor, .true, >=
		181 : factor, .false, >=
		182 : factor, .( bool ), >
		183 : factor, .loc, >
		184 : factor, .id ( args ), >
		185 : factor, .num, >
		186 : factor, .real, >
		187 : factor, .true, >
		188 : factor, .false, >
		189 : factor, .( bool ), )
		190 : factor, .loc, )
		191 : factor, .id ( args ), )
		192 : factor, .num, )
		193 : factor, .real, )
		194 : factor, .true, )
		195 : factor, .false, )
		196 : factor, .( bool ), or
		197 : factor, .loc, or
		198 : factor, .id ( args ), or
		199 : factor, .num, or
		200 : factor, .real, or
		201 : factor, .true, or
		202 : factor, .false, or
		203 : factor, .( bool ), and
		204 : factor, .loc, and
		205 : factor, .id ( args ), and
		206 : factor, .num, and
		207 : factor, .real, and
		208 : factor, .true, and
		209 : factor, .false, and
		210 : factor, .( bool ), eq
		211 : factor, .loc, eq
		212 : factor, .id ( args ), eq
		213 : factor, .num, eq
		214 : factor, .real, eq
		215 : factor, .true, eq
		216 : factor, .false, eq
		217 : factor, .( bool ), neq
		218 : factor, .loc, neq
		219 : factor, .id ( args ), neq
		220 : factor, .num, neq
		221 : factor, .real, neq
		222 : factor, .true, neq
		223 : factor, .false, neq
		224 : factor, .( bool ), +
		225 : factor, .loc, +
		226 : factor, .id ( args ), +
		227 : factor, .num, +
		228 : factor, .real, +
		229 : factor, .true, +
		230 : factor, .false, +
		231 : factor, .( bool ), -
		232 : factor, .loc, -
		233 : factor, .id ( args ), -
		234 : factor, .num, -
		235 : factor, .real, -
		236 : factor, .true, -
		237 : factor, .false, -
		238 : factor, .( bool ), *
		239 : factor, .loc, *
		240 : factor, .id ( args ), *
		241 : factor, .num, *
		242 : factor, .real, *
		243 : factor, .true, *
		244 : factor, .false, *
		245 : factor, .( bool ), /
		246 : factor, .loc, /
		247 : factor, .id ( args ), /
		248 : factor, .num, /
		249 : factor, .real, /
		250 : factor, .true, /
		251 : factor, .false, /
		252 : factor, .( bool ), mod
		253 : factor, .loc, mod
		254 : factor, .id ( args ), mod
		255 : factor, .num, mod
		256 : factor, .real, mod
		257 : factor, .true, mod
		258 : factor, .false, mod
		259 : loc, .loc [ bool ], <
		260 : loc, .id, <
		261 : loc, .loc [ bool ], <=
		262 : loc, .id, <=
		263 : loc, .loc [ bool ], >=
		264 : loc, .id, >=
		265 : loc, .loc [ bool ], >
		266 : loc, .id, >
		267 : loc, .loc [ bool ], )
		268 : loc, .id, )
		269 : loc, .loc [ bool ], or
		270 : loc, .id, or
		271 : loc, .loc [ bool ], and
		272 : loc, .id, and
		273 : loc, .loc [ bool ], eq
		274 : loc, .id, eq
		275 : loc, .loc [ bool ], neq
		276 : loc, .id, neq
		277 : loc, .loc [ bool ], +
		278 : loc, .id, +
		279 : loc, .loc [ bool ], -
		280 : loc, .id, -
		281 : loc, .loc [ bool ], *
		282 : loc, .id, *
		283 : loc, .loc [ bool ], /
		284 : loc, .id, /
		285 : loc, .loc [ bool ], mod
		286 : loc, .id, mod
		287 : loc, .loc [ bool ], [
		288 : loc, .id, [
	[154] 
		0 : equality, equality neq .rel, )
		1 : equality, equality neq .rel, or
		2 : equality, equality neq .rel, and
		3 : equality, equality neq .rel, eq
		4 : equality, equality neq .rel, neq
		5 : rel, .expr < expr, )
		6 : rel, .expr <= expr, )
		7 : rel, .expr >= expr, )
		8 : rel, .expr > expr, )
		9 : rel, .expr, )
		10 : rel, .expr < expr, or
		11 : rel, .expr <= expr, or
		12 : rel, .expr >= expr, or
		13 : rel, .expr > expr, or
		14 : rel, .expr, or
		15 : rel, .expr < expr, and
		16 : rel, .expr <= expr, and
		17 : rel, .expr >= expr, and
		18 : rel, .expr > expr, and
		19 : rel, .expr, and
		20 : rel, .expr < expr, eq
		21 : rel, .expr <= expr, eq
		22 : rel, .expr >= expr, eq
		23 : rel, .expr > expr, eq
		24 : rel, .expr, eq
		25 : rel, .expr < expr, neq
		26 : rel, .expr <= expr, neq
		27 : rel, .expr >= expr, neq
		28 : rel, .expr > expr, neq
		29 : rel, .expr, neq
		30 : expr, .expr + term, <
		31 : expr, .expr - term, <
		32 : expr, .term, <
		33 : expr, .expr + term, <=
		34 : expr, .expr - term, <=
		35 : expr, .term, <=
		36 : expr, .expr + term, >=
		37 : expr, .expr - term, >=
		38 : expr, .term, >=
		39 : expr, .expr + term, >
		40 : expr, .expr - term, >
		41 : expr, .term, >
		42 : expr, .expr + term, )
		43 : expr, .expr - term, )
		44 : expr, .term, )
		45 : expr, .expr + term, or
		46 : expr, .expr - term, or
		47 : expr, .term, or
		48 : expr, .expr + term, and
		49 : expr, .expr - term, and
		50 : expr, .term, and
		51 : expr, .expr + term, eq
		52 : expr, .expr - term, eq
		53 : expr, .term, eq
		54 : expr, .expr + term, neq
		55 : expr, .expr - term, neq
		56 : expr, .term, neq
		57 : expr, .expr + term, +
		58 : expr, .expr - term, +
		59 : expr, .term, +
		60 : expr, .expr + term, -
		61 : expr, .expr - term, -
		62 : expr, .term, -
		63 : term, .term * unary, <
		64 : term, .term / unary, <
		65 : term, .term mod unary, <
		66 : term, .unary, <
		67 : term, .term * unary, <=
		68 : term, .term / unary, <=
		69 : term, .term mod unary, <=
		70 : term, .unary, <=
		71 : term, .term * unary, >=
		72 : term, .term / unary, >=
		73 : term, .term mod unary, >=
		74 : term, .unary, >=
		75 : term, .term * unary, >
		76 : term, .term / unary, >
		77 : term, .term mod unary, >
		78 : term, .unary, >
		79 : term, .term * unary, )
		80 : term, .term / unary, )
		81 : term, .term mod unary, )
		82 : term, .unary, )
		83 : term, .term * unary, or
		84 : term, .term / unary, or
		85 : term, .term mod unary, or
		86 : term, .unary, or
		87 : term, .term * unary, and
		88 : term, .term / unary, and
		89 : term, .term mod unary, and
		90 : term, .unary, and
		91 : term, .term * unary, eq
		92 : term, .term / unary, eq
		93 : term, .term mod unary, eq
		94 : term, .unary, eq
		95 : term, .term * unary, neq
		96 : term, .term / unary, neq
		97 : term, .term mod unary, neq
		98 : term, .unary, neq
		99 : term, .term * unary, +
		100 : term, .term / unary, +
		101 : term, .term mod unary, +
		102 : term, .unary, +
		103 : term, .term * unary, -
		104 : term, .term / unary, -
		105 : term, .term mod unary, -
		106 : term, .unary, -
		107 : term, .term * unary, *
		108 : term, .term / unary, *
		109 : term, .term mod unary, *
		110 : term, .unary, *
		111 : term, .term * unary, /
		112 : term, .term / unary, /
		113 : term, .term mod unary, /
		114 : term, .unary, /
		115 : term, .term * unary, mod
		116 : term, .term / unary, mod
		117 : term, .term mod unary, mod
		118 : term, .unary, mod
		119 : unary, .! unary, <
		120 : unary, .- unary, <
		121 : unary, .factor, <
		122 : unary, .! unary, <=
		123 : unary, .- unary, <=
		124 : unary, .factor, <=
		125 : unary, .! unary, >=
		126 : unary, .- unary, >=
		127 : unary, .factor, >=
		128 : unary, .! unary, >
		129 : unary, .- unary, >
		130 : unary, .factor, >
		131 : unary, .! unary, )
		132 : unary, .- unary, )
		133 : unary, .factor, )
		134 : unary, .! unary, or
		135 : unary, .- unary, or
		136 : unary, .factor, or
		137 : unary, .! unary, and
		138 : unary, .- unary, and
		139 : unary, .factor, and
		140 : unary, .! unary, eq
		141 : unary, .- unary, eq
		142 : unary, .factor, eq
		143 : unary, .! unary, neq
		144 : unary, .- unary, neq
		145 : unary, .factor, neq
		146 : unary, .! unary, +
		147 : unary, .- unary, +
		148 : unary, .factor, +
		149 : unary, .! unary, -
		150 : unary, .- unary, -
		151 : unary, .factor, -
		152 : unary, .! unary, *
		153 : unary, .- unary, *
		154 : unary, .factor, *
		155 : unary, .! unary, /
		156 : unary, .- unary, /
		157 : unary, .factor, /
		158 : unary, .! unary, mod
		159 : unary, .- unary, mod
		160 : unary, .factor, mod
		161 : factor, .( bool ), <
		162 : factor, .loc, <
		163 : factor, .id ( args ), <
		164 : factor, .num, <
		165 : factor, .real, <
		166 : factor, .true, <
		167 : factor, .false, <
		168 : factor, .( bool ), <=
		169 : factor, .loc, <=
		170 : factor, .id ( args ), <=
		171 : factor, .num, <=
		172 : factor, .real, <=
		173 : factor, .true, <=
		174 : factor, .false, <=
		175 : factor, .( bool ), >=
		176 : factor, .loc, >=
		177 : factor, .id ( args ), >=
		178 : factor, .num, >=
		179 : factor, .real, >=
		180 : factor, .true, >=
		181 : factor, .false, >=
		182 : factor, .( bool ), >
		183 : factor, .loc, >
		184 : factor, .id ( args ), >
		185 : factor, .num, >
		186 : factor, .real, >
		187 : factor, .true, >
		188 : factor, .false, >
		189 : factor, .( bool ), )
		190 : factor, .loc, )
		191 : factor, .id ( args ), )
		192 : factor, .num, )
		193 : factor, .real, )
		194 : factor, .true, )
		195 : factor, .false, )
		196 : factor, .( bool ), or
		197 : factor, .loc, or
		198 : factor, .id ( args ), or
		199 : factor, .num, or
		200 : factor, .real, or
		201 : factor, .true, or
		202 : factor, .false, or
		203 : factor, .( bool ), and
		204 : factor, .loc, and
		205 : factor, .id ( args ), and
		206 : factor, .num, and
		207 : factor, .real, and
		208 : factor, .true, and
		209 : factor, .false, and
		210 : factor, .( bool ), eq
		211 : factor, .loc, eq
		212 : factor, .id ( args ), eq
		213 : factor, .num, eq
		214 : factor, .real, eq
		215 : factor, .true, eq
		216 : factor, .false, eq
		217 : factor, .( bool ), neq
		218 : factor, .loc, neq
		219 : factor, .id ( args ), neq
		220 : factor, .num, neq
		221 : factor, .real, neq
		222 : factor, .true, neq
		223 : factor, .false, neq
		224 : factor, .( bool ), +
		225 : factor, .loc, +
		226 : factor, .id ( args ), +
		227 : factor, .num, +
		228 : factor, .real, +
		229 : factor, .true, +
		230 : factor, .false, +
		231 : factor, .( bool ), -
		232 : factor, .loc, -
		233 : factor, .id ( args ), -
		234 : factor, .num, -
		235 : factor, .real, -
		236 : factor, .true, -
		237 : factor, .false, -
		238 : factor, .( bool ), *
		239 : factor, .loc, *
		240 : factor, .id ( args ), *
		241 : factor, .num, *
		242 : factor, .real, *
		243 : factor, .true, *
		244 : factor, .false, *
		245 : factor, .( bool ), /
		246 : factor, .loc, /
		247 : factor, .id ( args ), /
		248 : factor, .num, /
		249 : factor, .real, /
		250 : factor, .true, /
		251 : factor, .false, /
		252 : factor, .( bool ), mod
		253 : factor, .loc, mod
		254 : factor, .id ( args ), mod
		255 : factor, .num, mod
		256 : factor, .real, mod
		257 : factor, .true, mod
		258 : factor, .false, mod
		259 : loc, .loc [ bool ], <
		260 : loc, .id, <
		261 : loc, .loc [ bool ], <=
		262 : loc, .id, <=
		263 : loc, .loc [ bool ], >=
		264 : loc, .id, >=
		265 : loc, .loc [ bool ], >
		266 : loc, .id, >
		267 : loc, .loc [ bool ], )
		268 : loc, .id, )
		269 : loc, .loc [ bool ], or
		270 : loc, .id, or
		271 : loc, .loc [ bool ], and
		272 : loc, .id, and
		273 : loc, .loc [ bool ], eq
		274 : loc, .id, eq
		275 : loc, .loc [ bool ], neq
		276 : loc, .id, neq
		277 : loc, .loc [ bool ], +
		278 : loc, .id, +
		279 : loc, .loc [ bool ], -
		280 : loc, .id, -
		281 : loc, .loc [ bool ], *
		282 : loc, .id, *
		283 : loc, .loc [ bool ], /
		284 : loc, .id, /
		285 : loc, .loc [ bool ], mod
		286 : loc, .id, mod
		287 : loc, .loc [ bool ], [
		288 : loc, .id, [
	[155] 
		0 : rel, expr < .expr, )
		1 : rel, expr < .expr, or
		2 : rel, expr < .expr, and
		3 : rel, expr < .expr, eq
		4 : rel, expr < .expr, neq
		5 : expr, .expr + term, )
		6 : expr, .expr - term, )
		7 : expr, .term, )
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, )
		27 : term, .term / unary, )
		28 : term, .term mod unary, )
		29 : term, .unary, )
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, )
		67 : unary, .- unary, )
		68 : unary, .factor, )
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), )
		97 : factor, .loc, )
		98 : factor, .id ( args ), )
		99 : factor, .num, )
		100 : factor, .real, )
		101 : factor, .true, )
		102 : factor, .false, )
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], )
		167 : loc, .id, )
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[156] 
		0 : rel, expr <= .expr, )
		1 : rel, expr <= .expr, or
		2 : rel, expr <= .expr, and
		3 : rel, expr <= .expr, eq
		4 : rel, expr <= .expr, neq
		5 : expr, .expr + term, )
		6 : expr, .expr - term, )
		7 : expr, .term, )
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, )
		27 : term, .term / unary, )
		28 : term, .term mod unary, )
		29 : term, .unary, )
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, )
		67 : unary, .- unary, )
		68 : unary, .factor, )
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), )
		97 : factor, .loc, )
		98 : factor, .id ( args ), )
		99 : factor, .num, )
		100 : factor, .real, )
		101 : factor, .true, )
		102 : factor, .false, )
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], )
		167 : loc, .id, )
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[157] 
		0 : rel, expr >= .expr, )
		1 : rel, expr >= .expr, or
		2 : rel, expr >= .expr, and
		3 : rel, expr >= .expr, eq
		4 : rel, expr >= .expr, neq
		5 : expr, .expr + term, )
		6 : expr, .expr - term, )
		7 : expr, .term, )
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, )
		27 : term, .term / unary, )
		28 : term, .term mod unary, )
		29 : term, .unary, )
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, )
		67 : unary, .- unary, )
		68 : unary, .factor, )
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), )
		97 : factor, .loc, )
		98 : factor, .id ( args ), )
		99 : factor, .num, )
		100 : factor, .real, )
		101 : factor, .true, )
		102 : factor, .false, )
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], )
		167 : loc, .id, )
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[158] 
		0 : rel, expr > .expr, )
		1 : rel, expr > .expr, or
		2 : rel, expr > .expr, and
		3 : rel, expr > .expr, eq
		4 : rel, expr > .expr, neq
		5 : expr, .expr + term, )
		6 : expr, .expr - term, )
		7 : expr, .term, )
		8 : expr, .expr + term, or
		9 : expr, .expr - term, or
		10 : expr, .term, or
		11 : expr, .expr + term, and
		12 : expr, .expr - term, and
		13 : expr, .term, and
		14 : expr, .expr + term, eq
		15 : expr, .expr - term, eq
		16 : expr, .term, eq
		17 : expr, .expr + term, neq
		18 : expr, .expr - term, neq
		19 : expr, .term, neq
		20 : expr, .expr + term, +
		21 : expr, .expr - term, +
		22 : expr, .term, +
		23 : expr, .expr + term, -
		24 : expr, .expr - term, -
		25 : expr, .term, -
		26 : term, .term * unary, )
		27 : term, .term / unary, )
		28 : term, .term mod unary, )
		29 : term, .unary, )
		30 : term, .term * unary, or
		31 : term, .term / unary, or
		32 : term, .term mod unary, or
		33 : term, .unary, or
		34 : term, .term * unary, and
		35 : term, .term / unary, and
		36 : term, .term mod unary, and
		37 : term, .unary, and
		38 : term, .term * unary, eq
		39 : term, .term / unary, eq
		40 : term, .term mod unary, eq
		41 : term, .unary, eq
		42 : term, .term * unary, neq
		43 : term, .term / unary, neq
		44 : term, .term mod unary, neq
		45 : term, .unary, neq
		46 : term, .term * unary, +
		47 : term, .term / unary, +
		48 : term, .term mod unary, +
		49 : term, .unary, +
		50 : term, .term * unary, -
		51 : term, .term / unary, -
		52 : term, .term mod unary, -
		53 : term, .unary, -
		54 : term, .term * unary, *
		55 : term, .term / unary, *
		56 : term, .term mod unary, *
		57 : term, .unary, *
		58 : term, .term * unary, /
		59 : term, .term / unary, /
		60 : term, .term mod unary, /
		61 : term, .unary, /
		62 : term, .term * unary, mod
		63 : term, .term / unary, mod
		64 : term, .term mod unary, mod
		65 : term, .unary, mod
		66 : unary, .! unary, )
		67 : unary, .- unary, )
		68 : unary, .factor, )
		69 : unary, .! unary, or
		70 : unary, .- unary, or
		71 : unary, .factor, or
		72 : unary, .! unary, and
		73 : unary, .- unary, and
		74 : unary, .factor, and
		75 : unary, .! unary, eq
		76 : unary, .- unary, eq
		77 : unary, .factor, eq
		78 : unary, .! unary, neq
		79 : unary, .- unary, neq
		80 : unary, .factor, neq
		81 : unary, .! unary, +
		82 : unary, .- unary, +
		83 : unary, .factor, +
		84 : unary, .! unary, -
		85 : unary, .- unary, -
		86 : unary, .factor, -
		87 : unary, .! unary, *
		88 : unary, .- unary, *
		89 : unary, .factor, *
		90 : unary, .! unary, /
		91 : unary, .- unary, /
		92 : unary, .factor, /
		93 : unary, .! unary, mod
		94 : unary, .- unary, mod
		95 : unary, .factor, mod
		96 : factor, .( bool ), )
		97 : factor, .loc, )
		98 : factor, .id ( args ), )
		99 : factor, .num, )
		100 : factor, .real, )
		101 : factor, .true, )
		102 : factor, .false, )
		103 : factor, .( bool ), or
		104 : factor, .loc, or
		105 : factor, .id ( args ), or
		106 : factor, .num, or
		107 : factor, .real, or
		108 : factor, .true, or
		109 : factor, .false, or
		110 : factor, .( bool ), and
		111 : factor, .loc, and
		112 : factor, .id ( args ), and
		113 : factor, .num, and
		114 : factor, .real, and
		115 : factor, .true, and
		116 : factor, .false, and
		117 : factor, .( bool ), eq
		118 : factor, .loc, eq
		119 : factor, .id ( args ), eq
		120 : factor, .num, eq
		121 : factor, .real, eq
		122 : factor, .true, eq
		123 : factor, .false, eq
		124 : factor, .( bool ), neq
		125 : factor, .loc, neq
		126 : factor, .id ( args ), neq
		127 : factor, .num, neq
		128 : factor, .real, neq
		129 : factor, .true, neq
		130 : factor, .false, neq
		131 : factor, .( bool ), +
		132 : factor, .loc, +
		133 : factor, .id ( args ), +
		134 : factor, .num, +
		135 : factor, .real, +
		136 : factor, .true, +
		137 : factor, .false, +
		138 : factor, .( bool ), -
		139 : factor, .loc, -
		140 : factor, .id ( args ), -
		141 : factor, .num, -
		142 : factor, .real, -
		143 : factor, .true, -
		144 : factor, .false, -
		145 : factor, .( bool ), *
		146 : factor, .loc, *
		147 : factor, .id ( args ), *
		148 : factor, .num, *
		149 : factor, .real, *
		150 : factor, .true, *
		151 : factor, .false, *
		152 : factor, .( bool ), /
		153 : factor, .loc, /
		154 : factor, .id ( args ), /
		155 : factor, .num, /
		156 : factor, .real, /
		157 : factor, .true, /
		158 : factor, .false, /
		159 : factor, .( bool ), mod
		160 : factor, .loc, mod
		161 : factor, .id ( args ), mod
		162 : factor, .num, mod
		163 : factor, .real, mod
		164 : factor, .true, mod
		165 : factor, .false, mod
		166 : loc, .loc [ bool ], )
		167 : loc, .id, )
		168 : loc, .loc [ bool ], or
		169 : loc, .id, or
		170 : loc, .loc [ bool ], and
		171 : loc, .id, and
		172 : loc, .loc [ bool ], eq
		173 : loc, .id, eq
		174 : loc, .loc [ bool ], neq
		175 : loc, .id, neq
		176 : loc, .loc [ bool ], +
		177 : loc, .id, +
		178 : loc, .loc [ bool ], -
		179 : loc, .id, -
		180 : loc, .loc [ bool ], *
		181 : loc, .id, *
		182 : loc, .loc [ bool ], /
		183 : loc, .id, /
		184 : loc, .loc [ bool ], mod
		185 : loc, .id, mod
		186 : loc, .loc [ bool ], [
		187 : loc, .id, [
	[159] 
		0 : expr, expr + .term, <
		1 : expr, expr + .term, <=
		2 : expr, expr + .term, >=
		3 : expr, expr + .term, >
		4 : expr, expr + .term, )
		5 : expr, expr + .term, or
		6 : expr, expr + .term, and
		7 : expr, expr + .term, eq
		8 : expr, expr + .term, neq
		9 : expr, expr + .term, +
		10 : expr, expr + .term, -
		11 : term, .term * unary, <
		12 : term, .term / unary, <
		13 : term, .term mod unary, <
		14 : term, .unary, <
		15 : term, .term * unary, <=
		16 : term, .term / unary, <=
		17 : term, .term mod unary, <=
		18 : term, .unary, <=
		19 : term, .term * unary, >=
		20 : term, .term / unary, >=
		21 : term, .term mod unary, >=
		22 : term, .unary, >=
		23 : term, .term * unary, >
		24 : term, .term / unary, >
		25 : term, .term mod unary, >
		26 : term, .unary, >
		27 : term, .term * unary, )
		28 : term, .term / unary, )
		29 : term, .term mod unary, )
		30 : term, .unary, )
		31 : term, .term * unary, or
		32 : term, .term / unary, or
		33 : term, .term mod unary, or
		34 : term, .unary, or
		35 : term, .term * unary, and
		36 : term, .term / unary, and
		37 : term, .term mod unary, and
		38 : term, .unary, and
		39 : term, .term * unary, eq
		40 : term, .term / unary, eq
		41 : term, .term mod unary, eq
		42 : term, .unary, eq
		43 : term, .term * unary, neq
		44 : term, .term / unary, neq
		45 : term, .term mod unary, neq
		46 : term, .unary, neq
		47 : term, .term * unary, +
		48 : term, .term / unary, +
		49 : term, .term mod unary, +
		50 : term, .unary, +
		51 : term, .term * unary, -
		52 : term, .term / unary, -
		53 : term, .term mod unary, -
		54 : term, .unary, -
		55 : term, .term * unary, *
		56 : term, .term / unary, *
		57 : term, .term mod unary, *
		58 : term, .unary, *
		59 : term, .term * unary, /
		60 : term, .term / unary, /
		61 : term, .term mod unary, /
		62 : term, .unary, /
		63 : term, .term * unary, mod
		64 : term, .term / unary, mod
		65 : term, .term mod unary, mod
		66 : term, .unary, mod
		67 : unary, .! unary, <
		68 : unary, .- unary, <
		69 : unary, .factor, <
		70 : unary, .! unary, <=
		71 : unary, .- unary, <=
		72 : unary, .factor, <=
		73 : unary, .! unary, >=
		74 : unary, .- unary, >=
		75 : unary, .factor, >=
		76 : unary, .! unary, >
		77 : unary, .- unary, >
		78 : unary, .factor, >
		79 : unary, .! unary, )
		80 : unary, .- unary, )
		81 : unary, .factor, )
		82 : unary, .! unary, or
		83 : unary, .- unary, or
		84 : unary, .factor, or
		85 : unary, .! unary, and
		86 : unary, .- unary, and
		87 : unary, .factor, and
		88 : unary, .! unary, eq
		89 : unary, .- unary, eq
		90 : unary, .factor, eq
		91 : unary, .! unary, neq
		92 : unary, .- unary, neq
		93 : unary, .factor, neq
		94 : unary, .! unary, +
		95 : unary, .- unary, +
		96 : unary, .factor, +
		97 : unary, .! unary, -
		98 : unary, .- unary, -
		99 : unary, .factor, -
		100 : unary, .! unary, *
		101 : unary, .- unary, *
		102 : unary, .factor, *
		103 : unary, .! unary, /
		104 : unary, .- unary, /
		105 : unary, .factor, /
		106 : unary, .! unary, mod
		107 : unary, .- unary, mod
		108 : unary, .factor, mod
		109 : factor, .( bool ), <
		110 : factor, .loc, <
		111 : factor, .id ( args ), <
		112 : factor, .num, <
		113 : factor, .real, <
		114 : factor, .true, <
		115 : factor, .false, <
		116 : factor, .( bool ), <=
		117 : factor, .loc, <=
		118 : factor, .id ( args ), <=
		119 : factor, .num, <=
		120 : factor, .real, <=
		121 : factor, .true, <=
		122 : factor, .false, <=
		123 : factor, .( bool ), >=
		124 : factor, .loc, >=
		125 : factor, .id ( args ), >=
		126 : factor, .num, >=
		127 : factor, .real, >=
		128 : factor, .true, >=
		129 : factor, .false, >=
		130 : factor, .( bool ), >
		131 : factor, .loc, >
		132 : factor, .id ( args ), >
		133 : factor, .num, >
		134 : factor, .real, >
		135 : factor, .true, >
		136 : factor, .false, >
		137 : factor, .( bool ), )
		138 : factor, .loc, )
		139 : factor, .id ( args ), )
		140 : factor, .num, )
		141 : factor, .real, )
		142 : factor, .true, )
		143 : factor, .false, )
		144 : factor, .( bool ), or
		145 : factor, .loc, or
		146 : factor, .id ( args ), or
		147 : factor, .num, or
		148 : factor, .real, or
		149 : factor, .true, or
		150 : factor, .false, or
		151 : factor, .( bool ), and
		152 : factor, .loc, and
		153 : factor, .id ( args ), and
		154 : factor, .num, and
		155 : factor, .real, and
		156 : factor, .true, and
		157 : factor, .false, and
		158 : factor, .( bool ), eq
		159 : factor, .loc, eq
		160 : factor, .id ( args ), eq
		161 : factor, .num, eq
		162 : factor, .real, eq
		163 : factor, .true, eq
		164 : factor, .false, eq
		165 : factor, .( bool ), neq
		166 : factor, .loc, neq
		167 : factor, .id ( args ), neq
		168 : factor, .num, neq
		169 : factor, .real, neq
		170 : factor, .true, neq
		171 : factor, .false, neq
		172 : factor, .( bool ), +
		173 : factor, .loc, +
		174 : factor, .id ( args ), +
		175 : factor, .num, +
		176 : factor, .real, +
		177 : factor, .true, +
		178 : factor, .false, +
		179 : factor, .( bool ), -
		180 : factor, .loc, -
		181 : factor, .id ( args ), -
		182 : factor, .num, -
		183 : factor, .real, -
		184 : factor, .true, -
		185 : factor, .false, -
		186 : factor, .( bool ), *
		187 : factor, .loc, *
		188 : factor, .id ( args ), *
		189 : factor, .num, *
		190 : factor, .real, *
		191 : factor, .true, *
		192 : factor, .false, *
		193 : factor, .( bool ), /
		194 : factor, .loc, /
		195 : factor, .id ( args ), /
		196 : factor, .num, /
		197 : factor, .real, /
		198 : factor, .true, /
		199 : factor, .false, /
		200 : factor, .( bool ), mod
		201 : factor, .loc, mod
		202 : factor, .id ( args ), mod
		203 : factor, .num, mod
		204 : factor, .real, mod
		205 : factor, .true, mod
		206 : factor, .false, mod
		207 : loc, .loc [ bool ], <
		208 : loc, .id, <
		209 : loc, .loc [ bool ], <=
		210 : loc, .id, <=
		211 : loc, .loc [ bool ], >=
		212 : loc, .id, >=
		213 : loc, .loc [ bool ], >
		214 : loc, .id, >
		215 : loc, .loc [ bool ], )
		216 : loc, .id, )
		217 : loc, .loc [ bool ], or
		218 : loc, .id, or
		219 : loc, .loc [ bool ], and
		220 : loc, .id, and
		221 : loc, .loc [ bool ], eq
		222 : loc, .id, eq
		223 : loc, .loc [ bool ], neq
		224 : loc, .id, neq
		225 : loc, .loc [ bool ], +
		226 : loc, .id, +
		227 : loc, .loc [ bool ], -
		228 : loc, .id, -
		229 : loc, .loc [ bool ], *
		230 : loc, .id, *
		231 : loc, .loc [ bool ], /
		232 : loc, .id, /
		233 : loc, .loc [ bool ], mod
		234 : loc, .id, mod
		235 : loc, .loc [ bool ], [
		236 : loc, .id, [
	[160] 
		0 : expr, expr - .term, <
		1 : expr, expr - .term, <=
		2 : expr, expr - .term, >=
		3 : expr, expr - .term, >
		4 : expr, expr - .term, )
		5 : expr, expr - .term, or
		6 : expr, expr - .term, and
		7 : expr, expr - .term, eq
		8 : expr, expr - .term, neq
		9 : expr, expr - .term, +
		10 : expr, expr - .term, -
		11 : term, .term * unary, <
		12 : term, .term / unary, <
		13 : term, .term mod unary, <
		14 : term, .unary, <
		15 : term, .term * unary, <=
		16 : term, .term / unary, <=
		17 : term, .term mod unary, <=
		18 : term, .unary, <=
		19 : term, .term * unary, >=
		20 : term, .term / unary, >=
		21 : term, .term mod unary, >=
		22 : term, .unary, >=
		23 : term, .term * unary, >
		24 : term, .term / unary, >
		25 : term, .term mod unary, >
		26 : term, .unary, >
		27 : term, .term * unary, )
		28 : term, .term / unary, )
		29 : term, .term mod unary, )
		30 : term, .unary, )
		31 : term, .term * unary, or
		32 : term, .term / unary, or
		33 : term, .term mod unary, or
		34 : term, .unary, or
		35 : term, .term * unary, and
		36 : term, .term / unary, and
		37 : term, .term mod unary, and
		38 : term, .unary, and
		39 : term, .term * unary, eq
		40 : term, .term / unary, eq
		41 : term, .term mod unary, eq
		42 : term, .unary, eq
		43 : term, .term * unary, neq
		44 : term, .term / unary, neq
		45 : term, .term mod unary, neq
		46 : term, .unary, neq
		47 : term, .term * unary, +
		48 : term, .term / unary, +
		49 : term, .term mod unary, +
		50 : term, .unary, +
		51 : term, .term * unary, -
		52 : term, .term / unary, -
		53 : term, .term mod unary, -
		54 : term, .unary, -
		55 : term, .term * unary, *
		56 : term, .term / unary, *
		57 : term, .term mod unary, *
		58 : term, .unary, *
		59 : term, .term * unary, /
		60 : term, .term / unary, /
		61 : term, .term mod unary, /
		62 : term, .unary, /
		63 : term, .term * unary, mod
		64 : term, .term / unary, mod
		65 : term, .term mod unary, mod
		66 : term, .unary, mod
		67 : unary, .! unary, <
		68 : unary, .- unary, <
		69 : unary, .factor, <
		70 : unary, .! unary, <=
		71 : unary, .- unary, <=
		72 : unary, .factor, <=
		73 : unary, .! unary, >=
		74 : unary, .- unary, >=
		75 : unary, .factor, >=
		76 : unary, .! unary, >
		77 : unary, .- unary, >
		78 : unary, .factor, >
		79 : unary, .! unary, )
		80 : unary, .- unary, )
		81 : unary, .factor, )
		82 : unary, .! unary, or
		83 : unary, .- unary, or
		84 : unary, .factor, or
		85 : unary, .! unary, and
		86 : unary, .- unary, and
		87 : unary, .factor, and
		88 : unary, .! unary, eq
		89 : unary, .- unary, eq
		90 : unary, .factor, eq
		91 : unary, .! unary, neq
		92 : unary, .- unary, neq
		93 : unary, .factor, neq
		94 : unary, .! unary, +
		95 : unary, .- unary, +
		96 : unary, .factor, +
		97 : unary, .! unary, -
		98 : unary, .- unary, -
		99 : unary, .factor, -
		100 : unary, .! unary, *
		101 : unary, .- unary, *
		102 : unary, .factor, *
		103 : unary, .! unary, /
		104 : unary, .- unary, /
		105 : unary, .factor, /
		106 : unary, .! unary, mod
		107 : unary, .- unary, mod
		108 : unary, .factor, mod
		109 : factor, .( bool ), <
		110 : factor, .loc, <
		111 : factor, .id ( args ), <
		112 : factor, .num, <
		113 : factor, .real, <
		114 : factor, .true, <
		115 : factor, .false, <
		116 : factor, .( bool ), <=
		117 : factor, .loc, <=
		118 : factor, .id ( args ), <=
		119 : factor, .num, <=
		120 : factor, .real, <=
		121 : factor, .true, <=
		122 : factor, .false, <=
		123 : factor, .( bool ), >=
		124 : factor, .loc, >=
		125 : factor, .id ( args ), >=
		126 : factor, .num, >=
		127 : factor, .real, >=
		128 : factor, .true, >=
		129 : factor, .false, >=
		130 : factor, .( bool ), >
		131 : factor, .loc, >
		132 : factor, .id ( args ), >
		133 : factor, .num, >
		134 : factor, .real, >
		135 : factor, .true, >
		136 : factor, .false, >
		137 : factor, .( bool ), )
		138 : factor, .loc, )
		139 : factor, .id ( args ), )
		140 : factor, .num, )
		141 : factor, .real, )
		142 : factor, .true, )
		143 : factor, .false, )
		144 : factor, .( bool ), or
		145 : factor, .loc, or
		146 : factor, .id ( args ), or
		147 : factor, .num, or
		148 : factor, .real, or
		149 : factor, .true, or
		150 : factor, .false, or
		151 : factor, .( bool ), and
		152 : factor, .loc, and
		153 : factor, .id ( args ), and
		154 : factor, .num, and
		155 : factor, .real, and
		156 : factor, .true, and
		157 : factor, .false, and
		158 : factor, .( bool ), eq
		159 : factor, .loc, eq
		160 : factor, .id ( args ), eq
		161 : factor, .num, eq
		162 : factor, .real, eq
		163 : factor, .true, eq
		164 : factor, .false, eq
		165 : factor, .( bool ), neq
		166 : factor, .loc, neq
		167 : factor, .id ( args ), neq
		168 : factor, .num, neq
		169 : factor, .real, neq
		170 : factor, .true, neq
		171 : factor, .false, neq
		172 : factor, .( bool ), +
		173 : factor, .loc, +
		174 : factor, .id ( args ), +
		175 : factor, .num, +
		176 : factor, .real, +
		177 : factor, .true, +
		178 : factor, .false, +
		179 : factor, .( bool ), -
		180 : factor, .loc, -
		181 : factor, .id ( args ), -
		182 : factor, .num, -
		183 : factor, .real, -
		184 : factor, .true, -
		185 : factor, .false, -
		186 : factor, .( bool ), *
		187 : factor, .loc, *
		188 : factor, .id ( args ), *
		189 : factor, .num, *
		190 : factor, .real, *
		191 : factor, .true, *
		192 : factor, .false, *
		193 : factor, .( bool ), /
		194 : factor, .loc, /
		195 : factor, .id ( args ), /
		196 : factor, .num, /
		197 : factor, .real, /
		198 : factor, .true, /
		199 : factor, .false, /
		200 : factor, .( bool ), mod
		201 : factor, .loc, mod
		202 : factor, .id ( args ), mod
		203 : factor, .num, mod
		204 : factor, .real, mod
		205 : factor, .true, mod
		206 : factor, .false, mod
		207 : loc, .loc [ bool ], <
		208 : loc, .id, <
		209 : loc, .loc [ bool ], <=
		210 : loc, .id, <=
		211 : loc, .loc [ bool ], >=
		212 : loc, .id, >=
		213 : loc, .loc [ bool ], >
		214 : loc, .id, >
		215 : loc, .loc [ bool ], )
		216 : loc, .id, )
		217 : loc, .loc [ bool ], or
		218 : loc, .id, or
		219 : loc, .loc [ bool ], and
		220 : loc, .id, and
		221 : loc, .loc [ bool ], eq
		222 : loc, .id, eq
		223 : loc, .loc [ bool ], neq
		224 : loc, .id, neq
		225 : loc, .loc [ bool ], +
		226 : loc, .id, +
		227 : loc, .loc [ bool ], -
		228 : loc, .id, -
		229 : loc, .loc [ bool ], *
		230 : loc, .id, *
		231 : loc, .loc [ bool ], /
		232 : loc, .id, /
		233 : loc, .loc [ bool ], mod
		234 : loc, .id, mod
		235 : loc, .loc [ bool ], [
		236 : loc, .id, [
	[161] 
		0 : term, term * .unary, <
		1 : term, term * .unary, <=
		2 : term, term * .unary, >=
		3 : term, term * .unary, >
		4 : term, term * .unary, )
		5 : term, term * .unary, or
		6 : term, term * .unary, and
		7 : term, term * .unary, eq
		8 : term, term * .unary, neq
		9 : term, term * .unary, +
		10 : term, term * .unary, -
		11 : term, term * .unary, *
		12 : term, term * .unary, /
		13 : term, term * .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, )
		27 : unary, .- unary, )
		28 : unary, .factor, )
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), )
		85 : factor, .loc, )
		86 : factor, .id ( args ), )
		87 : factor, .num, )
		88 : factor, .real, )
		89 : factor, .true, )
		90 : factor, .false, )
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], )
		163 : loc, .id, )
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[162] 
		0 : term, term / .unary, <
		1 : term, term / .unary, <=
		2 : term, term / .unary, >=
		3 : term, term / .unary, >
		4 : term, term / .unary, )
		5 : term, term / .unary, or
		6 : term, term / .unary, and
		7 : term, term / .unary, eq
		8 : term, term / .unary, neq
		9 : term, term / .unary, +
		10 : term, term / .unary, -
		11 : term, term / .unary, *
		12 : term, term / .unary, /
		13 : term, term / .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, )
		27 : unary, .- unary, )
		28 : unary, .factor, )
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), )
		85 : factor, .loc, )
		86 : factor, .id ( args ), )
		87 : factor, .num, )
		88 : factor, .real, )
		89 : factor, .true, )
		90 : factor, .false, )
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], )
		163 : loc, .id, )
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[163] 
		0 : term, term mod .unary, <
		1 : term, term mod .unary, <=
		2 : term, term mod .unary, >=
		3 : term, term mod .unary, >
		4 : term, term mod .unary, )
		5 : term, term mod .unary, or
		6 : term, term mod .unary, and
		7 : term, term mod .unary, eq
		8 : term, term mod .unary, neq
		9 : term, term mod .unary, +
		10 : term, term mod .unary, -
		11 : term, term mod .unary, *
		12 : term, term mod .unary, /
		13 : term, term mod .unary, mod
		14 : unary, .! unary, <
		15 : unary, .- unary, <
		16 : unary, .factor, <
		17 : unary, .! unary, <=
		18 : unary, .- unary, <=
		19 : unary, .factor, <=
		20 : unary, .! unary, >=
		21 : unary, .- unary, >=
		22 : unary, .factor, >=
		23 : unary, .! unary, >
		24 : unary, .- unary, >
		25 : unary, .factor, >
		26 : unary, .! unary, )
		27 : unary, .- unary, )
		28 : unary, .factor, )
		29 : unary, .! unary, or
		30 : unary, .- unary, or
		31 : unary, .factor, or
		32 : unary, .! unary, and
		33 : unary, .- unary, and
		34 : unary, .factor, and
		35 : unary, .! unary, eq
		36 : unary, .- unary, eq
		37 : unary, .factor, eq
		38 : unary, .! unary, neq
		39 : unary, .- unary, neq
		40 : unary, .factor, neq
		41 : unary, .! unary, +
		42 : unary, .- unary, +
		43 : unary, .factor, +
		44 : unary, .! unary, -
		45 : unary, .- unary, -
		46 : unary, .factor, -
		47 : unary, .! unary, *
		48 : unary, .- unary, *
		49 : unary, .factor, *
		50 : unary, .! unary, /
		51 : unary, .- unary, /
		52 : unary, .factor, /
		53 : unary, .! unary, mod
		54 : unary, .- unary, mod
		55 : unary, .factor, mod
		56 : factor, .( bool ), <
		57 : factor, .loc, <
		58 : factor, .id ( args ), <
		59 : factor, .num, <
		60 : factor, .real, <
		61 : factor, .true, <
		62 : factor, .false, <
		63 : factor, .( bool ), <=
		64 : factor, .loc, <=
		65 : factor, .id ( args ), <=
		66 : factor, .num, <=
		67 : factor, .real, <=
		68 : factor, .true, <=
		69 : factor, .false, <=
		70 : factor, .( bool ), >=
		71 : factor, .loc, >=
		72 : factor, .id ( args ), >=
		73 : factor, .num, >=
		74 : factor, .real, >=
		75 : factor, .true, >=
		76 : factor, .false, >=
		77 : factor, .( bool ), >
		78 : factor, .loc, >
		79 : factor, .id ( args ), >
		80 : factor, .num, >
		81 : factor, .real, >
		82 : factor, .true, >
		83 : factor, .false, >
		84 : factor, .( bool ), )
		85 : factor, .loc, )
		86 : factor, .id ( args ), )
		87 : factor, .num, )
		88 : factor, .real, )
		89 : factor, .true, )
		90 : factor, .false, )
		91 : factor, .( bool ), or
		92 : factor, .loc, or
		93 : factor, .id ( args ), or
		94 : factor, .num, or
		95 : factor, .real, or
		96 : factor, .true, or
		97 : factor, .false, or
		98 : factor, .( bool ), and
		99 : factor, .loc, and
		100 : factor, .id ( args ), and
		101 : factor, .num, and
		102 : factor, .real, and
		103 : factor, .true, and
		104 : factor, .false, and
		105 : factor, .( bool ), eq
		106 : factor, .loc, eq
		107 : factor, .id ( args ), eq
		108 : factor, .num, eq
		109 : factor, .real, eq
		110 : factor, .true, eq
		111 : factor, .false, eq
		112 : factor, .( bool ), neq
		113 : factor, .loc, neq
		114 : factor, .id ( args ), neq
		115 : factor, .num, neq
		116 : factor, .real, neq
		117 : factor, .true, neq
		118 : factor, .false, neq
		119 : factor, .( bool ), +
		120 : factor, .loc, +
		121 : factor, .id ( args ), +
		122 : factor, .num, +
		123 : factor, .real, +
		124 : factor, .true, +
		125 : factor, .false, +
		126 : factor, .( bool ), -
		127 : factor, .loc, -
		128 : factor, .id ( args ), -
		129 : factor, .num, -
		130 : factor, .real, -
		131 : factor, .true, -
		132 : factor, .false, -
		133 : factor, .( bool ), *
		134 : factor, .loc, *
		135 : factor, .id ( args ), *
		136 : factor, .num, *
		137 : factor, .real, *
		138 : factor, .true, *
		139 : factor, .false, *
		140 : factor, .( bool ), /
		141 : factor, .loc, /
		142 : factor, .id ( args ), /
		143 : factor, .num, /
		144 : factor, .real, /
		145 : factor, .true, /
		146 : factor, .false, /
		147 : factor, .( bool ), mod
		148 : factor, .loc, mod
		149 : factor, .id ( args ), mod
		150 : factor, .num, mod
		151 : factor, .real, mod
		152 : factor, .true, mod
		153 : factor, .false, mod
		154 : loc, .loc [ bool ], <
		155 : loc, .id, <
		156 : loc, .loc [ bool ], <=
		157 : loc, .id, <=
		158 : loc, .loc [ bool ], >=
		159 : loc, .id, >=
		160 : loc, .loc [ bool ], >
		161 : loc, .id, >
		162 : loc, .loc [ bool ], )
		163 : loc, .id, )
		164 : loc, .loc [ bool ], or
		165 : loc, .id, or
		166 : loc, .loc [ bool ], and
		167 : loc, .id, and
		168 : loc, .loc [ bool ], eq
		169 : loc, .id, eq
		170 : loc, .loc [ bool ], neq
		171 : loc, .id, neq
		172 : loc, .loc [ bool ], +
		173 : loc, .id, +
		174 : loc, .loc [ bool ], -
		175 : loc, .id, -
		176 : loc, .loc [ bool ], *
		177 : loc, .id, *
		178 : loc, .loc [ bool ], /
		179 : loc, .id, /
		180 : loc, .loc [ bool ], mod
		181 : loc, .id, mod
		182 : loc, .loc [ bool ], [
		183 : loc, .id, [
	[164] 
		0 : factor, id ( .args ), <
		1 : factor, id ( .args ), <=
		2 : factor, id ( .args ), >=
		3 : factor, id ( .args ), >
		4 : factor, id ( .args ), )
		5 : factor, id ( .args ), or
		6 : factor, id ( .args ), and
		7 : factor, id ( .args ), eq
		8 : factor, id ( .args ), neq
		9 : factor, id ( .args ), +
		10 : factor, id ( .args ), -
		11 : factor, id ( .args ), *
		12 : factor, id ( .args ), /
		13 : factor, id ( .args ), mod
		14 : args, .args , arg, )
		15 : args, .arg, )
		16 : args, ., )
		17 : args, .args , arg, ,
		18 : args, .arg, ,
		19 : args, ., ,
		20 : arg, .loc, )
		21 : arg, .bool, )
		22 : arg, .loc, ,
		23 : arg, .bool, ,
		24 : loc, .loc [ bool ], )
		25 : loc, .id, )
		26 : bool, .bool or join, )
		27 : bool, .join, )
		28 : loc, .loc [ bool ], ,
		29 : loc, .id, ,
		30 : bool, .bool or join, ,
		31 : bool, .join, ,
		32 : loc, .loc [ bool ], [
		33 : loc, .id, [
		34 : bool, .bool or join, or
		35 : bool, .join, or
		36 : join, .join and equality, )
		37 : join, .equality, )
		38 : join, .join and equality, ,
		39 : join, .equality, ,
		40 : join, .join and equality, or
		41 : join, .equality, or
		42 : join, .join and equality, and
		43 : join, .equality, and
		44 : equality, .equality eq rel, )
		45 : equality, .equality neq rel, )
		46 : equality, .rel, )
		47 : equality, .equality eq rel, ,
		48 : equality, .equality neq rel, ,
		49 : equality, .rel, ,
		50 : equality, .equality eq rel, or
		51 : equality, .equality neq rel, or
		52 : equality, .rel, or
		53 : equality, .equality eq rel, and
		54 : equality, .equality neq rel, and
		55 : equality, .rel, and
		56 : equality, .equality eq rel, eq
		57 : equality, .equality neq rel, eq
		58 : equality, .rel, eq
		59 : equality, .equality eq rel, neq
		60 : equality, .equality neq rel, neq
		61 : equality, .rel, neq
		62 : rel, .expr < expr, )
		63 : rel, .expr <= expr, )
		64 : rel, .expr >= expr, )
		65 : rel, .expr > expr, )
		66 : rel, .expr, )
		67 : rel, .expr < expr, ,
		68 : rel, .expr <= expr, ,
		69 : rel, .expr >= expr, ,
		70 : rel, .expr > expr, ,
		71 : rel, .expr, ,
		72 : rel, .expr < expr, or
		73 : rel, .expr <= expr, or
		74 : rel, .expr >= expr, or
		75 : rel, .expr > expr, or
		76 : rel, .expr, or
		77 : rel, .expr < expr, and
		78 : rel, .expr <= expr, and
		79 : rel, .expr >= expr, and
		80 : rel, .expr > expr, and
		81 : rel, .expr, and
		82 : rel, .expr < expr, eq
		83 : rel, .expr <= expr, eq
		84 : rel, .expr >= expr, eq
		85 : rel, .expr > expr, eq
		86 : rel, .expr, eq
		87 : rel, .expr < expr, neq
		88 : rel, .expr <= expr, neq
		89 : rel, .expr >= expr, neq
		90 : rel, .expr > expr, neq
		91 : rel, .expr, neq
		92 : expr, .expr + term, <
		93 : expr, .expr - term, <
		94 : expr, .term, <
		95 : expr, .expr + term, <=
		96 : expr, .expr - term, <=
		97 : expr, .term, <=
		98 : expr, .expr + term, >=
		99 : expr, .expr - term, >=
		100 : expr, .term, >=
		101 : expr, .expr + term, >
		102 : expr, .expr - term, >
		103 : expr, .term, >
		104 : expr, .expr + term, )
		105 : expr, .expr - term, )
		106 : expr, .term, )
		107 : expr, .expr + term, ,
		108 : expr, .expr - term, ,
		109 : expr, .term, ,
		110 : expr, .expr + term, or
		111 : expr, .expr - term, or
		112 : expr, .term, or
		113 : expr, .expr + term, and
		114 : expr, .expr - term, and
		115 : expr, .term, and
		116 : expr, .expr + term, eq
		117 : expr, .expr - term, eq
		118 : expr, .term, eq
		119 : expr, .expr + term, neq
		120 : expr, .expr - term, neq
		121 : expr, .term, neq
		122 : expr, .expr + term, +
		123 : expr, .expr - term, +
		124 : expr, .term, +
		125 : expr, .expr + term, -
		126 : expr, .expr - term, -
		127 : expr, .term, -
		128 : term, .term * unary, <
		129 : term, .term / unary, <
		130 : term, .term mod unary, <
		131 : term, .unary, <
		132 : term, .term * unary, <=
		133 : term, .term / unary, <=
		134 : term, .term mod unary, <=
		135 : term, .unary, <=
		136 : term, .term * unary, >=
		137 : term, .term / unary, >=
		138 : term, .term mod unary, >=
		139 : term, .unary, >=
		140 : term, .term * unary, >
		141 : term, .term / unary, >
		142 : term, .term mod unary, >
		143 : term, .unary, >
		144 : term, .term * unary, )
		145 : term, .term / unary, )
		146 : term, .term mod unary, )
		147 : term, .unary, )
		148 : term, .term * unary, ,
		149 : term, .term / unary, ,
		150 : term, .term mod unary, ,
		151 : term, .unary, ,
		152 : term, .term * unary, or
		153 : term, .term / unary, or
		154 : term, .term mod unary, or
		155 : term, .unary, or
		156 : term, .term * unary, and
		157 : term, .term / unary, and
		158 : term, .term mod unary, and
		159 : term, .unary, and
		160 : term, .term * unary, eq
		161 : term, .term / unary, eq
		162 : term, .term mod unary, eq
		163 : term, .unary, eq
		164 : term, .term * unary, neq
		165 : term, .term / unary, neq
		166 : term, .term mod unary, neq
		167 : term, .unary, neq
		168 : term, .term * unary, +
		169 : term, .term / unary, +
		170 : term, .term mod unary, +
		171 : term, .unary, +
		172 : term, .term * unary, -
		173 : term, .term / unary, -
		174 : term, .term mod unary, -
		175 : term, .unary, -
		176 : term, .term * unary, *
		177 : term, .term / unary, *
		178 : term, .term mod unary, *
		179 : term, .unary, *
		180 : term, .term * unary, /
		181 : term, .term / unary, /
		182 : term, .term mod unary, /
		183 : term, .unary, /
		184 : term, .term * unary, mod
		185 : term, .term / unary, mod
		186 : term, .term mod unary, mod
		187 : term, .unary, mod
		188 : unary, .! unary, <
		189 : unary, .- unary, <
		190 : unary, .factor, <
		191 : unary, .! unary, <=
		192 : unary, .- unary, <=
		193 : unary, .factor, <=
		194 : unary, .! unary, >=
		195 : unary, .- unary, >=
		196 : unary, .factor, >=
		197 : unary, .! unary, >
		198 : unary, .- unary, >
		199 : unary, .factor, >
		200 : unary, .! unary, )
		201 : unary, .- unary, )
		202 : unary, .factor, )
		203 : unary, .! unary, ,
		204 : unary, .- unary, ,
		205 : unary, .factor, ,
		206 : unary, .! unary, or
		207 : unary, .- unary, or
		208 : unary, .factor, or
		209 : unary, .! unary, and
		210 : unary, .- unary, and
		211 : unary, .factor, and
		212 : unary, .! unary, eq
		213 : unary, .- unary, eq
		214 : unary, .factor, eq
		215 : unary, .! unary, neq
		216 : unary, .- unary, neq
		217 : unary, .factor, neq
		218 : unary, .! unary, +
		219 : unary, .- unary, +
		220 : unary, .factor, +
		221 : unary, .! unary, -
		222 : unary, .- unary, -
		223 : unary, .factor, -
		224 : unary, .! unary, *
		225 : unary, .- unary, *
		226 : unary, .factor, *
		227 : unary, .! unary, /
		228 : unary, .- unary, /
		229 : unary, .factor, /
		230 : unary, .! unary, mod
		231 : unary, .- unary, mod
		232 : unary, .factor, mod
		233 : factor, .( bool ), <
		234 : factor, .loc, <
		235 : factor, .id ( args ), <
		236 : factor, .num, <
		237 : factor, .real, <
		238 : factor, .true, <
		239 : factor, .false, <
		240 : factor, .( bool ), <=
		241 : factor, .loc, <=
		242 : factor, .id ( args ), <=
		243 : factor, .num, <=
		244 : factor, .real, <=
		245 : factor, .true, <=
		246 : factor, .false, <=
		247 : factor, .( bool ), >=
		248 : factor, .loc, >=
		249 : factor, .id ( args ), >=
		250 : factor, .num, >=
		251 : factor, .real, >=
		252 : factor, .true, >=
		253 : factor, .false, >=
		254 : factor, .( bool ), >
		255 : factor, .loc, >
		256 : factor, .id ( args ), >
		257 : factor, .num, >
		258 : factor, .real, >
		259 : factor, .true, >
		260 : factor, .false, >
		261 : factor, .( bool ), )
		262 : factor, .loc, )
		263 : factor, .id ( args ), )
		264 : factor, .num, )
		265 : factor, .real, )
		266 : factor, .true, )
		267 : factor, .false, )
		268 : factor, .( bool ), ,
		269 : factor, .loc, ,
		270 : factor, .id ( args ), ,
		271 : factor, .num, ,
		272 : factor, .real, ,
		273 : factor, .true, ,
		274 : factor, .false, ,
		275 : factor, .( bool ), or
		276 : factor, .loc, or
		277 : factor, .id ( args ), or
		278 : factor, .num, or
		279 : factor, .real, or
		280 : factor, .true, or
		281 : factor, .false, or
		282 : factor, .( bool ), and
		283 : factor, .loc, and
		284 : factor, .id ( args ), and
		285 : factor, .num, and
		286 : factor, .real, and
		287 : factor, .true, and
		288 : factor, .false, and
		289 : factor, .( bool ), eq
		290 : factor, .loc, eq
		291 : factor, .id ( args ), eq
		292 : factor, .num, eq
		293 : factor, .real, eq
		294 : factor, .true, eq
		295 : factor, .false, eq
		296 : factor, .( bool ), neq
		297 : factor, .loc, neq
		298 : factor, .id ( args ), neq
		299 : factor, .num, neq
		300 : factor, .real, neq
		301 : factor, .true, neq
		302 : factor, .false, neq
		303 : factor, .( bool ), +
		304 : factor, .loc, +
		305 : factor, .id ( args ), +
		306 : factor, .num, +
		307 : factor, .real, +
		308 : factor, .true, +
		309 : factor, .false, +
		310 : factor, .( bool ), -
		311 : factor, .loc, -
		312 : factor, .id ( args ), -
		313 : factor, .num, -
		314 : factor, .real, -
		315 : factor, .true, -
		316 : factor, .false, -
		317 : factor, .( bool ), *
		318 : factor, .loc, *
		319 : factor, .id ( args ), *
		320 : factor, .num, *
		321 : factor, .real, *
		322 : factor, .true, *
		323 : factor, .false, *
		324 : factor, .( bool ), /
		325 : factor, .loc, /
		326 : factor, .id ( args ), /
		327 : factor, .num, /
		328 : factor, .real, /
		329 : factor, .true, /
		330 : factor, .false, /
		331 : factor, .( bool ), mod
		332 : factor, .loc, mod
		333 : factor, .id ( args ), mod
		334 : factor, .num, mod
		335 : factor, .real, mod
		336 : factor, .true, mod
		337 : factor, .false, mod
		338 : loc, .loc [ bool ], <
		339 : loc, .id, <
		340 : loc, .loc [ bool ], <=
		341 : loc, .id, <=
		342 : loc, .loc [ bool ], >=
		343 : loc, .id, >=
		344 : loc, .loc [ bool ], >
		345 : loc, .id, >
		346 : loc, .loc [ bool ], or
		347 : loc, .id, or
		348 : loc, .loc [ bool ], and
		349 : loc, .id, and
		350 : loc, .loc [ bool ], eq
		351 : loc, .id, eq
		352 : loc, .loc [ bool ], neq
		353 : loc, .id, neq
		354 : loc, .loc [ bool ], +
		355 : loc, .id, +
		356 : loc, .loc [ bool ], -
		357 : loc, .id, -
		358 : loc, .loc [ bool ], *
		359 : loc, .id, *
		360 : loc, .loc [ bool ], /
		361 : loc, .id, /
		362 : loc, .loc [ bool ], mod
		363 : loc, .id, mod
	[165] 
		0 : factor, ( bool .), <
		1 : factor, ( bool .), <=
		2 : factor, ( bool .), >=
		3 : factor, ( bool .), >
		4 : factor, ( bool .), )
		5 : factor, ( bool .), or
		6 : factor, ( bool .), and
		7 : factor, ( bool .), eq
		8 : factor, ( bool .), neq
		9 : factor, ( bool .), +
		10 : factor, ( bool .), -
		11 : factor, ( bool .), *
		12 : factor, ( bool .), /
		13 : factor, ( bool .), mod
		14 : bool, bool .or join, )
		15 : bool, bool .or join, or
	[166] 
		0 : unary, - unary ., <
		1 : unary, - unary ., <=
		2 : unary, - unary ., >=
		3 : unary, - unary ., >
		4 : unary, - unary ., )
		5 : unary, - unary ., or
		6 : unary, - unary ., and
		7 : unary, - unary ., eq
		8 : unary, - unary ., neq
		9 : unary, - unary ., +
		10 : unary, - unary ., -
		11 : unary, - unary ., *
		12 : unary, - unary ., /
		13 : unary, - unary ., mod
	[167] 
		0 : unary, ! unary ., <
		1 : unary, ! unary ., <=
		2 : unary, ! unary ., >=
		3 : unary, ! unary ., >
		4 : unary, ! unary ., )
		5 : unary, ! unary ., or
		6 : unary, ! unary ., and
		7 : unary, ! unary ., eq
		8 : unary, ! unary ., neq
		9 : unary, ! unary ., +
		10 : unary, ! unary ., -
		11 : unary, ! unary ., *
		12 : unary, ! unary ., /
		13 : unary, ! unary ., mod
	[168] 
		0 : stmt, while N ( bool .) M stmt, }
		1 : stmt, while N ( bool .) M stmt, [
		2 : stmt, while N ( bool .) M stmt, id
		3 : stmt, while N ( bool .) M stmt, if
		4 : stmt, while N ( bool .) M stmt, while
		5 : stmt, while N ( bool .) M stmt, do
		6 : stmt, while N ( bool .) M stmt, return
		7 : stmt, while N ( bool .) M stmt, {
		8 : stmt, while N ( bool .) M stmt, else
		9 : bool, bool .or join, )
		10 : bool, bool .or join, or
	[169] 
		0 : stmt, do N stmt while .( bool ) M ;, }
		1 : stmt, do N stmt while .( bool ) M ;, [
		2 : stmt, do N stmt while .( bool ) M ;, id
		3 : stmt, do N stmt while .( bool ) M ;, if
		4 : stmt, do N stmt while .( bool ) M ;, while
		5 : stmt, do N stmt while .( bool ) M ;, do
		6 : stmt, do N stmt while .( bool ) M ;, return
		7 : stmt, do N stmt while .( bool ) M ;, {
		8 : stmt, do N stmt while .( bool ) M ;, else
	[170] 
		0 : stmt, loc = .bool ;, while
		1 : bool, .bool or join, ;
		2 : bool, .join, ;
		3 : bool, .bool or join, or
		4 : bool, .join, or
		5 : join, .join and equality, ;
		6 : join, .equality, ;
		7 : join, .join and equality, or
		8 : join, .equality, or
		9 : join, .join and equality, and
		10 : join, .equality, and
		11 : equality, .equality eq rel, ;
		12 : equality, .equality neq rel, ;
		13 : equality, .rel, ;
		14 : equality, .equality eq rel, or
		15 : equality, .equality neq rel, or
		16 : equality, .rel, or
		17 : equality, .equality eq rel, and
		18 : equality, .equality neq rel, and
		19 : equality, .rel, and
		20 : equality, .equality eq rel, eq
		21 : equality, .equality neq rel, eq
		22 : equality, .rel, eq
		23 : equality, .equality eq rel, neq
		24 : equality, .equality neq rel, neq
		25 : equality, .rel, neq
		26 : rel, .expr < expr, ;
		27 : rel, .expr <= expr, ;
		28 : rel, .expr >= expr, ;
		29 : rel, .expr > expr, ;
		30 : rel, .expr, ;
		31 : rel, .expr < expr, or
		32 : rel, .expr <= expr, or
		33 : rel, .expr >= expr, or
		34 : rel, .expr > expr, or
		35 : rel, .expr, or
		36 : rel, .expr < expr, and
		37 : rel, .expr <= expr, and
		38 : rel, .expr >= expr, and
		39 : rel, .expr > expr, and
		40 : rel, .expr, and
		41 : rel, .expr < expr, eq
		42 : rel, .expr <= expr, eq
		43 : rel, .expr >= expr, eq
		44 : rel, .expr > expr, eq
		45 : rel, .expr, eq
		46 : rel, .expr < expr, neq
		47 : rel, .expr <= expr, neq
		48 : rel, .expr >= expr, neq
		49 : rel, .expr > expr, neq
		50 : rel, .expr, neq
		51 : expr, .expr + term, <
		52 : expr, .expr - term, <
		53 : expr, .term, <
		54 : expr, .expr + term, <=
		55 : expr, .expr - term, <=
		56 : expr, .term, <=
		57 : expr, .expr + term, >=
		58 : expr, .expr - term, >=
		59 : expr, .term, >=
		60 : expr, .expr + term, >
		61 : expr, .expr - term, >
		62 : expr, .term, >
		63 : expr, .expr + term, ;
		64 : expr, .expr - term, ;
		65 : expr, .term, ;
		66 : expr, .expr + term, or
		67 : expr, .expr - term, or
		68 : expr, .term, or
		69 : expr, .expr + term, and
		70 : expr, .expr - term, and
		71 : expr, .term, and
		72 : expr, .expr + term, eq
		73 : expr, .expr - term, eq
		74 : expr, .term, eq
		75 : expr, .expr + term, neq
		76 : expr, .expr - term, neq
		77 : expr, .term, neq
		78 : expr, .expr + term, +
		79 : expr, .expr - term, +
		80 : expr, .term, +
		81 : expr, .expr + term, -
		82 : expr, .expr - term, -
		83 : expr, .term, -
		84 : term, .term * unary, <
		85 : term, .term / unary, <
		86 : term, .term mod unary, <
		87 : term, .unary, <
		88 : term, .term * unary, <=
		89 : term, .term / unary, <=
		90 : term, .term mod unary, <=
		91 : term, .unary, <=
		92 : term, .term * unary, >=
		93 : term, .term / unary, >=
		94 : term, .term mod unary, >=
		95 : term, .unary, >=
		96 : term, .term * unary, >
		97 : term, .term / unary, >
		98 : term, .term mod unary, >
		99 : term, .unary, >
		100 : term, .term * unary, ;
		101 : term, .term / unary, ;
		102 : term, .term mod unary, ;
		103 : term, .unary, ;
		104 : term, .term * unary, or
		105 : term, .term / unary, or
		106 : term, .term mod unary, or
		107 : term, .unary, or
		108 : term, .term * unary, and
		109 : term, .term / unary, and
		110 : term, .term mod unary, and
		111 : term, .unary, and
		112 : term, .term * unary, eq
		113 : term, .term / unary, eq
		114 : term, .term mod unary, eq
		115 : term, .unary, eq
		116 : term, .term * unary, neq
		117 : term, .term / unary, neq
		118 : term, .term mod unary, neq
		119 : term, .unary, neq
		120 : term, .term * unary, +
		121 : term, .term / unary, +
		122 : term, .term mod unary, +
		123 : term, .unary, +
		124 : term, .term * unary, -
		125 : term, .term / unary, -
		126 : term, .term mod unary, -
		127 : term, .unary, -
		128 : term, .term * unary, *
		129 : term, .term / unary, *
		130 : term, .term mod unary, *
		131 : term, .unary, *
		132 : term, .term * unary, /
		133 : term, .term / unary, /
		134 : term, .term mod unary, /
		135 : term, .unary, /
		136 : term, .term * unary, mod
		137 : term, .term / unary, mod
		138 : term, .term mod unary, mod
		139 : term, .unary, mod
		140 : unary, .! unary, <
		141 : unary, .- unary, <
		142 : unary, .factor, <
		143 : unary, .! unary, <=
		144 : unary, .- unary, <=
		145 : unary, .factor, <=
		146 : unary, .! unary, >=
		147 : unary, .- unary, >=
		148 : unary, .factor, >=
		149 : unary, .! unary, >
		150 : unary, .- unary, >
		151 : unary, .factor, >
		152 : unary, .! unary, ;
		153 : unary, .- unary, ;
		154 : unary, .factor, ;
		155 : unary, .! unary, or
		156 : unary, .- unary, or
		157 : unary, .factor, or
		158 : unary, .! unary, and
		159 : unary, .- unary, and
		160 : unary, .factor, and
		161 : unary, .! unary, eq
		162 : unary, .- unary, eq
		163 : unary, .factor, eq
		164 : unary, .! unary, neq
		165 : unary, .- unary, neq
		166 : unary, .factor, neq
		167 : unary, .! unary, +
		168 : unary, .- unary, +
		169 : unary, .factor, +
		170 : unary, .! unary, -
		171 : unary, .- unary, -
		172 : unary, .factor, -
		173 : unary, .! unary, *
		174 : unary, .- unary, *
		175 : unary, .factor, *
		176 : unary, .! unary, /
		177 : unary, .- unary, /
		178 : unary, .factor, /
		179 : unary, .! unary, mod
		180 : unary, .- unary, mod
		181 : unary, .factor, mod
		182 : factor, .( bool ), <
		183 : factor, .loc, <
		184 : factor, .id ( args ), <
		185 : factor, .num, <
		186 : factor, .real, <
		187 : factor, .true, <
		188 : factor, .false, <
		189 : factor, .( bool ), <=
		190 : factor, .loc, <=
		191 : factor, .id ( args ), <=
		192 : factor, .num, <=
		193 : factor, .real, <=
		194 : factor, .true, <=
		195 : factor, .false, <=
		196 : factor, .( bool ), >=
		197 : factor, .loc, >=
		198 : factor, .id ( args ), >=
		199 : factor, .num, >=
		200 : factor, .real, >=
		201 : factor, .true, >=
		202 : factor, .false, >=
		203 : factor, .( bool ), >
		204 : factor, .loc, >
		205 : factor, .id ( args ), >
		206 : factor, .num, >
		207 : factor, .real, >
		208 : factor, .true, >
		209 : factor, .false, >
		210 : factor, .( bool ), ;
		211 : factor, .loc, ;
		212 : factor, .id ( args ), ;
		213 : factor, .num, ;
		214 : factor, .real, ;
		215 : factor, .true, ;
		216 : factor, .false, ;
		217 : factor, .( bool ), or
		218 : factor, .loc, or
		219 : factor, .id ( args ), or
		220 : factor, .num, or
		221 : factor, .real, or
		222 : factor, .true, or
		223 : factor, .false, or
		224 : factor, .( bool ), and
		225 : factor, .loc, and
		226 : factor, .id ( args ), and
		227 : factor, .num, and
		228 : factor, .real, and
		229 : factor, .true, and
		230 : factor, .false, and
		231 : factor, .( bool ), eq
		232 : factor, .loc, eq
		233 : factor, .id ( args ), eq
		234 : factor, .num, eq
		235 : factor, .real, eq
		236 : factor, .true, eq
		237 : factor, .false, eq
		238 : factor, .( bool ), neq
		239 : factor, .loc, neq
		240 : factor, .id ( args ), neq
		241 : factor, .num, neq
		242 : factor, .real, neq
		243 : factor, .true, neq
		244 : factor, .false, neq
		245 : factor, .( bool ), +
		246 : factor, .loc, +
		247 : factor, .id ( args ), +
		248 : factor, .num, +
		249 : factor, .real, +
		250 : factor, .true, +
		251 : factor, .false, +
		252 : factor, .( bool ), -
		253 : factor, .loc, -
		254 : factor, .id ( args ), -
		255 : factor, .num, -
		256 : factor, .real, -
		257 : factor, .true, -
		258 : factor, .false, -
		259 : factor, .( bool ), *
		260 : factor, .loc, *
		261 : factor, .id ( args ), *
		262 : factor, .num, *
		263 : factor, .real, *
		264 : factor, .true, *
		265 : factor, .false, *
		266 : factor, .( bool ), /
		267 : factor, .loc, /
		268 : factor, .id ( args ), /
		269 : factor, .num, /
		270 : factor, .real, /
		271 : factor, .true, /
		272 : factor, .false, /
		273 : factor, .( bool ), mod
		274 : factor, .loc, mod
		275 : factor, .id ( args ), mod
		276 : factor, .num, mod
		277 : factor, .real, mod
		278 : factor, .true, mod
		279 : factor, .false, mod
		280 : loc, .loc [ bool ], <
		281 : loc, .id, <
		282 : loc, .loc [ bool ], <=
		283 : loc, .id, <=
		284 : loc, .loc [ bool ], >=
		285 : loc, .id, >=
		286 : loc, .loc [ bool ], >
		287 : loc, .id, >
		288 : loc, .loc [ bool ], ;
		289 : loc, .id, ;
		290 : loc, .loc [ bool ], or
		291 : loc, .id, or
		292 : loc, .loc [ bool ], and
		293 : loc, .id, and
		294 : loc, .loc [ bool ], eq
		295 : loc, .id, eq
		296 : loc, .loc [ bool ], neq
		297 : loc, .id, neq
		298 : loc, .loc [ bool ], +
		299 : loc, .id, +
		300 : loc, .loc [ bool ], -
		301 : loc, .id, -
		302 : loc, .loc [ bool ], *
		303 : loc, .id, *
		304 : loc, .loc [ bool ], /
		305 : loc, .id, /
		306 : loc, .loc [ bool ], mod
		307 : loc, .id, mod
		308 : loc, .loc [ bool ], [
		309 : loc, .id, [
	[171] 
		0 : block, { decls .stmts }, while
		1 : decls, decls .decl, [
		2 : decls, decls .decl, id
		3 : decls, decls .decl, if
		4 : decls, decls .decl, while
		5 : decls, decls .decl, do
		6 : decls, decls .decl, return
		7 : decls, decls .decl, {
		8 : decls, decls .decl, }
		9 : decls, decls .decl, basic
		10 : stmts, .stmts stmt, }
		11 : stmts, ., }
		12 : decl, .type id ;, [
		13 : decl, .type id ;, id
		14 : decl, .type id ;, if
		15 : decl, .type id ;, while
		16 : decl, .type id ;, do
		17 : decl, .type id ;, return
		18 : decl, .type id ;, {
		19 : decl, .type id ;, }
		20 : decl, .type id ;, basic
		21 : stmts, .stmts stmt, [
		22 : stmts, .stmts stmt, id
		23 : stmts, .stmts stmt, if
		24 : stmts, .stmts stmt, while
		25 : stmts, .stmts stmt, do
		26 : stmts, .stmts stmt, return
		27 : stmts, .stmts stmt, {
		28 : stmts, .stmts stmt, else
		29 : stmts, ., [
		30 : stmts, ., id
		31 : stmts, ., if
		32 : stmts, ., while
		33 : stmts, ., do
		34 : stmts, ., return
		35 : stmts, ., {
		36 : stmts, ., else
		37 : type, .type [ num ], id
		38 : type, .basic, id
		39 : type, .type [ num ], [
		40 : type, .basic, [
	[172] 
		0 : stmt, if ( .bool ) M stmt, while
		1 : stmt, if ( .bool ) M stmt else M stmt, while
		2 : bool, .bool or join, )
		3 : bool, .join, )
		4 : bool, .bool or join, or
		5 : bool, .join, or
		6 : join, .join and equality, )
		7 : join, .equality, )
		8 : join, .join and equality, or
		9 : join, .equality, or
		10 : join, .join and equality, and
		11 : join, .equality, and
		12 : equality, .equality eq rel, )
		13 : equality, .equality neq rel, )
		14 : equality, .rel, )
		15 : equality, .equality eq rel, or
		16 : equality, .equality neq rel, or
		17 : equality, .rel, or
		18 : equality, .equality eq rel, and
		19 : equality, .equality neq rel, and
		20 : equality, .rel, and
		21 : equality, .equality eq rel, eq
		22 : equality, .equality neq rel, eq
		23 : equality, .rel, eq
		24 : equality, .equality eq rel, neq
		25 : equality, .equality neq rel, neq
		26 : equality, .rel, neq
		27 : rel, .expr < expr, )
		28 : rel, .expr <= expr, )
		29 : rel, .expr >= expr, )
		30 : rel, .expr > expr, )
		31 : rel, .expr, )
		32 : rel, .expr < expr, or
		33 : rel, .expr <= expr, or
		34 : rel, .expr >= expr, or
		35 : rel, .expr > expr, or
		36 : rel, .expr, or
		37 : rel, .expr < expr, and
		38 : rel, .expr <= expr, and
		39 : rel, .expr >= expr, and
		40 : rel, .expr > expr, and
		41 : rel, .expr, and
		42 : rel, .expr < expr, eq
		43 : rel, .expr <= expr, eq
		44 : rel, .expr >= expr, eq
		45 : rel, .expr > expr, eq
		46 : rel, .expr, eq
		47 : rel, .expr < expr, neq
		48 : rel, .expr <= expr, neq
		49 : rel, .expr >= expr, neq
		50 : rel, .expr > expr, neq
		51 : rel, .expr, neq
		52 : expr, .expr + term, <
		53 : expr, .expr - term, <
		54 : expr, .term, <
		55 : expr, .expr + term, <=
		56 : expr, .expr - term, <=
		57 : expr, .term, <=
		58 : expr, .expr + term, >=
		59 : expr, .expr - term, >=
		60 : expr, .term, >=
		61 : expr, .expr + term, >
		62 : expr, .expr - term, >
		63 : expr, .term, >
		64 : expr, .expr + term, )
		65 : expr, .expr - term, )
		66 : expr, .term, )
		67 : expr, .expr + term, or
		68 : expr, .expr - term, or
		69 : expr, .term, or
		70 : expr, .expr + term, and
		71 : expr, .expr - term, and
		72 : expr, .term, and
		73 : expr, .expr + term, eq
		74 : expr, .expr - term, eq
		75 : expr, .term, eq
		76 : expr, .expr + term, neq
		77 : expr, .expr - term, neq
		78 : expr, .term, neq
		79 : expr, .expr + term, +
		80 : expr, .expr - term, +
		81 : expr, .term, +
		82 : expr, .expr + term, -
		83 : expr, .expr - term, -
		84 : expr, .term, -
		85 : term, .term * unary, <
		86 : term, .term / unary, <
		87 : term, .term mod unary, <
		88 : term, .unary, <
		89 : term, .term * unary, <=
		90 : term, .term / unary, <=
		91 : term, .term mod unary, <=
		92 : term, .unary, <=
		93 : term, .term * unary, >=
		94 : term, .term / unary, >=
		95 : term, .term mod unary, >=
		96 : term, .unary, >=
		97 : term, .term * unary, >
		98 : term, .term / unary, >
		99 : term, .term mod unary, >
		100 : term, .unary, >
		101 : term, .term * unary, )
		102 : term, .term / unary, )
		103 : term, .term mod unary, )
		104 : term, .unary, )
		105 : term, .term * unary, or
		106 : term, .term / unary, or
		107 : term, .term mod unary, or
		108 : term, .unary, or
		109 : term, .term * unary, and
		110 : term, .term / unary, and
		111 : term, .term mod unary, and
		112 : term, .unary, and
		113 : term, .term * unary, eq
		114 : term, .term / unary, eq
		115 : term, .term mod unary, eq
		116 : term, .unary, eq
		117 : term, .term * unary, neq
		118 : term, .term / unary, neq
		119 : term, .term mod unary, neq
		120 : term, .unary, neq
		121 : term, .term * unary, +
		122 : term, .term / unary, +
		123 : term, .term mod unary, +
		124 : term, .unary, +
		125 : term, .term * unary, -
		126 : term, .term / unary, -
		127 : term, .term mod unary, -
		128 : term, .unary, -
		129 : term, .term * unary, *
		130 : term, .term / unary, *
		131 : term, .term mod unary, *
		132 : term, .unary, *
		133 : term, .term * unary, /
		134 : term, .term / unary, /
		135 : term, .term mod unary, /
		136 : term, .unary, /
		137 : term, .term * unary, mod
		138 : term, .term / unary, mod
		139 : term, .term mod unary, mod
		140 : term, .unary, mod
		141 : unary, .! unary, <
		142 : unary, .- unary, <
		143 : unary, .factor, <
		144 : unary, .! unary, <=
		145 : unary, .- unary, <=
		146 : unary, .factor, <=
		147 : unary, .! unary, >=
		148 : unary, .- unary, >=
		149 : unary, .factor, >=
		150 : unary, .! unary, >
		151 : unary, .- unary, >
		152 : unary, .factor, >
		153 : unary, .! unary, )
		154 : unary, .- unary, )
		155 : unary, .factor, )
		156 : unary, .! unary, or
		157 : unary, .- unary, or
		158 : unary, .factor, or
		159 : unary, .! unary, and
		160 : unary, .- unary, and
		161 : unary, .factor, and
		162 : unary, .! unary, eq
		163 : unary, .- unary, eq
		164 : unary, .factor, eq
		165 : unary, .! unary, neq
		166 : unary, .- unary, neq
		167 : unary, .factor, neq
		168 : unary, .! unary, +
		169 : unary, .- unary, +
		170 : unary, .factor, +
		171 : unary, .! unary, -
		172 : unary, .- unary, -
		173 : unary, .factor, -
		174 : unary, .! unary, *
		175 : unary, .- unary, *
		176 : unary, .factor, *
		177 : unary, .! unary, /
		178 : unary, .- unary, /
		179 : unary, .factor, /
		180 : unary, .! unary, mod
		181 : unary, .- unary, mod
		182 : unary, .factor, mod
		183 : factor, .( bool ), <
		184 : factor, .loc, <
		185 : factor, .id ( args ), <
		186 : factor, .num, <
		187 : factor, .real, <
		188 : factor, .true, <
		189 : factor, .false, <
		190 : factor, .( bool ), <=
		191 : factor, .loc, <=
		192 : factor, .id ( args ), <=
		193 : factor, .num, <=
		194 : factor, .real, <=
		195 : factor, .true, <=
		196 : factor, .false, <=
		197 : factor, .( bool ), >=
		198 : factor, .loc, >=
		199 : factor, .id ( args ), >=
		200 : factor, .num, >=
		201 : factor, .real, >=
		202 : factor, .true, >=
		203 : factor, .false, >=
		204 : factor, .( bool ), >
		205 : factor, .loc, >
		206 : factor, .id ( args ), >
		207 : factor, .num, >
		208 : factor, .real, >
		209 : factor, .true, >
		210 : factor, .false, >
		211 : factor, .( bool ), )
		212 : factor, .loc, )
		213 : factor, .id ( args ), )
		214 : factor, .num, )
		215 : factor, .real, )
		216 : factor, .true, )
		217 : factor, .false, )
		218 : factor, .( bool ), or
		219 : factor, .loc, or
		220 : factor, .id ( args ), or
		221 : factor, .num, or
		222 : factor, .real, or
		223 : factor, .true, or
		224 : factor, .false, or
		225 : factor, .( bool ), and
		226 : factor, .loc, and
		227 : factor, .id ( args ), and
		228 : factor, .num, and
		229 : factor, .real, and
		230 : factor, .true, and
		231 : factor, .false, and
		232 : factor, .( bool ), eq
		233 : factor, .loc, eq
		234 : factor, .id ( args ), eq
		235 : factor, .num, eq
		236 : factor, .real, eq
		237 : factor, .true, eq
		238 : factor, .false, eq
		239 : factor, .( bool ), neq
		240 : factor, .loc, neq
		241 : factor, .id ( args ), neq
		242 : factor, .num, neq
		243 : factor, .real, neq
		244 : factor, .true, neq
		245 : factor, .false, neq
		246 : factor, .( bool ), +
		247 : factor, .loc, +
		248 : factor, .id ( args ), +
		249 : factor, .num, +
		250 : factor, .real, +
		251 : factor, .true, +
		252 : factor, .false, +
		253 : factor, .( bool ), -
		254 : factor, .loc, -
		255 : factor, .id ( args ), -
		256 : factor, .num, -
		257 : factor, .real, -
		258 : factor, .true, -
		259 : factor, .false, -
		260 : factor, .( bool ), *
		261 : factor, .loc, *
		262 : factor, .id ( args ), *
		263 : factor, .num, *
		264 : factor, .real, *
		265 : factor, .true, *
		266 : factor, .false, *
		267 : factor, .( bool ), /
		268 : factor, .loc, /
		269 : factor, .id ( args ), /
		270 : factor, .num, /
		271 : factor, .real, /
		272 : factor, .true, /
		273 : factor, .false, /
		274 : factor, .( bool ), mod
		275 : factor, .loc, mod
		276 : factor, .id ( args ), mod
		277 : factor, .num, mod
		278 : factor, .real, mod
		279 : factor, .true, mod
		280 : factor, .false, mod
		281 : loc, .loc [ bool ], <
		282 : loc, .id, <
		283 : loc, .loc [ bool ], <=
		284 : loc, .id, <=
		285 : loc, .loc [ bool ], >=
		286 : loc, .id, >=
		287 : loc, .loc [ bool ], >
		288 : loc, .id, >
		289 : loc, .loc [ bool ], )
		290 : loc, .id, )
		291 : loc, .loc [ bool ], or
		292 : loc, .id, or
		293 : loc, .loc [ bool ], and
		294 : loc, .id, and
		295 : loc, .loc [ bool ], eq
		296 : loc, .id, eq
		297 : loc, .loc [ bool ], neq
		298 : loc, .id, neq
		299 : loc, .loc [ bool ], +
		300 : loc, .id, +
		301 : loc, .loc [ bool ], -
		302 : loc, .id, -
		303 : loc, .loc [ bool ], *
		304 : loc, .id, *
		305 : loc, .loc [ bool ], /
		306 : loc, .id, /
		307 : loc, .loc [ bool ], mod
		308 : loc, .id, mod
		309 : loc, .loc [ bool ], [
		310 : loc, .id, [
	[173] 
		0 : stmt, while N .( bool ) M stmt, while
	[174] 
		0 : stmt, do N .stmt while ( bool ) M ;, while
		1 : stmt, .loc = bool ;, while
		2 : stmt, .if ( bool ) M stmt, while
		3 : stmt, .if ( bool ) M stmt else M stmt, while
		4 : stmt, .while N ( bool ) M stmt, while
		5 : stmt, .do N stmt while ( bool ) M ;, while
		6 : stmt, .return arg ;, while
		7 : stmt, .block, while
		8 : loc, .loc [ bool ], =
		9 : loc, .id, =
		10 : block, .{ decls stmts }, while
		11 : loc, .loc [ bool ], [
		12 : loc, .id, [
	[175] 
		0 : stmt, return arg .;, while
	[176] 
		0 : loc, loc [ bool .], ;
		1 : loc, loc [ bool .], [
		2 : loc, loc [ bool .], <
		3 : loc, loc [ bool .], <=
		4 : loc, loc [ bool .], >=
		5 : loc, loc [ bool .], >
		6 : loc, loc [ bool .], or
		7 : loc, loc [ bool .], and
		8 : loc, loc [ bool .], eq
		9 : loc, loc [ bool .], neq
		10 : loc, loc [ bool .], +
		11 : loc, loc [ bool .], -
		12 : loc, loc [ bool .], *
		13 : loc, loc [ bool .], /
		14 : loc, loc [ bool .], mod
		15 : bool, bool .or join, ]
		16 : bool, bool .or join, or
	[177] 
		0 : bool, bool or join ., ;
		1 : bool, bool or join ., or
		2 : join, join .and equality, ;
		3 : join, join .and equality, or
		4 : join, join .and equality, and
	[178] 
		0 : join, join and equality ., ;
		1 : join, join and equality ., or
		2 : join, join and equality ., and
		3 : equality, equality .eq rel, ;
		4 : equality, equality .neq rel, ;
		5 : equality, equality .eq rel, or
		6 : equality, equality .neq rel, or
		7 : equality, equality .eq rel, and
		8 : equality, equality .neq rel, and
		9 : equality, equality .eq rel, eq
		10 : equality, equality .neq rel, eq
		11 : equality, equality .eq rel, neq
		12 : equality, equality .neq rel, neq
	[179] 
		0 : equality, equality eq rel ., ;
		1 : equality, equality eq rel ., or
		2 : equality, equality eq rel ., and
		3 : equality, equality eq rel ., eq
		4 : equality, equality eq rel ., neq
	[180] 
		0 : equality, equality neq rel ., ;
		1 : equality, equality neq rel ., or
		2 : equality, equality neq rel ., and
		3 : equality, equality neq rel ., eq
		4 : equality, equality neq rel ., neq
	[181] 
		0 : factor, loc ., ;
		1 : factor, loc ., or
		2 : factor, loc ., and
		3 : factor, loc ., eq
		4 : factor, loc ., neq
		5 : factor, loc ., +
		6 : factor, loc ., -
		7 : factor, loc ., *
		8 : factor, loc ., /
		9 : factor, loc ., mod
		10 : loc, loc .[ bool ], ;
		11 : loc, loc .[ bool ], or
		12 : loc, loc .[ bool ], and
		13 : loc, loc .[ bool ], eq
		14 : loc, loc .[ bool ], neq
		15 : loc, loc .[ bool ], +
		16 : loc, loc .[ bool ], -
		17 : loc, loc .[ bool ], *
		18 : loc, loc .[ bool ], /
		19 : loc, loc .[ bool ], mod
		20 : loc, loc .[ bool ], [
	[182] 
		0 : rel, expr < expr ., ;
		1 : rel, expr < expr ., or
		2 : rel, expr < expr ., and
		3 : rel, expr < expr ., eq
		4 : rel, expr < expr ., neq
		5 : expr, expr .+ term, ;
		6 : expr, expr .- term, ;
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[183] 
		0 : expr, term ., ;
		1 : expr, term ., or
		2 : expr, term ., and
		3 : expr, term ., eq
		4 : expr, term ., neq
		5 : expr, term ., +
		6 : expr, term ., -
		7 : term, term .* unary, ;
		8 : term, term ./ unary, ;
		9 : term, term .mod unary, ;
		10 : term, term .* unary, or
		11 : term, term ./ unary, or
		12 : term, term .mod unary, or
		13 : term, term .* unary, and
		14 : term, term ./ unary, and
		15 : term, term .mod unary, and
		16 : term, term .* unary, eq
		17 : term, term ./ unary, eq
		18 : term, term .mod unary, eq
		19 : term, term .* unary, neq
		20 : term, term ./ unary, neq
		21 : term, term .mod unary, neq
		22 : term, term .* unary, +
		23 : term, term ./ unary, +
		24 : term, term .mod unary, +
		25 : term, term .* unary, -
		26 : term, term ./ unary, -
		27 : term, term .mod unary, -
		28 : term, term .* unary, *
		29 : term, term ./ unary, *
		30 : term, term .mod unary, *
		31 : term, term .* unary, /
		32 : term, term ./ unary, /
		33 : term, term .mod unary, /
		34 : term, term .* unary, mod
		35 : term, term ./ unary, mod
		36 : term, term .mod unary, mod
	[184] 
		0 : term, unary ., ;
		1 : term, unary ., or
		2 : term, unary ., and
		3 : term, unary ., eq
		4 : term, unary ., neq
		5 : term, unary ., +
		6 : term, unary ., -
		7 : term, unary ., *
		8 : term, unary ., /
		9 : term, unary ., mod
	[185] 
		0 : unary, factor ., ;
		1 : unary, factor ., or
		2 : unary, factor ., and
		3 : unary, factor ., eq
		4 : unary, factor ., neq
		5 : unary, factor ., +
		6 : unary, factor ., -
		7 : unary, factor ., *
		8 : unary, factor ., /
		9 : unary, factor ., mod
	[186] 
		0 : factor, id .( args ), ;
		1 : factor, id .( args ), or
		2 : factor, id .( args ), and
		3 : factor, id .( args ), eq
		4 : factor, id .( args ), neq
		5 : factor, id .( args ), +
		6 : factor, id .( args ), -
		7 : factor, id .( args ), *
		8 : factor, id .( args ), /
		9 : factor, id .( args ), mod
		10 : loc, id ., ;
		11 : loc, id ., or
		12 : loc, id ., and
		13 : loc, id ., eq
		14 : loc, id ., neq
		15 : loc, id ., +
		16 : loc, id ., -
		17 : loc, id ., *
		18 : loc, id ., /
		19 : loc, id ., mod
		20 : loc, id ., [
	[187] 
		0 : factor, ( .bool ), ;
		1 : factor, ( .bool ), or
		2 : factor, ( .bool ), and
		3 : factor, ( .bool ), eq
		4 : factor, ( .bool ), neq
		5 : factor, ( .bool ), +
		6 : factor, ( .bool ), -
		7 : factor, ( .bool ), *
		8 : factor, ( .bool ), /
		9 : factor, ( .bool ), mod
		10 : bool, .bool or join, )
		11 : bool, .join, )
		12 : bool, .bool or join, or
		13 : bool, .join, or
		14 : join, .join and equality, )
		15 : join, .equality, )
		16 : join, .join and equality, or
		17 : join, .equality, or
		18 : join, .join and equality, and
		19 : join, .equality, and
		20 : equality, .equality eq rel, )
		21 : equality, .equality neq rel, )
		22 : equality, .rel, )
		23 : equality, .equality eq rel, or
		24 : equality, .equality neq rel, or
		25 : equality, .rel, or
		26 : equality, .equality eq rel, and
		27 : equality, .equality neq rel, and
		28 : equality, .rel, and
		29 : equality, .equality eq rel, eq
		30 : equality, .equality neq rel, eq
		31 : equality, .rel, eq
		32 : equality, .equality eq rel, neq
		33 : equality, .equality neq rel, neq
		34 : equality, .rel, neq
		35 : rel, .expr < expr, )
		36 : rel, .expr <= expr, )
		37 : rel, .expr >= expr, )
		38 : rel, .expr > expr, )
		39 : rel, .expr, )
		40 : rel, .expr < expr, or
		41 : rel, .expr <= expr, or
		42 : rel, .expr >= expr, or
		43 : rel, .expr > expr, or
		44 : rel, .expr, or
		45 : rel, .expr < expr, and
		46 : rel, .expr <= expr, and
		47 : rel, .expr >= expr, and
		48 : rel, .expr > expr, and
		49 : rel, .expr, and
		50 : rel, .expr < expr, eq
		51 : rel, .expr <= expr, eq
		52 : rel, .expr >= expr, eq
		53 : rel, .expr > expr, eq
		54 : rel, .expr, eq
		55 : rel, .expr < expr, neq
		56 : rel, .expr <= expr, neq
		57 : rel, .expr >= expr, neq
		58 : rel, .expr > expr, neq
		59 : rel, .expr, neq
		60 : expr, .expr + term, <
		61 : expr, .expr - term, <
		62 : expr, .term, <
		63 : expr, .expr + term, <=
		64 : expr, .expr - term, <=
		65 : expr, .term, <=
		66 : expr, .expr + term, >=
		67 : expr, .expr - term, >=
		68 : expr, .term, >=
		69 : expr, .expr + term, >
		70 : expr, .expr - term, >
		71 : expr, .term, >
		72 : expr, .expr + term, )
		73 : expr, .expr - term, )
		74 : expr, .term, )
		75 : expr, .expr + term, or
		76 : expr, .expr - term, or
		77 : expr, .term, or
		78 : expr, .expr + term, and
		79 : expr, .expr - term, and
		80 : expr, .term, and
		81 : expr, .expr + term, eq
		82 : expr, .expr - term, eq
		83 : expr, .term, eq
		84 : expr, .expr + term, neq
		85 : expr, .expr - term, neq
		86 : expr, .term, neq
		87 : expr, .expr + term, +
		88 : expr, .expr - term, +
		89 : expr, .term, +
		90 : expr, .expr + term, -
		91 : expr, .expr - term, -
		92 : expr, .term, -
		93 : term, .term * unary, <
		94 : term, .term / unary, <
		95 : term, .term mod unary, <
		96 : term, .unary, <
		97 : term, .term * unary, <=
		98 : term, .term / unary, <=
		99 : term, .term mod unary, <=
		100 : term, .unary, <=
		101 : term, .term * unary, >=
		102 : term, .term / unary, >=
		103 : term, .term mod unary, >=
		104 : term, .unary, >=
		105 : term, .term * unary, >
		106 : term, .term / unary, >
		107 : term, .term mod unary, >
		108 : term, .unary, >
		109 : term, .term * unary, )
		110 : term, .term / unary, )
		111 : term, .term mod unary, )
		112 : term, .unary, )
		113 : term, .term * unary, or
		114 : term, .term / unary, or
		115 : term, .term mod unary, or
		116 : term, .unary, or
		117 : term, .term * unary, and
		118 : term, .term / unary, and
		119 : term, .term mod unary, and
		120 : term, .unary, and
		121 : term, .term * unary, eq
		122 : term, .term / unary, eq
		123 : term, .term mod unary, eq
		124 : term, .unary, eq
		125 : term, .term * unary, neq
		126 : term, .term / unary, neq
		127 : term, .term mod unary, neq
		128 : term, .unary, neq
		129 : term, .term * unary, +
		130 : term, .term / unary, +
		131 : term, .term mod unary, +
		132 : term, .unary, +
		133 : term, .term * unary, -
		134 : term, .term / unary, -
		135 : term, .term mod unary, -
		136 : term, .unary, -
		137 : term, .term * unary, *
		138 : term, .term / unary, *
		139 : term, .term mod unary, *
		140 : term, .unary, *
		141 : term, .term * unary, /
		142 : term, .term / unary, /
		143 : term, .term mod unary, /
		144 : term, .unary, /
		145 : term, .term * unary, mod
		146 : term, .term / unary, mod
		147 : term, .term mod unary, mod
		148 : term, .unary, mod
		149 : unary, .! unary, <
		150 : unary, .- unary, <
		151 : unary, .factor, <
		152 : unary, .! unary, <=
		153 : unary, .- unary, <=
		154 : unary, .factor, <=
		155 : unary, .! unary, >=
		156 : unary, .- unary, >=
		157 : unary, .factor, >=
		158 : unary, .! unary, >
		159 : unary, .- unary, >
		160 : unary, .factor, >
		161 : unary, .! unary, )
		162 : unary, .- unary, )
		163 : unary, .factor, )
		164 : unary, .! unary, or
		165 : unary, .- unary, or
		166 : unary, .factor, or
		167 : unary, .! unary, and
		168 : unary, .- unary, and
		169 : unary, .factor, and
		170 : unary, .! unary, eq
		171 : unary, .- unary, eq
		172 : unary, .factor, eq
		173 : unary, .! unary, neq
		174 : unary, .- unary, neq
		175 : unary, .factor, neq
		176 : unary, .! unary, +
		177 : unary, .- unary, +
		178 : unary, .factor, +
		179 : unary, .! unary, -
		180 : unary, .- unary, -
		181 : unary, .factor, -
		182 : unary, .! unary, *
		183 : unary, .- unary, *
		184 : unary, .factor, *
		185 : unary, .! unary, /
		186 : unary, .- unary, /
		187 : unary, .factor, /
		188 : unary, .! unary, mod
		189 : unary, .- unary, mod
		190 : unary, .factor, mod
		191 : factor, .( bool ), <
		192 : factor, .loc, <
		193 : factor, .id ( args ), <
		194 : factor, .num, <
		195 : factor, .real, <
		196 : factor, .true, <
		197 : factor, .false, <
		198 : factor, .( bool ), <=
		199 : factor, .loc, <=
		200 : factor, .id ( args ), <=
		201 : factor, .num, <=
		202 : factor, .real, <=
		203 : factor, .true, <=
		204 : factor, .false, <=
		205 : factor, .( bool ), >=
		206 : factor, .loc, >=
		207 : factor, .id ( args ), >=
		208 : factor, .num, >=
		209 : factor, .real, >=
		210 : factor, .true, >=
		211 : factor, .false, >=
		212 : factor, .( bool ), >
		213 : factor, .loc, >
		214 : factor, .id ( args ), >
		215 : factor, .num, >
		216 : factor, .real, >
		217 : factor, .true, >
		218 : factor, .false, >
		219 : factor, .( bool ), )
		220 : factor, .loc, )
		221 : factor, .id ( args ), )
		222 : factor, .num, )
		223 : factor, .real, )
		224 : factor, .true, )
		225 : factor, .false, )
		226 : factor, .( bool ), or
		227 : factor, .loc, or
		228 : factor, .id ( args ), or
		229 : factor, .num, or
		230 : factor, .real, or
		231 : factor, .true, or
		232 : factor, .false, or
		233 : factor, .( bool ), and
		234 : factor, .loc, and
		235 : factor, .id ( args ), and
		236 : factor, .num, and
		237 : factor, .real, and
		238 : factor, .true, and
		239 : factor, .false, and
		240 : factor, .( bool ), eq
		241 : factor, .loc, eq
		242 : factor, .id ( args ), eq
		243 : factor, .num, eq
		244 : factor, .real, eq
		245 : factor, .true, eq
		246 : factor, .false, eq
		247 : factor, .( bool ), neq
		248 : factor, .loc, neq
		249 : factor, .id ( args ), neq
		250 : factor, .num, neq
		251 : factor, .real, neq
		252 : factor, .true, neq
		253 : factor, .false, neq
		254 : factor, .( bool ), +
		255 : factor, .loc, +
		256 : factor, .id ( args ), +
		257 : factor, .num, +
		258 : factor, .real, +
		259 : factor, .true, +
		260 : factor, .false, +
		261 : factor, .( bool ), -
		262 : factor, .loc, -
		263 : factor, .id ( args ), -
		264 : factor, .num, -
		265 : factor, .real, -
		266 : factor, .true, -
		267 : factor, .false, -
		268 : factor, .( bool ), *
		269 : factor, .loc, *
		270 : factor, .id ( args ), *
		271 : factor, .num, *
		272 : factor, .real, *
		273 : factor, .true, *
		274 : factor, .false, *
		275 : factor, .( bool ), /
		276 : factor, .loc, /
		277 : factor, .id ( args ), /
		278 : factor, .num, /
		279 : factor, .real, /
		280 : factor, .true, /
		281 : factor, .false, /
		282 : factor, .( bool ), mod
		283 : factor, .loc, mod
		284 : factor, .id ( args ), mod
		285 : factor, .num, mod
		286 : factor, .real, mod
		287 : factor, .true, mod
		288 : factor, .false, mod
		289 : loc, .loc [ bool ], <
		290 : loc, .id, <
		291 : loc, .loc [ bool ], <=
		292 : loc, .id, <=
		293 : loc, .loc [ bool ], >=
		294 : loc, .id, >=
		295 : loc, .loc [ bool ], >
		296 : loc, .id, >
		297 : loc, .loc [ bool ], )
		298 : loc, .id, )
		299 : loc, .loc [ bool ], or
		300 : loc, .id, or
		301 : loc, .loc [ bool ], and
		302 : loc, .id, and
		303 : loc, .loc [ bool ], eq
		304 : loc, .id, eq
		305 : loc, .loc [ bool ], neq
		306 : loc, .id, neq
		307 : loc, .loc [ bool ], +
		308 : loc, .id, +
		309 : loc, .loc [ bool ], -
		310 : loc, .id, -
		311 : loc, .loc [ bool ], *
		312 : loc, .id, *
		313 : loc, .loc [ bool ], /
		314 : loc, .id, /
		315 : loc, .loc [ bool ], mod
		316 : loc, .id, mod
		317 : loc, .loc [ bool ], [
		318 : loc, .id, [
	[188] 
		0 : unary, - .unary, ;
		1 : unary, - .unary, or
		2 : unary, - .unary, and
		3 : unary, - .unary, eq
		4 : unary, - .unary, neq
		5 : unary, - .unary, +
		6 : unary, - .unary, -
		7 : unary, - .unary, *
		8 : unary, - .unary, /
		9 : unary, - .unary, mod
		10 : unary, .! unary, ;
		11 : unary, .- unary, ;
		12 : unary, .factor, ;
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), ;
		41 : factor, .loc, ;
		42 : factor, .id ( args ), ;
		43 : factor, .num, ;
		44 : factor, .real, ;
		45 : factor, .true, ;
		46 : factor, .false, ;
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], ;
		111 : loc, .id, ;
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[189] 
		0 : unary, ! .unary, ;
		1 : unary, ! .unary, or
		2 : unary, ! .unary, and
		3 : unary, ! .unary, eq
		4 : unary, ! .unary, neq
		5 : unary, ! .unary, +
		6 : unary, ! .unary, -
		7 : unary, ! .unary, *
		8 : unary, ! .unary, /
		9 : unary, ! .unary, mod
		10 : unary, .! unary, ;
		11 : unary, .- unary, ;
		12 : unary, .factor, ;
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), ;
		41 : factor, .loc, ;
		42 : factor, .id ( args ), ;
		43 : factor, .num, ;
		44 : factor, .real, ;
		45 : factor, .true, ;
		46 : factor, .false, ;
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], ;
		111 : loc, .id, ;
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[190] 
		0 : factor, num ., ;
		1 : factor, num ., or
		2 : factor, num ., and
		3 : factor, num ., eq
		4 : factor, num ., neq
		5 : factor, num ., +
		6 : factor, num ., -
		7 : factor, num ., *
		8 : factor, num ., /
		9 : factor, num ., mod
	[191] 
		0 : factor, real ., ;
		1 : factor, real ., or
		2 : factor, real ., and
		3 : factor, real ., eq
		4 : factor, real ., neq
		5 : factor, real ., +
		6 : factor, real ., -
		7 : factor, real ., *
		8 : factor, real ., /
		9 : factor, real ., mod
	[192] 
		0 : factor, true ., ;
		1 : factor, true ., or
		2 : factor, true ., and
		3 : factor, true ., eq
		4 : factor, true ., neq
		5 : factor, true ., +
		6 : factor, true ., -
		7 : factor, true ., *
		8 : factor, true ., /
		9 : factor, true ., mod
	[193] 
		0 : factor, false ., ;
		1 : factor, false ., or
		2 : factor, false ., and
		3 : factor, false ., eq
		4 : factor, false ., neq
		5 : factor, false ., +
		6 : factor, false ., -
		7 : factor, false ., *
		8 : factor, false ., /
		9 : factor, false ., mod
	[194] 
		0 : rel, expr <= expr ., ;
		1 : rel, expr <= expr ., or
		2 : rel, expr <= expr ., and
		3 : rel, expr <= expr ., eq
		4 : rel, expr <= expr ., neq
		5 : expr, expr .+ term, ;
		6 : expr, expr .- term, ;
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[195] 
		0 : rel, expr >= expr ., ;
		1 : rel, expr >= expr ., or
		2 : rel, expr >= expr ., and
		3 : rel, expr >= expr ., eq
		4 : rel, expr >= expr ., neq
		5 : expr, expr .+ term, ;
		6 : expr, expr .- term, ;
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[196] 
		0 : rel, expr > expr ., ;
		1 : rel, expr > expr ., or
		2 : rel, expr > expr ., and
		3 : rel, expr > expr ., eq
		4 : rel, expr > expr ., neq
		5 : expr, expr .+ term, ;
		6 : expr, expr .- term, ;
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[197] 
		0 : expr, expr + term ., <
		1 : expr, expr + term ., <=
		2 : expr, expr + term ., >=
		3 : expr, expr + term ., >
		4 : expr, expr + term ., ;
		5 : expr, expr + term ., or
		6 : expr, expr + term ., and
		7 : expr, expr + term ., eq
		8 : expr, expr + term ., neq
		9 : expr, expr + term ., +
		10 : expr, expr + term ., -
		11 : term, term .* unary, <
		12 : term, term ./ unary, <
		13 : term, term .mod unary, <
		14 : term, term .* unary, <=
		15 : term, term ./ unary, <=
		16 : term, term .mod unary, <=
		17 : term, term .* unary, >=
		18 : term, term ./ unary, >=
		19 : term, term .mod unary, >=
		20 : term, term .* unary, >
		21 : term, term ./ unary, >
		22 : term, term .mod unary, >
		23 : term, term .* unary, ;
		24 : term, term ./ unary, ;
		25 : term, term .mod unary, ;
		26 : term, term .* unary, or
		27 : term, term ./ unary, or
		28 : term, term .mod unary, or
		29 : term, term .* unary, and
		30 : term, term ./ unary, and
		31 : term, term .mod unary, and
		32 : term, term .* unary, eq
		33 : term, term ./ unary, eq
		34 : term, term .mod unary, eq
		35 : term, term .* unary, neq
		36 : term, term ./ unary, neq
		37 : term, term .mod unary, neq
		38 : term, term .* unary, +
		39 : term, term ./ unary, +
		40 : term, term .mod unary, +
		41 : term, term .* unary, -
		42 : term, term ./ unary, -
		43 : term, term .mod unary, -
		44 : term, term .* unary, *
		45 : term, term ./ unary, *
		46 : term, term .mod unary, *
		47 : term, term .* unary, /
		48 : term, term ./ unary, /
		49 : term, term .mod unary, /
		50 : term, term .* unary, mod
		51 : term, term ./ unary, mod
		52 : term, term .mod unary, mod
	[198] 
		0 : expr, expr - term ., <
		1 : expr, expr - term ., <=
		2 : expr, expr - term ., >=
		3 : expr, expr - term ., >
		4 : expr, expr - term ., ;
		5 : expr, expr - term ., or
		6 : expr, expr - term ., and
		7 : expr, expr - term ., eq
		8 : expr, expr - term ., neq
		9 : expr, expr - term ., +
		10 : expr, expr - term ., -
		11 : term, term .* unary, <
		12 : term, term ./ unary, <
		13 : term, term .mod unary, <
		14 : term, term .* unary, <=
		15 : term, term ./ unary, <=
		16 : term, term .mod unary, <=
		17 : term, term .* unary, >=
		18 : term, term ./ unary, >=
		19 : term, term .mod unary, >=
		20 : term, term .* unary, >
		21 : term, term ./ unary, >
		22 : term, term .mod unary, >
		23 : term, term .* unary, ;
		24 : term, term ./ unary, ;
		25 : term, term .mod unary, ;
		26 : term, term .* unary, or
		27 : term, term ./ unary, or
		28 : term, term .mod unary, or
		29 : term, term .* unary, and
		30 : term, term ./ unary, and
		31 : term, term .mod unary, and
		32 : term, term .* unary, eq
		33 : term, term ./ unary, eq
		34 : term, term .mod unary, eq
		35 : term, term .* unary, neq
		36 : term, term ./ unary, neq
		37 : term, term .mod unary, neq
		38 : term, term .* unary, +
		39 : term, term ./ unary, +
		40 : term, term .mod unary, +
		41 : term, term .* unary, -
		42 : term, term ./ unary, -
		43 : term, term .mod unary, -
		44 : term, term .* unary, *
		45 : term, term ./ unary, *
		46 : term, term .mod unary, *
		47 : term, term .* unary, /
		48 : term, term ./ unary, /
		49 : term, term .mod unary, /
		50 : term, term .* unary, mod
		51 : term, term ./ unary, mod
		52 : term, term .mod unary, mod
	[199] 
		0 : term, term * unary ., <
		1 : term, term * unary ., <=
		2 : term, term * unary ., >=
		3 : term, term * unary ., >
		4 : term, term * unary ., ;
		5 : term, term * unary ., or
		6 : term, term * unary ., and
		7 : term, term * unary ., eq
		8 : term, term * unary ., neq
		9 : term, term * unary ., +
		10 : term, term * unary ., -
		11 : term, term * unary ., *
		12 : term, term * unary ., /
		13 : term, term * unary ., mod
	[200] 
		0 : term, term / unary ., <
		1 : term, term / unary ., <=
		2 : term, term / unary ., >=
		3 : term, term / unary ., >
		4 : term, term / unary ., ;
		5 : term, term / unary ., or
		6 : term, term / unary ., and
		7 : term, term / unary ., eq
		8 : term, term / unary ., neq
		9 : term, term / unary ., +
		10 : term, term / unary ., -
		11 : term, term / unary ., *
		12 : term, term / unary ., /
		13 : term, term / unary ., mod
	[201] 
		0 : term, term mod unary ., <
		1 : term, term mod unary ., <=
		2 : term, term mod unary ., >=
		3 : term, term mod unary ., >
		4 : term, term mod unary ., ;
		5 : term, term mod unary ., or
		6 : term, term mod unary ., and
		7 : term, term mod unary ., eq
		8 : term, term mod unary ., neq
		9 : term, term mod unary ., +
		10 : term, term mod unary ., -
		11 : term, term mod unary ., *
		12 : term, term mod unary ., /
		13 : term, term mod unary ., mod
	[202] 
		0 : factor, id ( args .), <
		1 : factor, id ( args .), <=
		2 : factor, id ( args .), >=
		3 : factor, id ( args .), >
		4 : factor, id ( args .), ;
		5 : factor, id ( args .), or
		6 : factor, id ( args .), and
		7 : factor, id ( args .), eq
		8 : factor, id ( args .), neq
		9 : factor, id ( args .), +
		10 : factor, id ( args .), -
		11 : factor, id ( args .), *
		12 : factor, id ( args .), /
		13 : factor, id ( args .), mod
		14 : args, args ., arg, )
		15 : args, args ., arg, ,
	[203] 
		0 : arg, loc ., )
		1 : arg, loc ., ,
		2 : loc, loc .[ bool ], )
		3 : loc, loc .[ bool ], ,
		4 : loc, loc .[ bool ], [
		5 : factor, loc ., <
		6 : factor, loc ., <=
		7 : factor, loc ., >=
		8 : factor, loc ., >
		9 : factor, loc ., )
		10 : factor, loc ., ,
		11 : factor, loc ., or
		12 : factor, loc ., and
		13 : factor, loc ., eq
		14 : factor, loc ., neq
		15 : factor, loc ., +
		16 : factor, loc ., -
		17 : factor, loc ., *
		18 : factor, loc ., /
		19 : factor, loc ., mod
		20 : loc, loc .[ bool ], <
		21 : loc, loc .[ bool ], <=
		22 : loc, loc .[ bool ], >=
		23 : loc, loc .[ bool ], >
		24 : loc, loc .[ bool ], or
		25 : loc, loc .[ bool ], and
		26 : loc, loc .[ bool ], eq
		27 : loc, loc .[ bool ], neq
		28 : loc, loc .[ bool ], +
		29 : loc, loc .[ bool ], -
		30 : loc, loc .[ bool ], *
		31 : loc, loc .[ bool ], /
		32 : loc, loc .[ bool ], mod
	[204] 
		0 : arg, bool ., )
		1 : arg, bool ., ,
		2 : bool, bool .or join, )
		3 : bool, bool .or join, ,
		4 : bool, bool .or join, or
	[205] 
		0 : bool, join ., )
		1 : bool, join ., ,
		2 : bool, join ., or
		3 : join, join .and equality, )
		4 : join, join .and equality, ,
		5 : join, join .and equality, or
		6 : join, join .and equality, and
	[206] 
		0 : join, equality ., )
		1 : join, equality ., ,
		2 : join, equality ., or
		3 : join, equality ., and
		4 : equality, equality .eq rel, )
		5 : equality, equality .neq rel, )
		6 : equality, equality .eq rel, ,
		7 : equality, equality .neq rel, ,
		8 : equality, equality .eq rel, or
		9 : equality, equality .neq rel, or
		10 : equality, equality .eq rel, and
		11 : equality, equality .neq rel, and
		12 : equality, equality .eq rel, eq
		13 : equality, equality .neq rel, eq
		14 : equality, equality .eq rel, neq
		15 : equality, equality .neq rel, neq
	[207] 
		0 : equality, rel ., )
		1 : equality, rel ., ,
		2 : equality, rel ., or
		3 : equality, rel ., and
		4 : equality, rel ., eq
		5 : equality, rel ., neq
	[208] 
		0 : rel, expr .< expr, )
		1 : rel, expr .<= expr, )
		2 : rel, expr .>= expr, )
		3 : rel, expr .> expr, )
		4 : rel, expr ., )
		5 : rel, expr .< expr, ,
		6 : rel, expr .<= expr, ,
		7 : rel, expr .>= expr, ,
		8 : rel, expr .> expr, ,
		9 : rel, expr ., ,
		10 : rel, expr .< expr, or
		11 : rel, expr .<= expr, or
		12 : rel, expr .>= expr, or
		13 : rel, expr .> expr, or
		14 : rel, expr ., or
		15 : rel, expr .< expr, and
		16 : rel, expr .<= expr, and
		17 : rel, expr .>= expr, and
		18 : rel, expr .> expr, and
		19 : rel, expr ., and
		20 : rel, expr .< expr, eq
		21 : rel, expr .<= expr, eq
		22 : rel, expr .>= expr, eq
		23 : rel, expr .> expr, eq
		24 : rel, expr ., eq
		25 : rel, expr .< expr, neq
		26 : rel, expr .<= expr, neq
		27 : rel, expr .>= expr, neq
		28 : rel, expr .> expr, neq
		29 : rel, expr ., neq
		30 : expr, expr .+ term, <
		31 : expr, expr .- term, <
		32 : expr, expr .+ term, <=
		33 : expr, expr .- term, <=
		34 : expr, expr .+ term, >=
		35 : expr, expr .- term, >=
		36 : expr, expr .+ term, >
		37 : expr, expr .- term, >
		38 : expr, expr .+ term, )
		39 : expr, expr .- term, )
		40 : expr, expr .+ term, ,
		41 : expr, expr .- term, ,
		42 : expr, expr .+ term, or
		43 : expr, expr .- term, or
		44 : expr, expr .+ term, and
		45 : expr, expr .- term, and
		46 : expr, expr .+ term, eq
		47 : expr, expr .- term, eq
		48 : expr, expr .+ term, neq
		49 : expr, expr .- term, neq
		50 : expr, expr .+ term, +
		51 : expr, expr .- term, +
		52 : expr, expr .+ term, -
		53 : expr, expr .- term, -
	[209] 
		0 : expr, term ., <
		1 : expr, term ., <=
		2 : expr, term ., >=
		3 : expr, term ., >
		4 : expr, term ., )
		5 : expr, term ., ,
		6 : expr, term ., or
		7 : expr, term ., and
		8 : expr, term ., eq
		9 : expr, term ., neq
		10 : expr, term ., +
		11 : expr, term ., -
		12 : term, term .* unary, <
		13 : term, term ./ unary, <
		14 : term, term .mod unary, <
		15 : term, term .* unary, <=
		16 : term, term ./ unary, <=
		17 : term, term .mod unary, <=
		18 : term, term .* unary, >=
		19 : term, term ./ unary, >=
		20 : term, term .mod unary, >=
		21 : term, term .* unary, >
		22 : term, term ./ unary, >
		23 : term, term .mod unary, >
		24 : term, term .* unary, )
		25 : term, term ./ unary, )
		26 : term, term .mod unary, )
		27 : term, term .* unary, ,
		28 : term, term ./ unary, ,
		29 : term, term .mod unary, ,
		30 : term, term .* unary, or
		31 : term, term ./ unary, or
		32 : term, term .mod unary, or
		33 : term, term .* unary, and
		34 : term, term ./ unary, and
		35 : term, term .mod unary, and
		36 : term, term .* unary, eq
		37 : term, term ./ unary, eq
		38 : term, term .mod unary, eq
		39 : term, term .* unary, neq
		40 : term, term ./ unary, neq
		41 : term, term .mod unary, neq
		42 : term, term .* unary, +
		43 : term, term ./ unary, +
		44 : term, term .mod unary, +
		45 : term, term .* unary, -
		46 : term, term ./ unary, -
		47 : term, term .mod unary, -
		48 : term, term .* unary, *
		49 : term, term ./ unary, *
		50 : term, term .mod unary, *
		51 : term, term .* unary, /
		52 : term, term ./ unary, /
		53 : term, term .mod unary, /
		54 : term, term .* unary, mod
		55 : term, term ./ unary, mod
		56 : term, term .mod unary, mod
	[210] 
		0 : term, unary ., <
		1 : term, unary ., <=
		2 : term, unary ., >=
		3 : term, unary ., >
		4 : term, unary ., )
		5 : term, unary ., ,
		6 : term, unary ., or
		7 : term, unary ., and
		8 : term, unary ., eq
		9 : term, unary ., neq
		10 : term, unary ., +
		11 : term, unary ., -
		12 : term, unary ., *
		13 : term, unary ., /
		14 : term, unary ., mod
	[211] 
		0 : unary, factor ., <
		1 : unary, factor ., <=
		2 : unary, factor ., >=
		3 : unary, factor ., >
		4 : unary, factor ., )
		5 : unary, factor ., ,
		6 : unary, factor ., or
		7 : unary, factor ., and
		8 : unary, factor ., eq
		9 : unary, factor ., neq
		10 : unary, factor ., +
		11 : unary, factor ., -
		12 : unary, factor ., *
		13 : unary, factor ., /
		14 : unary, factor ., mod
	[212] 
		0 : args, arg ., )
		1 : args, arg ., ,
	[213] 
		0 : loc, id ., )
		1 : loc, id ., ,
		2 : loc, id ., [
		3 : factor, id .( args ), <
		4 : factor, id .( args ), <=
		5 : factor, id .( args ), >=
		6 : factor, id .( args ), >
		7 : factor, id .( args ), )
		8 : factor, id .( args ), ,
		9 : factor, id .( args ), or
		10 : factor, id .( args ), and
		11 : factor, id .( args ), eq
		12 : factor, id .( args ), neq
		13 : factor, id .( args ), +
		14 : factor, id .( args ), -
		15 : factor, id .( args ), *
		16 : factor, id .( args ), /
		17 : factor, id .( args ), mod
		18 : loc, id ., <
		19 : loc, id ., <=
		20 : loc, id ., >=
		21 : loc, id ., >
		22 : loc, id ., or
		23 : loc, id ., and
		24 : loc, id ., eq
		25 : loc, id ., neq
		26 : loc, id ., +
		27 : loc, id ., -
		28 : loc, id ., *
		29 : loc, id ., /
		30 : loc, id ., mod
	[214] 
		0 : factor, ( .bool ), <
		1 : factor, ( .bool ), <=
		2 : factor, ( .bool ), >=
		3 : factor, ( .bool ), >
		4 : factor, ( .bool ), )
		5 : factor, ( .bool ), ,
		6 : factor, ( .bool ), or
		7 : factor, ( .bool ), and
		8 : factor, ( .bool ), eq
		9 : factor, ( .bool ), neq
		10 : factor, ( .bool ), +
		11 : factor, ( .bool ), -
		12 : factor, ( .bool ), *
		13 : factor, ( .bool ), /
		14 : factor, ( .bool ), mod
		15 : bool, .bool or join, )
		16 : bool, .join, )
		17 : bool, .bool or join, or
		18 : bool, .join, or
		19 : join, .join and equality, )
		20 : join, .equality, )
		21 : join, .join and equality, or
		22 : join, .equality, or
		23 : join, .join and equality, and
		24 : join, .equality, and
		25 : equality, .equality eq rel, )
		26 : equality, .equality neq rel, )
		27 : equality, .rel, )
		28 : equality, .equality eq rel, or
		29 : equality, .equality neq rel, or
		30 : equality, .rel, or
		31 : equality, .equality eq rel, and
		32 : equality, .equality neq rel, and
		33 : equality, .rel, and
		34 : equality, .equality eq rel, eq
		35 : equality, .equality neq rel, eq
		36 : equality, .rel, eq
		37 : equality, .equality eq rel, neq
		38 : equality, .equality neq rel, neq
		39 : equality, .rel, neq
		40 : rel, .expr < expr, )
		41 : rel, .expr <= expr, )
		42 : rel, .expr >= expr, )
		43 : rel, .expr > expr, )
		44 : rel, .expr, )
		45 : rel, .expr < expr, or
		46 : rel, .expr <= expr, or
		47 : rel, .expr >= expr, or
		48 : rel, .expr > expr, or
		49 : rel, .expr, or
		50 : rel, .expr < expr, and
		51 : rel, .expr <= expr, and
		52 : rel, .expr >= expr, and
		53 : rel, .expr > expr, and
		54 : rel, .expr, and
		55 : rel, .expr < expr, eq
		56 : rel, .expr <= expr, eq
		57 : rel, .expr >= expr, eq
		58 : rel, .expr > expr, eq
		59 : rel, .expr, eq
		60 : rel, .expr < expr, neq
		61 : rel, .expr <= expr, neq
		62 : rel, .expr >= expr, neq
		63 : rel, .expr > expr, neq
		64 : rel, .expr, neq
		65 : expr, .expr + term, <
		66 : expr, .expr - term, <
		67 : expr, .term, <
		68 : expr, .expr + term, <=
		69 : expr, .expr - term, <=
		70 : expr, .term, <=
		71 : expr, .expr + term, >=
		72 : expr, .expr - term, >=
		73 : expr, .term, >=
		74 : expr, .expr + term, >
		75 : expr, .expr - term, >
		76 : expr, .term, >
		77 : expr, .expr + term, )
		78 : expr, .expr - term, )
		79 : expr, .term, )
		80 : expr, .expr + term, or
		81 : expr, .expr - term, or
		82 : expr, .term, or
		83 : expr, .expr + term, and
		84 : expr, .expr - term, and
		85 : expr, .term, and
		86 : expr, .expr + term, eq
		87 : expr, .expr - term, eq
		88 : expr, .term, eq
		89 : expr, .expr + term, neq
		90 : expr, .expr - term, neq
		91 : expr, .term, neq
		92 : expr, .expr + term, +
		93 : expr, .expr - term, +
		94 : expr, .term, +
		95 : expr, .expr + term, -
		96 : expr, .expr - term, -
		97 : expr, .term, -
		98 : term, .term * unary, <
		99 : term, .term / unary, <
		100 : term, .term mod unary, <
		101 : term, .unary, <
		102 : term, .term * unary, <=
		103 : term, .term / unary, <=
		104 : term, .term mod unary, <=
		105 : term, .unary, <=
		106 : term, .term * unary, >=
		107 : term, .term / unary, >=
		108 : term, .term mod unary, >=
		109 : term, .unary, >=
		110 : term, .term * unary, >
		111 : term, .term / unary, >
		112 : term, .term mod unary, >
		113 : term, .unary, >
		114 : term, .term * unary, )
		115 : term, .term / unary, )
		116 : term, .term mod unary, )
		117 : term, .unary, )
		118 : term, .term * unary, or
		119 : term, .term / unary, or
		120 : term, .term mod unary, or
		121 : term, .unary, or
		122 : term, .term * unary, and
		123 : term, .term / unary, and
		124 : term, .term mod unary, and
		125 : term, .unary, and
		126 : term, .term * unary, eq
		127 : term, .term / unary, eq
		128 : term, .term mod unary, eq
		129 : term, .unary, eq
		130 : term, .term * unary, neq
		131 : term, .term / unary, neq
		132 : term, .term mod unary, neq
		133 : term, .unary, neq
		134 : term, .term * unary, +
		135 : term, .term / unary, +
		136 : term, .term mod unary, +
		137 : term, .unary, +
		138 : term, .term * unary, -
		139 : term, .term / unary, -
		140 : term, .term mod unary, -
		141 : term, .unary, -
		142 : term, .term * unary, *
		143 : term, .term / unary, *
		144 : term, .term mod unary, *
		145 : term, .unary, *
		146 : term, .term * unary, /
		147 : term, .term / unary, /
		148 : term, .term mod unary, /
		149 : term, .unary, /
		150 : term, .term * unary, mod
		151 : term, .term / unary, mod
		152 : term, .term mod unary, mod
		153 : term, .unary, mod
		154 : unary, .! unary, <
		155 : unary, .- unary, <
		156 : unary, .factor, <
		157 : unary, .! unary, <=
		158 : unary, .- unary, <=
		159 : unary, .factor, <=
		160 : unary, .! unary, >=
		161 : unary, .- unary, >=
		162 : unary, .factor, >=
		163 : unary, .! unary, >
		164 : unary, .- unary, >
		165 : unary, .factor, >
		166 : unary, .! unary, )
		167 : unary, .- unary, )
		168 : unary, .factor, )
		169 : unary, .! unary, or
		170 : unary, .- unary, or
		171 : unary, .factor, or
		172 : unary, .! unary, and
		173 : unary, .- unary, and
		174 : unary, .factor, and
		175 : unary, .! unary, eq
		176 : unary, .- unary, eq
		177 : unary, .factor, eq
		178 : unary, .! unary, neq
		179 : unary, .- unary, neq
		180 : unary, .factor, neq
		181 : unary, .! unary, +
		182 : unary, .- unary, +
		183 : unary, .factor, +
		184 : unary, .! unary, -
		185 : unary, .- unary, -
		186 : unary, .factor, -
		187 : unary, .! unary, *
		188 : unary, .- unary, *
		189 : unary, .factor, *
		190 : unary, .! unary, /
		191 : unary, .- unary, /
		192 : unary, .factor, /
		193 : unary, .! unary, mod
		194 : unary, .- unary, mod
		195 : unary, .factor, mod
		196 : factor, .( bool ), <
		197 : factor, .loc, <
		198 : factor, .id ( args ), <
		199 : factor, .num, <
		200 : factor, .real, <
		201 : factor, .true, <
		202 : factor, .false, <
		203 : factor, .( bool ), <=
		204 : factor, .loc, <=
		205 : factor, .id ( args ), <=
		206 : factor, .num, <=
		207 : factor, .real, <=
		208 : factor, .true, <=
		209 : factor, .false, <=
		210 : factor, .( bool ), >=
		211 : factor, .loc, >=
		212 : factor, .id ( args ), >=
		213 : factor, .num, >=
		214 : factor, .real, >=
		215 : factor, .true, >=
		216 : factor, .false, >=
		217 : factor, .( bool ), >
		218 : factor, .loc, >
		219 : factor, .id ( args ), >
		220 : factor, .num, >
		221 : factor, .real, >
		222 : factor, .true, >
		223 : factor, .false, >
		224 : factor, .( bool ), )
		225 : factor, .loc, )
		226 : factor, .id ( args ), )
		227 : factor, .num, )
		228 : factor, .real, )
		229 : factor, .true, )
		230 : factor, .false, )
		231 : factor, .( bool ), or
		232 : factor, .loc, or
		233 : factor, .id ( args ), or
		234 : factor, .num, or
		235 : factor, .real, or
		236 : factor, .true, or
		237 : factor, .false, or
		238 : factor, .( bool ), and
		239 : factor, .loc, and
		240 : factor, .id ( args ), and
		241 : factor, .num, and
		242 : factor, .real, and
		243 : factor, .true, and
		244 : factor, .false, and
		245 : factor, .( bool ), eq
		246 : factor, .loc, eq
		247 : factor, .id ( args ), eq
		248 : factor, .num, eq
		249 : factor, .real, eq
		250 : factor, .true, eq
		251 : factor, .false, eq
		252 : factor, .( bool ), neq
		253 : factor, .loc, neq
		254 : factor, .id ( args ), neq
		255 : factor, .num, neq
		256 : factor, .real, neq
		257 : factor, .true, neq
		258 : factor, .false, neq
		259 : factor, .( bool ), +
		260 : factor, .loc, +
		261 : factor, .id ( args ), +
		262 : factor, .num, +
		263 : factor, .real, +
		264 : factor, .true, +
		265 : factor, .false, +
		266 : factor, .( bool ), -
		267 : factor, .loc, -
		268 : factor, .id ( args ), -
		269 : factor, .num, -
		270 : factor, .real, -
		271 : factor, .true, -
		272 : factor, .false, -
		273 : factor, .( bool ), *
		274 : factor, .loc, *
		275 : factor, .id ( args ), *
		276 : factor, .num, *
		277 : factor, .real, *
		278 : factor, .true, *
		279 : factor, .false, *
		280 : factor, .( bool ), /
		281 : factor, .loc, /
		282 : factor, .id ( args ), /
		283 : factor, .num, /
		284 : factor, .real, /
		285 : factor, .true, /
		286 : factor, .false, /
		287 : factor, .( bool ), mod
		288 : factor, .loc, mod
		289 : factor, .id ( args ), mod
		290 : factor, .num, mod
		291 : factor, .real, mod
		292 : factor, .true, mod
		293 : factor, .false, mod
		294 : loc, .loc [ bool ], <
		295 : loc, .id, <
		296 : loc, .loc [ bool ], <=
		297 : loc, .id, <=
		298 : loc, .loc [ bool ], >=
		299 : loc, .id, >=
		300 : loc, .loc [ bool ], >
		301 : loc, .id, >
		302 : loc, .loc [ bool ], )
		303 : loc, .id, )
		304 : loc, .loc [ bool ], or
		305 : loc, .id, or
		306 : loc, .loc [ bool ], and
		307 : loc, .id, and
		308 : loc, .loc [ bool ], eq
		309 : loc, .id, eq
		310 : loc, .loc [ bool ], neq
		311 : loc, .id, neq
		312 : loc, .loc [ bool ], +
		313 : loc, .id, +
		314 : loc, .loc [ bool ], -
		315 : loc, .id, -
		316 : loc, .loc [ bool ], *
		317 : loc, .id, *
		318 : loc, .loc [ bool ], /
		319 : loc, .id, /
		320 : loc, .loc [ bool ], mod
		321 : loc, .id, mod
		322 : loc, .loc [ bool ], [
		323 : loc, .id, [
	[215] 
		0 : unary, - .unary, <
		1 : unary, - .unary, <=
		2 : unary, - .unary, >=
		3 : unary, - .unary, >
		4 : unary, - .unary, )
		5 : unary, - .unary, ,
		6 : unary, - .unary, or
		7 : unary, - .unary, and
		8 : unary, - .unary, eq
		9 : unary, - .unary, neq
		10 : unary, - .unary, +
		11 : unary, - .unary, -
		12 : unary, - .unary, *
		13 : unary, - .unary, /
		14 : unary, - .unary, mod
		15 : unary, .! unary, <
		16 : unary, .- unary, <
		17 : unary, .factor, <
		18 : unary, .! unary, <=
		19 : unary, .- unary, <=
		20 : unary, .factor, <=
		21 : unary, .! unary, >=
		22 : unary, .- unary, >=
		23 : unary, .factor, >=
		24 : unary, .! unary, >
		25 : unary, .- unary, >
		26 : unary, .factor, >
		27 : unary, .! unary, )
		28 : unary, .- unary, )
		29 : unary, .factor, )
		30 : unary, .! unary, ,
		31 : unary, .- unary, ,
		32 : unary, .factor, ,
		33 : unary, .! unary, or
		34 : unary, .- unary, or
		35 : unary, .factor, or
		36 : unary, .! unary, and
		37 : unary, .- unary, and
		38 : unary, .factor, and
		39 : unary, .! unary, eq
		40 : unary, .- unary, eq
		41 : unary, .factor, eq
		42 : unary, .! unary, neq
		43 : unary, .- unary, neq
		44 : unary, .factor, neq
		45 : unary, .! unary, +
		46 : unary, .- unary, +
		47 : unary, .factor, +
		48 : unary, .! unary, -
		49 : unary, .- unary, -
		50 : unary, .factor, -
		51 : unary, .! unary, *
		52 : unary, .- unary, *
		53 : unary, .factor, *
		54 : unary, .! unary, /
		55 : unary, .- unary, /
		56 : unary, .factor, /
		57 : unary, .! unary, mod
		58 : unary, .- unary, mod
		59 : unary, .factor, mod
		60 : factor, .( bool ), <
		61 : factor, .loc, <
		62 : factor, .id ( args ), <
		63 : factor, .num, <
		64 : factor, .real, <
		65 : factor, .true, <
		66 : factor, .false, <
		67 : factor, .( bool ), <=
		68 : factor, .loc, <=
		69 : factor, .id ( args ), <=
		70 : factor, .num, <=
		71 : factor, .real, <=
		72 : factor, .true, <=
		73 : factor, .false, <=
		74 : factor, .( bool ), >=
		75 : factor, .loc, >=
		76 : factor, .id ( args ), >=
		77 : factor, .num, >=
		78 : factor, .real, >=
		79 : factor, .true, >=
		80 : factor, .false, >=
		81 : factor, .( bool ), >
		82 : factor, .loc, >
		83 : factor, .id ( args ), >
		84 : factor, .num, >
		85 : factor, .real, >
		86 : factor, .true, >
		87 : factor, .false, >
		88 : factor, .( bool ), )
		89 : factor, .loc, )
		90 : factor, .id ( args ), )
		91 : factor, .num, )
		92 : factor, .real, )
		93 : factor, .true, )
		94 : factor, .false, )
		95 : factor, .( bool ), ,
		96 : factor, .loc, ,
		97 : factor, .id ( args ), ,
		98 : factor, .num, ,
		99 : factor, .real, ,
		100 : factor, .true, ,
		101 : factor, .false, ,
		102 : factor, .( bool ), or
		103 : factor, .loc, or
		104 : factor, .id ( args ), or
		105 : factor, .num, or
		106 : factor, .real, or
		107 : factor, .true, or
		108 : factor, .false, or
		109 : factor, .( bool ), and
		110 : factor, .loc, and
		111 : factor, .id ( args ), and
		112 : factor, .num, and
		113 : factor, .real, and
		114 : factor, .true, and
		115 : factor, .false, and
		116 : factor, .( bool ), eq
		117 : factor, .loc, eq
		118 : factor, .id ( args ), eq
		119 : factor, .num, eq
		120 : factor, .real, eq
		121 : factor, .true, eq
		122 : factor, .false, eq
		123 : factor, .( bool ), neq
		124 : factor, .loc, neq
		125 : factor, .id ( args ), neq
		126 : factor, .num, neq
		127 : factor, .real, neq
		128 : factor, .true, neq
		129 : factor, .false, neq
		130 : factor, .( bool ), +
		131 : factor, .loc, +
		132 : factor, .id ( args ), +
		133 : factor, .num, +
		134 : factor, .real, +
		135 : factor, .true, +
		136 : factor, .false, +
		137 : factor, .( bool ), -
		138 : factor, .loc, -
		139 : factor, .id ( args ), -
		140 : factor, .num, -
		141 : factor, .real, -
		142 : factor, .true, -
		143 : factor, .false, -
		144 : factor, .( bool ), *
		145 : factor, .loc, *
		146 : factor, .id ( args ), *
		147 : factor, .num, *
		148 : factor, .real, *
		149 : factor, .true, *
		150 : factor, .false, *
		151 : factor, .( bool ), /
		152 : factor, .loc, /
		153 : factor, .id ( args ), /
		154 : factor, .num, /
		155 : factor, .real, /
		156 : factor, .true, /
		157 : factor, .false, /
		158 : factor, .( bool ), mod
		159 : factor, .loc, mod
		160 : factor, .id ( args ), mod
		161 : factor, .num, mod
		162 : factor, .real, mod
		163 : factor, .true, mod
		164 : factor, .false, mod
		165 : loc, .loc [ bool ], <
		166 : loc, .id, <
		167 : loc, .loc [ bool ], <=
		168 : loc, .id, <=
		169 : loc, .loc [ bool ], >=
		170 : loc, .id, >=
		171 : loc, .loc [ bool ], >
		172 : loc, .id, >
		173 : loc, .loc [ bool ], )
		174 : loc, .id, )
		175 : loc, .loc [ bool ], ,
		176 : loc, .id, ,
		177 : loc, .loc [ bool ], or
		178 : loc, .id, or
		179 : loc, .loc [ bool ], and
		180 : loc, .id, and
		181 : loc, .loc [ bool ], eq
		182 : loc, .id, eq
		183 : loc, .loc [ bool ], neq
		184 : loc, .id, neq
		185 : loc, .loc [ bool ], +
		186 : loc, .id, +
		187 : loc, .loc [ bool ], -
		188 : loc, .id, -
		189 : loc, .loc [ bool ], *
		190 : loc, .id, *
		191 : loc, .loc [ bool ], /
		192 : loc, .id, /
		193 : loc, .loc [ bool ], mod
		194 : loc, .id, mod
		195 : loc, .loc [ bool ], [
		196 : loc, .id, [
	[216] 
		0 : unary, ! .unary, <
		1 : unary, ! .unary, <=
		2 : unary, ! .unary, >=
		3 : unary, ! .unary, >
		4 : unary, ! .unary, )
		5 : unary, ! .unary, ,
		6 : unary, ! .unary, or
		7 : unary, ! .unary, and
		8 : unary, ! .unary, eq
		9 : unary, ! .unary, neq
		10 : unary, ! .unary, +
		11 : unary, ! .unary, -
		12 : unary, ! .unary, *
		13 : unary, ! .unary, /
		14 : unary, ! .unary, mod
		15 : unary, .! unary, <
		16 : unary, .- unary, <
		17 : unary, .factor, <
		18 : unary, .! unary, <=
		19 : unary, .- unary, <=
		20 : unary, .factor, <=
		21 : unary, .! unary, >=
		22 : unary, .- unary, >=
		23 : unary, .factor, >=
		24 : unary, .! unary, >
		25 : unary, .- unary, >
		26 : unary, .factor, >
		27 : unary, .! unary, )
		28 : unary, .- unary, )
		29 : unary, .factor, )
		30 : unary, .! unary, ,
		31 : unary, .- unary, ,
		32 : unary, .factor, ,
		33 : unary, .! unary, or
		34 : unary, .- unary, or
		35 : unary, .factor, or
		36 : unary, .! unary, and
		37 : unary, .- unary, and
		38 : unary, .factor, and
		39 : unary, .! unary, eq
		40 : unary, .- unary, eq
		41 : unary, .factor, eq
		42 : unary, .! unary, neq
		43 : unary, .- unary, neq
		44 : unary, .factor, neq
		45 : unary, .! unary, +
		46 : unary, .- unary, +
		47 : unary, .factor, +
		48 : unary, .! unary, -
		49 : unary, .- unary, -
		50 : unary, .factor, -
		51 : unary, .! unary, *
		52 : unary, .- unary, *
		53 : unary, .factor, *
		54 : unary, .! unary, /
		55 : unary, .- unary, /
		56 : unary, .factor, /
		57 : unary, .! unary, mod
		58 : unary, .- unary, mod
		59 : unary, .factor, mod
		60 : factor, .( bool ), <
		61 : factor, .loc, <
		62 : factor, .id ( args ), <
		63 : factor, .num, <
		64 : factor, .real, <
		65 : factor, .true, <
		66 : factor, .false, <
		67 : factor, .( bool ), <=
		68 : factor, .loc, <=
		69 : factor, .id ( args ), <=
		70 : factor, .num, <=
		71 : factor, .real, <=
		72 : factor, .true, <=
		73 : factor, .false, <=
		74 : factor, .( bool ), >=
		75 : factor, .loc, >=
		76 : factor, .id ( args ), >=
		77 : factor, .num, >=
		78 : factor, .real, >=
		79 : factor, .true, >=
		80 : factor, .false, >=
		81 : factor, .( bool ), >
		82 : factor, .loc, >
		83 : factor, .id ( args ), >
		84 : factor, .num, >
		85 : factor, .real, >
		86 : factor, .true, >
		87 : factor, .false, >
		88 : factor, .( bool ), )
		89 : factor, .loc, )
		90 : factor, .id ( args ), )
		91 : factor, .num, )
		92 : factor, .real, )
		93 : factor, .true, )
		94 : factor, .false, )
		95 : factor, .( bool ), ,
		96 : factor, .loc, ,
		97 : factor, .id ( args ), ,
		98 : factor, .num, ,
		99 : factor, .real, ,
		100 : factor, .true, ,
		101 : factor, .false, ,
		102 : factor, .( bool ), or
		103 : factor, .loc, or
		104 : factor, .id ( args ), or
		105 : factor, .num, or
		106 : factor, .real, or
		107 : factor, .true, or
		108 : factor, .false, or
		109 : factor, .( bool ), and
		110 : factor, .loc, and
		111 : factor, .id ( args ), and
		112 : factor, .num, and
		113 : factor, .real, and
		114 : factor, .true, and
		115 : factor, .false, and
		116 : factor, .( bool ), eq
		117 : factor, .loc, eq
		118 : factor, .id ( args ), eq
		119 : factor, .num, eq
		120 : factor, .real, eq
		121 : factor, .true, eq
		122 : factor, .false, eq
		123 : factor, .( bool ), neq
		124 : factor, .loc, neq
		125 : factor, .id ( args ), neq
		126 : factor, .num, neq
		127 : factor, .real, neq
		128 : factor, .true, neq
		129 : factor, .false, neq
		130 : factor, .( bool ), +
		131 : factor, .loc, +
		132 : factor, .id ( args ), +
		133 : factor, .num, +
		134 : factor, .real, +
		135 : factor, .true, +
		136 : factor, .false, +
		137 : factor, .( bool ), -
		138 : factor, .loc, -
		139 : factor, .id ( args ), -
		140 : factor, .num, -
		141 : factor, .real, -
		142 : factor, .true, -
		143 : factor, .false, -
		144 : factor, .( bool ), *
		145 : factor, .loc, *
		146 : factor, .id ( args ), *
		147 : factor, .num, *
		148 : factor, .real, *
		149 : factor, .true, *
		150 : factor, .false, *
		151 : factor, .( bool ), /
		152 : factor, .loc, /
		153 : factor, .id ( args ), /
		154 : factor, .num, /
		155 : factor, .real, /
		156 : factor, .true, /
		157 : factor, .false, /
		158 : factor, .( bool ), mod
		159 : factor, .loc, mod
		160 : factor, .id ( args ), mod
		161 : factor, .num, mod
		162 : factor, .real, mod
		163 : factor, .true, mod
		164 : factor, .false, mod
		165 : loc, .loc [ bool ], <
		166 : loc, .id, <
		167 : loc, .loc [ bool ], <=
		168 : loc, .id, <=
		169 : loc, .loc [ bool ], >=
		170 : loc, .id, >=
		171 : loc, .loc [ bool ], >
		172 : loc, .id, >
		173 : loc, .loc [ bool ], )
		174 : loc, .id, )
		175 : loc, .loc [ bool ], ,
		176 : loc, .id, ,
		177 : loc, .loc [ bool ], or
		178 : loc, .id, or
		179 : loc, .loc [ bool ], and
		180 : loc, .id, and
		181 : loc, .loc [ bool ], eq
		182 : loc, .id, eq
		183 : loc, .loc [ bool ], neq
		184 : loc, .id, neq
		185 : loc, .loc [ bool ], +
		186 : loc, .id, +
		187 : loc, .loc [ bool ], -
		188 : loc, .id, -
		189 : loc, .loc [ bool ], *
		190 : loc, .id, *
		191 : loc, .loc [ bool ], /
		192 : loc, .id, /
		193 : loc, .loc [ bool ], mod
		194 : loc, .id, mod
		195 : loc, .loc [ bool ], [
		196 : loc, .id, [
	[217] 
		0 : factor, num ., <
		1 : factor, num ., <=
		2 : factor, num ., >=
		3 : factor, num ., >
		4 : factor, num ., )
		5 : factor, num ., ,
		6 : factor, num ., or
		7 : factor, num ., and
		8 : factor, num ., eq
		9 : factor, num ., neq
		10 : factor, num ., +
		11 : factor, num ., -
		12 : factor, num ., *
		13 : factor, num ., /
		14 : factor, num ., mod
	[218] 
		0 : factor, real ., <
		1 : factor, real ., <=
		2 : factor, real ., >=
		3 : factor, real ., >
		4 : factor, real ., )
		5 : factor, real ., ,
		6 : factor, real ., or
		7 : factor, real ., and
		8 : factor, real ., eq
		9 : factor, real ., neq
		10 : factor, real ., +
		11 : factor, real ., -
		12 : factor, real ., *
		13 : factor, real ., /
		14 : factor, real ., mod
	[219] 
		0 : factor, true ., <
		1 : factor, true ., <=
		2 : factor, true ., >=
		3 : factor, true ., >
		4 : factor, true ., )
		5 : factor, true ., ,
		6 : factor, true ., or
		7 : factor, true ., and
		8 : factor, true ., eq
		9 : factor, true ., neq
		10 : factor, true ., +
		11 : factor, true ., -
		12 : factor, true ., *
		13 : factor, true ., /
		14 : factor, true ., mod
	[220] 
		0 : factor, false ., <
		1 : factor, false ., <=
		2 : factor, false ., >=
		3 : factor, false ., >
		4 : factor, false ., )
		5 : factor, false ., ,
		6 : factor, false ., or
		7 : factor, false ., and
		8 : factor, false ., eq
		9 : factor, false ., neq
		10 : factor, false ., +
		11 : factor, false ., -
		12 : factor, false ., *
		13 : factor, false ., /
		14 : factor, false ., mod
	[221] 
		0 : factor, ( bool ) ., <
		1 : factor, ( bool ) ., <=
		2 : factor, ( bool ) ., >=
		3 : factor, ( bool ) ., >
		4 : factor, ( bool ) ., ;
		5 : factor, ( bool ) ., or
		6 : factor, ( bool ) ., and
		7 : factor, ( bool ) ., eq
		8 : factor, ( bool ) ., neq
		9 : factor, ( bool ) ., +
		10 : factor, ( bool ) ., -
		11 : factor, ( bool ) ., *
		12 : factor, ( bool ) ., /
		13 : factor, ( bool ) ., mod
	[222] 
		0 : loc, loc [ bool .], <
		1 : loc, loc [ bool .], <=
		2 : loc, loc [ bool .], >=
		3 : loc, loc [ bool .], >
		4 : loc, loc [ bool .], ]
		5 : loc, loc [ bool .], or
		6 : loc, loc [ bool .], and
		7 : loc, loc [ bool .], eq
		8 : loc, loc [ bool .], neq
		9 : loc, loc [ bool .], +
		10 : loc, loc [ bool .], -
		11 : loc, loc [ bool .], *
		12 : loc, loc [ bool .], /
		13 : loc, loc [ bool .], mod
		14 : loc, loc [ bool .], [
		15 : bool, bool .or join, ]
		16 : bool, bool .or join, or
	[223] 
		0 : bool, bool or join ., ]
		1 : bool, bool or join ., or
		2 : join, join .and equality, ]
		3 : join, join .and equality, or
		4 : join, join .and equality, and
	[224] 
		0 : join, join and equality ., ]
		1 : join, join and equality ., or
		2 : join, join and equality ., and
		3 : equality, equality .eq rel, ]
		4 : equality, equality .neq rel, ]
		5 : equality, equality .eq rel, or
		6 : equality, equality .neq rel, or
		7 : equality, equality .eq rel, and
		8 : equality, equality .neq rel, and
		9 : equality, equality .eq rel, eq
		10 : equality, equality .neq rel, eq
		11 : equality, equality .eq rel, neq
		12 : equality, equality .neq rel, neq
	[225] 
		0 : equality, equality eq rel ., ]
		1 : equality, equality eq rel ., or
		2 : equality, equality eq rel ., and
		3 : equality, equality eq rel ., eq
		4 : equality, equality eq rel ., neq
	[226] 
		0 : equality, equality neq rel ., ]
		1 : equality, equality neq rel ., or
		2 : equality, equality neq rel ., and
		3 : equality, equality neq rel ., eq
		4 : equality, equality neq rel ., neq
	[227] 
		0 : factor, loc ., ]
		1 : factor, loc ., or
		2 : factor, loc ., and
		3 : factor, loc ., eq
		4 : factor, loc ., neq
		5 : factor, loc ., +
		6 : factor, loc ., -
		7 : factor, loc ., *
		8 : factor, loc ., /
		9 : factor, loc ., mod
		10 : loc, loc .[ bool ], ]
		11 : loc, loc .[ bool ], or
		12 : loc, loc .[ bool ], and
		13 : loc, loc .[ bool ], eq
		14 : loc, loc .[ bool ], neq
		15 : loc, loc .[ bool ], +
		16 : loc, loc .[ bool ], -
		17 : loc, loc .[ bool ], *
		18 : loc, loc .[ bool ], /
		19 : loc, loc .[ bool ], mod
		20 : loc, loc .[ bool ], [
	[228] 
		0 : rel, expr < expr ., ]
		1 : rel, expr < expr ., or
		2 : rel, expr < expr ., and
		3 : rel, expr < expr ., eq
		4 : rel, expr < expr ., neq
		5 : expr, expr .+ term, ]
		6 : expr, expr .- term, ]
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[229] 
		0 : expr, term ., ]
		1 : expr, term ., or
		2 : expr, term ., and
		3 : expr, term ., eq
		4 : expr, term ., neq
		5 : expr, term ., +
		6 : expr, term ., -
		7 : term, term .* unary, ]
		8 : term, term ./ unary, ]
		9 : term, term .mod unary, ]
		10 : term, term .* unary, or
		11 : term, term ./ unary, or
		12 : term, term .mod unary, or
		13 : term, term .* unary, and
		14 : term, term ./ unary, and
		15 : term, term .mod unary, and
		16 : term, term .* unary, eq
		17 : term, term ./ unary, eq
		18 : term, term .mod unary, eq
		19 : term, term .* unary, neq
		20 : term, term ./ unary, neq
		21 : term, term .mod unary, neq
		22 : term, term .* unary, +
		23 : term, term ./ unary, +
		24 : term, term .mod unary, +
		25 : term, term .* unary, -
		26 : term, term ./ unary, -
		27 : term, term .mod unary, -
		28 : term, term .* unary, *
		29 : term, term ./ unary, *
		30 : term, term .mod unary, *
		31 : term, term .* unary, /
		32 : term, term ./ unary, /
		33 : term, term .mod unary, /
		34 : term, term .* unary, mod
		35 : term, term ./ unary, mod
		36 : term, term .mod unary, mod
	[230] 
		0 : term, unary ., ]
		1 : term, unary ., or
		2 : term, unary ., and
		3 : term, unary ., eq
		4 : term, unary ., neq
		5 : term, unary ., +
		6 : term, unary ., -
		7 : term, unary ., *
		8 : term, unary ., /
		9 : term, unary ., mod
	[231] 
		0 : unary, factor ., ]
		1 : unary, factor ., or
		2 : unary, factor ., and
		3 : unary, factor ., eq
		4 : unary, factor ., neq
		5 : unary, factor ., +
		6 : unary, factor ., -
		7 : unary, factor ., *
		8 : unary, factor ., /
		9 : unary, factor ., mod
	[232] 
		0 : factor, id .( args ), ]
		1 : factor, id .( args ), or
		2 : factor, id .( args ), and
		3 : factor, id .( args ), eq
		4 : factor, id .( args ), neq
		5 : factor, id .( args ), +
		6 : factor, id .( args ), -
		7 : factor, id .( args ), *
		8 : factor, id .( args ), /
		9 : factor, id .( args ), mod
		10 : loc, id ., ]
		11 : loc, id ., or
		12 : loc, id ., and
		13 : loc, id ., eq
		14 : loc, id ., neq
		15 : loc, id ., +
		16 : loc, id ., -
		17 : loc, id ., *
		18 : loc, id ., /
		19 : loc, id ., mod
		20 : loc, id ., [
	[233] 
		0 : factor, ( .bool ), ]
		1 : factor, ( .bool ), or
		2 : factor, ( .bool ), and
		3 : factor, ( .bool ), eq
		4 : factor, ( .bool ), neq
		5 : factor, ( .bool ), +
		6 : factor, ( .bool ), -
		7 : factor, ( .bool ), *
		8 : factor, ( .bool ), /
		9 : factor, ( .bool ), mod
		10 : bool, .bool or join, )
		11 : bool, .join, )
		12 : bool, .bool or join, or
		13 : bool, .join, or
		14 : join, .join and equality, )
		15 : join, .equality, )
		16 : join, .join and equality, or
		17 : join, .equality, or
		18 : join, .join and equality, and
		19 : join, .equality, and
		20 : equality, .equality eq rel, )
		21 : equality, .equality neq rel, )
		22 : equality, .rel, )
		23 : equality, .equality eq rel, or
		24 : equality, .equality neq rel, or
		25 : equality, .rel, or
		26 : equality, .equality eq rel, and
		27 : equality, .equality neq rel, and
		28 : equality, .rel, and
		29 : equality, .equality eq rel, eq
		30 : equality, .equality neq rel, eq
		31 : equality, .rel, eq
		32 : equality, .equality eq rel, neq
		33 : equality, .equality neq rel, neq
		34 : equality, .rel, neq
		35 : rel, .expr < expr, )
		36 : rel, .expr <= expr, )
		37 : rel, .expr >= expr, )
		38 : rel, .expr > expr, )
		39 : rel, .expr, )
		40 : rel, .expr < expr, or
		41 : rel, .expr <= expr, or
		42 : rel, .expr >= expr, or
		43 : rel, .expr > expr, or
		44 : rel, .expr, or
		45 : rel, .expr < expr, and
		46 : rel, .expr <= expr, and
		47 : rel, .expr >= expr, and
		48 : rel, .expr > expr, and
		49 : rel, .expr, and
		50 : rel, .expr < expr, eq
		51 : rel, .expr <= expr, eq
		52 : rel, .expr >= expr, eq
		53 : rel, .expr > expr, eq
		54 : rel, .expr, eq
		55 : rel, .expr < expr, neq
		56 : rel, .expr <= expr, neq
		57 : rel, .expr >= expr, neq
		58 : rel, .expr > expr, neq
		59 : rel, .expr, neq
		60 : expr, .expr + term, <
		61 : expr, .expr - term, <
		62 : expr, .term, <
		63 : expr, .expr + term, <=
		64 : expr, .expr - term, <=
		65 : expr, .term, <=
		66 : expr, .expr + term, >=
		67 : expr, .expr - term, >=
		68 : expr, .term, >=
		69 : expr, .expr + term, >
		70 : expr, .expr - term, >
		71 : expr, .term, >
		72 : expr, .expr + term, )
		73 : expr, .expr - term, )
		74 : expr, .term, )
		75 : expr, .expr + term, or
		76 : expr, .expr - term, or
		77 : expr, .term, or
		78 : expr, .expr + term, and
		79 : expr, .expr - term, and
		80 : expr, .term, and
		81 : expr, .expr + term, eq
		82 : expr, .expr - term, eq
		83 : expr, .term, eq
		84 : expr, .expr + term, neq
		85 : expr, .expr - term, neq
		86 : expr, .term, neq
		87 : expr, .expr + term, +
		88 : expr, .expr - term, +
		89 : expr, .term, +
		90 : expr, .expr + term, -
		91 : expr, .expr - term, -
		92 : expr, .term, -
		93 : term, .term * unary, <
		94 : term, .term / unary, <
		95 : term, .term mod unary, <
		96 : term, .unary, <
		97 : term, .term * unary, <=
		98 : term, .term / unary, <=
		99 : term, .term mod unary, <=
		100 : term, .unary, <=
		101 : term, .term * unary, >=
		102 : term, .term / unary, >=
		103 : term, .term mod unary, >=
		104 : term, .unary, >=
		105 : term, .term * unary, >
		106 : term, .term / unary, >
		107 : term, .term mod unary, >
		108 : term, .unary, >
		109 : term, .term * unary, )
		110 : term, .term / unary, )
		111 : term, .term mod unary, )
		112 : term, .unary, )
		113 : term, .term * unary, or
		114 : term, .term / unary, or
		115 : term, .term mod unary, or
		116 : term, .unary, or
		117 : term, .term * unary, and
		118 : term, .term / unary, and
		119 : term, .term mod unary, and
		120 : term, .unary, and
		121 : term, .term * unary, eq
		122 : term, .term / unary, eq
		123 : term, .term mod unary, eq
		124 : term, .unary, eq
		125 : term, .term * unary, neq
		126 : term, .term / unary, neq
		127 : term, .term mod unary, neq
		128 : term, .unary, neq
		129 : term, .term * unary, +
		130 : term, .term / unary, +
		131 : term, .term mod unary, +
		132 : term, .unary, +
		133 : term, .term * unary, -
		134 : term, .term / unary, -
		135 : term, .term mod unary, -
		136 : term, .unary, -
		137 : term, .term * unary, *
		138 : term, .term / unary, *
		139 : term, .term mod unary, *
		140 : term, .unary, *
		141 : term, .term * unary, /
		142 : term, .term / unary, /
		143 : term, .term mod unary, /
		144 : term, .unary, /
		145 : term, .term * unary, mod
		146 : term, .term / unary, mod
		147 : term, .term mod unary, mod
		148 : term, .unary, mod
		149 : unary, .! unary, <
		150 : unary, .- unary, <
		151 : unary, .factor, <
		152 : unary, .! unary, <=
		153 : unary, .- unary, <=
		154 : unary, .factor, <=
		155 : unary, .! unary, >=
		156 : unary, .- unary, >=
		157 : unary, .factor, >=
		158 : unary, .! unary, >
		159 : unary, .- unary, >
		160 : unary, .factor, >
		161 : unary, .! unary, )
		162 : unary, .- unary, )
		163 : unary, .factor, )
		164 : unary, .! unary, or
		165 : unary, .- unary, or
		166 : unary, .factor, or
		167 : unary, .! unary, and
		168 : unary, .- unary, and
		169 : unary, .factor, and
		170 : unary, .! unary, eq
		171 : unary, .- unary, eq
		172 : unary, .factor, eq
		173 : unary, .! unary, neq
		174 : unary, .- unary, neq
		175 : unary, .factor, neq
		176 : unary, .! unary, +
		177 : unary, .- unary, +
		178 : unary, .factor, +
		179 : unary, .! unary, -
		180 : unary, .- unary, -
		181 : unary, .factor, -
		182 : unary, .! unary, *
		183 : unary, .- unary, *
		184 : unary, .factor, *
		185 : unary, .! unary, /
		186 : unary, .- unary, /
		187 : unary, .factor, /
		188 : unary, .! unary, mod
		189 : unary, .- unary, mod
		190 : unary, .factor, mod
		191 : factor, .( bool ), <
		192 : factor, .loc, <
		193 : factor, .id ( args ), <
		194 : factor, .num, <
		195 : factor, .real, <
		196 : factor, .true, <
		197 : factor, .false, <
		198 : factor, .( bool ), <=
		199 : factor, .loc, <=
		200 : factor, .id ( args ), <=
		201 : factor, .num, <=
		202 : factor, .real, <=
		203 : factor, .true, <=
		204 : factor, .false, <=
		205 : factor, .( bool ), >=
		206 : factor, .loc, >=
		207 : factor, .id ( args ), >=
		208 : factor, .num, >=
		209 : factor, .real, >=
		210 : factor, .true, >=
		211 : factor, .false, >=
		212 : factor, .( bool ), >
		213 : factor, .loc, >
		214 : factor, .id ( args ), >
		215 : factor, .num, >
		216 : factor, .real, >
		217 : factor, .true, >
		218 : factor, .false, >
		219 : factor, .( bool ), )
		220 : factor, .loc, )
		221 : factor, .id ( args ), )
		222 : factor, .num, )
		223 : factor, .real, )
		224 : factor, .true, )
		225 : factor, .false, )
		226 : factor, .( bool ), or
		227 : factor, .loc, or
		228 : factor, .id ( args ), or
		229 : factor, .num, or
		230 : factor, .real, or
		231 : factor, .true, or
		232 : factor, .false, or
		233 : factor, .( bool ), and
		234 : factor, .loc, and
		235 : factor, .id ( args ), and
		236 : factor, .num, and
		237 : factor, .real, and
		238 : factor, .true, and
		239 : factor, .false, and
		240 : factor, .( bool ), eq
		241 : factor, .loc, eq
		242 : factor, .id ( args ), eq
		243 : factor, .num, eq
		244 : factor, .real, eq
		245 : factor, .true, eq
		246 : factor, .false, eq
		247 : factor, .( bool ), neq
		248 : factor, .loc, neq
		249 : factor, .id ( args ), neq
		250 : factor, .num, neq
		251 : factor, .real, neq
		252 : factor, .true, neq
		253 : factor, .false, neq
		254 : factor, .( bool ), +
		255 : factor, .loc, +
		256 : factor, .id ( args ), +
		257 : factor, .num, +
		258 : factor, .real, +
		259 : factor, .true, +
		260 : factor, .false, +
		261 : factor, .( bool ), -
		262 : factor, .loc, -
		263 : factor, .id ( args ), -
		264 : factor, .num, -
		265 : factor, .real, -
		266 : factor, .true, -
		267 : factor, .false, -
		268 : factor, .( bool ), *
		269 : factor, .loc, *
		270 : factor, .id ( args ), *
		271 : factor, .num, *
		272 : factor, .real, *
		273 : factor, .true, *
		274 : factor, .false, *
		275 : factor, .( bool ), /
		276 : factor, .loc, /
		277 : factor, .id ( args ), /
		278 : factor, .num, /
		279 : factor, .real, /
		280 : factor, .true, /
		281 : factor, .false, /
		282 : factor, .( bool ), mod
		283 : factor, .loc, mod
		284 : factor, .id ( args ), mod
		285 : factor, .num, mod
		286 : factor, .real, mod
		287 : factor, .true, mod
		288 : factor, .false, mod
		289 : loc, .loc [ bool ], <
		290 : loc, .id, <
		291 : loc, .loc [ bool ], <=
		292 : loc, .id, <=
		293 : loc, .loc [ bool ], >=
		294 : loc, .id, >=
		295 : loc, .loc [ bool ], >
		296 : loc, .id, >
		297 : loc, .loc [ bool ], )
		298 : loc, .id, )
		299 : loc, .loc [ bool ], or
		300 : loc, .id, or
		301 : loc, .loc [ bool ], and
		302 : loc, .id, and
		303 : loc, .loc [ bool ], eq
		304 : loc, .id, eq
		305 : loc, .loc [ bool ], neq
		306 : loc, .id, neq
		307 : loc, .loc [ bool ], +
		308 : loc, .id, +
		309 : loc, .loc [ bool ], -
		310 : loc, .id, -
		311 : loc, .loc [ bool ], *
		312 : loc, .id, *
		313 : loc, .loc [ bool ], /
		314 : loc, .id, /
		315 : loc, .loc [ bool ], mod
		316 : loc, .id, mod
		317 : loc, .loc [ bool ], [
		318 : loc, .id, [
	[234] 
		0 : unary, - .unary, ]
		1 : unary, - .unary, or
		2 : unary, - .unary, and
		3 : unary, - .unary, eq
		4 : unary, - .unary, neq
		5 : unary, - .unary, +
		6 : unary, - .unary, -
		7 : unary, - .unary, *
		8 : unary, - .unary, /
		9 : unary, - .unary, mod
		10 : unary, .! unary, ]
		11 : unary, .- unary, ]
		12 : unary, .factor, ]
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), ]
		41 : factor, .loc, ]
		42 : factor, .id ( args ), ]
		43 : factor, .num, ]
		44 : factor, .real, ]
		45 : factor, .true, ]
		46 : factor, .false, ]
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], ]
		111 : loc, .id, ]
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[235] 
		0 : unary, ! .unary, ]
		1 : unary, ! .unary, or
		2 : unary, ! .unary, and
		3 : unary, ! .unary, eq
		4 : unary, ! .unary, neq
		5 : unary, ! .unary, +
		6 : unary, ! .unary, -
		7 : unary, ! .unary, *
		8 : unary, ! .unary, /
		9 : unary, ! .unary, mod
		10 : unary, .! unary, ]
		11 : unary, .- unary, ]
		12 : unary, .factor, ]
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), ]
		41 : factor, .loc, ]
		42 : factor, .id ( args ), ]
		43 : factor, .num, ]
		44 : factor, .real, ]
		45 : factor, .true, ]
		46 : factor, .false, ]
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], ]
		111 : loc, .id, ]
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[236] 
		0 : factor, num ., ]
		1 : factor, num ., or
		2 : factor, num ., and
		3 : factor, num ., eq
		4 : factor, num ., neq
		5 : factor, num ., +
		6 : factor, num ., -
		7 : factor, num ., *
		8 : factor, num ., /
		9 : factor, num ., mod
	[237] 
		0 : factor, real ., ]
		1 : factor, real ., or
		2 : factor, real ., and
		3 : factor, real ., eq
		4 : factor, real ., neq
		5 : factor, real ., +
		6 : factor, real ., -
		7 : factor, real ., *
		8 : factor, real ., /
		9 : factor, real ., mod
	[238] 
		0 : factor, true ., ]
		1 : factor, true ., or
		2 : factor, true ., and
		3 : factor, true ., eq
		4 : factor, true ., neq
		5 : factor, true ., +
		6 : factor, true ., -
		7 : factor, true ., *
		8 : factor, true ., /
		9 : factor, true ., mod
	[239] 
		0 : factor, false ., ]
		1 : factor, false ., or
		2 : factor, false ., and
		3 : factor, false ., eq
		4 : factor, false ., neq
		5 : factor, false ., +
		6 : factor, false ., -
		7 : factor, false ., *
		8 : factor, false ., /
		9 : factor, false ., mod
	[240] 
		0 : rel, expr <= expr ., ]
		1 : rel, expr <= expr ., or
		2 : rel, expr <= expr ., and
		3 : rel, expr <= expr ., eq
		4 : rel, expr <= expr ., neq
		5 : expr, expr .+ term, ]
		6 : expr, expr .- term, ]
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[241] 
		0 : rel, expr >= expr ., ]
		1 : rel, expr >= expr ., or
		2 : rel, expr >= expr ., and
		3 : rel, expr >= expr ., eq
		4 : rel, expr >= expr ., neq
		5 : expr, expr .+ term, ]
		6 : expr, expr .- term, ]
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[242] 
		0 : rel, expr > expr ., ]
		1 : rel, expr > expr ., or
		2 : rel, expr > expr ., and
		3 : rel, expr > expr ., eq
		4 : rel, expr > expr ., neq
		5 : expr, expr .+ term, ]
		6 : expr, expr .- term, ]
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[243] 
		0 : expr, expr + term ., <
		1 : expr, expr + term ., <=
		2 : expr, expr + term ., >=
		3 : expr, expr + term ., >
		4 : expr, expr + term ., ]
		5 : expr, expr + term ., or
		6 : expr, expr + term ., and
		7 : expr, expr + term ., eq
		8 : expr, expr + term ., neq
		9 : expr, expr + term ., +
		10 : expr, expr + term ., -
		11 : term, term .* unary, <
		12 : term, term ./ unary, <
		13 : term, term .mod unary, <
		14 : term, term .* unary, <=
		15 : term, term ./ unary, <=
		16 : term, term .mod unary, <=
		17 : term, term .* unary, >=
		18 : term, term ./ unary, >=
		19 : term, term .mod unary, >=
		20 : term, term .* unary, >
		21 : term, term ./ unary, >
		22 : term, term .mod unary, >
		23 : term, term .* unary, ]
		24 : term, term ./ unary, ]
		25 : term, term .mod unary, ]
		26 : term, term .* unary, or
		27 : term, term ./ unary, or
		28 : term, term .mod unary, or
		29 : term, term .* unary, and
		30 : term, term ./ unary, and
		31 : term, term .mod unary, and
		32 : term, term .* unary, eq
		33 : term, term ./ unary, eq
		34 : term, term .mod unary, eq
		35 : term, term .* unary, neq
		36 : term, term ./ unary, neq
		37 : term, term .mod unary, neq
		38 : term, term .* unary, +
		39 : term, term ./ unary, +
		40 : term, term .mod unary, +
		41 : term, term .* unary, -
		42 : term, term ./ unary, -
		43 : term, term .mod unary, -
		44 : term, term .* unary, *
		45 : term, term ./ unary, *
		46 : term, term .mod unary, *
		47 : term, term .* unary, /
		48 : term, term ./ unary, /
		49 : term, term .mod unary, /
		50 : term, term .* unary, mod
		51 : term, term ./ unary, mod
		52 : term, term .mod unary, mod
	[244] 
		0 : expr, expr - term ., <
		1 : expr, expr - term ., <=
		2 : expr, expr - term ., >=
		3 : expr, expr - term ., >
		4 : expr, expr - term ., ]
		5 : expr, expr - term ., or
		6 : expr, expr - term ., and
		7 : expr, expr - term ., eq
		8 : expr, expr - term ., neq
		9 : expr, expr - term ., +
		10 : expr, expr - term ., -
		11 : term, term .* unary, <
		12 : term, term ./ unary, <
		13 : term, term .mod unary, <
		14 : term, term .* unary, <=
		15 : term, term ./ unary, <=
		16 : term, term .mod unary, <=
		17 : term, term .* unary, >=
		18 : term, term ./ unary, >=
		19 : term, term .mod unary, >=
		20 : term, term .* unary, >
		21 : term, term ./ unary, >
		22 : term, term .mod unary, >
		23 : term, term .* unary, ]
		24 : term, term ./ unary, ]
		25 : term, term .mod unary, ]
		26 : term, term .* unary, or
		27 : term, term ./ unary, or
		28 : term, term .mod unary, or
		29 : term, term .* unary, and
		30 : term, term ./ unary, and
		31 : term, term .mod unary, and
		32 : term, term .* unary, eq
		33 : term, term ./ unary, eq
		34 : term, term .mod unary, eq
		35 : term, term .* unary, neq
		36 : term, term ./ unary, neq
		37 : term, term .mod unary, neq
		38 : term, term .* unary, +
		39 : term, term ./ unary, +
		40 : term, term .mod unary, +
		41 : term, term .* unary, -
		42 : term, term ./ unary, -
		43 : term, term .mod unary, -
		44 : term, term .* unary, *
		45 : term, term ./ unary, *
		46 : term, term .mod unary, *
		47 : term, term .* unary, /
		48 : term, term ./ unary, /
		49 : term, term .mod unary, /
		50 : term, term .* unary, mod
		51 : term, term ./ unary, mod
		52 : term, term .mod unary, mod
	[245] 
		0 : term, term * unary ., <
		1 : term, term * unary ., <=
		2 : term, term * unary ., >=
		3 : term, term * unary ., >
		4 : term, term * unary ., ]
		5 : term, term * unary ., or
		6 : term, term * unary ., and
		7 : term, term * unary ., eq
		8 : term, term * unary ., neq
		9 : term, term * unary ., +
		10 : term, term * unary ., -
		11 : term, term * unary ., *
		12 : term, term * unary ., /
		13 : term, term * unary ., mod
	[246] 
		0 : term, term / unary ., <
		1 : term, term / unary ., <=
		2 : term, term / unary ., >=
		3 : term, term / unary ., >
		4 : term, term / unary ., ]
		5 : term, term / unary ., or
		6 : term, term / unary ., and
		7 : term, term / unary ., eq
		8 : term, term / unary ., neq
		9 : term, term / unary ., +
		10 : term, term / unary ., -
		11 : term, term / unary ., *
		12 : term, term / unary ., /
		13 : term, term / unary ., mod
	[247] 
		0 : term, term mod unary ., <
		1 : term, term mod unary ., <=
		2 : term, term mod unary ., >=
		3 : term, term mod unary ., >
		4 : term, term mod unary ., ]
		5 : term, term mod unary ., or
		6 : term, term mod unary ., and
		7 : term, term mod unary ., eq
		8 : term, term mod unary ., neq
		9 : term, term mod unary ., +
		10 : term, term mod unary ., -
		11 : term, term mod unary ., *
		12 : term, term mod unary ., /
		13 : term, term mod unary ., mod
	[248] 
		0 : factor, id ( args .), <
		1 : factor, id ( args .), <=
		2 : factor, id ( args .), >=
		3 : factor, id ( args .), >
		4 : factor, id ( args .), ]
		5 : factor, id ( args .), or
		6 : factor, id ( args .), and
		7 : factor, id ( args .), eq
		8 : factor, id ( args .), neq
		9 : factor, id ( args .), +
		10 : factor, id ( args .), -
		11 : factor, id ( args .), *
		12 : factor, id ( args .), /
		13 : factor, id ( args .), mod
		14 : args, args ., arg, )
		15 : args, args ., arg, ,
	[249] 
		0 : factor, ( bool ) ., <
		1 : factor, ( bool ) ., <=
		2 : factor, ( bool ) ., >=
		3 : factor, ( bool ) ., >
		4 : factor, ( bool ) ., ]
		5 : factor, ( bool ) ., or
		6 : factor, ( bool ) ., and
		7 : factor, ( bool ) ., eq
		8 : factor, ( bool ) ., neq
		9 : factor, ( bool ) ., +
		10 : factor, ( bool ) ., -
		11 : factor, ( bool ) ., *
		12 : factor, ( bool ) ., /
		13 : factor, ( bool ) ., mod
	[250] 
		0 : loc, loc [ bool .], <
		1 : loc, loc [ bool .], <=
		2 : loc, loc [ bool .], >=
		3 : loc, loc [ bool .], >
		4 : loc, loc [ bool .], ;
		5 : loc, loc [ bool .], or
		6 : loc, loc [ bool .], and
		7 : loc, loc [ bool .], eq
		8 : loc, loc [ bool .], neq
		9 : loc, loc [ bool .], +
		10 : loc, loc [ bool .], -
		11 : loc, loc [ bool .], *
		12 : loc, loc [ bool .], /
		13 : loc, loc [ bool .], mod
		14 : loc, loc [ bool .], [
		15 : bool, bool .or join, ]
		16 : bool, bool .or join, or
	[251] 
		0 : loc, loc [ bool .], <
		1 : loc, loc [ bool .], <=
		2 : loc, loc [ bool .], >=
		3 : loc, loc [ bool .], >
		4 : loc, loc [ bool .], )
		5 : loc, loc [ bool .], or
		6 : loc, loc [ bool .], and
		7 : loc, loc [ bool .], eq
		8 : loc, loc [ bool .], neq
		9 : loc, loc [ bool .], +
		10 : loc, loc [ bool .], -
		11 : loc, loc [ bool .], *
		12 : loc, loc [ bool .], /
		13 : loc, loc [ bool .], mod
		14 : loc, loc [ bool .], [
		15 : bool, bool .or join, ]
		16 : bool, bool .or join, or
	[252] 
		0 : stmt, if ( bool ) M .stmt, }
		1 : stmt, if ( bool ) M .stmt else M stmt, }
		2 : stmt, if ( bool ) M .stmt, [
		3 : stmt, if ( bool ) M .stmt else M stmt, [
		4 : stmt, if ( bool ) M .stmt, id
		5 : stmt, if ( bool ) M .stmt else M stmt, id
		6 : stmt, if ( bool ) M .stmt, if
		7 : stmt, if ( bool ) M .stmt else M stmt, if
		8 : stmt, if ( bool ) M .stmt, while
		9 : stmt, if ( bool ) M .stmt else M stmt, while
		10 : stmt, if ( bool ) M .stmt, do
		11 : stmt, if ( bool ) M .stmt else M stmt, do
		12 : stmt, if ( bool ) M .stmt, return
		13 : stmt, if ( bool ) M .stmt else M stmt, return
		14 : stmt, if ( bool ) M .stmt, {
		15 : stmt, if ( bool ) M .stmt else M stmt, {
		16 : stmt, if ( bool ) M .stmt, else
		17 : stmt, if ( bool ) M .stmt else M stmt, else
		18 : stmt, .loc = bool ;, }
		19 : stmt, .if ( bool ) M stmt, }
		20 : stmt, .if ( bool ) M stmt else M stmt, }
		21 : stmt, .while N ( bool ) M stmt, }
		22 : stmt, .do N stmt while ( bool ) M ;, }
		23 : stmt, .return arg ;, }
		24 : stmt, .block, }
		25 : stmt, .loc = bool ;, else
		26 : stmt, .if ( bool ) M stmt, else
		27 : stmt, .if ( bool ) M stmt else M stmt, else
		28 : stmt, .while N ( bool ) M stmt, else
		29 : stmt, .do N stmt while ( bool ) M ;, else
		30 : stmt, .return arg ;, else
		31 : stmt, .block, else
		32 : stmt, .loc = bool ;, [
		33 : stmt, .if ( bool ) M stmt, [
		34 : stmt, .if ( bool ) M stmt else M stmt, [
		35 : stmt, .while N ( bool ) M stmt, [
		36 : stmt, .do N stmt while ( bool ) M ;, [
		37 : stmt, .return arg ;, [
		38 : stmt, .block, [
		39 : stmt, .loc = bool ;, id
		40 : stmt, .if ( bool ) M stmt, id
		41 : stmt, .if ( bool ) M stmt else M stmt, id
		42 : stmt, .while N ( bool ) M stmt, id
		43 : stmt, .do N stmt while ( bool ) M ;, id
		44 : stmt, .return arg ;, id
		45 : stmt, .block, id
		46 : stmt, .loc = bool ;, if
		47 : stmt, .if ( bool ) M stmt, if
		48 : stmt, .if ( bool ) M stmt else M stmt, if
		49 : stmt, .while N ( bool ) M stmt, if
		50 : stmt, .do N stmt while ( bool ) M ;, if
		51 : stmt, .return arg ;, if
		52 : stmt, .block, if
		53 : stmt, .loc = bool ;, while
		54 : stmt, .if ( bool ) M stmt, while
		55 : stmt, .if ( bool ) M stmt else M stmt, while
		56 : stmt, .while N ( bool ) M stmt, while
		57 : stmt, .do N stmt while ( bool ) M ;, while
		58 : stmt, .return arg ;, while
		59 : stmt, .block, while
		60 : stmt, .loc = bool ;, do
		61 : stmt, .if ( bool ) M stmt, do
		62 : stmt, .if ( bool ) M stmt else M stmt, do
		63 : stmt, .while N ( bool ) M stmt, do
		64 : stmt, .do N stmt while ( bool ) M ;, do
		65 : stmt, .return arg ;, do
		66 : stmt, .block, do
		67 : stmt, .loc = bool ;, return
		68 : stmt, .if ( bool ) M stmt, return
		69 : stmt, .if ( bool ) M stmt else M stmt, return
		70 : stmt, .while N ( bool ) M stmt, return
		71 : stmt, .do N stmt while ( bool ) M ;, return
		72 : stmt, .return arg ;, return
		73 : stmt, .block, return
		74 : stmt, .loc = bool ;, {
		75 : stmt, .if ( bool ) M stmt, {
		76 : stmt, .if ( bool ) M stmt else M stmt, {
		77 : stmt, .while N ( bool ) M stmt, {
		78 : stmt, .do N stmt while ( bool ) M ;, {
		79 : stmt, .return arg ;, {
		80 : stmt, .block, {
		81 : loc, .loc [ bool ], =
		82 : loc, .id, =
		83 : block, .{ decls stmts }, }
		84 : block, .{ decls stmts }, else
		85 : block, .{ decls stmts }, [
		86 : block, .{ decls stmts }, id
		87 : block, .{ decls stmts }, if
		88 : block, .{ decls stmts }, while
		89 : block, .{ decls stmts }, do
		90 : block, .{ decls stmts }, return
		91 : block, .{ decls stmts }, {
		92 : loc, .loc [ bool ], [
		93 : loc, .id, [
	[253] 
		0 : bool, bool or join ., )
		1 : bool, bool or join ., or
		2 : join, join .and equality, )
		3 : join, join .and equality, or
		4 : join, join .and equality, and
	[254] 
		0 : join, join and equality ., )
		1 : join, join and equality ., or
		2 : join, join and equality ., and
		3 : equality, equality .eq rel, )
		4 : equality, equality .neq rel, )
		5 : equality, equality .eq rel, or
		6 : equality, equality .neq rel, or
		7 : equality, equality .eq rel, and
		8 : equality, equality .neq rel, and
		9 : equality, equality .eq rel, eq
		10 : equality, equality .neq rel, eq
		11 : equality, equality .eq rel, neq
		12 : equality, equality .neq rel, neq
	[255] 
		0 : equality, equality eq rel ., )
		1 : equality, equality eq rel ., or
		2 : equality, equality eq rel ., and
		3 : equality, equality eq rel ., eq
		4 : equality, equality eq rel ., neq
	[256] 
		0 : equality, equality neq rel ., )
		1 : equality, equality neq rel ., or
		2 : equality, equality neq rel ., and
		3 : equality, equality neq rel ., eq
		4 : equality, equality neq rel ., neq
	[257] 
		0 : factor, loc ., )
		1 : factor, loc ., or
		2 : factor, loc ., and
		3 : factor, loc ., eq
		4 : factor, loc ., neq
		5 : factor, loc ., +
		6 : factor, loc ., -
		7 : factor, loc ., *
		8 : factor, loc ., /
		9 : factor, loc ., mod
		10 : loc, loc .[ bool ], )
		11 : loc, loc .[ bool ], or
		12 : loc, loc .[ bool ], and
		13 : loc, loc .[ bool ], eq
		14 : loc, loc .[ bool ], neq
		15 : loc, loc .[ bool ], +
		16 : loc, loc .[ bool ], -
		17 : loc, loc .[ bool ], *
		18 : loc, loc .[ bool ], /
		19 : loc, loc .[ bool ], mod
		20 : loc, loc .[ bool ], [
	[258] 
		0 : rel, expr < expr ., )
		1 : rel, expr < expr ., or
		2 : rel, expr < expr ., and
		3 : rel, expr < expr ., eq
		4 : rel, expr < expr ., neq
		5 : expr, expr .+ term, )
		6 : expr, expr .- term, )
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[259] 
		0 : expr, term ., )
		1 : expr, term ., or
		2 : expr, term ., and
		3 : expr, term ., eq
		4 : expr, term ., neq
		5 : expr, term ., +
		6 : expr, term ., -
		7 : term, term .* unary, )
		8 : term, term ./ unary, )
		9 : term, term .mod unary, )
		10 : term, term .* unary, or
		11 : term, term ./ unary, or
		12 : term, term .mod unary, or
		13 : term, term .* unary, and
		14 : term, term ./ unary, and
		15 : term, term .mod unary, and
		16 : term, term .* unary, eq
		17 : term, term ./ unary, eq
		18 : term, term .mod unary, eq
		19 : term, term .* unary, neq
		20 : term, term ./ unary, neq
		21 : term, term .mod unary, neq
		22 : term, term .* unary, +
		23 : term, term ./ unary, +
		24 : term, term .mod unary, +
		25 : term, term .* unary, -
		26 : term, term ./ unary, -
		27 : term, term .mod unary, -
		28 : term, term .* unary, *
		29 : term, term ./ unary, *
		30 : term, term .mod unary, *
		31 : term, term .* unary, /
		32 : term, term ./ unary, /
		33 : term, term .mod unary, /
		34 : term, term .* unary, mod
		35 : term, term ./ unary, mod
		36 : term, term .mod unary, mod
	[260] 
		0 : term, unary ., )
		1 : term, unary ., or
		2 : term, unary ., and
		3 : term, unary ., eq
		4 : term, unary ., neq
		5 : term, unary ., +
		6 : term, unary ., -
		7 : term, unary ., *
		8 : term, unary ., /
		9 : term, unary ., mod
	[261] 
		0 : unary, factor ., )
		1 : unary, factor ., or
		2 : unary, factor ., and
		3 : unary, factor ., eq
		4 : unary, factor ., neq
		5 : unary, factor ., +
		6 : unary, factor ., -
		7 : unary, factor ., *
		8 : unary, factor ., /
		9 : unary, factor ., mod
	[262] 
		0 : factor, id .( args ), )
		1 : factor, id .( args ), or
		2 : factor, id .( args ), and
		3 : factor, id .( args ), eq
		4 : factor, id .( args ), neq
		5 : factor, id .( args ), +
		6 : factor, id .( args ), -
		7 : factor, id .( args ), *
		8 : factor, id .( args ), /
		9 : factor, id .( args ), mod
		10 : loc, id ., )
		11 : loc, id ., or
		12 : loc, id ., and
		13 : loc, id ., eq
		14 : loc, id ., neq
		15 : loc, id ., +
		16 : loc, id ., -
		17 : loc, id ., *
		18 : loc, id ., /
		19 : loc, id ., mod
		20 : loc, id ., [
	[263] 
		0 : factor, ( .bool ), )
		1 : factor, ( .bool ), or
		2 : factor, ( .bool ), and
		3 : factor, ( .bool ), eq
		4 : factor, ( .bool ), neq
		5 : factor, ( .bool ), +
		6 : factor, ( .bool ), -
		7 : factor, ( .bool ), *
		8 : factor, ( .bool ), /
		9 : factor, ( .bool ), mod
		10 : bool, .bool or join, )
		11 : bool, .join, )
		12 : bool, .bool or join, or
		13 : bool, .join, or
		14 : join, .join and equality, )
		15 : join, .equality, )
		16 : join, .join and equality, or
		17 : join, .equality, or
		18 : join, .join and equality, and
		19 : join, .equality, and
		20 : equality, .equality eq rel, )
		21 : equality, .equality neq rel, )
		22 : equality, .rel, )
		23 : equality, .equality eq rel, or
		24 : equality, .equality neq rel, or
		25 : equality, .rel, or
		26 : equality, .equality eq rel, and
		27 : equality, .equality neq rel, and
		28 : equality, .rel, and
		29 : equality, .equality eq rel, eq
		30 : equality, .equality neq rel, eq
		31 : equality, .rel, eq
		32 : equality, .equality eq rel, neq
		33 : equality, .equality neq rel, neq
		34 : equality, .rel, neq
		35 : rel, .expr < expr, )
		36 : rel, .expr <= expr, )
		37 : rel, .expr >= expr, )
		38 : rel, .expr > expr, )
		39 : rel, .expr, )
		40 : rel, .expr < expr, or
		41 : rel, .expr <= expr, or
		42 : rel, .expr >= expr, or
		43 : rel, .expr > expr, or
		44 : rel, .expr, or
		45 : rel, .expr < expr, and
		46 : rel, .expr <= expr, and
		47 : rel, .expr >= expr, and
		48 : rel, .expr > expr, and
		49 : rel, .expr, and
		50 : rel, .expr < expr, eq
		51 : rel, .expr <= expr, eq
		52 : rel, .expr >= expr, eq
		53 : rel, .expr > expr, eq
		54 : rel, .expr, eq
		55 : rel, .expr < expr, neq
		56 : rel, .expr <= expr, neq
		57 : rel, .expr >= expr, neq
		58 : rel, .expr > expr, neq
		59 : rel, .expr, neq
		60 : expr, .expr + term, <
		61 : expr, .expr - term, <
		62 : expr, .term, <
		63 : expr, .expr + term, <=
		64 : expr, .expr - term, <=
		65 : expr, .term, <=
		66 : expr, .expr + term, >=
		67 : expr, .expr - term, >=
		68 : expr, .term, >=
		69 : expr, .expr + term, >
		70 : expr, .expr - term, >
		71 : expr, .term, >
		72 : expr, .expr + term, )
		73 : expr, .expr - term, )
		74 : expr, .term, )
		75 : expr, .expr + term, or
		76 : expr, .expr - term, or
		77 : expr, .term, or
		78 : expr, .expr + term, and
		79 : expr, .expr - term, and
		80 : expr, .term, and
		81 : expr, .expr + term, eq
		82 : expr, .expr - term, eq
		83 : expr, .term, eq
		84 : expr, .expr + term, neq
		85 : expr, .expr - term, neq
		86 : expr, .term, neq
		87 : expr, .expr + term, +
		88 : expr, .expr - term, +
		89 : expr, .term, +
		90 : expr, .expr + term, -
		91 : expr, .expr - term, -
		92 : expr, .term, -
		93 : term, .term * unary, <
		94 : term, .term / unary, <
		95 : term, .term mod unary, <
		96 : term, .unary, <
		97 : term, .term * unary, <=
		98 : term, .term / unary, <=
		99 : term, .term mod unary, <=
		100 : term, .unary, <=
		101 : term, .term * unary, >=
		102 : term, .term / unary, >=
		103 : term, .term mod unary, >=
		104 : term, .unary, >=
		105 : term, .term * unary, >
		106 : term, .term / unary, >
		107 : term, .term mod unary, >
		108 : term, .unary, >
		109 : term, .term * unary, )
		110 : term, .term / unary, )
		111 : term, .term mod unary, )
		112 : term, .unary, )
		113 : term, .term * unary, or
		114 : term, .term / unary, or
		115 : term, .term mod unary, or
		116 : term, .unary, or
		117 : term, .term * unary, and
		118 : term, .term / unary, and
		119 : term, .term mod unary, and
		120 : term, .unary, and
		121 : term, .term * unary, eq
		122 : term, .term / unary, eq
		123 : term, .term mod unary, eq
		124 : term, .unary, eq
		125 : term, .term * unary, neq
		126 : term, .term / unary, neq
		127 : term, .term mod unary, neq
		128 : term, .unary, neq
		129 : term, .term * unary, +
		130 : term, .term / unary, +
		131 : term, .term mod unary, +
		132 : term, .unary, +
		133 : term, .term * unary, -
		134 : term, .term / unary, -
		135 : term, .term mod unary, -
		136 : term, .unary, -
		137 : term, .term * unary, *
		138 : term, .term / unary, *
		139 : term, .term mod unary, *
		140 : term, .unary, *
		141 : term, .term * unary, /
		142 : term, .term / unary, /
		143 : term, .term mod unary, /
		144 : term, .unary, /
		145 : term, .term * unary, mod
		146 : term, .term / unary, mod
		147 : term, .term mod unary, mod
		148 : term, .unary, mod
		149 : unary, .! unary, <
		150 : unary, .- unary, <
		151 : unary, .factor, <
		152 : unary, .! unary, <=
		153 : unary, .- unary, <=
		154 : unary, .factor, <=
		155 : unary, .! unary, >=
		156 : unary, .- unary, >=
		157 : unary, .factor, >=
		158 : unary, .! unary, >
		159 : unary, .- unary, >
		160 : unary, .factor, >
		161 : unary, .! unary, )
		162 : unary, .- unary, )
		163 : unary, .factor, )
		164 : unary, .! unary, or
		165 : unary, .- unary, or
		166 : unary, .factor, or
		167 : unary, .! unary, and
		168 : unary, .- unary, and
		169 : unary, .factor, and
		170 : unary, .! unary, eq
		171 : unary, .- unary, eq
		172 : unary, .factor, eq
		173 : unary, .! unary, neq
		174 : unary, .- unary, neq
		175 : unary, .factor, neq
		176 : unary, .! unary, +
		177 : unary, .- unary, +
		178 : unary, .factor, +
		179 : unary, .! unary, -
		180 : unary, .- unary, -
		181 : unary, .factor, -
		182 : unary, .! unary, *
		183 : unary, .- unary, *
		184 : unary, .factor, *
		185 : unary, .! unary, /
		186 : unary, .- unary, /
		187 : unary, .factor, /
		188 : unary, .! unary, mod
		189 : unary, .- unary, mod
		190 : unary, .factor, mod
		191 : factor, .( bool ), <
		192 : factor, .loc, <
		193 : factor, .id ( args ), <
		194 : factor, .num, <
		195 : factor, .real, <
		196 : factor, .true, <
		197 : factor, .false, <
		198 : factor, .( bool ), <=
		199 : factor, .loc, <=
		200 : factor, .id ( args ), <=
		201 : factor, .num, <=
		202 : factor, .real, <=
		203 : factor, .true, <=
		204 : factor, .false, <=
		205 : factor, .( bool ), >=
		206 : factor, .loc, >=
		207 : factor, .id ( args ), >=
		208 : factor, .num, >=
		209 : factor, .real, >=
		210 : factor, .true, >=
		211 : factor, .false, >=
		212 : factor, .( bool ), >
		213 : factor, .loc, >
		214 : factor, .id ( args ), >
		215 : factor, .num, >
		216 : factor, .real, >
		217 : factor, .true, >
		218 : factor, .false, >
		219 : factor, .( bool ), )
		220 : factor, .loc, )
		221 : factor, .id ( args ), )
		222 : factor, .num, )
		223 : factor, .real, )
		224 : factor, .true, )
		225 : factor, .false, )
		226 : factor, .( bool ), or
		227 : factor, .loc, or
		228 : factor, .id ( args ), or
		229 : factor, .num, or
		230 : factor, .real, or
		231 : factor, .true, or
		232 : factor, .false, or
		233 : factor, .( bool ), and
		234 : factor, .loc, and
		235 : factor, .id ( args ), and
		236 : factor, .num, and
		237 : factor, .real, and
		238 : factor, .true, and
		239 : factor, .false, and
		240 : factor, .( bool ), eq
		241 : factor, .loc, eq
		242 : factor, .id ( args ), eq
		243 : factor, .num, eq
		244 : factor, .real, eq
		245 : factor, .true, eq
		246 : factor, .false, eq
		247 : factor, .( bool ), neq
		248 : factor, .loc, neq
		249 : factor, .id ( args ), neq
		250 : factor, .num, neq
		251 : factor, .real, neq
		252 : factor, .true, neq
		253 : factor, .false, neq
		254 : factor, .( bool ), +
		255 : factor, .loc, +
		256 : factor, .id ( args ), +
		257 : factor, .num, +
		258 : factor, .real, +
		259 : factor, .true, +
		260 : factor, .false, +
		261 : factor, .( bool ), -
		262 : factor, .loc, -
		263 : factor, .id ( args ), -
		264 : factor, .num, -
		265 : factor, .real, -
		266 : factor, .true, -
		267 : factor, .false, -
		268 : factor, .( bool ), *
		269 : factor, .loc, *
		270 : factor, .id ( args ), *
		271 : factor, .num, *
		272 : factor, .real, *
		273 : factor, .true, *
		274 : factor, .false, *
		275 : factor, .( bool ), /
		276 : factor, .loc, /
		277 : factor, .id ( args ), /
		278 : factor, .num, /
		279 : factor, .real, /
		280 : factor, .true, /
		281 : factor, .false, /
		282 : factor, .( bool ), mod
		283 : factor, .loc, mod
		284 : factor, .id ( args ), mod
		285 : factor, .num, mod
		286 : factor, .real, mod
		287 : factor, .true, mod
		288 : factor, .false, mod
		289 : loc, .loc [ bool ], <
		290 : loc, .id, <
		291 : loc, .loc [ bool ], <=
		292 : loc, .id, <=
		293 : loc, .loc [ bool ], >=
		294 : loc, .id, >=
		295 : loc, .loc [ bool ], >
		296 : loc, .id, >
		297 : loc, .loc [ bool ], )
		298 : loc, .id, )
		299 : loc, .loc [ bool ], or
		300 : loc, .id, or
		301 : loc, .loc [ bool ], and
		302 : loc, .id, and
		303 : loc, .loc [ bool ], eq
		304 : loc, .id, eq
		305 : loc, .loc [ bool ], neq
		306 : loc, .id, neq
		307 : loc, .loc [ bool ], +
		308 : loc, .id, +
		309 : loc, .loc [ bool ], -
		310 : loc, .id, -
		311 : loc, .loc [ bool ], *
		312 : loc, .id, *
		313 : loc, .loc [ bool ], /
		314 : loc, .id, /
		315 : loc, .loc [ bool ], mod
		316 : loc, .id, mod
		317 : loc, .loc [ bool ], [
		318 : loc, .id, [
	[264] 
		0 : unary, - .unary, )
		1 : unary, - .unary, or
		2 : unary, - .unary, and
		3 : unary, - .unary, eq
		4 : unary, - .unary, neq
		5 : unary, - .unary, +
		6 : unary, - .unary, -
		7 : unary, - .unary, *
		8 : unary, - .unary, /
		9 : unary, - .unary, mod
		10 : unary, .! unary, )
		11 : unary, .- unary, )
		12 : unary, .factor, )
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), )
		41 : factor, .loc, )
		42 : factor, .id ( args ), )
		43 : factor, .num, )
		44 : factor, .real, )
		45 : factor, .true, )
		46 : factor, .false, )
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], )
		111 : loc, .id, )
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[265] 
		0 : unary, ! .unary, )
		1 : unary, ! .unary, or
		2 : unary, ! .unary, and
		3 : unary, ! .unary, eq
		4 : unary, ! .unary, neq
		5 : unary, ! .unary, +
		6 : unary, ! .unary, -
		7 : unary, ! .unary, *
		8 : unary, ! .unary, /
		9 : unary, ! .unary, mod
		10 : unary, .! unary, )
		11 : unary, .- unary, )
		12 : unary, .factor, )
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), )
		41 : factor, .loc, )
		42 : factor, .id ( args ), )
		43 : factor, .num, )
		44 : factor, .real, )
		45 : factor, .true, )
		46 : factor, .false, )
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], )
		111 : loc, .id, )
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[266] 
		0 : factor, num ., )
		1 : factor, num ., or
		2 : factor, num ., and
		3 : factor, num ., eq
		4 : factor, num ., neq
		5 : factor, num ., +
		6 : factor, num ., -
		7 : factor, num ., *
		8 : factor, num ., /
		9 : factor, num ., mod
	[267] 
		0 : factor, real ., )
		1 : factor, real ., or
		2 : factor, real ., and
		3 : factor, real ., eq
		4 : factor, real ., neq
		5 : factor, real ., +
		6 : factor, real ., -
		7 : factor, real ., *
		8 : factor, real ., /
		9 : factor, real ., mod
	[268] 
		0 : factor, true ., )
		1 : factor, true ., or
		2 : factor, true ., and
		3 : factor, true ., eq
		4 : factor, true ., neq
		5 : factor, true ., +
		6 : factor, true ., -
		7 : factor, true ., *
		8 : factor, true ., /
		9 : factor, true ., mod
	[269] 
		0 : factor, false ., )
		1 : factor, false ., or
		2 : factor, false ., and
		3 : factor, false ., eq
		4 : factor, false ., neq
		5 : factor, false ., +
		6 : factor, false ., -
		7 : factor, false ., *
		8 : factor, false ., /
		9 : factor, false ., mod
	[270] 
		0 : rel, expr <= expr ., )
		1 : rel, expr <= expr ., or
		2 : rel, expr <= expr ., and
		3 : rel, expr <= expr ., eq
		4 : rel, expr <= expr ., neq
		5 : expr, expr .+ term, )
		6 : expr, expr .- term, )
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[271] 
		0 : rel, expr >= expr ., )
		1 : rel, expr >= expr ., or
		2 : rel, expr >= expr ., and
		3 : rel, expr >= expr ., eq
		4 : rel, expr >= expr ., neq
		5 : expr, expr .+ term, )
		6 : expr, expr .- term, )
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[272] 
		0 : rel, expr > expr ., )
		1 : rel, expr > expr ., or
		2 : rel, expr > expr ., and
		3 : rel, expr > expr ., eq
		4 : rel, expr > expr ., neq
		5 : expr, expr .+ term, )
		6 : expr, expr .- term, )
		7 : expr, expr .+ term, or
		8 : expr, expr .- term, or
		9 : expr, expr .+ term, and
		10 : expr, expr .- term, and
		11 : expr, expr .+ term, eq
		12 : expr, expr .- term, eq
		13 : expr, expr .+ term, neq
		14 : expr, expr .- term, neq
		15 : expr, expr .+ term, +
		16 : expr, expr .- term, +
		17 : expr, expr .+ term, -
		18 : expr, expr .- term, -
	[273] 
		0 : expr, expr + term ., <
		1 : expr, expr + term ., <=
		2 : expr, expr + term ., >=
		3 : expr, expr + term ., >
		4 : expr, expr + term ., )
		5 : expr, expr + term ., or
		6 : expr, expr + term ., and
		7 : expr, expr + term ., eq
		8 : expr, expr + term ., neq
		9 : expr, expr + term ., +
		10 : expr, expr + term ., -
		11 : term, term .* unary, <
		12 : term, term ./ unary, <
		13 : term, term .mod unary, <
		14 : term, term .* unary, <=
		15 : term, term ./ unary, <=
		16 : term, term .mod unary, <=
		17 : term, term .* unary, >=
		18 : term, term ./ unary, >=
		19 : term, term .mod unary, >=
		20 : term, term .* unary, >
		21 : term, term ./ unary, >
		22 : term, term .mod unary, >
		23 : term, term .* unary, )
		24 : term, term ./ unary, )
		25 : term, term .mod unary, )
		26 : term, term .* unary, or
		27 : term, term ./ unary, or
		28 : term, term .mod unary, or
		29 : term, term .* unary, and
		30 : term, term ./ unary, and
		31 : term, term .mod unary, and
		32 : term, term .* unary, eq
		33 : term, term ./ unary, eq
		34 : term, term .mod unary, eq
		35 : term, term .* unary, neq
		36 : term, term ./ unary, neq
		37 : term, term .mod unary, neq
		38 : term, term .* unary, +
		39 : term, term ./ unary, +
		40 : term, term .mod unary, +
		41 : term, term .* unary, -
		42 : term, term ./ unary, -
		43 : term, term .mod unary, -
		44 : term, term .* unary, *
		45 : term, term ./ unary, *
		46 : term, term .mod unary, *
		47 : term, term .* unary, /
		48 : term, term ./ unary, /
		49 : term, term .mod unary, /
		50 : term, term .* unary, mod
		51 : term, term ./ unary, mod
		52 : term, term .mod unary, mod
	[274] 
		0 : expr, expr - term ., <
		1 : expr, expr - term ., <=
		2 : expr, expr - term ., >=
		3 : expr, expr - term ., >
		4 : expr, expr - term ., )
		5 : expr, expr - term ., or
		6 : expr, expr - term ., and
		7 : expr, expr - term ., eq
		8 : expr, expr - term ., neq
		9 : expr, expr - term ., +
		10 : expr, expr - term ., -
		11 : term, term .* unary, <
		12 : term, term ./ unary, <
		13 : term, term .mod unary, <
		14 : term, term .* unary, <=
		15 : term, term ./ unary, <=
		16 : term, term .mod unary, <=
		17 : term, term .* unary, >=
		18 : term, term ./ unary, >=
		19 : term, term .mod unary, >=
		20 : term, term .* unary, >
		21 : term, term ./ unary, >
		22 : term, term .mod unary, >
		23 : term, term .* unary, )
		24 : term, term ./ unary, )
		25 : term, term .mod unary, )
		26 : term, term .* unary, or
		27 : term, term ./ unary, or
		28 : term, term .mod unary, or
		29 : term, term .* unary, and
		30 : term, term ./ unary, and
		31 : term, term .mod unary, and
		32 : term, term .* unary, eq
		33 : term, term ./ unary, eq
		34 : term, term .mod unary, eq
		35 : term, term .* unary, neq
		36 : term, term ./ unary, neq
		37 : term, term .mod unary, neq
		38 : term, term .* unary, +
		39 : term, term ./ unary, +
		40 : term, term .mod unary, +
		41 : term, term .* unary, -
		42 : term, term ./ unary, -
		43 : term, term .mod unary, -
		44 : term, term .* unary, *
		45 : term, term ./ unary, *
		46 : term, term .mod unary, *
		47 : term, term .* unary, /
		48 : term, term ./ unary, /
		49 : term, term .mod unary, /
		50 : term, term .* unary, mod
		51 : term, term ./ unary, mod
		52 : term, term .mod unary, mod
	[275] 
		0 : term, term * unary ., <
		1 : term, term * unary ., <=
		2 : term, term * unary ., >=
		3 : term, term * unary ., >
		4 : term, term * unary ., )
		5 : term, term * unary ., or
		6 : term, term * unary ., and
		7 : term, term * unary ., eq
		8 : term, term * unary ., neq
		9 : term, term * unary ., +
		10 : term, term * unary ., -
		11 : term, term * unary ., *
		12 : term, term * unary ., /
		13 : term, term * unary ., mod
	[276] 
		0 : term, term / unary ., <
		1 : term, term / unary ., <=
		2 : term, term / unary ., >=
		3 : term, term / unary ., >
		4 : term, term / unary ., )
		5 : term, term / unary ., or
		6 : term, term / unary ., and
		7 : term, term / unary ., eq
		8 : term, term / unary ., neq
		9 : term, term / unary ., +
		10 : term, term / unary ., -
		11 : term, term / unary ., *
		12 : term, term / unary ., /
		13 : term, term / unary ., mod
	[277] 
		0 : term, term mod unary ., <
		1 : term, term mod unary ., <=
		2 : term, term mod unary ., >=
		3 : term, term mod unary ., >
		4 : term, term mod unary ., )
		5 : term, term mod unary ., or
		6 : term, term mod unary ., and
		7 : term, term mod unary ., eq
		8 : term, term mod unary ., neq
		9 : term, term mod unary ., +
		10 : term, term mod unary ., -
		11 : term, term mod unary ., *
		12 : term, term mod unary ., /
		13 : term, term mod unary ., mod
	[278] 
		0 : factor, id ( args .), <
		1 : factor, id ( args .), <=
		2 : factor, id ( args .), >=
		3 : factor, id ( args .), >
		4 : factor, id ( args .), )
		5 : factor, id ( args .), or
		6 : factor, id ( args .), and
		7 : factor, id ( args .), eq
		8 : factor, id ( args .), neq
		9 : factor, id ( args .), +
		10 : factor, id ( args .), -
		11 : factor, id ( args .), *
		12 : factor, id ( args .), /
		13 : factor, id ( args .), mod
		14 : args, args ., arg, )
		15 : args, args ., arg, ,
	[279] 
		0 : factor, ( bool ) ., <
		1 : factor, ( bool ) ., <=
		2 : factor, ( bool ) ., >=
		3 : factor, ( bool ) ., >
		4 : factor, ( bool ) ., )
		5 : factor, ( bool ) ., or
		6 : factor, ( bool ) ., and
		7 : factor, ( bool ) ., eq
		8 : factor, ( bool ) ., neq
		9 : factor, ( bool ) ., +
		10 : factor, ( bool ) ., -
		11 : factor, ( bool ) ., *
		12 : factor, ( bool ) ., /
		13 : factor, ( bool ) ., mod
	[280] 
		0 : stmt, while N ( bool ) .M stmt, }
		1 : stmt, while N ( bool ) .M stmt, [
		2 : stmt, while N ( bool ) .M stmt, id
		3 : stmt, while N ( bool ) .M stmt, if
		4 : stmt, while N ( bool ) .M stmt, while
		5 : stmt, while N ( bool ) .M stmt, do
		6 : stmt, while N ( bool ) .M stmt, return
		7 : stmt, while N ( bool ) .M stmt, {
		8 : stmt, while N ( bool ) .M stmt, else
		9 : M, ., [
		10 : M, ., id
		11 : M, ., if
		12 : M, ., while
		13 : M, ., do
		14 : M, ., return
		15 : M, ., {
		16 : M, ., ;
	[281] 
		0 : stmt, do N stmt while ( .bool ) M ;, }
		1 : stmt, do N stmt while ( .bool ) M ;, [
		2 : stmt, do N stmt while ( .bool ) M ;, id
		3 : stmt, do N stmt while ( .bool ) M ;, if
		4 : stmt, do N stmt while ( .bool ) M ;, while
		5 : stmt, do N stmt while ( .bool ) M ;, do
		6 : stmt, do N stmt while ( .bool ) M ;, return
		7 : stmt, do N stmt while ( .bool ) M ;, {
		8 : stmt, do N stmt while ( .bool ) M ;, else
		9 : bool, .bool or join, )
		10 : bool, .join, )
		11 : bool, .bool or join, or
		12 : bool, .join, or
		13 : join, .join and equality, )
		14 : join, .equality, )
		15 : join, .join and equality, or
		16 : join, .equality, or
		17 : join, .join and equality, and
		18 : join, .equality, and
		19 : equality, .equality eq rel, )
		20 : equality, .equality neq rel, )
		21 : equality, .rel, )
		22 : equality, .equality eq rel, or
		23 : equality, .equality neq rel, or
		24 : equality, .rel, or
		25 : equality, .equality eq rel, and
		26 : equality, .equality neq rel, and
		27 : equality, .rel, and
		28 : equality, .equality eq rel, eq
		29 : equality, .equality neq rel, eq
		30 : equality, .rel, eq
		31 : equality, .equality eq rel, neq
		32 : equality, .equality neq rel, neq
		33 : equality, .rel, neq
		34 : rel, .expr < expr, )
		35 : rel, .expr <= expr, )
		36 : rel, .expr >= expr, )
		37 : rel, .expr > expr, )
		38 : rel, .expr, )
		39 : rel, .expr < expr, or
		40 : rel, .expr <= expr, or
		41 : rel, .expr >= expr, or
		42 : rel, .expr > expr, or
		43 : rel, .expr, or
		44 : rel, .expr < expr, and
		45 : rel, .expr <= expr, and
		46 : rel, .expr >= expr, and
		47 : rel, .expr > expr, and
		48 : rel, .expr, and
		49 : rel, .expr < expr, eq
		50 : rel, .expr <= expr, eq
		51 : rel, .expr >= expr, eq
		52 : rel, .expr > expr, eq
		53 : rel, .expr, eq
		54 : rel, .expr < expr, neq
		55 : rel, .expr <= expr, neq
		56 : rel, .expr >= expr, neq
		57 : rel, .expr > expr, neq
		58 : rel, .expr, neq
		59 : expr, .expr + term, <
		60 : expr, .expr - term, <
		61 : expr, .term, <
		62 : expr, .expr + term, <=
		63 : expr, .expr - term, <=
		64 : expr, .term, <=
		65 : expr, .expr + term, >=
		66 : expr, .expr - term, >=
		67 : expr, .term, >=
		68 : expr, .expr + term, >
		69 : expr, .expr - term, >
		70 : expr, .term, >
		71 : expr, .expr + term, )
		72 : expr, .expr - term, )
		73 : expr, .term, )
		74 : expr, .expr + term, or
		75 : expr, .expr - term, or
		76 : expr, .term, or
		77 : expr, .expr + term, and
		78 : expr, .expr - term, and
		79 : expr, .term, and
		80 : expr, .expr + term, eq
		81 : expr, .expr - term, eq
		82 : expr, .term, eq
		83 : expr, .expr + term, neq
		84 : expr, .expr - term, neq
		85 : expr, .term, neq
		86 : expr, .expr + term, +
		87 : expr, .expr - term, +
		88 : expr, .term, +
		89 : expr, .expr + term, -
		90 : expr, .expr - term, -
		91 : expr, .term, -
		92 : term, .term * unary, <
		93 : term, .term / unary, <
		94 : term, .term mod unary, <
		95 : term, .unary, <
		96 : term, .term * unary, <=
		97 : term, .term / unary, <=
		98 : term, .term mod unary, <=
		99 : term, .unary, <=
		100 : term, .term * unary, >=
		101 : term, .term / unary, >=
		102 : term, .term mod unary, >=
		103 : term, .unary, >=
		104 : term, .term * unary, >
		105 : term, .term / unary, >
		106 : term, .term mod unary, >
		107 : term, .unary, >
		108 : term, .term * unary, )
		109 : term, .term / unary, )
		110 : term, .term mod unary, )
		111 : term, .unary, )
		112 : term, .term * unary, or
		113 : term, .term / unary, or
		114 : term, .term mod unary, or
		115 : term, .unary, or
		116 : term, .term * unary, and
		117 : term, .term / unary, and
		118 : term, .term mod unary, and
		119 : term, .unary, and
		120 : term, .term * unary, eq
		121 : term, .term / unary, eq
		122 : term, .term mod unary, eq
		123 : term, .unary, eq
		124 : term, .term * unary, neq
		125 : term, .term / unary, neq
		126 : term, .term mod unary, neq
		127 : term, .unary, neq
		128 : term, .term * unary, +
		129 : term, .term / unary, +
		130 : term, .term mod unary, +
		131 : term, .unary, +
		132 : term, .term * unary, -
		133 : term, .term / unary, -
		134 : term, .term mod unary, -
		135 : term, .unary, -
		136 : term, .term * unary, *
		137 : term, .term / unary, *
		138 : term, .term mod unary, *
		139 : term, .unary, *
		140 : term, .term * unary, /
		141 : term, .term / unary, /
		142 : term, .term mod unary, /
		143 : term, .unary, /
		144 : term, .term * unary, mod
		145 : term, .term / unary, mod
		146 : term, .term mod unary, mod
		147 : term, .unary, mod
		148 : unary, .! unary, <
		149 : unary, .- unary, <
		150 : unary, .factor, <
		151 : unary, .! unary, <=
		152 : unary, .- unary, <=
		153 : unary, .factor, <=
		154 : unary, .! unary, >=
		155 : unary, .- unary, >=
		156 : unary, .factor, >=
		157 : unary, .! unary, >
		158 : unary, .- unary, >
		159 : unary, .factor, >
		160 : unary, .! unary, )
		161 : unary, .- unary, )
		162 : unary, .factor, )
		163 : unary, .! unary, or
		164 : unary, .- unary, or
		165 : unary, .factor, or
		166 : unary, .! unary, and
		167 : unary, .- unary, and
		168 : unary, .factor, and
		169 : unary, .! unary, eq
		170 : unary, .- unary, eq
		171 : unary, .factor, eq
		172 : unary, .! unary, neq
		173 : unary, .- unary, neq
		174 : unary, .factor, neq
		175 : unary, .! unary, +
		176 : unary, .- unary, +
		177 : unary, .factor, +
		178 : unary, .! unary, -
		179 : unary, .- unary, -
		180 : unary, .factor, -
		181 : unary, .! unary, *
		182 : unary, .- unary, *
		183 : unary, .factor, *
		184 : unary, .! unary, /
		185 : unary, .- unary, /
		186 : unary, .factor, /
		187 : unary, .! unary, mod
		188 : unary, .- unary, mod
		189 : unary, .factor, mod
		190 : factor, .( bool ), <
		191 : factor, .loc, <
		192 : factor, .id ( args ), <
		193 : factor, .num, <
		194 : factor, .real, <
		195 : factor, .true, <
		196 : factor, .false, <
		197 : factor, .( bool ), <=
		198 : factor, .loc, <=
		199 : factor, .id ( args ), <=
		200 : factor, .num, <=
		201 : factor, .real, <=
		202 : factor, .true, <=
		203 : factor, .false, <=
		204 : factor, .( bool ), >=
		205 : factor, .loc, >=
		206 : factor, .id ( args ), >=
		207 : factor, .num, >=
		208 : factor, .real, >=
		209 : factor, .true, >=
		210 : factor, .false, >=
		211 : factor, .( bool ), >
		212 : factor, .loc, >
		213 : factor, .id ( args ), >
		214 : factor, .num, >
		215 : factor, .real, >
		216 : factor, .true, >
		217 : factor, .false, >
		218 : factor, .( bool ), )
		219 : factor, .loc, )
		220 : factor, .id ( args ), )
		221 : factor, .num, )
		222 : factor, .real, )
		223 : factor, .true, )
		224 : factor, .false, )
		225 : factor, .( bool ), or
		226 : factor, .loc, or
		227 : factor, .id ( args ), or
		228 : factor, .num, or
		229 : factor, .real, or
		230 : factor, .true, or
		231 : factor, .false, or
		232 : factor, .( bool ), and
		233 : factor, .loc, and
		234 : factor, .id ( args ), and
		235 : factor, .num, and
		236 : factor, .real, and
		237 : factor, .true, and
		238 : factor, .false, and
		239 : factor, .( bool ), eq
		240 : factor, .loc, eq
		241 : factor, .id ( args ), eq
		242 : factor, .num, eq
		243 : factor, .real, eq
		244 : factor, .true, eq
		245 : factor, .false, eq
		246 : factor, .( bool ), neq
		247 : factor, .loc, neq
		248 : factor, .id ( args ), neq
		249 : factor, .num, neq
		250 : factor, .real, neq
		251 : factor, .true, neq
		252 : factor, .false, neq
		253 : factor, .( bool ), +
		254 : factor, .loc, +
		255 : factor, .id ( args ), +
		256 : factor, .num, +
		257 : factor, .real, +
		258 : factor, .true, +
		259 : factor, .false, +
		260 : factor, .( bool ), -
		261 : factor, .loc, -
		262 : factor, .id ( args ), -
		263 : factor, .num, -
		264 : factor, .real, -
		265 : factor, .true, -
		266 : factor, .false, -
		267 : factor, .( bool ), *
		268 : factor, .loc, *
		269 : factor, .id ( args ), *
		270 : factor, .num, *
		271 : factor, .real, *
		272 : factor, .true, *
		273 : factor, .false, *
		274 : factor, .( bool ), /
		275 : factor, .loc, /
		276 : factor, .id ( args ), /
		277 : factor, .num, /
		278 : factor, .real, /
		279 : factor, .true, /
		280 : factor, .false, /
		281 : factor, .( bool ), mod
		282 : factor, .loc, mod
		283 : factor, .id ( args ), mod
		284 : factor, .num, mod
		285 : factor, .real, mod
		286 : factor, .true, mod
		287 : factor, .false, mod
		288 : loc, .loc [ bool ], <
		289 : loc, .id, <
		290 : loc, .loc [ bool ], <=
		291 : loc, .id, <=
		292 : loc, .loc [ bool ], >=
		293 : loc, .id, >=
		294 : loc, .loc [ bool ], >
		295 : loc, .id, >
		296 : loc, .loc [ bool ], )
		297 : loc, .id, )
		298 : loc, .loc [ bool ], or
		299 : loc, .id, or
		300 : loc, .loc [ bool ], and
		301 : loc, .id, and
		302 : loc, .loc [ bool ], eq
		303 : loc, .id, eq
		304 : loc, .loc [ bool ], neq
		305 : loc, .id, neq
		306 : loc, .loc [ bool ], +
		307 : loc, .id, +
		308 : loc, .loc [ bool ], -
		309 : loc, .id, -
		310 : loc, .loc [ bool ], *
		311 : loc, .id, *
		312 : loc, .loc [ bool ], /
		313 : loc, .id, /
		314 : loc, .loc [ bool ], mod
		315 : loc, .id, mod
		316 : loc, .loc [ bool ], [
		317 : loc, .id, [
	[282] 
		0 : stmt, loc = bool .;, while
		1 : bool, bool .or join, ;
		2 : bool, bool .or join, or
	[283] 
		0 : block, { decls stmts .}, while
		1 : stmts, stmts .stmt, }
		2 : stmts, stmts .stmt, [
		3 : stmts, stmts .stmt, id
		4 : stmts, stmts .stmt, if
		5 : stmts, stmts .stmt, while
		6 : stmts, stmts .stmt, do
		7 : stmts, stmts .stmt, return
		8 : stmts, stmts .stmt, {
		9 : stmts, stmts .stmt, else
		10 : stmt, .loc = bool ;, }
		11 : stmt, .if ( bool ) M stmt, }
		12 : stmt, .if ( bool ) M stmt else M stmt, }
		13 : stmt, .while N ( bool ) M stmt, }
		14 : stmt, .do N stmt while ( bool ) M ;, }
		15 : stmt, .return arg ;, }
		16 : stmt, .block, }
		17 : stmt, .loc = bool ;, [
		18 : stmt, .if ( bool ) M stmt, [
		19 : stmt, .if ( bool ) M stmt else M stmt, [
		20 : stmt, .while N ( bool ) M stmt, [
		21 : stmt, .do N stmt while ( bool ) M ;, [
		22 : stmt, .return arg ;, [
		23 : stmt, .block, [
		24 : stmt, .loc = bool ;, id
		25 : stmt, .if ( bool ) M stmt, id
		26 : stmt, .if ( bool ) M stmt else M stmt, id
		27 : stmt, .while N ( bool ) M stmt, id
		28 : stmt, .do N stmt while ( bool ) M ;, id
		29 : stmt, .return arg ;, id
		30 : stmt, .block, id
		31 : stmt, .loc = bool ;, if
		32 : stmt, .if ( bool ) M stmt, if
		33 : stmt, .if ( bool ) M stmt else M stmt, if
		34 : stmt, .while N ( bool ) M stmt, if
		35 : stmt, .do N stmt while ( bool ) M ;, if
		36 : stmt, .return arg ;, if
		37 : stmt, .block, if
		38 : stmt, .loc = bool ;, while
		39 : stmt, .if ( bool ) M stmt, while
		40 : stmt, .if ( bool ) M stmt else M stmt, while
		41 : stmt, .while N ( bool ) M stmt, while
		42 : stmt, .do N stmt while ( bool ) M ;, while
		43 : stmt, .return arg ;, while
		44 : stmt, .block, while
		45 : stmt, .loc = bool ;, do
		46 : stmt, .if ( bool ) M stmt, do
		47 : stmt, .if ( bool ) M stmt else M stmt, do
		48 : stmt, .while N ( bool ) M stmt, do
		49 : stmt, .do N stmt while ( bool ) M ;, do
		50 : stmt, .return arg ;, do
		51 : stmt, .block, do
		52 : stmt, .loc = bool ;, return
		53 : stmt, .if ( bool ) M stmt, return
		54 : stmt, .if ( bool ) M stmt else M stmt, return
		55 : stmt, .while N ( bool ) M stmt, return
		56 : stmt, .do N stmt while ( bool ) M ;, return
		57 : stmt, .return arg ;, return
		58 : stmt, .block, return
		59 : stmt, .loc = bool ;, {
		60 : stmt, .if ( bool ) M stmt, {
		61 : stmt, .if ( bool ) M stmt else M stmt, {
		62 : stmt, .while N ( bool ) M stmt, {
		63 : stmt, .do N stmt while ( bool ) M ;, {
		64 : stmt, .return arg ;, {
		65 : stmt, .block, {
		66 : stmt, .loc = bool ;, else
		67 : stmt, .if ( bool ) M stmt, else
		68 : stmt, .if ( bool ) M stmt else M stmt, else
		69 : stmt, .while N ( bool ) M stmt, else
		70 : stmt, .do N stmt while ( bool ) M ;, else
		71 : stmt, .return arg ;, else
		72 : stmt, .block, else
		73 : loc, .loc [ bool ], =
		74 : loc, .id, =
		75 : block, .{ decls stmts }, }
		76 : block, .{ decls stmts }, [
		77 : block, .{ decls stmts }, id
		78 : block, .{ decls stmts }, if
		79 : block, .{ decls stmts }, while
		80 : block, .{ decls stmts }, do
		81 : block, .{ decls stmts }, return
		82 : block, .{ decls stmts }, {
		83 : block, .{ decls stmts }, else
		84 : loc, .loc [ bool ], [
		85 : loc, .id, [
	[284] 
		0 : stmt, if ( bool .) M stmt, while
		1 : stmt, if ( bool .) M stmt else M stmt, while
		2 : bool, bool .or join, )
		3 : bool, bool .or join, or
	[285] 
		0 : stmt, while N ( .bool ) M stmt, while
		1 : bool, .bool or join, )
		2 : bool, .join, )
		3 : bool, .bool or join, or
		4 : bool, .join, or
		5 : join, .join and equality, )
		6 : join, .equality, )
		7 : join, .join and equality, or
		8 : join, .equality, or
		9 : join, .join and equality, and
		10 : join, .equality, and
		11 : equality, .equality eq rel, )
		12 : equality, .equality neq rel, )
		13 : equality, .rel, )
		14 : equality, .equality eq rel, or
		15 : equality, .equality neq rel, or
		16 : equality, .rel, or
		17 : equality, .equality eq rel, and
		18 : equality, .equality neq rel, and
		19 : equality, .rel, and
		20 : equality, .equality eq rel, eq
		21 : equality, .equality neq rel, eq
		22 : equality, .rel, eq
		23 : equality, .equality eq rel, neq
		24 : equality, .equality neq rel, neq
		25 : equality, .rel, neq
		26 : rel, .expr < expr, )
		27 : rel, .expr <= expr, )
		28 : rel, .expr >= expr, )
		29 : rel, .expr > expr, )
		30 : rel, .expr, )
		31 : rel, .expr < expr, or
		32 : rel, .expr <= expr, or
		33 : rel, .expr >= expr, or
		34 : rel, .expr > expr, or
		35 : rel, .expr, or
		36 : rel, .expr < expr, and
		37 : rel, .expr <= expr, and
		38 : rel, .expr >= expr, and
		39 : rel, .expr > expr, and
		40 : rel, .expr, and
		41 : rel, .expr < expr, eq
		42 : rel, .expr <= expr, eq
		43 : rel, .expr >= expr, eq
		44 : rel, .expr > expr, eq
		45 : rel, .expr, eq
		46 : rel, .expr < expr, neq
		47 : rel, .expr <= expr, neq
		48 : rel, .expr >= expr, neq
		49 : rel, .expr > expr, neq
		50 : rel, .expr, neq
		51 : expr, .expr + term, <
		52 : expr, .expr - term, <
		53 : expr, .term, <
		54 : expr, .expr + term, <=
		55 : expr, .expr - term, <=
		56 : expr, .term, <=
		57 : expr, .expr + term, >=
		58 : expr, .expr - term, >=
		59 : expr, .term, >=
		60 : expr, .expr + term, >
		61 : expr, .expr - term, >
		62 : expr, .term, >
		63 : expr, .expr + term, )
		64 : expr, .expr - term, )
		65 : expr, .term, )
		66 : expr, .expr + term, or
		67 : expr, .expr - term, or
		68 : expr, .term, or
		69 : expr, .expr + term, and
		70 : expr, .expr - term, and
		71 : expr, .term, and
		72 : expr, .expr + term, eq
		73 : expr, .expr - term, eq
		74 : expr, .term, eq
		75 : expr, .expr + term, neq
		76 : expr, .expr - term, neq
		77 : expr, .term, neq
		78 : expr, .expr + term, +
		79 : expr, .expr - term, +
		80 : expr, .term, +
		81 : expr, .expr + term, -
		82 : expr, .expr - term, -
		83 : expr, .term, -
		84 : term, .term * unary, <
		85 : term, .term / unary, <
		86 : term, .term mod unary, <
		87 : term, .unary, <
		88 : term, .term * unary, <=
		89 : term, .term / unary, <=
		90 : term, .term mod unary, <=
		91 : term, .unary, <=
		92 : term, .term * unary, >=
		93 : term, .term / unary, >=
		94 : term, .term mod unary, >=
		95 : term, .unary, >=
		96 : term, .term * unary, >
		97 : term, .term / unary, >
		98 : term, .term mod unary, >
		99 : term, .unary, >
		100 : term, .term * unary, )
		101 : term, .term / unary, )
		102 : term, .term mod unary, )
		103 : term, .unary, )
		104 : term, .term * unary, or
		105 : term, .term / unary, or
		106 : term, .term mod unary, or
		107 : term, .unary, or
		108 : term, .term * unary, and
		109 : term, .term / unary, and
		110 : term, .term mod unary, and
		111 : term, .unary, and
		112 : term, .term * unary, eq
		113 : term, .term / unary, eq
		114 : term, .term mod unary, eq
		115 : term, .unary, eq
		116 : term, .term * unary, neq
		117 : term, .term / unary, neq
		118 : term, .term mod unary, neq
		119 : term, .unary, neq
		120 : term, .term * unary, +
		121 : term, .term / unary, +
		122 : term, .term mod unary, +
		123 : term, .unary, +
		124 : term, .term * unary, -
		125 : term, .term / unary, -
		126 : term, .term mod unary, -
		127 : term, .unary, -
		128 : term, .term * unary, *
		129 : term, .term / unary, *
		130 : term, .term mod unary, *
		131 : term, .unary, *
		132 : term, .term * unary, /
		133 : term, .term / unary, /
		134 : term, .term mod unary, /
		135 : term, .unary, /
		136 : term, .term * unary, mod
		137 : term, .term / unary, mod
		138 : term, .term mod unary, mod
		139 : term, .unary, mod
		140 : unary, .! unary, <
		141 : unary, .- unary, <
		142 : unary, .factor, <
		143 : unary, .! unary, <=
		144 : unary, .- unary, <=
		145 : unary, .factor, <=
		146 : unary, .! unary, >=
		147 : unary, .- unary, >=
		148 : unary, .factor, >=
		149 : unary, .! unary, >
		150 : unary, .- unary, >
		151 : unary, .factor, >
		152 : unary, .! unary, )
		153 : unary, .- unary, )
		154 : unary, .factor, )
		155 : unary, .! unary, or
		156 : unary, .- unary, or
		157 : unary, .factor, or
		158 : unary, .! unary, and
		159 : unary, .- unary, and
		160 : unary, .factor, and
		161 : unary, .! unary, eq
		162 : unary, .- unary, eq
		163 : unary, .factor, eq
		164 : unary, .! unary, neq
		165 : unary, .- unary, neq
		166 : unary, .factor, neq
		167 : unary, .! unary, +
		168 : unary, .- unary, +
		169 : unary, .factor, +
		170 : unary, .! unary, -
		171 : unary, .- unary, -
		172 : unary, .factor, -
		173 : unary, .! unary, *
		174 : unary, .- unary, *
		175 : unary, .factor, *
		176 : unary, .! unary, /
		177 : unary, .- unary, /
		178 : unary, .factor, /
		179 : unary, .! unary, mod
		180 : unary, .- unary, mod
		181 : unary, .factor, mod
		182 : factor, .( bool ), <
		183 : factor, .loc, <
		184 : factor, .id ( args ), <
		185 : factor, .num, <
		186 : factor, .real, <
		187 : factor, .true, <
		188 : factor, .false, <
		189 : factor, .( bool ), <=
		190 : factor, .loc, <=
		191 : factor, .id ( args ), <=
		192 : factor, .num, <=
		193 : factor, .real, <=
		194 : factor, .true, <=
		195 : factor, .false, <=
		196 : factor, .( bool ), >=
		197 : factor, .loc, >=
		198 : factor, .id ( args ), >=
		199 : factor, .num, >=
		200 : factor, .real, >=
		201 : factor, .true, >=
		202 : factor, .false, >=
		203 : factor, .( bool ), >
		204 : factor, .loc, >
		205 : factor, .id ( args ), >
		206 : factor, .num, >
		207 : factor, .real, >
		208 : factor, .true, >
		209 : factor, .false, >
		210 : factor, .( bool ), )
		211 : factor, .loc, )
		212 : factor, .id ( args ), )
		213 : factor, .num, )
		214 : factor, .real, )
		215 : factor, .true, )
		216 : factor, .false, )
		217 : factor, .( bool ), or
		218 : factor, .loc, or
		219 : factor, .id ( args ), or
		220 : factor, .num, or
		221 : factor, .real, or
		222 : factor, .true, or
		223 : factor, .false, or
		224 : factor, .( bool ), and
		225 : factor, .loc, and
		226 : factor, .id ( args ), and
		227 : factor, .num, and
		228 : factor, .real, and
		229 : factor, .true, and
		230 : factor, .false, and
		231 : factor, .( bool ), eq
		232 : factor, .loc, eq
		233 : factor, .id ( args ), eq
		234 : factor, .num, eq
		235 : factor, .real, eq
		236 : factor, .true, eq
		237 : factor, .false, eq
		238 : factor, .( bool ), neq
		239 : factor, .loc, neq
		240 : factor, .id ( args ), neq
		241 : factor, .num, neq
		242 : factor, .real, neq
		243 : factor, .true, neq
		244 : factor, .false, neq
		245 : factor, .( bool ), +
		246 : factor, .loc, +
		247 : factor, .id ( args ), +
		248 : factor, .num, +
		249 : factor, .real, +
		250 : factor, .true, +
		251 : factor, .false, +
		252 : factor, .( bool ), -
		253 : factor, .loc, -
		254 : factor, .id ( args ), -
		255 : factor, .num, -
		256 : factor, .real, -
		257 : factor, .true, -
		258 : factor, .false, -
		259 : factor, .( bool ), *
		260 : factor, .loc, *
		261 : factor, .id ( args ), *
		262 : factor, .num, *
		263 : factor, .real, *
		264 : factor, .true, *
		265 : factor, .false, *
		266 : factor, .( bool ), /
		267 : factor, .loc, /
		268 : factor, .id ( args ), /
		269 : factor, .num, /
		270 : factor, .real, /
		271 : factor, .true, /
		272 : factor, .false, /
		273 : factor, .( bool ), mod
		274 : factor, .loc, mod
		275 : factor, .id ( args ), mod
		276 : factor, .num, mod
		277 : factor, .real, mod
		278 : factor, .true, mod
		279 : factor, .false, mod
		280 : loc, .loc [ bool ], <
		281 : loc, .id, <
		282 : loc, .loc [ bool ], <=
		283 : loc, .id, <=
		284 : loc, .loc [ bool ], >=
		285 : loc, .id, >=
		286 : loc, .loc [ bool ], >
		287 : loc, .id, >
		288 : loc, .loc [ bool ], )
		289 : loc, .id, )
		290 : loc, .loc [ bool ], or
		291 : loc, .id, or
		292 : loc, .loc [ bool ], and
		293 : loc, .id, and
		294 : loc, .loc [ bool ], eq
		295 : loc, .id, eq
		296 : loc, .loc [ bool ], neq
		297 : loc, .id, neq
		298 : loc, .loc [ bool ], +
		299 : loc, .id, +
		300 : loc, .loc [ bool ], -
		301 : loc, .id, -
		302 : loc, .loc [ bool ], *
		303 : loc, .id, *
		304 : loc, .loc [ bool ], /
		305 : loc, .id, /
		306 : loc, .loc [ bool ], mod
		307 : loc, .id, mod
		308 : loc, .loc [ bool ], [
		309 : loc, .id, [
	[286] 
		0 : stmt, do N stmt .while ( bool ) M ;, while
	[287] 
		0 : stmt, return arg ; ., while
	[288] 
		0 : loc, loc [ bool ] ., ;
		1 : loc, loc [ bool ] ., [
		2 : loc, loc [ bool ] ., <
		3 : loc, loc [ bool ] ., <=
		4 : loc, loc [ bool ] ., >=
		5 : loc, loc [ bool ] ., >
		6 : loc, loc [ bool ] ., or
		7 : loc, loc [ bool ] ., and
		8 : loc, loc [ bool ] ., eq
		9 : loc, loc [ bool ] ., neq
		10 : loc, loc [ bool ] ., +
		11 : loc, loc [ bool ] ., -
		12 : loc, loc [ bool ] ., *
		13 : loc, loc [ bool ] ., /
		14 : loc, loc [ bool ] ., mod
	[289] 
		0 : loc, loc [ .bool ], ;
		1 : loc, loc [ .bool ], or
		2 : loc, loc [ .bool ], and
		3 : loc, loc [ .bool ], eq
		4 : loc, loc [ .bool ], neq
		5 : loc, loc [ .bool ], +
		6 : loc, loc [ .bool ], -
		7 : loc, loc [ .bool ], *
		8 : loc, loc [ .bool ], /
		9 : loc, loc [ .bool ], mod
		10 : loc, loc [ .bool ], [
		11 : bool, .bool or join, ]
		12 : bool, .join, ]
		13 : bool, .bool or join, or
		14 : bool, .join, or
		15 : join, .join and equality, ]
		16 : join, .equality, ]
		17 : join, .join and equality, or
		18 : join, .equality, or
		19 : join, .join and equality, and
		20 : join, .equality, and
		21 : equality, .equality eq rel, ]
		22 : equality, .equality neq rel, ]
		23 : equality, .rel, ]
		24 : equality, .equality eq rel, or
		25 : equality, .equality neq rel, or
		26 : equality, .rel, or
		27 : equality, .equality eq rel, and
		28 : equality, .equality neq rel, and
		29 : equality, .rel, and
		30 : equality, .equality eq rel, eq
		31 : equality, .equality neq rel, eq
		32 : equality, .rel, eq
		33 : equality, .equality eq rel, neq
		34 : equality, .equality neq rel, neq
		35 : equality, .rel, neq
		36 : rel, .expr < expr, ]
		37 : rel, .expr <= expr, ]
		38 : rel, .expr >= expr, ]
		39 : rel, .expr > expr, ]
		40 : rel, .expr, ]
		41 : rel, .expr < expr, or
		42 : rel, .expr <= expr, or
		43 : rel, .expr >= expr, or
		44 : rel, .expr > expr, or
		45 : rel, .expr, or
		46 : rel, .expr < expr, and
		47 : rel, .expr <= expr, and
		48 : rel, .expr >= expr, and
		49 : rel, .expr > expr, and
		50 : rel, .expr, and
		51 : rel, .expr < expr, eq
		52 : rel, .expr <= expr, eq
		53 : rel, .expr >= expr, eq
		54 : rel, .expr > expr, eq
		55 : rel, .expr, eq
		56 : rel, .expr < expr, neq
		57 : rel, .expr <= expr, neq
		58 : rel, .expr >= expr, neq
		59 : rel, .expr > expr, neq
		60 : rel, .expr, neq
		61 : expr, .expr + term, <
		62 : expr, .expr - term, <
		63 : expr, .term, <
		64 : expr, .expr + term, <=
		65 : expr, .expr - term, <=
		66 : expr, .term, <=
		67 : expr, .expr + term, >=
		68 : expr, .expr - term, >=
		69 : expr, .term, >=
		70 : expr, .expr + term, >
		71 : expr, .expr - term, >
		72 : expr, .term, >
		73 : expr, .expr + term, ]
		74 : expr, .expr - term, ]
		75 : expr, .term, ]
		76 : expr, .expr + term, or
		77 : expr, .expr - term, or
		78 : expr, .term, or
		79 : expr, .expr + term, and
		80 : expr, .expr - term, and
		81 : expr, .term, and
		82 : expr, .expr + term, eq
		83 : expr, .expr - term, eq
		84 : expr, .term, eq
		85 : expr, .expr + term, neq
		86 : expr, .expr - term, neq
		87 : expr, .term, neq
		88 : expr, .expr + term, +
		89 : expr, .expr - term, +
		90 : expr, .term, +
		91 : expr, .expr + term, -
		92 : expr, .expr - term, -
		93 : expr, .term, -
		94 : term, .term * unary, <
		95 : term, .term / unary, <
		96 : term, .term mod unary, <
		97 : term, .unary, <
		98 : term, .term * unary, <=
		99 : term, .term / unary, <=
		100 : term, .term mod unary, <=
		101 : term, .unary, <=
		102 : term, .term * unary, >=
		103 : term, .term / unary, >=
		104 : term, .term mod unary, >=
		105 : term, .unary, >=
		106 : term, .term * unary, >
		107 : term, .term / unary, >
		108 : term, .term mod unary, >
		109 : term, .unary, >
		110 : term, .term * unary, ]
		111 : term, .term / unary, ]
		112 : term, .term mod unary, ]
		113 : term, .unary, ]
		114 : term, .term * unary, or
		115 : term, .term / unary, or
		116 : term, .term mod unary, or
		117 : term, .unary, or
		118 : term, .term * unary, and
		119 : term, .term / unary, and
		120 : term, .term mod unary, and
		121 : term, .unary, and
		122 : term, .term * unary, eq
		123 : term, .term / unary, eq
		124 : term, .term mod unary, eq
		125 : term, .unary, eq
		126 : term, .term * unary, neq
		127 : term, .term / unary, neq
		128 : term, .term mod unary, neq
		129 : term, .unary, neq
		130 : term, .term * unary, +
		131 : term, .term / unary, +
		132 : term, .term mod unary, +
		133 : term, .unary, +
		134 : term, .term * unary, -
		135 : term, .term / unary, -
		136 : term, .term mod unary, -
		137 : term, .unary, -
		138 : term, .term * unary, *
		139 : term, .term / unary, *
		140 : term, .term mod unary, *
		141 : term, .unary, *
		142 : term, .term * unary, /
		143 : term, .term / unary, /
		144 : term, .term mod unary, /
		145 : term, .unary, /
		146 : term, .term * unary, mod
		147 : term, .term / unary, mod
		148 : term, .term mod unary, mod
		149 : term, .unary, mod
		150 : unary, .! unary, <
		151 : unary, .- unary, <
		152 : unary, .factor, <
		153 : unary, .! unary, <=
		154 : unary, .- unary, <=
		155 : unary, .factor, <=
		156 : unary, .! unary, >=
		157 : unary, .- unary, >=
		158 : unary, .factor, >=
		159 : unary, .! unary, >
		160 : unary, .- unary, >
		161 : unary, .factor, >
		162 : unary, .! unary, ]
		163 : unary, .- unary, ]
		164 : unary, .factor, ]
		165 : unary, .! unary, or
		166 : unary, .- unary, or
		167 : unary, .factor, or
		168 : unary, .! unary, and
		169 : unary, .- unary, and
		170 : unary, .factor, and
		171 : unary, .! unary, eq
		172 : unary, .- unary, eq
		173 : unary, .factor, eq
		174 : unary, .! unary, neq
		175 : unary, .- unary, neq
		176 : unary, .factor, neq
		177 : unary, .! unary, +
		178 : unary, .- unary, +
		179 : unary, .factor, +
		180 : unary, .! unary, -
		181 : unary, .- unary, -
		182 : unary, .factor, -
		183 : unary, .! unary, *
		184 : unary, .- unary, *
		185 : unary, .factor, *
		186 : unary, .! unary, /
		187 : unary, .- unary, /
		188 : unary, .factor, /
		189 : unary, .! unary, mod
		190 : unary, .- unary, mod
		191 : unary, .factor, mod
		192 : factor, .( bool ), <
		193 : factor, .loc, <
		194 : factor, .id ( args ), <
		195 : factor, .num, <
		196 : factor, .real, <
		197 : factor, .true, <
		198 : factor, .false, <
		199 : factor, .( bool ), <=
		200 : factor, .loc, <=
		201 : factor, .id ( args ), <=
		202 : factor, .num, <=
		203 : factor, .real, <=
		204 : factor, .true, <=
		205 : factor, .false, <=
		206 : factor, .( bool ), >=
		207 : factor, .loc, >=
		208 : factor, .id ( args ), >=
		209 : factor, .num, >=
		210 : factor, .real, >=
		211 : factor, .true, >=
		212 : factor, .false, >=
		213 : factor, .( bool ), >
		214 : factor, .loc, >
		215 : factor, .id ( args ), >
		216 : factor, .num, >
		217 : factor, .real, >
		218 : factor, .true, >
		219 : factor, .false, >
		220 : factor, .( bool ), ]
		221 : factor, .loc, ]
		222 : factor, .id ( args ), ]
		223 : factor, .num, ]
		224 : factor, .real, ]
		225 : factor, .true, ]
		226 : factor, .false, ]
		227 : factor, .( bool ), or
		228 : factor, .loc, or
		229 : factor, .id ( args ), or
		230 : factor, .num, or
		231 : factor, .real, or
		232 : factor, .true, or
		233 : factor, .false, or
		234 : factor, .( bool ), and
		235 : factor, .loc, and
		236 : factor, .id ( args ), and
		237 : factor, .num, and
		238 : factor, .real, and
		239 : factor, .true, and
		240 : factor, .false, and
		241 : factor, .( bool ), eq
		242 : factor, .loc, eq
		243 : factor, .id ( args ), eq
		244 : factor, .num, eq
		245 : factor, .real, eq
		246 : factor, .true, eq
		247 : factor, .false, eq
		248 : factor, .( bool ), neq
		249 : factor, .loc, neq
		250 : factor, .id ( args ), neq
		251 : factor, .num, neq
		252 : factor, .real, neq
		253 : factor, .true, neq
		254 : factor, .false, neq
		255 : factor, .( bool ), +
		256 : factor, .loc, +
		257 : factor, .id ( args ), +
		258 : factor, .num, +
		259 : factor, .real, +
		260 : factor, .true, +
		261 : factor, .false, +
		262 : factor, .( bool ), -
		263 : factor, .loc, -
		264 : factor, .id ( args ), -
		265 : factor, .num, -
		266 : factor, .real, -
		267 : factor, .true, -
		268 : factor, .false, -
		269 : factor, .( bool ), *
		270 : factor, .loc, *
		271 : factor, .id ( args ), *
		272 : factor, .num, *
		273 : factor, .real, *
		274 : factor, .true, *
		275 : factor, .false, *
		276 : factor, .( bool ), /
		277 : factor, .loc, /
		278 : factor, .id ( args ), /
		279 : factor, .num, /
		280 : factor, .real, /
		281 : factor, .true, /
		282 : factor, .false, /
		283 : factor, .( bool ), mod
		284 : factor, .loc, mod
		285 : factor, .id ( args ), mod
		286 : factor, .num, mod
		287 : factor, .real, mod
		288 : factor, .true, mod
		289 : factor, .false, mod
		290 : loc, .loc [ bool ], <
		291 : loc, .id, <
		292 : loc, .loc [ bool ], <=
		293 : loc, .id, <=
		294 : loc, .loc [ bool ], >=
		295 : loc, .id, >=
		296 : loc, .loc [ bool ], >
		297 : loc, .id, >
		298 : loc, .loc [ bool ], ]
		299 : loc, .id, ]
		300 : loc, .loc [ bool ], or
		301 : loc, .id, or
		302 : loc, .loc [ bool ], and
		303 : loc, .id, and
		304 : loc, .loc [ bool ], eq
		305 : loc, .id, eq
		306 : loc, .loc [ bool ], neq
		307 : loc, .id, neq
		308 : loc, .loc [ bool ], +
		309 : loc, .id, +
		310 : loc, .loc [ bool ], -
		311 : loc, .id, -
		312 : loc, .loc [ bool ], *
		313 : loc, .id, *
		314 : loc, .loc [ bool ], /
		315 : loc, .id, /
		316 : loc, .loc [ bool ], mod
		317 : loc, .id, mod
		318 : loc, .loc [ bool ], [
		319 : loc, .id, [
	[290] 
		0 : expr, expr + .term, ;
		1 : expr, expr + .term, or
		2 : expr, expr + .term, and
		3 : expr, expr + .term, eq
		4 : expr, expr + .term, neq
		5 : expr, expr + .term, +
		6 : expr, expr + .term, -
		7 : term, .term * unary, ;
		8 : term, .term / unary, ;
		9 : term, .term mod unary, ;
		10 : term, .unary, ;
		11 : term, .term * unary, or
		12 : term, .term / unary, or
		13 : term, .term mod unary, or
		14 : term, .unary, or
		15 : term, .term * unary, and
		16 : term, .term / unary, and
		17 : term, .term mod unary, and
		18 : term, .unary, and
		19 : term, .term * unary, eq
		20 : term, .term / unary, eq
		21 : term, .term mod unary, eq
		22 : term, .unary, eq
		23 : term, .term * unary, neq
		24 : term, .term / unary, neq
		25 : term, .term mod unary, neq
		26 : term, .unary, neq
		27 : term, .term * unary, +
		28 : term, .term / unary, +
		29 : term, .term mod unary, +
		30 : term, .unary, +
		31 : term, .term * unary, -
		32 : term, .term / unary, -
		33 : term, .term mod unary, -
		34 : term, .unary, -
		35 : term, .term * unary, *
		36 : term, .term / unary, *
		37 : term, .term mod unary, *
		38 : term, .unary, *
		39 : term, .term * unary, /
		40 : term, .term / unary, /
		41 : term, .term mod unary, /
		42 : term, .unary, /
		43 : term, .term * unary, mod
		44 : term, .term / unary, mod
		45 : term, .term mod unary, mod
		46 : term, .unary, mod
		47 : unary, .! unary, ;
		48 : unary, .- unary, ;
		49 : unary, .factor, ;
		50 : unary, .! unary, or
		51 : unary, .- unary, or
		52 : unary, .factor, or
		53 : unary, .! unary, and
		54 : unary, .- unary, and
		55 : unary, .factor, and
		56 : unary, .! unary, eq
		57 : unary, .- unary, eq
		58 : unary, .factor, eq
		59 : unary, .! unary, neq
		60 : unary, .- unary, neq
		61 : unary, .factor, neq
		62 : unary, .! unary, +
		63 : unary, .- unary, +
		64 : unary, .factor, +
		65 : unary, .! unary, -
		66 : unary, .- unary, -
		67 : unary, .factor, -
		68 : unary, .! unary, *
		69 : unary, .- unary, *
		70 : unary, .factor, *
		71 : unary, .! unary, /
		72 : unary, .- unary, /
		73 : unary, .factor, /
		74 : unary, .! unary, mod
		75 : unary, .- unary, mod
		76 : unary, .factor, mod
		77 : factor, .( bool ), ;
		78 : factor, .loc, ;
		79 : factor, .id ( args ), ;
		80 : factor, .num, ;
		81 : factor, .real, ;
		82 : factor, .true, ;
		83 : factor, .false, ;
		84 : factor, .( bool ), or
		85 : factor, .loc, or
		86 : factor, .id ( args ), or
		87 : factor, .num, or
		88 : factor, .real, or
		89 : factor, .true, or
		90 : factor, .false, or
		91 : factor, .( bool ), and
		92 : factor, .loc, and
		93 : factor, .id ( args ), and
		94 : factor, .num, and
		95 : factor, .real, and
		96 : factor, .true, and
		97 : factor, .false, and
		98 : factor, .( bool ), eq
		99 : factor, .loc, eq
		100 : factor, .id ( args ), eq
		101 : factor, .num, eq
		102 : factor, .real, eq
		103 : factor, .true, eq
		104 : factor, .false, eq
		105 : factor, .( bool ), neq
		106 : factor, .loc, neq
		107 : factor, .id ( args ), neq
		108 : factor, .num, neq
		109 : factor, .real, neq
		110 : factor, .true, neq
		111 : factor, .false, neq
		112 : factor, .( bool ), +
		113 : factor, .loc, +
		114 : factor, .id ( args ), +
		115 : factor, .num, +
		116 : factor, .real, +
		117 : factor, .true, +
		118 : factor, .false, +
		119 : factor, .( bool ), -
		120 : factor, .loc, -
		121 : factor, .id ( args ), -
		122 : factor, .num, -
		123 : factor, .real, -
		124 : factor, .true, -
		125 : factor, .false, -
		126 : factor, .( bool ), *
		127 : factor, .loc, *
		128 : factor, .id ( args ), *
		129 : factor, .num, *
		130 : factor, .real, *
		131 : factor, .true, *
		132 : factor, .false, *
		133 : factor, .( bool ), /
		134 : factor, .loc, /
		135 : factor, .id ( args ), /
		136 : factor, .num, /
		137 : factor, .real, /
		138 : factor, .true, /
		139 : factor, .false, /
		140 : factor, .( bool ), mod
		141 : factor, .loc, mod
		142 : factor, .id ( args ), mod
		143 : factor, .num, mod
		144 : factor, .real, mod
		145 : factor, .true, mod
		146 : factor, .false, mod
		147 : loc, .loc [ bool ], ;
		148 : loc, .id, ;
		149 : loc, .loc [ bool ], or
		150 : loc, .id, or
		151 : loc, .loc [ bool ], and
		152 : loc, .id, and
		153 : loc, .loc [ bool ], eq
		154 : loc, .id, eq
		155 : loc, .loc [ bool ], neq
		156 : loc, .id, neq
		157 : loc, .loc [ bool ], +
		158 : loc, .id, +
		159 : loc, .loc [ bool ], -
		160 : loc, .id, -
		161 : loc, .loc [ bool ], *
		162 : loc, .id, *
		163 : loc, .loc [ bool ], /
		164 : loc, .id, /
		165 : loc, .loc [ bool ], mod
		166 : loc, .id, mod
		167 : loc, .loc [ bool ], [
		168 : loc, .id, [
	[291] 
		0 : expr, expr - .term, ;
		1 : expr, expr - .term, or
		2 : expr, expr - .term, and
		3 : expr, expr - .term, eq
		4 : expr, expr - .term, neq
		5 : expr, expr - .term, +
		6 : expr, expr - .term, -
		7 : term, .term * unary, ;
		8 : term, .term / unary, ;
		9 : term, .term mod unary, ;
		10 : term, .unary, ;
		11 : term, .term * unary, or
		12 : term, .term / unary, or
		13 : term, .term mod unary, or
		14 : term, .unary, or
		15 : term, .term * unary, and
		16 : term, .term / unary, and
		17 : term, .term mod unary, and
		18 : term, .unary, and
		19 : term, .term * unary, eq
		20 : term, .term / unary, eq
		21 : term, .term mod unary, eq
		22 : term, .unary, eq
		23 : term, .term * unary, neq
		24 : term, .term / unary, neq
		25 : term, .term mod unary, neq
		26 : term, .unary, neq
		27 : term, .term * unary, +
		28 : term, .term / unary, +
		29 : term, .term mod unary, +
		30 : term, .unary, +
		31 : term, .term * unary, -
		32 : term, .term / unary, -
		33 : term, .term mod unary, -
		34 : term, .unary, -
		35 : term, .term * unary, *
		36 : term, .term / unary, *
		37 : term, .term mod unary, *
		38 : term, .unary, *
		39 : term, .term * unary, /
		40 : term, .term / unary, /
		41 : term, .term mod unary, /
		42 : term, .unary, /
		43 : term, .term * unary, mod
		44 : term, .term / unary, mod
		45 : term, .term mod unary, mod
		46 : term, .unary, mod
		47 : unary, .! unary, ;
		48 : unary, .- unary, ;
		49 : unary, .factor, ;
		50 : unary, .! unary, or
		51 : unary, .- unary, or
		52 : unary, .factor, or
		53 : unary, .! unary, and
		54 : unary, .- unary, and
		55 : unary, .factor, and
		56 : unary, .! unary, eq
		57 : unary, .- unary, eq
		58 : unary, .factor, eq
		59 : unary, .! unary, neq
		60 : unary, .- unary, neq
		61 : unary, .factor, neq
		62 : unary, .! unary, +
		63 : unary, .- unary, +
		64 : unary, .factor, +
		65 : unary, .! unary, -
		66 : unary, .- unary, -
		67 : unary, .factor, -
		68 : unary, .! unary, *
		69 : unary, .- unary, *
		70 : unary, .factor, *
		71 : unary, .! unary, /
		72 : unary, .- unary, /
		73 : unary, .factor, /
		74 : unary, .! unary, mod
		75 : unary, .- unary, mod
		76 : unary, .factor, mod
		77 : factor, .( bool ), ;
		78 : factor, .loc, ;
		79 : factor, .id ( args ), ;
		80 : factor, .num, ;
		81 : factor, .real, ;
		82 : factor, .true, ;
		83 : factor, .false, ;
		84 : factor, .( bool ), or
		85 : factor, .loc, or
		86 : factor, .id ( args ), or
		87 : factor, .num, or
		88 : factor, .real, or
		89 : factor, .true, or
		90 : factor, .false, or
		91 : factor, .( bool ), and
		92 : factor, .loc, and
		93 : factor, .id ( args ), and
		94 : factor, .num, and
		95 : factor, .real, and
		96 : factor, .true, and
		97 : factor, .false, and
		98 : factor, .( bool ), eq
		99 : factor, .loc, eq
		100 : factor, .id ( args ), eq
		101 : factor, .num, eq
		102 : factor, .real, eq
		103 : factor, .true, eq
		104 : factor, .false, eq
		105 : factor, .( bool ), neq
		106 : factor, .loc, neq
		107 : factor, .id ( args ), neq
		108 : factor, .num, neq
		109 : factor, .real, neq
		110 : factor, .true, neq
		111 : factor, .false, neq
		112 : factor, .( bool ), +
		113 : factor, .loc, +
		114 : factor, .id ( args ), +
		115 : factor, .num, +
		116 : factor, .real, +
		117 : factor, .true, +
		118 : factor, .false, +
		119 : factor, .( bool ), -
		120 : factor, .loc, -
		121 : factor, .id ( args ), -
		122 : factor, .num, -
		123 : factor, .real, -
		124 : factor, .true, -
		125 : factor, .false, -
		126 : factor, .( bool ), *
		127 : factor, .loc, *
		128 : factor, .id ( args ), *
		129 : factor, .num, *
		130 : factor, .real, *
		131 : factor, .true, *
		132 : factor, .false, *
		133 : factor, .( bool ), /
		134 : factor, .loc, /
		135 : factor, .id ( args ), /
		136 : factor, .num, /
		137 : factor, .real, /
		138 : factor, .true, /
		139 : factor, .false, /
		140 : factor, .( bool ), mod
		141 : factor, .loc, mod
		142 : factor, .id ( args ), mod
		143 : factor, .num, mod
		144 : factor, .real, mod
		145 : factor, .true, mod
		146 : factor, .false, mod
		147 : loc, .loc [ bool ], ;
		148 : loc, .id, ;
		149 : loc, .loc [ bool ], or
		150 : loc, .id, or
		151 : loc, .loc [ bool ], and
		152 : loc, .id, and
		153 : loc, .loc [ bool ], eq
		154 : loc, .id, eq
		155 : loc, .loc [ bool ], neq
		156 : loc, .id, neq
		157 : loc, .loc [ bool ], +
		158 : loc, .id, +
		159 : loc, .loc [ bool ], -
		160 : loc, .id, -
		161 : loc, .loc [ bool ], *
		162 : loc, .id, *
		163 : loc, .loc [ bool ], /
		164 : loc, .id, /
		165 : loc, .loc [ bool ], mod
		166 : loc, .id, mod
		167 : loc, .loc [ bool ], [
		168 : loc, .id, [
	[292] 
		0 : term, term * .unary, ;
		1 : term, term * .unary, or
		2 : term, term * .unary, and
		3 : term, term * .unary, eq
		4 : term, term * .unary, neq
		5 : term, term * .unary, +
		6 : term, term * .unary, -
		7 : term, term * .unary, *
		8 : term, term * .unary, /
		9 : term, term * .unary, mod
		10 : unary, .! unary, ;
		11 : unary, .- unary, ;
		12 : unary, .factor, ;
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), ;
		41 : factor, .loc, ;
		42 : factor, .id ( args ), ;
		43 : factor, .num, ;
		44 : factor, .real, ;
		45 : factor, .true, ;
		46 : factor, .false, ;
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], ;
		111 : loc, .id, ;
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[293] 
		0 : term, term / .unary, ;
		1 : term, term / .unary, or
		2 : term, term / .unary, and
		3 : term, term / .unary, eq
		4 : term, term / .unary, neq
		5 : term, term / .unary, +
		6 : term, term / .unary, -
		7 : term, term / .unary, *
		8 : term, term / .unary, /
		9 : term, term / .unary, mod
		10 : unary, .! unary, ;
		11 : unary, .- unary, ;
		12 : unary, .factor, ;
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), ;
		41 : factor, .loc, ;
		42 : factor, .id ( args ), ;
		43 : factor, .num, ;
		44 : factor, .real, ;
		45 : factor, .true, ;
		46 : factor, .false, ;
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], ;
		111 : loc, .id, ;
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[294] 
		0 : term, term mod .unary, ;
		1 : term, term mod .unary, or
		2 : term, term mod .unary, and
		3 : term, term mod .unary, eq
		4 : term, term mod .unary, neq
		5 : term, term mod .unary, +
		6 : term, term mod .unary, -
		7 : term, term mod .unary, *
		8 : term, term mod .unary, /
		9 : term, term mod .unary, mod
		10 : unary, .! unary, ;
		11 : unary, .- unary, ;
		12 : unary, .factor, ;
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), ;
		41 : factor, .loc, ;
		42 : factor, .id ( args ), ;
		43 : factor, .num, ;
		44 : factor, .real, ;
		45 : factor, .true, ;
		46 : factor, .false, ;
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], ;
		111 : loc, .id, ;
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[295] 
		0 : factor, id ( .args ), ;
		1 : factor, id ( .args ), or
		2 : factor, id ( .args ), and
		3 : factor, id ( .args ), eq
		4 : factor, id ( .args ), neq
		5 : factor, id ( .args ), +
		6 : factor, id ( .args ), -
		7 : factor, id ( .args ), *
		8 : factor, id ( .args ), /
		9 : factor, id ( .args ), mod
		10 : args, .args , arg, )
		11 : args, .arg, )
		12 : args, ., )
		13 : args, .args , arg, ,
		14 : args, .arg, ,
		15 : args, ., ,
		16 : arg, .loc, )
		17 : arg, .bool, )
		18 : arg, .loc, ,
		19 : arg, .bool, ,
		20 : loc, .loc [ bool ], )
		21 : loc, .id, )
		22 : bool, .bool or join, )
		23 : bool, .join, )
		24 : loc, .loc [ bool ], ,
		25 : loc, .id, ,
		26 : bool, .bool or join, ,
		27 : bool, .join, ,
		28 : loc, .loc [ bool ], [
		29 : loc, .id, [
		30 : bool, .bool or join, or
		31 : bool, .join, or
		32 : join, .join and equality, )
		33 : join, .equality, )
		34 : join, .join and equality, ,
		35 : join, .equality, ,
		36 : join, .join and equality, or
		37 : join, .equality, or
		38 : join, .join and equality, and
		39 : join, .equality, and
		40 : equality, .equality eq rel, )
		41 : equality, .equality neq rel, )
		42 : equality, .rel, )
		43 : equality, .equality eq rel, ,
		44 : equality, .equality neq rel, ,
		45 : equality, .rel, ,
		46 : equality, .equality eq rel, or
		47 : equality, .equality neq rel, or
		48 : equality, .rel, or
		49 : equality, .equality eq rel, and
		50 : equality, .equality neq rel, and
		51 : equality, .rel, and
		52 : equality, .equality eq rel, eq
		53 : equality, .equality neq rel, eq
		54 : equality, .rel, eq
		55 : equality, .equality eq rel, neq
		56 : equality, .equality neq rel, neq
		57 : equality, .rel, neq
		58 : rel, .expr < expr, )
		59 : rel, .expr <= expr, )
		60 : rel, .expr >= expr, )
		61 : rel, .expr > expr, )
		62 : rel, .expr, )
		63 : rel, .expr < expr, ,
		64 : rel, .expr <= expr, ,
		65 : rel, .expr >= expr, ,
		66 : rel, .expr > expr, ,
		67 : rel, .expr, ,
		68 : rel, .expr < expr, or
		69 : rel, .expr <= expr, or
		70 : rel, .expr >= expr, or
		71 : rel, .expr > expr, or
		72 : rel, .expr, or
		73 : rel, .expr < expr, and
		74 : rel, .expr <= expr, and
		75 : rel, .expr >= expr, and
		76 : rel, .expr > expr, and
		77 : rel, .expr, and
		78 : rel, .expr < expr, eq
		79 : rel, .expr <= expr, eq
		80 : rel, .expr >= expr, eq
		81 : rel, .expr > expr, eq
		82 : rel, .expr, eq
		83 : rel, .expr < expr, neq
		84 : rel, .expr <= expr, neq
		85 : rel, .expr >= expr, neq
		86 : rel, .expr > expr, neq
		87 : rel, .expr, neq
		88 : expr, .expr + term, <
		89 : expr, .expr - term, <
		90 : expr, .term, <
		91 : expr, .expr + term, <=
		92 : expr, .expr - term, <=
		93 : expr, .term, <=
		94 : expr, .expr + term, >=
		95 : expr, .expr - term, >=
		96 : expr, .term, >=
		97 : expr, .expr + term, >
		98 : expr, .expr - term, >
		99 : expr, .term, >
		100 : expr, .expr + term, )
		101 : expr, .expr - term, )
		102 : expr, .term, )
		103 : expr, .expr + term, ,
		104 : expr, .expr - term, ,
		105 : expr, .term, ,
		106 : expr, .expr + term, or
		107 : expr, .expr - term, or
		108 : expr, .term, or
		109 : expr, .expr + term, and
		110 : expr, .expr - term, and
		111 : expr, .term, and
		112 : expr, .expr + term, eq
		113 : expr, .expr - term, eq
		114 : expr, .term, eq
		115 : expr, .expr + term, neq
		116 : expr, .expr - term, neq
		117 : expr, .term, neq
		118 : expr, .expr + term, +
		119 : expr, .expr - term, +
		120 : expr, .term, +
		121 : expr, .expr + term, -
		122 : expr, .expr - term, -
		123 : expr, .term, -
		124 : term, .term * unary, <
		125 : term, .term / unary, <
		126 : term, .term mod unary, <
		127 : term, .unary, <
		128 : term, .term * unary, <=
		129 : term, .term / unary, <=
		130 : term, .term mod unary, <=
		131 : term, .unary, <=
		132 : term, .term * unary, >=
		133 : term, .term / unary, >=
		134 : term, .term mod unary, >=
		135 : term, .unary, >=
		136 : term, .term * unary, >
		137 : term, .term / unary, >
		138 : term, .term mod unary, >
		139 : term, .unary, >
		140 : term, .term * unary, )
		141 : term, .term / unary, )
		142 : term, .term mod unary, )
		143 : term, .unary, )
		144 : term, .term * unary, ,
		145 : term, .term / unary, ,
		146 : term, .term mod unary, ,
		147 : term, .unary, ,
		148 : term, .term * unary, or
		149 : term, .term / unary, or
		150 : term, .term mod unary, or
		151 : term, .unary, or
		152 : term, .term * unary, and
		153 : term, .term / unary, and
		154 : term, .term mod unary, and
		155 : term, .unary, and
		156 : term, .term * unary, eq
		157 : term, .term / unary, eq
		158 : term, .term mod unary, eq
		159 : term, .unary, eq
		160 : term, .term * unary, neq
		161 : term, .term / unary, neq
		162 : term, .term mod unary, neq
		163 : term, .unary, neq
		164 : term, .term * unary, +
		165 : term, .term / unary, +
		166 : term, .term mod unary, +
		167 : term, .unary, +
		168 : term, .term * unary, -
		169 : term, .term / unary, -
		170 : term, .term mod unary, -
		171 : term, .unary, -
		172 : term, .term * unary, *
		173 : term, .term / unary, *
		174 : term, .term mod unary, *
		175 : term, .unary, *
		176 : term, .term * unary, /
		177 : term, .term / unary, /
		178 : term, .term mod unary, /
		179 : term, .unary, /
		180 : term, .term * unary, mod
		181 : term, .term / unary, mod
		182 : term, .term mod unary, mod
		183 : term, .unary, mod
		184 : unary, .! unary, <
		185 : unary, .- unary, <
		186 : unary, .factor, <
		187 : unary, .! unary, <=
		188 : unary, .- unary, <=
		189 : unary, .factor, <=
		190 : unary, .! unary, >=
		191 : unary, .- unary, >=
		192 : unary, .factor, >=
		193 : unary, .! unary, >
		194 : unary, .- unary, >
		195 : unary, .factor, >
		196 : unary, .! unary, )
		197 : unary, .- unary, )
		198 : unary, .factor, )
		199 : unary, .! unary, ,
		200 : unary, .- unary, ,
		201 : unary, .factor, ,
		202 : unary, .! unary, or
		203 : unary, .- unary, or
		204 : unary, .factor, or
		205 : unary, .! unary, and
		206 : unary, .- unary, and
		207 : unary, .factor, and
		208 : unary, .! unary, eq
		209 : unary, .- unary, eq
		210 : unary, .factor, eq
		211 : unary, .! unary, neq
		212 : unary, .- unary, neq
		213 : unary, .factor, neq
		214 : unary, .! unary, +
		215 : unary, .- unary, +
		216 : unary, .factor, +
		217 : unary, .! unary, -
		218 : unary, .- unary, -
		219 : unary, .factor, -
		220 : unary, .! unary, *
		221 : unary, .- unary, *
		222 : unary, .factor, *
		223 : unary, .! unary, /
		224 : unary, .- unary, /
		225 : unary, .factor, /
		226 : unary, .! unary, mod
		227 : unary, .- unary, mod
		228 : unary, .factor, mod
		229 : factor, .( bool ), <
		230 : factor, .loc, <
		231 : factor, .id ( args ), <
		232 : factor, .num, <
		233 : factor, .real, <
		234 : factor, .true, <
		235 : factor, .false, <
		236 : factor, .( bool ), <=
		237 : factor, .loc, <=
		238 : factor, .id ( args ), <=
		239 : factor, .num, <=
		240 : factor, .real, <=
		241 : factor, .true, <=
		242 : factor, .false, <=
		243 : factor, .( bool ), >=
		244 : factor, .loc, >=
		245 : factor, .id ( args ), >=
		246 : factor, .num, >=
		247 : factor, .real, >=
		248 : factor, .true, >=
		249 : factor, .false, >=
		250 : factor, .( bool ), >
		251 : factor, .loc, >
		252 : factor, .id ( args ), >
		253 : factor, .num, >
		254 : factor, .real, >
		255 : factor, .true, >
		256 : factor, .false, >
		257 : factor, .( bool ), )
		258 : factor, .loc, )
		259 : factor, .id ( args ), )
		260 : factor, .num, )
		261 : factor, .real, )
		262 : factor, .true, )
		263 : factor, .false, )
		264 : factor, .( bool ), ,
		265 : factor, .loc, ,
		266 : factor, .id ( args ), ,
		267 : factor, .num, ,
		268 : factor, .real, ,
		269 : factor, .true, ,
		270 : factor, .false, ,
		271 : factor, .( bool ), or
		272 : factor, .loc, or
		273 : factor, .id ( args ), or
		274 : factor, .num, or
		275 : factor, .real, or
		276 : factor, .true, or
		277 : factor, .false, or
		278 : factor, .( bool ), and
		279 : factor, .loc, and
		280 : factor, .id ( args ), and
		281 : factor, .num, and
		282 : factor, .real, and
		283 : factor, .true, and
		284 : factor, .false, and
		285 : factor, .( bool ), eq
		286 : factor, .loc, eq
		287 : factor, .id ( args ), eq
		288 : factor, .num, eq
		289 : factor, .real, eq
		290 : factor, .true, eq
		291 : factor, .false, eq
		292 : factor, .( bool ), neq
		293 : factor, .loc, neq
		294 : factor, .id ( args ), neq
		295 : factor, .num, neq
		296 : factor, .real, neq
		297 : factor, .true, neq
		298 : factor, .false, neq
		299 : factor, .( bool ), +
		300 : factor, .loc, +
		301 : factor, .id ( args ), +
		302 : factor, .num, +
		303 : factor, .real, +
		304 : factor, .true, +
		305 : factor, .false, +
		306 : factor, .( bool ), -
		307 : factor, .loc, -
		308 : factor, .id ( args ), -
		309 : factor, .num, -
		310 : factor, .real, -
		311 : factor, .true, -
		312 : factor, .false, -
		313 : factor, .( bool ), *
		314 : factor, .loc, *
		315 : factor, .id ( args ), *
		316 : factor, .num, *
		317 : factor, .real, *
		318 : factor, .true, *
		319 : factor, .false, *
		320 : factor, .( bool ), /
		321 : factor, .loc, /
		322 : factor, .id ( args ), /
		323 : factor, .num, /
		324 : factor, .real, /
		325 : factor, .true, /
		326 : factor, .false, /
		327 : factor, .( bool ), mod
		328 : factor, .loc, mod
		329 : factor, .id ( args ), mod
		330 : factor, .num, mod
		331 : factor, .real, mod
		332 : factor, .true, mod
		333 : factor, .false, mod
		334 : loc, .loc [ bool ], <
		335 : loc, .id, <
		336 : loc, .loc [ bool ], <=
		337 : loc, .id, <=
		338 : loc, .loc [ bool ], >=
		339 : loc, .id, >=
		340 : loc, .loc [ bool ], >
		341 : loc, .id, >
		342 : loc, .loc [ bool ], or
		343 : loc, .id, or
		344 : loc, .loc [ bool ], and
		345 : loc, .id, and
		346 : loc, .loc [ bool ], eq
		347 : loc, .id, eq
		348 : loc, .loc [ bool ], neq
		349 : loc, .id, neq
		350 : loc, .loc [ bool ], +
		351 : loc, .id, +
		352 : loc, .loc [ bool ], -
		353 : loc, .id, -
		354 : loc, .loc [ bool ], *
		355 : loc, .id, *
		356 : loc, .loc [ bool ], /
		357 : loc, .id, /
		358 : loc, .loc [ bool ], mod
		359 : loc, .id, mod
	[296] 
		0 : factor, ( bool .), ;
		1 : factor, ( bool .), or
		2 : factor, ( bool .), and
		3 : factor, ( bool .), eq
		4 : factor, ( bool .), neq
		5 : factor, ( bool .), +
		6 : factor, ( bool .), -
		7 : factor, ( bool .), *
		8 : factor, ( bool .), /
		9 : factor, ( bool .), mod
		10 : bool, bool .or join, )
		11 : bool, bool .or join, or
	[297] 
		0 : unary, - unary ., ;
		1 : unary, - unary ., or
		2 : unary, - unary ., and
		3 : unary, - unary ., eq
		4 : unary, - unary ., neq
		5 : unary, - unary ., +
		6 : unary, - unary ., -
		7 : unary, - unary ., *
		8 : unary, - unary ., /
		9 : unary, - unary ., mod
	[298] 
		0 : unary, ! unary ., ;
		1 : unary, ! unary ., or
		2 : unary, ! unary ., and
		3 : unary, ! unary ., eq
		4 : unary, ! unary ., neq
		5 : unary, ! unary ., +
		6 : unary, ! unary ., -
		7 : unary, ! unary ., *
		8 : unary, ! unary ., /
		9 : unary, ! unary ., mod
	[299] 
		0 : factor, id ( args ) ., <
		1 : factor, id ( args ) ., <=
		2 : factor, id ( args ) ., >=
		3 : factor, id ( args ) ., >
		4 : factor, id ( args ) ., ;
		5 : factor, id ( args ) ., or
		6 : factor, id ( args ) ., and
		7 : factor, id ( args ) ., eq
		8 : factor, id ( args ) ., neq
		9 : factor, id ( args ) ., +
		10 : factor, id ( args ) ., -
		11 : factor, id ( args ) ., *
		12 : factor, id ( args ) ., /
		13 : factor, id ( args ) ., mod
	[300] 
		0 : args, args , .arg, )
		1 : args, args , .arg, ,
		2 : arg, .loc, )
		3 : arg, .bool, )
		4 : arg, .loc, ,
		5 : arg, .bool, ,
		6 : loc, .loc [ bool ], )
		7 : loc, .id, )
		8 : bool, .bool or join, )
		9 : bool, .join, )
		10 : loc, .loc [ bool ], ,
		11 : loc, .id, ,
		12 : bool, .bool or join, ,
		13 : bool, .join, ,
		14 : loc, .loc [ bool ], [
		15 : loc, .id, [
		16 : bool, .bool or join, or
		17 : bool, .join, or
		18 : join, .join and equality, )
		19 : join, .equality, )
		20 : join, .join and equality, ,
		21 : join, .equality, ,
		22 : join, .join and equality, or
		23 : join, .equality, or
		24 : join, .join and equality, and
		25 : join, .equality, and
		26 : equality, .equality eq rel, )
		27 : equality, .equality neq rel, )
		28 : equality, .rel, )
		29 : equality, .equality eq rel, ,
		30 : equality, .equality neq rel, ,
		31 : equality, .rel, ,
		32 : equality, .equality eq rel, or
		33 : equality, .equality neq rel, or
		34 : equality, .rel, or
		35 : equality, .equality eq rel, and
		36 : equality, .equality neq rel, and
		37 : equality, .rel, and
		38 : equality, .equality eq rel, eq
		39 : equality, .equality neq rel, eq
		40 : equality, .rel, eq
		41 : equality, .equality eq rel, neq
		42 : equality, .equality neq rel, neq
		43 : equality, .rel, neq
		44 : rel, .expr < expr, )
		45 : rel, .expr <= expr, )
		46 : rel, .expr >= expr, )
		47 : rel, .expr > expr, )
		48 : rel, .expr, )
		49 : rel, .expr < expr, ,
		50 : rel, .expr <= expr, ,
		51 : rel, .expr >= expr, ,
		52 : rel, .expr > expr, ,
		53 : rel, .expr, ,
		54 : rel, .expr < expr, or
		55 : rel, .expr <= expr, or
		56 : rel, .expr >= expr, or
		57 : rel, .expr > expr, or
		58 : rel, .expr, or
		59 : rel, .expr < expr, and
		60 : rel, .expr <= expr, and
		61 : rel, .expr >= expr, and
		62 : rel, .expr > expr, and
		63 : rel, .expr, and
		64 : rel, .expr < expr, eq
		65 : rel, .expr <= expr, eq
		66 : rel, .expr >= expr, eq
		67 : rel, .expr > expr, eq
		68 : rel, .expr, eq
		69 : rel, .expr < expr, neq
		70 : rel, .expr <= expr, neq
		71 : rel, .expr >= expr, neq
		72 : rel, .expr > expr, neq
		73 : rel, .expr, neq
		74 : expr, .expr + term, <
		75 : expr, .expr - term, <
		76 : expr, .term, <
		77 : expr, .expr + term, <=
		78 : expr, .expr - term, <=
		79 : expr, .term, <=
		80 : expr, .expr + term, >=
		81 : expr, .expr - term, >=
		82 : expr, .term, >=
		83 : expr, .expr + term, >
		84 : expr, .expr - term, >
		85 : expr, .term, >
		86 : expr, .expr + term, )
		87 : expr, .expr - term, )
		88 : expr, .term, )
		89 : expr, .expr + term, ,
		90 : expr, .expr - term, ,
		91 : expr, .term, ,
		92 : expr, .expr + term, or
		93 : expr, .expr - term, or
		94 : expr, .term, or
		95 : expr, .expr + term, and
		96 : expr, .expr - term, and
		97 : expr, .term, and
		98 : expr, .expr + term, eq
		99 : expr, .expr - term, eq
		100 : expr, .term, eq
		101 : expr, .expr + term, neq
		102 : expr, .expr - term, neq
		103 : expr, .term, neq
		104 : expr, .expr + term, +
		105 : expr, .expr - term, +
		106 : expr, .term, +
		107 : expr, .expr + term, -
		108 : expr, .expr - term, -
		109 : expr, .term, -
		110 : term, .term * unary, <
		111 : term, .term / unary, <
		112 : term, .term mod unary, <
		113 : term, .unary, <
		114 : term, .term * unary, <=
		115 : term, .term / unary, <=
		116 : term, .term mod unary, <=
		117 : term, .unary, <=
		118 : term, .term * unary, >=
		119 : term, .term / unary, >=
		120 : term, .term mod unary, >=
		121 : term, .unary, >=
		122 : term, .term * unary, >
		123 : term, .term / unary, >
		124 : term, .term mod unary, >
		125 : term, .unary, >
		126 : term, .term * unary, )
		127 : term, .term / unary, )
		128 : term, .term mod unary, )
		129 : term, .unary, )
		130 : term, .term * unary, ,
		131 : term, .term / unary, ,
		132 : term, .term mod unary, ,
		133 : term, .unary, ,
		134 : term, .term * unary, or
		135 : term, .term / unary, or
		136 : term, .term mod unary, or
		137 : term, .unary, or
		138 : term, .term * unary, and
		139 : term, .term / unary, and
		140 : term, .term mod unary, and
		141 : term, .unary, and
		142 : term, .term * unary, eq
		143 : term, .term / unary, eq
		144 : term, .term mod unary, eq
		145 : term, .unary, eq
		146 : term, .term * unary, neq
		147 : term, .term / unary, neq
		148 : term, .term mod unary, neq
		149 : term, .unary, neq
		150 : term, .term * unary, +
		151 : term, .term / unary, +
		152 : term, .term mod unary, +
		153 : term, .unary, +
		154 : term, .term * unary, -
		155 : term, .term / unary, -
		156 : term, .term mod unary, -
		157 : term, .unary, -
		158 : term, .term * unary, *
		159 : term, .term / unary, *
		160 : term, .term mod unary, *
		161 : term, .unary, *
		162 : term, .term * unary, /
		163 : term, .term / unary, /
		164 : term, .term mod unary, /
		165 : term, .unary, /
		166 : term, .term * unary, mod
		167 : term, .term / unary, mod
		168 : term, .term mod unary, mod
		169 : term, .unary, mod
		170 : unary, .! unary, <
		171 : unary, .- unary, <
		172 : unary, .factor, <
		173 : unary, .! unary, <=
		174 : unary, .- unary, <=
		175 : unary, .factor, <=
		176 : unary, .! unary, >=
		177 : unary, .- unary, >=
		178 : unary, .factor, >=
		179 : unary, .! unary, >
		180 : unary, .- unary, >
		181 : unary, .factor, >
		182 : unary, .! unary, )
		183 : unary, .- unary, )
		184 : unary, .factor, )
		185 : unary, .! unary, ,
		186 : unary, .- unary, ,
		187 : unary, .factor, ,
		188 : unary, .! unary, or
		189 : unary, .- unary, or
		190 : unary, .factor, or
		191 : unary, .! unary, and
		192 : unary, .- unary, and
		193 : unary, .factor, and
		194 : unary, .! unary, eq
		195 : unary, .- unary, eq
		196 : unary, .factor, eq
		197 : unary, .! unary, neq
		198 : unary, .- unary, neq
		199 : unary, .factor, neq
		200 : unary, .! unary, +
		201 : unary, .- unary, +
		202 : unary, .factor, +
		203 : unary, .! unary, -
		204 : unary, .- unary, -
		205 : unary, .factor, -
		206 : unary, .! unary, *
		207 : unary, .- unary, *
		208 : unary, .factor, *
		209 : unary, .! unary, /
		210 : unary, .- unary, /
		211 : unary, .factor, /
		212 : unary, .! unary, mod
		213 : unary, .- unary, mod
		214 : unary, .factor, mod
		215 : factor, .( bool ), <
		216 : factor, .loc, <
		217 : factor, .id ( args ), <
		218 : factor, .num, <
		219 : factor, .real, <
		220 : factor, .true, <
		221 : factor, .false, <
		222 : factor, .( bool ), <=
		223 : factor, .loc, <=
		224 : factor, .id ( args ), <=
		225 : factor, .num, <=
		226 : factor, .real, <=
		227 : factor, .true, <=
		228 : factor, .false, <=
		229 : factor, .( bool ), >=
		230 : factor, .loc, >=
		231 : factor, .id ( args ), >=
		232 : factor, .num, >=
		233 : factor, .real, >=
		234 : factor, .true, >=
		235 : factor, .false, >=
		236 : factor, .( bool ), >
		237 : factor, .loc, >
		238 : factor, .id ( args ), >
		239 : factor, .num, >
		240 : factor, .real, >
		241 : factor, .true, >
		242 : factor, .false, >
		243 : factor, .( bool ), )
		244 : factor, .loc, )
		245 : factor, .id ( args ), )
		246 : factor, .num, )
		247 : factor, .real, )
		248 : factor, .true, )
		249 : factor, .false, )
		250 : factor, .( bool ), ,
		251 : factor, .loc, ,
		252 : factor, .id ( args ), ,
		253 : factor, .num, ,
		254 : factor, .real, ,
		255 : factor, .true, ,
		256 : factor, .false, ,
		257 : factor, .( bool ), or
		258 : factor, .loc, or
		259 : factor, .id ( args ), or
		260 : factor, .num, or
		261 : factor, .real, or
		262 : factor, .true, or
		263 : factor, .false, or
		264 : factor, .( bool ), and
		265 : factor, .loc, and
		266 : factor, .id ( args ), and
		267 : factor, .num, and
		268 : factor, .real, and
		269 : factor, .true, and
		270 : factor, .false, and
		271 : factor, .( bool ), eq
		272 : factor, .loc, eq
		273 : factor, .id ( args ), eq
		274 : factor, .num, eq
		275 : factor, .real, eq
		276 : factor, .true, eq
		277 : factor, .false, eq
		278 : factor, .( bool ), neq
		279 : factor, .loc, neq
		280 : factor, .id ( args ), neq
		281 : factor, .num, neq
		282 : factor, .real, neq
		283 : factor, .true, neq
		284 : factor, .false, neq
		285 : factor, .( bool ), +
		286 : factor, .loc, +
		287 : factor, .id ( args ), +
		288 : factor, .num, +
		289 : factor, .real, +
		290 : factor, .true, +
		291 : factor, .false, +
		292 : factor, .( bool ), -
		293 : factor, .loc, -
		294 : factor, .id ( args ), -
		295 : factor, .num, -
		296 : factor, .real, -
		297 : factor, .true, -
		298 : factor, .false, -
		299 : factor, .( bool ), *
		300 : factor, .loc, *
		301 : factor, .id ( args ), *
		302 : factor, .num, *
		303 : factor, .real, *
		304 : factor, .true, *
		305 : factor, .false, *
		306 : factor, .( bool ), /
		307 : factor, .loc, /
		308 : factor, .id ( args ), /
		309 : factor, .num, /
		310 : factor, .real, /
		311 : factor, .true, /
		312 : factor, .false, /
		313 : factor, .( bool ), mod
		314 : factor, .loc, mod
		315 : factor, .id ( args ), mod
		316 : factor, .num, mod
		317 : factor, .real, mod
		318 : factor, .true, mod
		319 : factor, .false, mod
		320 : loc, .loc [ bool ], <
		321 : loc, .id, <
		322 : loc, .loc [ bool ], <=
		323 : loc, .id, <=
		324 : loc, .loc [ bool ], >=
		325 : loc, .id, >=
		326 : loc, .loc [ bool ], >
		327 : loc, .id, >
		328 : loc, .loc [ bool ], or
		329 : loc, .id, or
		330 : loc, .loc [ bool ], and
		331 : loc, .id, and
		332 : loc, .loc [ bool ], eq
		333 : loc, .id, eq
		334 : loc, .loc [ bool ], neq
		335 : loc, .id, neq
		336 : loc, .loc [ bool ], +
		337 : loc, .id, +
		338 : loc, .loc [ bool ], -
		339 : loc, .id, -
		340 : loc, .loc [ bool ], *
		341 : loc, .id, *
		342 : loc, .loc [ bool ], /
		343 : loc, .id, /
		344 : loc, .loc [ bool ], mod
		345 : loc, .id, mod
	[301] 
		0 : loc, loc [ .bool ], )
		1 : loc, loc [ .bool ], ,
		2 : loc, loc [ .bool ], [
		3 : loc, loc [ .bool ], <
		4 : loc, loc [ .bool ], <=
		5 : loc, loc [ .bool ], >=
		6 : loc, loc [ .bool ], >
		7 : loc, loc [ .bool ], or
		8 : loc, loc [ .bool ], and
		9 : loc, loc [ .bool ], eq
		10 : loc, loc [ .bool ], neq
		11 : loc, loc [ .bool ], +
		12 : loc, loc [ .bool ], -
		13 : loc, loc [ .bool ], *
		14 : loc, loc [ .bool ], /
		15 : loc, loc [ .bool ], mod
		16 : bool, .bool or join, ]
		17 : bool, .join, ]
		18 : bool, .bool or join, or
		19 : bool, .join, or
		20 : join, .join and equality, ]
		21 : join, .equality, ]
		22 : join, .join and equality, or
		23 : join, .equality, or
		24 : join, .join and equality, and
		25 : join, .equality, and
		26 : equality, .equality eq rel, ]
		27 : equality, .equality neq rel, ]
		28 : equality, .rel, ]
		29 : equality, .equality eq rel, or
		30 : equality, .equality neq rel, or
		31 : equality, .rel, or
		32 : equality, .equality eq rel, and
		33 : equality, .equality neq rel, and
		34 : equality, .rel, and
		35 : equality, .equality eq rel, eq
		36 : equality, .equality neq rel, eq
		37 : equality, .rel, eq
		38 : equality, .equality eq rel, neq
		39 : equality, .equality neq rel, neq
		40 : equality, .rel, neq
		41 : rel, .expr < expr, ]
		42 : rel, .expr <= expr, ]
		43 : rel, .expr >= expr, ]
		44 : rel, .expr > expr, ]
		45 : rel, .expr, ]
		46 : rel, .expr < expr, or
		47 : rel, .expr <= expr, or
		48 : rel, .expr >= expr, or
		49 : rel, .expr > expr, or
		50 : rel, .expr, or
		51 : rel, .expr < expr, and
		52 : rel, .expr <= expr, and
		53 : rel, .expr >= expr, and
		54 : rel, .expr > expr, and
		55 : rel, .expr, and
		56 : rel, .expr < expr, eq
		57 : rel, .expr <= expr, eq
		58 : rel, .expr >= expr, eq
		59 : rel, .expr > expr, eq
		60 : rel, .expr, eq
		61 : rel, .expr < expr, neq
		62 : rel, .expr <= expr, neq
		63 : rel, .expr >= expr, neq
		64 : rel, .expr > expr, neq
		65 : rel, .expr, neq
		66 : expr, .expr + term, <
		67 : expr, .expr - term, <
		68 : expr, .term, <
		69 : expr, .expr + term, <=
		70 : expr, .expr - term, <=
		71 : expr, .term, <=
		72 : expr, .expr + term, >=
		73 : expr, .expr - term, >=
		74 : expr, .term, >=
		75 : expr, .expr + term, >
		76 : expr, .expr - term, >
		77 : expr, .term, >
		78 : expr, .expr + term, ]
		79 : expr, .expr - term, ]
		80 : expr, .term, ]
		81 : expr, .expr + term, or
		82 : expr, .expr - term, or
		83 : expr, .term, or
		84 : expr, .expr + term, and
		85 : expr, .expr - term, and
		86 : expr, .term, and
		87 : expr, .expr + term, eq
		88 : expr, .expr - term, eq
		89 : expr, .term, eq
		90 : expr, .expr + term, neq
		91 : expr, .expr - term, neq
		92 : expr, .term, neq
		93 : expr, .expr + term, +
		94 : expr, .expr - term, +
		95 : expr, .term, +
		96 : expr, .expr + term, -
		97 : expr, .expr - term, -
		98 : expr, .term, -
		99 : term, .term * unary, <
		100 : term, .term / unary, <
		101 : term, .term mod unary, <
		102 : term, .unary, <
		103 : term, .term * unary, <=
		104 : term, .term / unary, <=
		105 : term, .term mod unary, <=
		106 : term, .unary, <=
		107 : term, .term * unary, >=
		108 : term, .term / unary, >=
		109 : term, .term mod unary, >=
		110 : term, .unary, >=
		111 : term, .term * unary, >
		112 : term, .term / unary, >
		113 : term, .term mod unary, >
		114 : term, .unary, >
		115 : term, .term * unary, ]
		116 : term, .term / unary, ]
		117 : term, .term mod unary, ]
		118 : term, .unary, ]
		119 : term, .term * unary, or
		120 : term, .term / unary, or
		121 : term, .term mod unary, or
		122 : term, .unary, or
		123 : term, .term * unary, and
		124 : term, .term / unary, and
		125 : term, .term mod unary, and
		126 : term, .unary, and
		127 : term, .term * unary, eq
		128 : term, .term / unary, eq
		129 : term, .term mod unary, eq
		130 : term, .unary, eq
		131 : term, .term * unary, neq
		132 : term, .term / unary, neq
		133 : term, .term mod unary, neq
		134 : term, .unary, neq
		135 : term, .term * unary, +
		136 : term, .term / unary, +
		137 : term, .term mod unary, +
		138 : term, .unary, +
		139 : term, .term * unary, -
		140 : term, .term / unary, -
		141 : term, .term mod unary, -
		142 : term, .unary, -
		143 : term, .term * unary, *
		144 : term, .term / unary, *
		145 : term, .term mod unary, *
		146 : term, .unary, *
		147 : term, .term * unary, /
		148 : term, .term / unary, /
		149 : term, .term mod unary, /
		150 : term, .unary, /
		151 : term, .term * unary, mod
		152 : term, .term / unary, mod
		153 : term, .term mod unary, mod
		154 : term, .unary, mod
		155 : unary, .! unary, <
		156 : unary, .- unary, <
		157 : unary, .factor, <
		158 : unary, .! unary, <=
		159 : unary, .- unary, <=
		160 : unary, .factor, <=
		161 : unary, .! unary, >=
		162 : unary, .- unary, >=
		163 : unary, .factor, >=
		164 : unary, .! unary, >
		165 : unary, .- unary, >
		166 : unary, .factor, >
		167 : unary, .! unary, ]
		168 : unary, .- unary, ]
		169 : unary, .factor, ]
		170 : unary, .! unary, or
		171 : unary, .- unary, or
		172 : unary, .factor, or
		173 : unary, .! unary, and
		174 : unary, .- unary, and
		175 : unary, .factor, and
		176 : unary, .! unary, eq
		177 : unary, .- unary, eq
		178 : unary, .factor, eq
		179 : unary, .! unary, neq
		180 : unary, .- unary, neq
		181 : unary, .factor, neq
		182 : unary, .! unary, +
		183 : unary, .- unary, +
		184 : unary, .factor, +
		185 : unary, .! unary, -
		186 : unary, .- unary, -
		187 : unary, .factor, -
		188 : unary, .! unary, *
		189 : unary, .- unary, *
		190 : unary, .factor, *
		191 : unary, .! unary, /
		192 : unary, .- unary, /
		193 : unary, .factor, /
		194 : unary, .! unary, mod
		195 : unary, .- unary, mod
		196 : unary, .factor, mod
		197 : factor, .( bool ), <
		198 : factor, .loc, <
		199 : factor, .id ( args ), <
		200 : factor, .num, <
		201 : factor, .real, <
		202 : factor, .true, <
		203 : factor, .false, <
		204 : factor, .( bool ), <=
		205 : factor, .loc, <=
		206 : factor, .id ( args ), <=
		207 : factor, .num, <=
		208 : factor, .real, <=
		209 : factor, .true, <=
		210 : factor, .false, <=
		211 : factor, .( bool ), >=
		212 : factor, .loc, >=
		213 : factor, .id ( args ), >=
		214 : factor, .num, >=
		215 : factor, .real, >=
		216 : factor, .true, >=
		217 : factor, .false, >=
		218 : factor, .( bool ), >
		219 : factor, .loc, >
		220 : factor, .id ( args ), >
		221 : factor, .num, >
		222 : factor, .real, >
		223 : factor, .true, >
		224 : factor, .false, >
		225 : factor, .( bool ), ]
		226 : factor, .loc, ]
		227 : factor, .id ( args ), ]
		228 : factor, .num, ]
		229 : factor, .real, ]
		230 : factor, .true, ]
		231 : factor, .false, ]
		232 : factor, .( bool ), or
		233 : factor, .loc, or
		234 : factor, .id ( args ), or
		235 : factor, .num, or
		236 : factor, .real, or
		237 : factor, .true, or
		238 : factor, .false, or
		239 : factor, .( bool ), and
		240 : factor, .loc, and
		241 : factor, .id ( args ), and
		242 : factor, .num, and
		243 : factor, .real, and
		244 : factor, .true, and
		245 : factor, .false, and
		246 : factor, .( bool ), eq
		247 : factor, .loc, eq
		248 : factor, .id ( args ), eq
		249 : factor, .num, eq
		250 : factor, .real, eq
		251 : factor, .true, eq
		252 : factor, .false, eq
		253 : factor, .( bool ), neq
		254 : factor, .loc, neq
		255 : factor, .id ( args ), neq
		256 : factor, .num, neq
		257 : factor, .real, neq
		258 : factor, .true, neq
		259 : factor, .false, neq
		260 : factor, .( bool ), +
		261 : factor, .loc, +
		262 : factor, .id ( args ), +
		263 : factor, .num, +
		264 : factor, .real, +
		265 : factor, .true, +
		266 : factor, .false, +
		267 : factor, .( bool ), -
		268 : factor, .loc, -
		269 : factor, .id ( args ), -
		270 : factor, .num, -
		271 : factor, .real, -
		272 : factor, .true, -
		273 : factor, .false, -
		274 : factor, .( bool ), *
		275 : factor, .loc, *
		276 : factor, .id ( args ), *
		277 : factor, .num, *
		278 : factor, .real, *
		279 : factor, .true, *
		280 : factor, .false, *
		281 : factor, .( bool ), /
		282 : factor, .loc, /
		283 : factor, .id ( args ), /
		284 : factor, .num, /
		285 : factor, .real, /
		286 : factor, .true, /
		287 : factor, .false, /
		288 : factor, .( bool ), mod
		289 : factor, .loc, mod
		290 : factor, .id ( args ), mod
		291 : factor, .num, mod
		292 : factor, .real, mod
		293 : factor, .true, mod
		294 : factor, .false, mod
		295 : loc, .loc [ bool ], <
		296 : loc, .id, <
		297 : loc, .loc [ bool ], <=
		298 : loc, .id, <=
		299 : loc, .loc [ bool ], >=
		300 : loc, .id, >=
		301 : loc, .loc [ bool ], >
		302 : loc, .id, >
		303 : loc, .loc [ bool ], ]
		304 : loc, .id, ]
		305 : loc, .loc [ bool ], or
		306 : loc, .id, or
		307 : loc, .loc [ bool ], and
		308 : loc, .id, and
		309 : loc, .loc [ bool ], eq
		310 : loc, .id, eq
		311 : loc, .loc [ bool ], neq
		312 : loc, .id, neq
		313 : loc, .loc [ bool ], +
		314 : loc, .id, +
		315 : loc, .loc [ bool ], -
		316 : loc, .id, -
		317 : loc, .loc [ bool ], *
		318 : loc, .id, *
		319 : loc, .loc [ bool ], /
		320 : loc, .id, /
		321 : loc, .loc [ bool ], mod
		322 : loc, .id, mod
		323 : loc, .loc [ bool ], [
		324 : loc, .id, [
	[302] 
		0 : bool, bool or .join, )
		1 : bool, bool or .join, ,
		2 : bool, bool or .join, or
		3 : join, .join and equality, )
		4 : join, .equality, )
		5 : join, .join and equality, ,
		6 : join, .equality, ,
		7 : join, .join and equality, or
		8 : join, .equality, or
		9 : join, .join and equality, and
		10 : join, .equality, and
		11 : equality, .equality eq rel, )
		12 : equality, .equality neq rel, )
		13 : equality, .rel, )
		14 : equality, .equality eq rel, ,
		15 : equality, .equality neq rel, ,
		16 : equality, .rel, ,
		17 : equality, .equality eq rel, or
		18 : equality, .equality neq rel, or
		19 : equality, .rel, or
		20 : equality, .equality eq rel, and
		21 : equality, .equality neq rel, and
		22 : equality, .rel, and
		23 : equality, .equality eq rel, eq
		24 : equality, .equality neq rel, eq
		25 : equality, .rel, eq
		26 : equality, .equality eq rel, neq
		27 : equality, .equality neq rel, neq
		28 : equality, .rel, neq
		29 : rel, .expr < expr, )
		30 : rel, .expr <= expr, )
		31 : rel, .expr >= expr, )
		32 : rel, .expr > expr, )
		33 : rel, .expr, )
		34 : rel, .expr < expr, ,
		35 : rel, .expr <= expr, ,
		36 : rel, .expr >= expr, ,
		37 : rel, .expr > expr, ,
		38 : rel, .expr, ,
		39 : rel, .expr < expr, or
		40 : rel, .expr <= expr, or
		41 : rel, .expr >= expr, or
		42 : rel, .expr > expr, or
		43 : rel, .expr, or
		44 : rel, .expr < expr, and
		45 : rel, .expr <= expr, and
		46 : rel, .expr >= expr, and
		47 : rel, .expr > expr, and
		48 : rel, .expr, and
		49 : rel, .expr < expr, eq
		50 : rel, .expr <= expr, eq
		51 : rel, .expr >= expr, eq
		52 : rel, .expr > expr, eq
		53 : rel, .expr, eq
		54 : rel, .expr < expr, neq
		55 : rel, .expr <= expr, neq
		56 : rel, .expr >= expr, neq
		57 : rel, .expr > expr, neq
		58 : rel, .expr, neq
		59 : expr, .expr + term, <
		60 : expr, .expr - term, <
		61 : expr, .term, <
		62 : expr, .expr + term, <=
		63 : expr, .expr - term, <=
		64 : expr, .term, <=
		65 : expr, .expr + term, >=
		66 : expr, .expr - term, >=
		67 : expr, .term, >=
		68 : expr, .expr + term, >
		69 : expr, .expr - term, >
		70 : expr, .term, >
		71 : expr, .expr + term, )
		72 : expr, .expr - term, )
		73 : expr, .term, )
		74 : expr, .expr + term, ,
		75 : expr, .expr - term, ,
		76 : expr, .term, ,
		77 : expr, .expr + term, or
		78 : expr, .expr - term, or
		79 : expr, .term, or
		80 : expr, .expr + term, and
		81 : expr, .expr - term, and
		82 : expr, .term, and
		83 : expr, .expr + term, eq
		84 : expr, .expr - term, eq
		85 : expr, .term, eq
		86 : expr, .expr + term, neq
		87 : expr, .expr - term, neq
		88 : expr, .term, neq
		89 : expr, .expr + term, +
		90 : expr, .expr - term, +
		91 : expr, .term, +
		92 : expr, .expr + term, -
		93 : expr, .expr - term, -
		94 : expr, .term, -
		95 : term, .term * unary, <
		96 : term, .term / unary, <
		97 : term, .term mod unary, <
		98 : term, .unary, <
		99 : term, .term * unary, <=
		100 : term, .term / unary, <=
		101 : term, .term mod unary, <=
		102 : term, .unary, <=
		103 : term, .term * unary, >=
		104 : term, .term / unary, >=
		105 : term, .term mod unary, >=
		106 : term, .unary, >=
		107 : term, .term * unary, >
		108 : term, .term / unary, >
		109 : term, .term mod unary, >
		110 : term, .unary, >
		111 : term, .term * unary, )
		112 : term, .term / unary, )
		113 : term, .term mod unary, )
		114 : term, .unary, )
		115 : term, .term * unary, ,
		116 : term, .term / unary, ,
		117 : term, .term mod unary, ,
		118 : term, .unary, ,
		119 : term, .term * unary, or
		120 : term, .term / unary, or
		121 : term, .term mod unary, or
		122 : term, .unary, or
		123 : term, .term * unary, and
		124 : term, .term / unary, and
		125 : term, .term mod unary, and
		126 : term, .unary, and
		127 : term, .term * unary, eq
		128 : term, .term / unary, eq
		129 : term, .term mod unary, eq
		130 : term, .unary, eq
		131 : term, .term * unary, neq
		132 : term, .term / unary, neq
		133 : term, .term mod unary, neq
		134 : term, .unary, neq
		135 : term, .term * unary, +
		136 : term, .term / unary, +
		137 : term, .term mod unary, +
		138 : term, .unary, +
		139 : term, .term * unary, -
		140 : term, .term / unary, -
		141 : term, .term mod unary, -
		142 : term, .unary, -
		143 : term, .term * unary, *
		144 : term, .term / unary, *
		145 : term, .term mod unary, *
		146 : term, .unary, *
		147 : term, .term * unary, /
		148 : term, .term / unary, /
		149 : term, .term mod unary, /
		150 : term, .unary, /
		151 : term, .term * unary, mod
		152 : term, .term / unary, mod
		153 : term, .term mod unary, mod
		154 : term, .unary, mod
		155 : unary, .! unary, <
		156 : unary, .- unary, <
		157 : unary, .factor, <
		158 : unary, .! unary, <=
		159 : unary, .- unary, <=
		160 : unary, .factor, <=
		161 : unary, .! unary, >=
		162 : unary, .- unary, >=
		163 : unary, .factor, >=
		164 : unary, .! unary, >
		165 : unary, .- unary, >
		166 : unary, .factor, >
		167 : unary, .! unary, )
		168 : unary, .- unary, )
		169 : unary, .factor, )
		170 : unary, .! unary, ,
		171 : unary, .- unary, ,
		172 : unary, .factor, ,
		173 : unary, .! unary, or
		174 : unary, .- unary, or
		175 : unary, .factor, or
		176 : unary, .! unary, and
		177 : unary, .- unary, and
		178 : unary, .factor, and
		179 : unary, .! unary, eq
		180 : unary, .- unary, eq
		181 : unary, .factor, eq
		182 : unary, .! unary, neq
		183 : unary, .- unary, neq
		184 : unary, .factor, neq
		185 : unary, .! unary, +
		186 : unary, .- unary, +
		187 : unary, .factor, +
		188 : unary, .! unary, -
		189 : unary, .- unary, -
		190 : unary, .factor, -
		191 : unary, .! unary, *
		192 : unary, .- unary, *
		193 : unary, .factor, *
		194 : unary, .! unary, /
		195 : unary, .- unary, /
		196 : unary, .factor, /
		197 : unary, .! unary, mod
		198 : unary, .- unary, mod
		199 : unary, .factor, mod
		200 : factor, .( bool ), <
		201 : factor, .loc, <
		202 : factor, .id ( args ), <
		203 : factor, .num, <
		204 : factor, .real, <
		205 : factor, .true, <
		206 : factor, .false, <
		207 : factor, .( bool ), <=
		208 : factor, .loc, <=
		209 : factor, .id ( args ), <=
		210 : factor, .num, <=
		211 : factor, .real, <=
		212 : factor, .true, <=
		213 : factor, .false, <=
		214 : factor, .( bool ), >=
		215 : factor, .loc, >=
		216 : factor, .id ( args ), >=
		217 : factor, .num, >=
		218 : factor, .real, >=
		219 : factor, .true, >=
		220 : factor, .false, >=
		221 : factor, .( bool ), >
		222 : factor, .loc, >
		223 : factor, .id ( args ), >
		224 : factor, .num, >
		225 : factor, .real, >
		226 : factor, .true, >
		227 : factor, .false, >
		228 : factor, .( bool ), )
		229 : factor, .loc, )
		230 : factor, .id ( args ), )
		231 : factor, .num, )
		232 : factor, .real, )
		233 : factor, .true, )
		234 : factor, .false, )
		235 : factor, .( bool ), ,
		236 : factor, .loc, ,
		237 : factor, .id ( args ), ,
		238 : factor, .num, ,
		239 : factor, .real, ,
		240 : factor, .true, ,
		241 : factor, .false, ,
		242 : factor, .( bool ), or
		243 : factor, .loc, or
		244 : factor, .id ( args ), or
		245 : factor, .num, or
		246 : factor, .real, or
		247 : factor, .true, or
		248 : factor, .false, or
		249 : factor, .( bool ), and
		250 : factor, .loc, and
		251 : factor, .id ( args ), and
		252 : factor, .num, and
		253 : factor, .real, and
		254 : factor, .true, and
		255 : factor, .false, and
		256 : factor, .( bool ), eq
		257 : factor, .loc, eq
		258 : factor, .id ( args ), eq
		259 : factor, .num, eq
		260 : factor, .real, eq
		261 : factor, .true, eq
		262 : factor, .false, eq
		263 : factor, .( bool ), neq
		264 : factor, .loc, neq
		265 : factor, .id ( args ), neq
		266 : factor, .num, neq
		267 : factor, .real, neq
		268 : factor, .true, neq
		269 : factor, .false, neq
		270 : factor, .( bool ), +
		271 : factor, .loc, +
		272 : factor, .id ( args ), +
		273 : factor, .num, +
		274 : factor, .real, +
		275 : factor, .true, +
		276 : factor, .false, +
		277 : factor, .( bool ), -
		278 : factor, .loc, -
		279 : factor, .id ( args ), -
		280 : factor, .num, -
		281 : factor, .real, -
		282 : factor, .true, -
		283 : factor, .false, -
		284 : factor, .( bool ), *
		285 : factor, .loc, *
		286 : factor, .id ( args ), *
		287 : factor, .num, *
		288 : factor, .real, *
		289 : factor, .true, *
		290 : factor, .false, *
		291 : factor, .( bool ), /
		292 : factor, .loc, /
		293 : factor, .id ( args ), /
		294 : factor, .num, /
		295 : factor, .real, /
		296 : factor, .true, /
		297 : factor, .false, /
		298 : factor, .( bool ), mod
		299 : factor, .loc, mod
		300 : factor, .id ( args ), mod
		301 : factor, .num, mod
		302 : factor, .real, mod
		303 : factor, .true, mod
		304 : factor, .false, mod
		305 : loc, .loc [ bool ], <
		306 : loc, .id, <
		307 : loc, .loc [ bool ], <=
		308 : loc, .id, <=
		309 : loc, .loc [ bool ], >=
		310 : loc, .id, >=
		311 : loc, .loc [ bool ], >
		312 : loc, .id, >
		313 : loc, .loc [ bool ], )
		314 : loc, .id, )
		315 : loc, .loc [ bool ], ,
		316 : loc, .id, ,
		317 : loc, .loc [ bool ], or
		318 : loc, .id, or
		319 : loc, .loc [ bool ], and
		320 : loc, .id, and
		321 : loc, .loc [ bool ], eq
		322 : loc, .id, eq
		323 : loc, .loc [ bool ], neq
		324 : loc, .id, neq
		325 : loc, .loc [ bool ], +
		326 : loc, .id, +
		327 : loc, .loc [ bool ], -
		328 : loc, .id, -
		329 : loc, .loc [ bool ], *
		330 : loc, .id, *
		331 : loc, .loc [ bool ], /
		332 : loc, .id, /
		333 : loc, .loc [ bool ], mod
		334 : loc, .id, mod
		335 : loc, .loc [ bool ], [
		336 : loc, .id, [
	[303] 
		0 : join, join and .equality, )
		1 : join, join and .equality, ,
		2 : join, join and .equality, or
		3 : join, join and .equality, and
		4 : equality, .equality eq rel, )
		5 : equality, .equality neq rel, )
		6 : equality, .rel, )
		7 : equality, .equality eq rel, ,
		8 : equality, .equality neq rel, ,
		9 : equality, .rel, ,
		10 : equality, .equality eq rel, or
		11 : equality, .equality neq rel, or
		12 : equality, .rel, or
		13 : equality, .equality eq rel, and
		14 : equality, .equality neq rel, and
		15 : equality, .rel, and
		16 : equality, .equality eq rel, eq
		17 : equality, .equality neq rel, eq
		18 : equality, .rel, eq
		19 : equality, .equality eq rel, neq
		20 : equality, .equality neq rel, neq
		21 : equality, .rel, neq
		22 : rel, .expr < expr, )
		23 : rel, .expr <= expr, )
		24 : rel, .expr >= expr, )
		25 : rel, .expr > expr, )
		26 : rel, .expr, )
		27 : rel, .expr < expr, ,
		28 : rel, .expr <= expr, ,
		29 : rel, .expr >= expr, ,
		30 : rel, .expr > expr, ,
		31 : rel, .expr, ,
		32 : rel, .expr < expr, or
		33 : rel, .expr <= expr, or
		34 : rel, .expr >= expr, or
		35 : rel, .expr > expr, or
		36 : rel, .expr, or
		37 : rel, .expr < expr, and
		38 : rel, .expr <= expr, and
		39 : rel, .expr >= expr, and
		40 : rel, .expr > expr, and
		41 : rel, .expr, and
		42 : rel, .expr < expr, eq
		43 : rel, .expr <= expr, eq
		44 : rel, .expr >= expr, eq
		45 : rel, .expr > expr, eq
		46 : rel, .expr, eq
		47 : rel, .expr < expr, neq
		48 : rel, .expr <= expr, neq
		49 : rel, .expr >= expr, neq
		50 : rel, .expr > expr, neq
		51 : rel, .expr, neq
		52 : expr, .expr + term, <
		53 : expr, .expr - term, <
		54 : expr, .term, <
		55 : expr, .expr + term, <=
		56 : expr, .expr - term, <=
		57 : expr, .term, <=
		58 : expr, .expr + term, >=
		59 : expr, .expr - term, >=
		60 : expr, .term, >=
		61 : expr, .expr + term, >
		62 : expr, .expr - term, >
		63 : expr, .term, >
		64 : expr, .expr + term, )
		65 : expr, .expr - term, )
		66 : expr, .term, )
		67 : expr, .expr + term, ,
		68 : expr, .expr - term, ,
		69 : expr, .term, ,
		70 : expr, .expr + term, or
		71 : expr, .expr - term, or
		72 : expr, .term, or
		73 : expr, .expr + term, and
		74 : expr, .expr - term, and
		75 : expr, .term, and
		76 : expr, .expr + term, eq
		77 : expr, .expr - term, eq
		78 : expr, .term, eq
		79 : expr, .expr + term, neq
		80 : expr, .expr - term, neq
		81 : expr, .term, neq
		82 : expr, .expr + term, +
		83 : expr, .expr - term, +
		84 : expr, .term, +
		85 : expr, .expr + term, -
		86 : expr, .expr - term, -
		87 : expr, .term, -
		88 : term, .term * unary, <
		89 : term, .term / unary, <
		90 : term, .term mod unary, <
		91 : term, .unary, <
		92 : term, .term * unary, <=
		93 : term, .term / unary, <=
		94 : term, .term mod unary, <=
		95 : term, .unary, <=
		96 : term, .term * unary, >=
		97 : term, .term / unary, >=
		98 : term, .term mod unary, >=
		99 : term, .unary, >=
		100 : term, .term * unary, >
		101 : term, .term / unary, >
		102 : term, .term mod unary, >
		103 : term, .unary, >
		104 : term, .term * unary, )
		105 : term, .term / unary, )
		106 : term, .term mod unary, )
		107 : term, .unary, )
		108 : term, .term * unary, ,
		109 : term, .term / unary, ,
		110 : term, .term mod unary, ,
		111 : term, .unary, ,
		112 : term, .term * unary, or
		113 : term, .term / unary, or
		114 : term, .term mod unary, or
		115 : term, .unary, or
		116 : term, .term * unary, and
		117 : term, .term / unary, and
		118 : term, .term mod unary, and
		119 : term, .unary, and
		120 : term, .term * unary, eq
		121 : term, .term / unary, eq
		122 : term, .term mod unary, eq
		123 : term, .unary, eq
		124 : term, .term * unary, neq
		125 : term, .term / unary, neq
		126 : term, .term mod unary, neq
		127 : term, .unary, neq
		128 : term, .term * unary, +
		129 : term, .term / unary, +
		130 : term, .term mod unary, +
		131 : term, .unary, +
		132 : term, .term * unary, -
		133 : term, .term / unary, -
		134 : term, .term mod unary, -
		135 : term, .unary, -
		136 : term, .term * unary, *
		137 : term, .term / unary, *
		138 : term, .term mod unary, *
		139 : term, .unary, *
		140 : term, .term * unary, /
		141 : term, .term / unary, /
		142 : term, .term mod unary, /
		143 : term, .unary, /
		144 : term, .term * unary, mod
		145 : term, .term / unary, mod
		146 : term, .term mod unary, mod
		147 : term, .unary, mod
		148 : unary, .! unary, <
		149 : unary, .- unary, <
		150 : unary, .factor, <
		151 : unary, .! unary, <=
		152 : unary, .- unary, <=
		153 : unary, .factor, <=
		154 : unary, .! unary, >=
		155 : unary, .- unary, >=
		156 : unary, .factor, >=
		157 : unary, .! unary, >
		158 : unary, .- unary, >
		159 : unary, .factor, >
		160 : unary, .! unary, )
		161 : unary, .- unary, )
		162 : unary, .factor, )
		163 : unary, .! unary, ,
		164 : unary, .- unary, ,
		165 : unary, .factor, ,
		166 : unary, .! unary, or
		167 : unary, .- unary, or
		168 : unary, .factor, or
		169 : unary, .! unary, and
		170 : unary, .- unary, and
		171 : unary, .factor, and
		172 : unary, .! unary, eq
		173 : unary, .- unary, eq
		174 : unary, .factor, eq
		175 : unary, .! unary, neq
		176 : unary, .- unary, neq
		177 : unary, .factor, neq
		178 : unary, .! unary, +
		179 : unary, .- unary, +
		180 : unary, .factor, +
		181 : unary, .! unary, -
		182 : unary, .- unary, -
		183 : unary, .factor, -
		184 : unary, .! unary, *
		185 : unary, .- unary, *
		186 : unary, .factor, *
		187 : unary, .! unary, /
		188 : unary, .- unary, /
		189 : unary, .factor, /
		190 : unary, .! unary, mod
		191 : unary, .- unary, mod
		192 : unary, .factor, mod
		193 : factor, .( bool ), <
		194 : factor, .loc, <
		195 : factor, .id ( args ), <
		196 : factor, .num, <
		197 : factor, .real, <
		198 : factor, .true, <
		199 : factor, .false, <
		200 : factor, .( bool ), <=
		201 : factor, .loc, <=
		202 : factor, .id ( args ), <=
		203 : factor, .num, <=
		204 : factor, .real, <=
		205 : factor, .true, <=
		206 : factor, .false, <=
		207 : factor, .( bool ), >=
		208 : factor, .loc, >=
		209 : factor, .id ( args ), >=
		210 : factor, .num, >=
		211 : factor, .real, >=
		212 : factor, .true, >=
		213 : factor, .false, >=
		214 : factor, .( bool ), >
		215 : factor, .loc, >
		216 : factor, .id ( args ), >
		217 : factor, .num, >
		218 : factor, .real, >
		219 : factor, .true, >
		220 : factor, .false, >
		221 : factor, .( bool ), )
		222 : factor, .loc, )
		223 : factor, .id ( args ), )
		224 : factor, .num, )
		225 : factor, .real, )
		226 : factor, .true, )
		227 : factor, .false, )
		228 : factor, .( bool ), ,
		229 : factor, .loc, ,
		230 : factor, .id ( args ), ,
		231 : factor, .num, ,
		232 : factor, .real, ,
		233 : factor, .true, ,
		234 : factor, .false, ,
		235 : factor, .( bool ), or
		236 : factor, .loc, or
		237 : factor, .id ( args ), or
		238 : factor, .num, or
		239 : factor, .real, or
		240 : factor, .true, or
		241 : factor, .false, or
		242 : factor, .( bool ), and
		243 : factor, .loc, and
		244 : factor, .id ( args ), and
		245 : factor, .num, and
		246 : factor, .real, and
		247 : factor, .true, and
		248 : factor, .false, and
		249 : factor, .( bool ), eq
		250 : factor, .loc, eq
		251 : factor, .id ( args ), eq
		252 : factor, .num, eq
		253 : factor, .real, eq
		254 : factor, .true, eq
		255 : factor, .false, eq
		256 : factor, .( bool ), neq
		257 : factor, .loc, neq
		258 : factor, .id ( args ), neq
		259 : factor, .num, neq
		260 : factor, .real, neq
		261 : factor, .true, neq
		262 : factor, .false, neq
		263 : factor, .( bool ), +
		264 : factor, .loc, +
		265 : factor, .id ( args ), +
		266 : factor, .num, +
		267 : factor, .real, +
		268 : factor, .true, +
		269 : factor, .false, +
		270 : factor, .( bool ), -
		271 : factor, .loc, -
		272 : factor, .id ( args ), -
		273 : factor, .num, -
		274 : factor, .real, -
		275 : factor, .true, -
		276 : factor, .false, -
		277 : factor, .( bool ), *
		278 : factor, .loc, *
		279 : factor, .id ( args ), *
		280 : factor, .num, *
		281 : factor, .real, *
		282 : factor, .true, *
		283 : factor, .false, *
		284 : factor, .( bool ), /
		285 : factor, .loc, /
		286 : factor, .id ( args ), /
		287 : factor, .num, /
		288 : factor, .real, /
		289 : factor, .true, /
		290 : factor, .false, /
		291 : factor, .( bool ), mod
		292 : factor, .loc, mod
		293 : factor, .id ( args ), mod
		294 : factor, .num, mod
		295 : factor, .real, mod
		296 : factor, .true, mod
		297 : factor, .false, mod
		298 : loc, .loc [ bool ], <
		299 : loc, .id, <
		300 : loc, .loc [ bool ], <=
		301 : loc, .id, <=
		302 : loc, .loc [ bool ], >=
		303 : loc, .id, >=
		304 : loc, .loc [ bool ], >
		305 : loc, .id, >
		306 : loc, .loc [ bool ], )
		307 : loc, .id, )
		308 : loc, .loc [ bool ], ,
		309 : loc, .id, ,
		310 : loc, .loc [ bool ], or
		311 : loc, .id, or
		312 : loc, .loc [ bool ], and
		313 : loc, .id, and
		314 : loc, .loc [ bool ], eq
		315 : loc, .id, eq
		316 : loc, .loc [ bool ], neq
		317 : loc, .id, neq
		318 : loc, .loc [ bool ], +
		319 : loc, .id, +
		320 : loc, .loc [ bool ], -
		321 : loc, .id, -
		322 : loc, .loc [ bool ], *
		323 : loc, .id, *
		324 : loc, .loc [ bool ], /
		325 : loc, .id, /
		326 : loc, .loc [ bool ], mod
		327 : loc, .id, mod
		328 : loc, .loc [ bool ], [
		329 : loc, .id, [
	[304] 
		0 : equality, equality eq .rel, )
		1 : equality, equality eq .rel, ,
		2 : equality, equality eq .rel, or
		3 : equality, equality eq .rel, and
		4 : equality, equality eq .rel, eq
		5 : equality, equality eq .rel, neq
		6 : rel, .expr < expr, )
		7 : rel, .expr <= expr, )
		8 : rel, .expr >= expr, )
		9 : rel, .expr > expr, )
		10 : rel, .expr, )
		11 : rel, .expr < expr, ,
		12 : rel, .expr <= expr, ,
		13 : rel, .expr >= expr, ,
		14 : rel, .expr > expr, ,
		15 : rel, .expr, ,
		16 : rel, .expr < expr, or
		17 : rel, .expr <= expr, or
		18 : rel, .expr >= expr, or
		19 : rel, .expr > expr, or
		20 : rel, .expr, or
		21 : rel, .expr < expr, and
		22 : rel, .expr <= expr, and
		23 : rel, .expr >= expr, and
		24 : rel, .expr > expr, and
		25 : rel, .expr, and
		26 : rel, .expr < expr, eq
		27 : rel, .expr <= expr, eq
		28 : rel, .expr >= expr, eq
		29 : rel, .expr > expr, eq
		30 : rel, .expr, eq
		31 : rel, .expr < expr, neq
		32 : rel, .expr <= expr, neq
		33 : rel, .expr >= expr, neq
		34 : rel, .expr > expr, neq
		35 : rel, .expr, neq
		36 : expr, .expr + term, <
		37 : expr, .expr - term, <
		38 : expr, .term, <
		39 : expr, .expr + term, <=
		40 : expr, .expr - term, <=
		41 : expr, .term, <=
		42 : expr, .expr + term, >=
		43 : expr, .expr - term, >=
		44 : expr, .term, >=
		45 : expr, .expr + term, >
		46 : expr, .expr - term, >
		47 : expr, .term, >
		48 : expr, .expr + term, )
		49 : expr, .expr - term, )
		50 : expr, .term, )
		51 : expr, .expr + term, ,
		52 : expr, .expr - term, ,
		53 : expr, .term, ,
		54 : expr, .expr + term, or
		55 : expr, .expr - term, or
		56 : expr, .term, or
		57 : expr, .expr + term, and
		58 : expr, .expr - term, and
		59 : expr, .term, and
		60 : expr, .expr + term, eq
		61 : expr, .expr - term, eq
		62 : expr, .term, eq
		63 : expr, .expr + term, neq
		64 : expr, .expr - term, neq
		65 : expr, .term, neq
		66 : expr, .expr + term, +
		67 : expr, .expr - term, +
		68 : expr, .term, +
		69 : expr, .expr + term, -
		70 : expr, .expr - term, -
		71 : expr, .term, -
		72 : term, .term * unary, <
		73 : term, .term / unary, <
		74 : term, .term mod unary, <
		75 : term, .unary, <
		76 : term, .term * unary, <=
		77 : term, .term / unary, <=
		78 : term, .term mod unary, <=
		79 : term, .unary, <=
		80 : term, .term * unary, >=
		81 : term, .term / unary, >=
		82 : term, .term mod unary, >=
		83 : term, .unary, >=
		84 : term, .term * unary, >
		85 : term, .term / unary, >
		86 : term, .term mod unary, >
		87 : term, .unary, >
		88 : term, .term * unary, )
		89 : term, .term / unary, )
		90 : term, .term mod unary, )
		91 : term, .unary, )
		92 : term, .term * unary, ,
		93 : term, .term / unary, ,
		94 : term, .term mod unary, ,
		95 : term, .unary, ,
		96 : term, .term * unary, or
		97 : term, .term / unary, or
		98 : term, .term mod unary, or
		99 : term, .unary, or
		100 : term, .term * unary, and
		101 : term, .term / unary, and
		102 : term, .term mod unary, and
		103 : term, .unary, and
		104 : term, .term * unary, eq
		105 : term, .term / unary, eq
		106 : term, .term mod unary, eq
		107 : term, .unary, eq
		108 : term, .term * unary, neq
		109 : term, .term / unary, neq
		110 : term, .term mod unary, neq
		111 : term, .unary, neq
		112 : term, .term * unary, +
		113 : term, .term / unary, +
		114 : term, .term mod unary, +
		115 : term, .unary, +
		116 : term, .term * unary, -
		117 : term, .term / unary, -
		118 : term, .term mod unary, -
		119 : term, .unary, -
		120 : term, .term * unary, *
		121 : term, .term / unary, *
		122 : term, .term mod unary, *
		123 : term, .unary, *
		124 : term, .term * unary, /
		125 : term, .term / unary, /
		126 : term, .term mod unary, /
		127 : term, .unary, /
		128 : term, .term * unary, mod
		129 : term, .term / unary, mod
		130 : term, .term mod unary, mod
		131 : term, .unary, mod
		132 : unary, .! unary, <
		133 : unary, .- unary, <
		134 : unary, .factor, <
		135 : unary, .! unary, <=
		136 : unary, .- unary, <=
		137 : unary, .factor, <=
		138 : unary, .! unary, >=
		139 : unary, .- unary, >=
		140 : unary, .factor, >=
		141 : unary, .! unary, >
		142 : unary, .- unary, >
		143 : unary, .factor, >
		144 : unary, .! unary, )
		145 : unary, .- unary, )
		146 : unary, .factor, )
		147 : unary, .! unary, ,
		148 : unary, .- unary, ,
		149 : unary, .factor, ,
		150 : unary, .! unary, or
		151 : unary, .- unary, or
		152 : unary, .factor, or
		153 : unary, .! unary, and
		154 : unary, .- unary, and
		155 : unary, .factor, and
		156 : unary, .! unary, eq
		157 : unary, .- unary, eq
		158 : unary, .factor, eq
		159 : unary, .! unary, neq
		160 : unary, .- unary, neq
		161 : unary, .factor, neq
		162 : unary, .! unary, +
		163 : unary, .- unary, +
		164 : unary, .factor, +
		165 : unary, .! unary, -
		166 : unary, .- unary, -
		167 : unary, .factor, -
		168 : unary, .! unary, *
		169 : unary, .- unary, *
		170 : unary, .factor, *
		171 : unary, .! unary, /
		172 : unary, .- unary, /
		173 : unary, .factor, /
		174 : unary, .! unary, mod
		175 : unary, .- unary, mod
		176 : unary, .factor, mod
		177 : factor, .( bool ), <
		178 : factor, .loc, <
		179 : factor, .id ( args ), <
		180 : factor, .num, <
		181 : factor, .real, <
		182 : factor, .true, <
		183 : factor, .false, <
		184 : factor, .( bool ), <=
		185 : factor, .loc, <=
		186 : factor, .id ( args ), <=
		187 : factor, .num, <=
		188 : factor, .real, <=
		189 : factor, .true, <=
		190 : factor, .false, <=
		191 : factor, .( bool ), >=
		192 : factor, .loc, >=
		193 : factor, .id ( args ), >=
		194 : factor, .num, >=
		195 : factor, .real, >=
		196 : factor, .true, >=
		197 : factor, .false, >=
		198 : factor, .( bool ), >
		199 : factor, .loc, >
		200 : factor, .id ( args ), >
		201 : factor, .num, >
		202 : factor, .real, >
		203 : factor, .true, >
		204 : factor, .false, >
		205 : factor, .( bool ), )
		206 : factor, .loc, )
		207 : factor, .id ( args ), )
		208 : factor, .num, )
		209 : factor, .real, )
		210 : factor, .true, )
		211 : factor, .false, )
		212 : factor, .( bool ), ,
		213 : factor, .loc, ,
		214 : factor, .id ( args ), ,
		215 : factor, .num, ,
		216 : factor, .real, ,
		217 : factor, .true, ,
		218 : factor, .false, ,
		219 : factor, .( bool ), or
		220 : factor, .loc, or
		221 : factor, .id ( args ), or
		222 : factor, .num, or
		223 : factor, .real, or
		224 : factor, .true, or
		225 : factor, .false, or
		226 : factor, .( bool ), and
		227 : factor, .loc, and
		228 : factor, .id ( args ), and
		229 : factor, .num, and
		230 : factor, .real, and
		231 : factor, .true, and
		232 : factor, .false, and
		233 : factor, .( bool ), eq
		234 : factor, .loc, eq
		235 : factor, .id ( args ), eq
		236 : factor, .num, eq
		237 : factor, .real, eq
		238 : factor, .true, eq
		239 : factor, .false, eq
		240 : factor, .( bool ), neq
		241 : factor, .loc, neq
		242 : factor, .id ( args ), neq
		243 : factor, .num, neq
		244 : factor, .real, neq
		245 : factor, .true, neq
		246 : factor, .false, neq
		247 : factor, .( bool ), +
		248 : factor, .loc, +
		249 : factor, .id ( args ), +
		250 : factor, .num, +
		251 : factor, .real, +
		252 : factor, .true, +
		253 : factor, .false, +
		254 : factor, .( bool ), -
		255 : factor, .loc, -
		256 : factor, .id ( args ), -
		257 : factor, .num, -
		258 : factor, .real, -
		259 : factor, .true, -
		260 : factor, .false, -
		261 : factor, .( bool ), *
		262 : factor, .loc, *
		263 : factor, .id ( args ), *
		264 : factor, .num, *
		265 : factor, .real, *
		266 : factor, .true, *
		267 : factor, .false, *
		268 : factor, .( bool ), /
		269 : factor, .loc, /
		270 : factor, .id ( args ), /
		271 : factor, .num, /
		272 : factor, .real, /
		273 : factor, .true, /
		274 : factor, .false, /
		275 : factor, .( bool ), mod
		276 : factor, .loc, mod
		277 : factor, .id ( args ), mod
		278 : factor, .num, mod
		279 : factor, .real, mod
		280 : factor, .true, mod
		281 : factor, .false, mod
		282 : loc, .loc [ bool ], <
		283 : loc, .id, <
		284 : loc, .loc [ bool ], <=
		285 : loc, .id, <=
		286 : loc, .loc [ bool ], >=
		287 : loc, .id, >=
		288 : loc, .loc [ bool ], >
		289 : loc, .id, >
		290 : loc, .loc [ bool ], )
		291 : loc, .id, )
		292 : loc, .loc [ bool ], ,
		293 : loc, .id, ,
		294 : loc, .loc [ bool ], or
		295 : loc, .id, or
		296 : loc, .loc [ bool ], and
		297 : loc, .id, and
		298 : loc, .loc [ bool ], eq
		299 : loc, .id, eq
		300 : loc, .loc [ bool ], neq
		301 : loc, .id, neq
		302 : loc, .loc [ bool ], +
		303 : loc, .id, +
		304 : loc, .loc [ bool ], -
		305 : loc, .id, -
		306 : loc, .loc [ bool ], *
		307 : loc, .id, *
		308 : loc, .loc [ bool ], /
		309 : loc, .id, /
		310 : loc, .loc [ bool ], mod
		311 : loc, .id, mod
		312 : loc, .loc [ bool ], [
		313 : loc, .id, [
	[305] 
		0 : equality, equality neq .rel, )
		1 : equality, equality neq .rel, ,
		2 : equality, equality neq .rel, or
		3 : equality, equality neq .rel, and
		4 : equality, equality neq .rel, eq
		5 : equality, equality neq .rel, neq
		6 : rel, .expr < expr, )
		7 : rel, .expr <= expr, )
		8 : rel, .expr >= expr, )
		9 : rel, .expr > expr, )
		10 : rel, .expr, )
		11 : rel, .expr < expr, ,
		12 : rel, .expr <= expr, ,
		13 : rel, .expr >= expr, ,
		14 : rel, .expr > expr, ,
		15 : rel, .expr, ,
		16 : rel, .expr < expr, or
		17 : rel, .expr <= expr, or
		18 : rel, .expr >= expr, or
		19 : rel, .expr > expr, or
		20 : rel, .expr, or
		21 : rel, .expr < expr, and
		22 : rel, .expr <= expr, and
		23 : rel, .expr >= expr, and
		24 : rel, .expr > expr, and
		25 : rel, .expr, and
		26 : rel, .expr < expr, eq
		27 : rel, .expr <= expr, eq
		28 : rel, .expr >= expr, eq
		29 : rel, .expr > expr, eq
		30 : rel, .expr, eq
		31 : rel, .expr < expr, neq
		32 : rel, .expr <= expr, neq
		33 : rel, .expr >= expr, neq
		34 : rel, .expr > expr, neq
		35 : rel, .expr, neq
		36 : expr, .expr + term, <
		37 : expr, .expr - term, <
		38 : expr, .term, <
		39 : expr, .expr + term, <=
		40 : expr, .expr - term, <=
		41 : expr, .term, <=
		42 : expr, .expr + term, >=
		43 : expr, .expr - term, >=
		44 : expr, .term, >=
		45 : expr, .expr + term, >
		46 : expr, .expr - term, >
		47 : expr, .term, >
		48 : expr, .expr + term, )
		49 : expr, .expr - term, )
		50 : expr, .term, )
		51 : expr, .expr + term, ,
		52 : expr, .expr - term, ,
		53 : expr, .term, ,
		54 : expr, .expr + term, or
		55 : expr, .expr - term, or
		56 : expr, .term, or
		57 : expr, .expr + term, and
		58 : expr, .expr - term, and
		59 : expr, .term, and
		60 : expr, .expr + term, eq
		61 : expr, .expr - term, eq
		62 : expr, .term, eq
		63 : expr, .expr + term, neq
		64 : expr, .expr - term, neq
		65 : expr, .term, neq
		66 : expr, .expr + term, +
		67 : expr, .expr - term, +
		68 : expr, .term, +
		69 : expr, .expr + term, -
		70 : expr, .expr - term, -
		71 : expr, .term, -
		72 : term, .term * unary, <
		73 : term, .term / unary, <
		74 : term, .term mod unary, <
		75 : term, .unary, <
		76 : term, .term * unary, <=
		77 : term, .term / unary, <=
		78 : term, .term mod unary, <=
		79 : term, .unary, <=
		80 : term, .term * unary, >=
		81 : term, .term / unary, >=
		82 : term, .term mod unary, >=
		83 : term, .unary, >=
		84 : term, .term * unary, >
		85 : term, .term / unary, >
		86 : term, .term mod unary, >
		87 : term, .unary, >
		88 : term, .term * unary, )
		89 : term, .term / unary, )
		90 : term, .term mod unary, )
		91 : term, .unary, )
		92 : term, .term * unary, ,
		93 : term, .term / unary, ,
		94 : term, .term mod unary, ,
		95 : term, .unary, ,
		96 : term, .term * unary, or
		97 : term, .term / unary, or
		98 : term, .term mod unary, or
		99 : term, .unary, or
		100 : term, .term * unary, and
		101 : term, .term / unary, and
		102 : term, .term mod unary, and
		103 : term, .unary, and
		104 : term, .term * unary, eq
		105 : term, .term / unary, eq
		106 : term, .term mod unary, eq
		107 : term, .unary, eq
		108 : term, .term * unary, neq
		109 : term, .term / unary, neq
		110 : term, .term mod unary, neq
		111 : term, .unary, neq
		112 : term, .term * unary, +
		113 : term, .term / unary, +
		114 : term, .term mod unary, +
		115 : term, .unary, +
		116 : term, .term * unary, -
		117 : term, .term / unary, -
		118 : term, .term mod unary, -
		119 : term, .unary, -
		120 : term, .term * unary, *
		121 : term, .term / unary, *
		122 : term, .term mod unary, *
		123 : term, .unary, *
		124 : term, .term * unary, /
		125 : term, .term / unary, /
		126 : term, .term mod unary, /
		127 : term, .unary, /
		128 : term, .term * unary, mod
		129 : term, .term / unary, mod
		130 : term, .term mod unary, mod
		131 : term, .unary, mod
		132 : unary, .! unary, <
		133 : unary, .- unary, <
		134 : unary, .factor, <
		135 : unary, .! unary, <=
		136 : unary, .- unary, <=
		137 : unary, .factor, <=
		138 : unary, .! unary, >=
		139 : unary, .- unary, >=
		140 : unary, .factor, >=
		141 : unary, .! unary, >
		142 : unary, .- unary, >
		143 : unary, .factor, >
		144 : unary, .! unary, )
		145 : unary, .- unary, )
		146 : unary, .factor, )
		147 : unary, .! unary, ,
		148 : unary, .- unary, ,
		149 : unary, .factor, ,
		150 : unary, .! unary, or
		151 : unary, .- unary, or
		152 : unary, .factor, or
		153 : unary, .! unary, and
		154 : unary, .- unary, and
		155 : unary, .factor, and
		156 : unary, .! unary, eq
		157 : unary, .- unary, eq
		158 : unary, .factor, eq
		159 : unary, .! unary, neq
		160 : unary, .- unary, neq
		161 : unary, .factor, neq
		162 : unary, .! unary, +
		163 : unary, .- unary, +
		164 : unary, .factor, +
		165 : unary, .! unary, -
		166 : unary, .- unary, -
		167 : unary, .factor, -
		168 : unary, .! unary, *
		169 : unary, .- unary, *
		170 : unary, .factor, *
		171 : unary, .! unary, /
		172 : unary, .- unary, /
		173 : unary, .factor, /
		174 : unary, .! unary, mod
		175 : unary, .- unary, mod
		176 : unary, .factor, mod
		177 : factor, .( bool ), <
		178 : factor, .loc, <
		179 : factor, .id ( args ), <
		180 : factor, .num, <
		181 : factor, .real, <
		182 : factor, .true, <
		183 : factor, .false, <
		184 : factor, .( bool ), <=
		185 : factor, .loc, <=
		186 : factor, .id ( args ), <=
		187 : factor, .num, <=
		188 : factor, .real, <=
		189 : factor, .true, <=
		190 : factor, .false, <=
		191 : factor, .( bool ), >=
		192 : factor, .loc, >=
		193 : factor, .id ( args ), >=
		194 : factor, .num, >=
		195 : factor, .real, >=
		196 : factor, .true, >=
		197 : factor, .false, >=
		198 : factor, .( bool ), >
		199 : factor, .loc, >
		200 : factor, .id ( args ), >
		201 : factor, .num, >
		202 : factor, .real, >
		203 : factor, .true, >
		204 : factor, .false, >
		205 : factor, .( bool ), )
		206 : factor, .loc, )
		207 : factor, .id ( args ), )
		208 : factor, .num, )
		209 : factor, .real, )
		210 : factor, .true, )
		211 : factor, .false, )
		212 : factor, .( bool ), ,
		213 : factor, .loc, ,
		214 : factor, .id ( args ), ,
		215 : factor, .num, ,
		216 : factor, .real, ,
		217 : factor, .true, ,
		218 : factor, .false, ,
		219 : factor, .( bool ), or
		220 : factor, .loc, or
		221 : factor, .id ( args ), or
		222 : factor, .num, or
		223 : factor, .real, or
		224 : factor, .true, or
		225 : factor, .false, or
		226 : factor, .( bool ), and
		227 : factor, .loc, and
		228 : factor, .id ( args ), and
		229 : factor, .num, and
		230 : factor, .real, and
		231 : factor, .true, and
		232 : factor, .false, and
		233 : factor, .( bool ), eq
		234 : factor, .loc, eq
		235 : factor, .id ( args ), eq
		236 : factor, .num, eq
		237 : factor, .real, eq
		238 : factor, .true, eq
		239 : factor, .false, eq
		240 : factor, .( bool ), neq
		241 : factor, .loc, neq
		242 : factor, .id ( args ), neq
		243 : factor, .num, neq
		244 : factor, .real, neq
		245 : factor, .true, neq
		246 : factor, .false, neq
		247 : factor, .( bool ), +
		248 : factor, .loc, +
		249 : factor, .id ( args ), +
		250 : factor, .num, +
		251 : factor, .real, +
		252 : factor, .true, +
		253 : factor, .false, +
		254 : factor, .( bool ), -
		255 : factor, .loc, -
		256 : factor, .id ( args ), -
		257 : factor, .num, -
		258 : factor, .real, -
		259 : factor, .true, -
		260 : factor, .false, -
		261 : factor, .( bool ), *
		262 : factor, .loc, *
		263 : factor, .id ( args ), *
		264 : factor, .num, *
		265 : factor, .real, *
		266 : factor, .true, *
		267 : factor, .false, *
		268 : factor, .( bool ), /
		269 : factor, .loc, /
		270 : factor, .id ( args ), /
		271 : factor, .num, /
		272 : factor, .real, /
		273 : factor, .true, /
		274 : factor, .false, /
		275 : factor, .( bool ), mod
		276 : factor, .loc, mod
		277 : factor, .id ( args ), mod
		278 : factor, .num, mod
		279 : factor, .real, mod
		280 : factor, .true, mod
		281 : factor, .false, mod
		282 : loc, .loc [ bool ], <
		283 : loc, .id, <
		284 : loc, .loc [ bool ], <=
		285 : loc, .id, <=
		286 : loc, .loc [ bool ], >=
		287 : loc, .id, >=
		288 : loc, .loc [ bool ], >
		289 : loc, .id, >
		290 : loc, .loc [ bool ], )
		291 : loc, .id, )
		292 : loc, .loc [ bool ], ,
		293 : loc, .id, ,
		294 : loc, .loc [ bool ], or
		295 : loc, .id, or
		296 : loc, .loc [ bool ], and
		297 : loc, .id, and
		298 : loc, .loc [ bool ], eq
		299 : loc, .id, eq
		300 : loc, .loc [ bool ], neq
		301 : loc, .id, neq
		302 : loc, .loc [ bool ], +
		303 : loc, .id, +
		304 : loc, .loc [ bool ], -
		305 : loc, .id, -
		306 : loc, .loc [ bool ], *
		307 : loc, .id, *
		308 : loc, .loc [ bool ], /
		309 : loc, .id, /
		310 : loc, .loc [ bool ], mod
		311 : loc, .id, mod
		312 : loc, .loc [ bool ], [
		313 : loc, .id, [
	[306] 
		0 : rel, expr < .expr, )
		1 : rel, expr < .expr, ,
		2 : rel, expr < .expr, or
		3 : rel, expr < .expr, and
		4 : rel, expr < .expr, eq
		5 : rel, expr < .expr, neq
		6 : expr, .expr + term, )
		7 : expr, .expr - term, )
		8 : expr, .term, )
		9 : expr, .expr + term, ,
		10 : expr, .expr - term, ,
		11 : expr, .term, ,
		12 : expr, .expr + term, or
		13 : expr, .expr - term, or
		14 : expr, .term, or
		15 : expr, .expr + term, and
		16 : expr, .expr - term, and
		17 : expr, .term, and
		18 : expr, .expr + term, eq
		19 : expr, .expr - term, eq
		20 : expr, .term, eq
		21 : expr, .expr + term, neq
		22 : expr, .expr - term, neq
		23 : expr, .term, neq
		24 : expr, .expr + term, +
		25 : expr, .expr - term, +
		26 : expr, .term, +
		27 : expr, .expr + term, -
		28 : expr, .expr - term, -
		29 : expr, .term, -
		30 : term, .term * unary, )
		31 : term, .term / unary, )
		32 : term, .term mod unary, )
		33 : term, .unary, )
		34 : term, .term * unary, ,
		35 : term, .term / unary, ,
		36 : term, .term mod unary, ,
		37 : term, .unary, ,
		38 : term, .term * unary, or
		39 : term, .term / unary, or
		40 : term, .term mod unary, or
		41 : term, .unary, or
		42 : term, .term * unary, and
		43 : term, .term / unary, and
		44 : term, .term mod unary, and
		45 : term, .unary, and
		46 : term, .term * unary, eq
		47 : term, .term / unary, eq
		48 : term, .term mod unary, eq
		49 : term, .unary, eq
		50 : term, .term * unary, neq
		51 : term, .term / unary, neq
		52 : term, .term mod unary, neq
		53 : term, .unary, neq
		54 : term, .term * unary, +
		55 : term, .term / unary, +
		56 : term, .term mod unary, +
		57 : term, .unary, +
		58 : term, .term * unary, -
		59 : term, .term / unary, -
		60 : term, .term mod unary, -
		61 : term, .unary, -
		62 : term, .term * unary, *
		63 : term, .term / unary, *
		64 : term, .term mod unary, *
		65 : term, .unary, *
		66 : term, .term * unary, /
		67 : term, .term / unary, /
		68 : term, .term mod unary, /
		69 : term, .unary, /
		70 : term, .term * unary, mod
		71 : term, .term / unary, mod
		72 : term, .term mod unary, mod
		73 : term, .unary, mod
		74 : unary, .! unary, )
		75 : unary, .- unary, )
		76 : unary, .factor, )
		77 : unary, .! unary, ,
		78 : unary, .- unary, ,
		79 : unary, .factor, ,
		80 : unary, .! unary, or
		81 : unary, .- unary, or
		82 : unary, .factor, or
		83 : unary, .! unary, and
		84 : unary, .- unary, and
		85 : unary, .factor, and
		86 : unary, .! unary, eq
		87 : unary, .- unary, eq
		88 : unary, .factor, eq
		89 : unary, .! unary, neq
		90 : unary, .- unary, neq
		91 : unary, .factor, neq
		92 : unary, .! unary, +
		93 : unary, .- unary, +
		94 : unary, .factor, +
		95 : unary, .! unary, -
		96 : unary, .- unary, -
		97 : unary, .factor, -
		98 : unary, .! unary, *
		99 : unary, .- unary, *
		100 : unary, .factor, *
		101 : unary, .! unary, /
		102 : unary, .- unary, /
		103 : unary, .factor, /
		104 : unary, .! unary, mod
		105 : unary, .- unary, mod
		106 : unary, .factor, mod
		107 : factor, .( bool ), )
		108 : factor, .loc, )
		109 : factor, .id ( args ), )
		110 : factor, .num, )
		111 : factor, .real, )
		112 : factor, .true, )
		113 : factor, .false, )
		114 : factor, .( bool ), ,
		115 : factor, .loc, ,
		116 : factor, .id ( args ), ,
		117 : factor, .num, ,
		118 : factor, .real, ,
		119 : factor, .true, ,
		120 : factor, .false, ,
		121 : factor, .( bool ), or
		122 : factor, .loc, or
		123 : factor, .id ( args ), or
		124 : factor, .num, or
		125 : factor, .real, or
		126 : factor, .true, or
		127 : factor, .false, or
		128 : factor, .( bool ), and
		129 : factor, .loc, and
		130 : factor, .id ( args ), and
		131 : factor, .num, and
		132 : factor, .real, and
		133 : factor, .true, and
		134 : factor, .false, and
		135 : factor, .( bool ), eq
		136 : factor, .loc, eq
		137 : factor, .id ( args ), eq
		138 : factor, .num, eq
		139 : factor, .real, eq
		140 : factor, .true, eq
		141 : factor, .false, eq
		142 : factor, .( bool ), neq
		143 : factor, .loc, neq
		144 : factor, .id ( args ), neq
		145 : factor, .num, neq
		146 : factor, .real, neq
		147 : factor, .true, neq
		148 : factor, .false, neq
		149 : factor, .( bool ), +
		150 : factor, .loc, +
		151 : factor, .id ( args ), +
		152 : factor, .num, +
		153 : factor, .real, +
		154 : factor, .true, +
		155 : factor, .false, +
		156 : factor, .( bool ), -
		157 : factor, .loc, -
		158 : factor, .id ( args ), -
		159 : factor, .num, -
		160 : factor, .real, -
		161 : factor, .true, -
		162 : factor, .false, -
		163 : factor, .( bool ), *
		164 : factor, .loc, *
		165 : factor, .id ( args ), *
		166 : factor, .num, *
		167 : factor, .real, *
		168 : factor, .true, *
		169 : factor, .false, *
		170 : factor, .( bool ), /
		171 : factor, .loc, /
		172 : factor, .id ( args ), /
		173 : factor, .num, /
		174 : factor, .real, /
		175 : factor, .true, /
		176 : factor, .false, /
		177 : factor, .( bool ), mod
		178 : factor, .loc, mod
		179 : factor, .id ( args ), mod
		180 : factor, .num, mod
		181 : factor, .real, mod
		182 : factor, .true, mod
		183 : factor, .false, mod
		184 : loc, .loc [ bool ], )
		185 : loc, .id, )
		186 : loc, .loc [ bool ], ,
		187 : loc, .id, ,
		188 : loc, .loc [ bool ], or
		189 : loc, .id, or
		190 : loc, .loc [ bool ], and
		191 : loc, .id, and
		192 : loc, .loc [ bool ], eq
		193 : loc, .id, eq
		194 : loc, .loc [ bool ], neq
		195 : loc, .id, neq
		196 : loc, .loc [ bool ], +
		197 : loc, .id, +
		198 : loc, .loc [ bool ], -
		199 : loc, .id, -
		200 : loc, .loc [ bool ], *
		201 : loc, .id, *
		202 : loc, .loc [ bool ], /
		203 : loc, .id, /
		204 : loc, .loc [ bool ], mod
		205 : loc, .id, mod
		206 : loc, .loc [ bool ], [
		207 : loc, .id, [
	[307] 
		0 : rel, expr <= .expr, )
		1 : rel, expr <= .expr, ,
		2 : rel, expr <= .expr, or
		3 : rel, expr <= .expr, and
		4 : rel, expr <= .expr, eq
		5 : rel, expr <= .expr, neq
		6 : expr, .expr + term, )
		7 : expr, .expr - term, )
		8 : expr, .term, )
		9 : expr, .expr + term, ,
		10 : expr, .expr - term, ,
		11 : expr, .term, ,
		12 : expr, .expr + term, or
		13 : expr, .expr - term, or
		14 : expr, .term, or
		15 : expr, .expr + term, and
		16 : expr, .expr - term, and
		17 : expr, .term, and
		18 : expr, .expr + term, eq
		19 : expr, .expr - term, eq
		20 : expr, .term, eq
		21 : expr, .expr + term, neq
		22 : expr, .expr - term, neq
		23 : expr, .term, neq
		24 : expr, .expr + term, +
		25 : expr, .expr - term, +
		26 : expr, .term, +
		27 : expr, .expr + term, -
		28 : expr, .expr - term, -
		29 : expr, .term, -
		30 : term, .term * unary, )
		31 : term, .term / unary, )
		32 : term, .term mod unary, )
		33 : term, .unary, )
		34 : term, .term * unary, ,
		35 : term, .term / unary, ,
		36 : term, .term mod unary, ,
		37 : term, .unary, ,
		38 : term, .term * unary, or
		39 : term, .term / unary, or
		40 : term, .term mod unary, or
		41 : term, .unary, or
		42 : term, .term * unary, and
		43 : term, .term / unary, and
		44 : term, .term mod unary, and
		45 : term, .unary, and
		46 : term, .term * unary, eq
		47 : term, .term / unary, eq
		48 : term, .term mod unary, eq
		49 : term, .unary, eq
		50 : term, .term * unary, neq
		51 : term, .term / unary, neq
		52 : term, .term mod unary, neq
		53 : term, .unary, neq
		54 : term, .term * unary, +
		55 : term, .term / unary, +
		56 : term, .term mod unary, +
		57 : term, .unary, +
		58 : term, .term * unary, -
		59 : term, .term / unary, -
		60 : term, .term mod unary, -
		61 : term, .unary, -
		62 : term, .term * unary, *
		63 : term, .term / unary, *
		64 : term, .term mod unary, *
		65 : term, .unary, *
		66 : term, .term * unary, /
		67 : term, .term / unary, /
		68 : term, .term mod unary, /
		69 : term, .unary, /
		70 : term, .term * unary, mod
		71 : term, .term / unary, mod
		72 : term, .term mod unary, mod
		73 : term, .unary, mod
		74 : unary, .! unary, )
		75 : unary, .- unary, )
		76 : unary, .factor, )
		77 : unary, .! unary, ,
		78 : unary, .- unary, ,
		79 : unary, .factor, ,
		80 : unary, .! unary, or
		81 : unary, .- unary, or
		82 : unary, .factor, or
		83 : unary, .! unary, and
		84 : unary, .- unary, and
		85 : unary, .factor, and
		86 : unary, .! unary, eq
		87 : unary, .- unary, eq
		88 : unary, .factor, eq
		89 : unary, .! unary, neq
		90 : unary, .- unary, neq
		91 : unary, .factor, neq
		92 : unary, .! unary, +
		93 : unary, .- unary, +
		94 : unary, .factor, +
		95 : unary, .! unary, -
		96 : unary, .- unary, -
		97 : unary, .factor, -
		98 : unary, .! unary, *
		99 : unary, .- unary, *
		100 : unary, .factor, *
		101 : unary, .! unary, /
		102 : unary, .- unary, /
		103 : unary, .factor, /
		104 : unary, .! unary, mod
		105 : unary, .- unary, mod
		106 : unary, .factor, mod
		107 : factor, .( bool ), )
		108 : factor, .loc, )
		109 : factor, .id ( args ), )
		110 : factor, .num, )
		111 : factor, .real, )
		112 : factor, .true, )
		113 : factor, .false, )
		114 : factor, .( bool ), ,
		115 : factor, .loc, ,
		116 : factor, .id ( args ), ,
		117 : factor, .num, ,
		118 : factor, .real, ,
		119 : factor, .true, ,
		120 : factor, .false, ,
		121 : factor, .( bool ), or
		122 : factor, .loc, or
		123 : factor, .id ( args ), or
		124 : factor, .num, or
		125 : factor, .real, or
		126 : factor, .true, or
		127 : factor, .false, or
		128 : factor, .( bool ), and
		129 : factor, .loc, and
		130 : factor, .id ( args ), and
		131 : factor, .num, and
		132 : factor, .real, and
		133 : factor, .true, and
		134 : factor, .false, and
		135 : factor, .( bool ), eq
		136 : factor, .loc, eq
		137 : factor, .id ( args ), eq
		138 : factor, .num, eq
		139 : factor, .real, eq
		140 : factor, .true, eq
		141 : factor, .false, eq
		142 : factor, .( bool ), neq
		143 : factor, .loc, neq
		144 : factor, .id ( args ), neq
		145 : factor, .num, neq
		146 : factor, .real, neq
		147 : factor, .true, neq
		148 : factor, .false, neq
		149 : factor, .( bool ), +
		150 : factor, .loc, +
		151 : factor, .id ( args ), +
		152 : factor, .num, +
		153 : factor, .real, +
		154 : factor, .true, +
		155 : factor, .false, +
		156 : factor, .( bool ), -
		157 : factor, .loc, -
		158 : factor, .id ( args ), -
		159 : factor, .num, -
		160 : factor, .real, -
		161 : factor, .true, -
		162 : factor, .false, -
		163 : factor, .( bool ), *
		164 : factor, .loc, *
		165 : factor, .id ( args ), *
		166 : factor, .num, *
		167 : factor, .real, *
		168 : factor, .true, *
		169 : factor, .false, *
		170 : factor, .( bool ), /
		171 : factor, .loc, /
		172 : factor, .id ( args ), /
		173 : factor, .num, /
		174 : factor, .real, /
		175 : factor, .true, /
		176 : factor, .false, /
		177 : factor, .( bool ), mod
		178 : factor, .loc, mod
		179 : factor, .id ( args ), mod
		180 : factor, .num, mod
		181 : factor, .real, mod
		182 : factor, .true, mod
		183 : factor, .false, mod
		184 : loc, .loc [ bool ], )
		185 : loc, .id, )
		186 : loc, .loc [ bool ], ,
		187 : loc, .id, ,
		188 : loc, .loc [ bool ], or
		189 : loc, .id, or
		190 : loc, .loc [ bool ], and
		191 : loc, .id, and
		192 : loc, .loc [ bool ], eq
		193 : loc, .id, eq
		194 : loc, .loc [ bool ], neq
		195 : loc, .id, neq
		196 : loc, .loc [ bool ], +
		197 : loc, .id, +
		198 : loc, .loc [ bool ], -
		199 : loc, .id, -
		200 : loc, .loc [ bool ], *
		201 : loc, .id, *
		202 : loc, .loc [ bool ], /
		203 : loc, .id, /
		204 : loc, .loc [ bool ], mod
		205 : loc, .id, mod
		206 : loc, .loc [ bool ], [
		207 : loc, .id, [
	[308] 
		0 : rel, expr >= .expr, )
		1 : rel, expr >= .expr, ,
		2 : rel, expr >= .expr, or
		3 : rel, expr >= .expr, and
		4 : rel, expr >= .expr, eq
		5 : rel, expr >= .expr, neq
		6 : expr, .expr + term, )
		7 : expr, .expr - term, )
		8 : expr, .term, )
		9 : expr, .expr + term, ,
		10 : expr, .expr - term, ,
		11 : expr, .term, ,
		12 : expr, .expr + term, or
		13 : expr, .expr - term, or
		14 : expr, .term, or
		15 : expr, .expr + term, and
		16 : expr, .expr - term, and
		17 : expr, .term, and
		18 : expr, .expr + term, eq
		19 : expr, .expr - term, eq
		20 : expr, .term, eq
		21 : expr, .expr + term, neq
		22 : expr, .expr - term, neq
		23 : expr, .term, neq
		24 : expr, .expr + term, +
		25 : expr, .expr - term, +
		26 : expr, .term, +
		27 : expr, .expr + term, -
		28 : expr, .expr - term, -
		29 : expr, .term, -
		30 : term, .term * unary, )
		31 : term, .term / unary, )
		32 : term, .term mod unary, )
		33 : term, .unary, )
		34 : term, .term * unary, ,
		35 : term, .term / unary, ,
		36 : term, .term mod unary, ,
		37 : term, .unary, ,
		38 : term, .term * unary, or
		39 : term, .term / unary, or
		40 : term, .term mod unary, or
		41 : term, .unary, or
		42 : term, .term * unary, and
		43 : term, .term / unary, and
		44 : term, .term mod unary, and
		45 : term, .unary, and
		46 : term, .term * unary, eq
		47 : term, .term / unary, eq
		48 : term, .term mod unary, eq
		49 : term, .unary, eq
		50 : term, .term * unary, neq
		51 : term, .term / unary, neq
		52 : term, .term mod unary, neq
		53 : term, .unary, neq
		54 : term, .term * unary, +
		55 : term, .term / unary, +
		56 : term, .term mod unary, +
		57 : term, .unary, +
		58 : term, .term * unary, -
		59 : term, .term / unary, -
		60 : term, .term mod unary, -
		61 : term, .unary, -
		62 : term, .term * unary, *
		63 : term, .term / unary, *
		64 : term, .term mod unary, *
		65 : term, .unary, *
		66 : term, .term * unary, /
		67 : term, .term / unary, /
		68 : term, .term mod unary, /
		69 : term, .unary, /
		70 : term, .term * unary, mod
		71 : term, .term / unary, mod
		72 : term, .term mod unary, mod
		73 : term, .unary, mod
		74 : unary, .! unary, )
		75 : unary, .- unary, )
		76 : unary, .factor, )
		77 : unary, .! unary, ,
		78 : unary, .- unary, ,
		79 : unary, .factor, ,
		80 : unary, .! unary, or
		81 : unary, .- unary, or
		82 : unary, .factor, or
		83 : unary, .! unary, and
		84 : unary, .- unary, and
		85 : unary, .factor, and
		86 : unary, .! unary, eq
		87 : unary, .- unary, eq
		88 : unary, .factor, eq
		89 : unary, .! unary, neq
		90 : unary, .- unary, neq
		91 : unary, .factor, neq
		92 : unary, .! unary, +
		93 : unary, .- unary, +
		94 : unary, .factor, +
		95 : unary, .! unary, -
		96 : unary, .- unary, -
		97 : unary, .factor, -
		98 : unary, .! unary, *
		99 : unary, .- unary, *
		100 : unary, .factor, *
		101 : unary, .! unary, /
		102 : unary, .- unary, /
		103 : unary, .factor, /
		104 : unary, .! unary, mod
		105 : unary, .- unary, mod
		106 : unary, .factor, mod
		107 : factor, .( bool ), )
		108 : factor, .loc, )
		109 : factor, .id ( args ), )
		110 : factor, .num, )
		111 : factor, .real, )
		112 : factor, .true, )
		113 : factor, .false, )
		114 : factor, .( bool ), ,
		115 : factor, .loc, ,
		116 : factor, .id ( args ), ,
		117 : factor, .num, ,
		118 : factor, .real, ,
		119 : factor, .true, ,
		120 : factor, .false, ,
		121 : factor, .( bool ), or
		122 : factor, .loc, or
		123 : factor, .id ( args ), or
		124 : factor, .num, or
		125 : factor, .real, or
		126 : factor, .true, or
		127 : factor, .false, or
		128 : factor, .( bool ), and
		129 : factor, .loc, and
		130 : factor, .id ( args ), and
		131 : factor, .num, and
		132 : factor, .real, and
		133 : factor, .true, and
		134 : factor, .false, and
		135 : factor, .( bool ), eq
		136 : factor, .loc, eq
		137 : factor, .id ( args ), eq
		138 : factor, .num, eq
		139 : factor, .real, eq
		140 : factor, .true, eq
		141 : factor, .false, eq
		142 : factor, .( bool ), neq
		143 : factor, .loc, neq
		144 : factor, .id ( args ), neq
		145 : factor, .num, neq
		146 : factor, .real, neq
		147 : factor, .true, neq
		148 : factor, .false, neq
		149 : factor, .( bool ), +
		150 : factor, .loc, +
		151 : factor, .id ( args ), +
		152 : factor, .num, +
		153 : factor, .real, +
		154 : factor, .true, +
		155 : factor, .false, +
		156 : factor, .( bool ), -
		157 : factor, .loc, -
		158 : factor, .id ( args ), -
		159 : factor, .num, -
		160 : factor, .real, -
		161 : factor, .true, -
		162 : factor, .false, -
		163 : factor, .( bool ), *
		164 : factor, .loc, *
		165 : factor, .id ( args ), *
		166 : factor, .num, *
		167 : factor, .real, *
		168 : factor, .true, *
		169 : factor, .false, *
		170 : factor, .( bool ), /
		171 : factor, .loc, /
		172 : factor, .id ( args ), /
		173 : factor, .num, /
		174 : factor, .real, /
		175 : factor, .true, /
		176 : factor, .false, /
		177 : factor, .( bool ), mod
		178 : factor, .loc, mod
		179 : factor, .id ( args ), mod
		180 : factor, .num, mod
		181 : factor, .real, mod
		182 : factor, .true, mod
		183 : factor, .false, mod
		184 : loc, .loc [ bool ], )
		185 : loc, .id, )
		186 : loc, .loc [ bool ], ,
		187 : loc, .id, ,
		188 : loc, .loc [ bool ], or
		189 : loc, .id, or
		190 : loc, .loc [ bool ], and
		191 : loc, .id, and
		192 : loc, .loc [ bool ], eq
		193 : loc, .id, eq
		194 : loc, .loc [ bool ], neq
		195 : loc, .id, neq
		196 : loc, .loc [ bool ], +
		197 : loc, .id, +
		198 : loc, .loc [ bool ], -
		199 : loc, .id, -
		200 : loc, .loc [ bool ], *
		201 : loc, .id, *
		202 : loc, .loc [ bool ], /
		203 : loc, .id, /
		204 : loc, .loc [ bool ], mod
		205 : loc, .id, mod
		206 : loc, .loc [ bool ], [
		207 : loc, .id, [
	[309] 
		0 : rel, expr > .expr, )
		1 : rel, expr > .expr, ,
		2 : rel, expr > .expr, or
		3 : rel, expr > .expr, and
		4 : rel, expr > .expr, eq
		5 : rel, expr > .expr, neq
		6 : expr, .expr + term, )
		7 : expr, .expr - term, )
		8 : expr, .term, )
		9 : expr, .expr + term, ,
		10 : expr, .expr - term, ,
		11 : expr, .term, ,
		12 : expr, .expr + term, or
		13 : expr, .expr - term, or
		14 : expr, .term, or
		15 : expr, .expr + term, and
		16 : expr, .expr - term, and
		17 : expr, .term, and
		18 : expr, .expr + term, eq
		19 : expr, .expr - term, eq
		20 : expr, .term, eq
		21 : expr, .expr + term, neq
		22 : expr, .expr - term, neq
		23 : expr, .term, neq
		24 : expr, .expr + term, +
		25 : expr, .expr - term, +
		26 : expr, .term, +
		27 : expr, .expr + term, -
		28 : expr, .expr - term, -
		29 : expr, .term, -
		30 : term, .term * unary, )
		31 : term, .term / unary, )
		32 : term, .term mod unary, )
		33 : term, .unary, )
		34 : term, .term * unary, ,
		35 : term, .term / unary, ,
		36 : term, .term mod unary, ,
		37 : term, .unary, ,
		38 : term, .term * unary, or
		39 : term, .term / unary, or
		40 : term, .term mod unary, or
		41 : term, .unary, or
		42 : term, .term * unary, and
		43 : term, .term / unary, and
		44 : term, .term mod unary, and
		45 : term, .unary, and
		46 : term, .term * unary, eq
		47 : term, .term / unary, eq
		48 : term, .term mod unary, eq
		49 : term, .unary, eq
		50 : term, .term * unary, neq
		51 : term, .term / unary, neq
		52 : term, .term mod unary, neq
		53 : term, .unary, neq
		54 : term, .term * unary, +
		55 : term, .term / unary, +
		56 : term, .term mod unary, +
		57 : term, .unary, +
		58 : term, .term * unary, -
		59 : term, .term / unary, -
		60 : term, .term mod unary, -
		61 : term, .unary, -
		62 : term, .term * unary, *
		63 : term, .term / unary, *
		64 : term, .term mod unary, *
		65 : term, .unary, *
		66 : term, .term * unary, /
		67 : term, .term / unary, /
		68 : term, .term mod unary, /
		69 : term, .unary, /
		70 : term, .term * unary, mod
		71 : term, .term / unary, mod
		72 : term, .term mod unary, mod
		73 : term, .unary, mod
		74 : unary, .! unary, )
		75 : unary, .- unary, )
		76 : unary, .factor, )
		77 : unary, .! unary, ,
		78 : unary, .- unary, ,
		79 : unary, .factor, ,
		80 : unary, .! unary, or
		81 : unary, .- unary, or
		82 : unary, .factor, or
		83 : unary, .! unary, and
		84 : unary, .- unary, and
		85 : unary, .factor, and
		86 : unary, .! unary, eq
		87 : unary, .- unary, eq
		88 : unary, .factor, eq
		89 : unary, .! unary, neq
		90 : unary, .- unary, neq
		91 : unary, .factor, neq
		92 : unary, .! unary, +
		93 : unary, .- unary, +
		94 : unary, .factor, +
		95 : unary, .! unary, -
		96 : unary, .- unary, -
		97 : unary, .factor, -
		98 : unary, .! unary, *
		99 : unary, .- unary, *
		100 : unary, .factor, *
		101 : unary, .! unary, /
		102 : unary, .- unary, /
		103 : unary, .factor, /
		104 : unary, .! unary, mod
		105 : unary, .- unary, mod
		106 : unary, .factor, mod
		107 : factor, .( bool ), )
		108 : factor, .loc, )
		109 : factor, .id ( args ), )
		110 : factor, .num, )
		111 : factor, .real, )
		112 : factor, .true, )
		113 : factor, .false, )
		114 : factor, .( bool ), ,
		115 : factor, .loc, ,
		116 : factor, .id ( args ), ,
		117 : factor, .num, ,
		118 : factor, .real, ,
		119 : factor, .true, ,
		120 : factor, .false, ,
		121 : factor, .( bool ), or
		122 : factor, .loc, or
		123 : factor, .id ( args ), or
		124 : factor, .num, or
		125 : factor, .real, or
		126 : factor, .true, or
		127 : factor, .false, or
		128 : factor, .( bool ), and
		129 : factor, .loc, and
		130 : factor, .id ( args ), and
		131 : factor, .num, and
		132 : factor, .real, and
		133 : factor, .true, and
		134 : factor, .false, and
		135 : factor, .( bool ), eq
		136 : factor, .loc, eq
		137 : factor, .id ( args ), eq
		138 : factor, .num, eq
		139 : factor, .real, eq
		140 : factor, .true, eq
		141 : factor, .false, eq
		142 : factor, .( bool ), neq
		143 : factor, .loc, neq
		144 : factor, .id ( args ), neq
		145 : factor, .num, neq
		146 : factor, .real, neq
		147 : factor, .true, neq
		148 : factor, .false, neq
		149 : factor, .( bool ), +
		150 : factor, .loc, +
		151 : factor, .id ( args ), +
		152 : factor, .num, +
		153 : factor, .real, +
		154 : factor, .true, +
		155 : factor, .false, +
		156 : factor, .( bool ), -
		157 : factor, .loc, -
		158 : factor, .id ( args ), -
		159 : factor, .num, -
		160 : factor, .real, -
		161 : factor, .true, -
		162 : factor, .false, -
		163 : factor, .( bool ), *
		164 : factor, .loc, *
		165 : factor, .id ( args ), *
		166 : factor, .num, *
		167 : factor, .real, *
		168 : factor, .true, *
		169 : factor, .false, *
		170 : factor, .( bool ), /
		171 : factor, .loc, /
		172 : factor, .id ( args ), /
		173 : factor, .num, /
		174 : factor, .real, /
		175 : factor, .true, /
		176 : factor, .false, /
		177 : factor, .( bool ), mod
		178 : factor, .loc, mod
		179 : factor, .id ( args ), mod
		180 : factor, .num, mod
		181 : factor, .real, mod
		182 : factor, .true, mod
		183 : factor, .false, mod
		184 : loc, .loc [ bool ], )
		185 : loc, .id, )
		186 : loc, .loc [ bool ], ,
		187 : loc, .id, ,
		188 : loc, .loc [ bool ], or
		189 : loc, .id, or
		190 : loc, .loc [ bool ], and
		191 : loc, .id, and
		192 : loc, .loc [ bool ], eq
		193 : loc, .id, eq
		194 : loc, .loc [ bool ], neq
		195 : loc, .id, neq
		196 : loc, .loc [ bool ], +
		197 : loc, .id, +
		198 : loc, .loc [ bool ], -
		199 : loc, .id, -
		200 : loc, .loc [ bool ], *
		201 : loc, .id, *
		202 : loc, .loc [ bool ], /
		203 : loc, .id, /
		204 : loc, .loc [ bool ], mod
		205 : loc, .id, mod
		206 : loc, .loc [ bool ], [
		207 : loc, .id, [
	[310] 
		0 : expr, expr + .term, <
		1 : expr, expr + .term, <=
		2 : expr, expr + .term, >=
		3 : expr, expr + .term, >
		4 : expr, expr + .term, )
		5 : expr, expr + .term, ,
		6 : expr, expr + .term, or
		7 : expr, expr + .term, and
		8 : expr, expr + .term, eq
		9 : expr, expr + .term, neq
		10 : expr, expr + .term, +
		11 : expr, expr + .term, -
		12 : term, .term * unary, <
		13 : term, .term / unary, <
		14 : term, .term mod unary, <
		15 : term, .unary, <
		16 : term, .term * unary, <=
		17 : term, .term / unary, <=
		18 : term, .term mod unary, <=
		19 : term, .unary, <=
		20 : term, .term * unary, >=
		21 : term, .term / unary, >=
		22 : term, .term mod unary, >=
		23 : term, .unary, >=
		24 : term, .term * unary, >
		25 : term, .term / unary, >
		26 : term, .term mod unary, >
		27 : term, .unary, >
		28 : term, .term * unary, )
		29 : term, .term / unary, )
		30 : term, .term mod unary, )
		31 : term, .unary, )
		32 : term, .term * unary, ,
		33 : term, .term / unary, ,
		34 : term, .term mod unary, ,
		35 : term, .unary, ,
		36 : term, .term * unary, or
		37 : term, .term / unary, or
		38 : term, .term mod unary, or
		39 : term, .unary, or
		40 : term, .term * unary, and
		41 : term, .term / unary, and
		42 : term, .term mod unary, and
		43 : term, .unary, and
		44 : term, .term * unary, eq
		45 : term, .term / unary, eq
		46 : term, .term mod unary, eq
		47 : term, .unary, eq
		48 : term, .term * unary, neq
		49 : term, .term / unary, neq
		50 : term, .term mod unary, neq
		51 : term, .unary, neq
		52 : term, .term * unary, +
		53 : term, .term / unary, +
		54 : term, .term mod unary, +
		55 : term, .unary, +
		56 : term, .term * unary, -
		57 : term, .term / unary, -
		58 : term, .term mod unary, -
		59 : term, .unary, -
		60 : term, .term * unary, *
		61 : term, .term / unary, *
		62 : term, .term mod unary, *
		63 : term, .unary, *
		64 : term, .term * unary, /
		65 : term, .term / unary, /
		66 : term, .term mod unary, /
		67 : term, .unary, /
		68 : term, .term * unary, mod
		69 : term, .term / unary, mod
		70 : term, .term mod unary, mod
		71 : term, .unary, mod
		72 : unary, .! unary, <
		73 : unary, .- unary, <
		74 : unary, .factor, <
		75 : unary, .! unary, <=
		76 : unary, .- unary, <=
		77 : unary, .factor, <=
		78 : unary, .! unary, >=
		79 : unary, .- unary, >=
		80 : unary, .factor, >=
		81 : unary, .! unary, >
		82 : unary, .- unary, >
		83 : unary, .factor, >
		84 : unary, .! unary, )
		85 : unary, .- unary, )
		86 : unary, .factor, )
		87 : unary, .! unary, ,
		88 : unary, .- unary, ,
		89 : unary, .factor, ,
		90 : unary, .! unary, or
		91 : unary, .- unary, or
		92 : unary, .factor, or
		93 : unary, .! unary, and
		94 : unary, .- unary, and
		95 : unary, .factor, and
		96 : unary, .! unary, eq
		97 : unary, .- unary, eq
		98 : unary, .factor, eq
		99 : unary, .! unary, neq
		100 : unary, .- unary, neq
		101 : unary, .factor, neq
		102 : unary, .! unary, +
		103 : unary, .- unary, +
		104 : unary, .factor, +
		105 : unary, .! unary, -
		106 : unary, .- unary, -
		107 : unary, .factor, -
		108 : unary, .! unary, *
		109 : unary, .- unary, *
		110 : unary, .factor, *
		111 : unary, .! unary, /
		112 : unary, .- unary, /
		113 : unary, .factor, /
		114 : unary, .! unary, mod
		115 : unary, .- unary, mod
		116 : unary, .factor, mod
		117 : factor, .( bool ), <
		118 : factor, .loc, <
		119 : factor, .id ( args ), <
		120 : factor, .num, <
		121 : factor, .real, <
		122 : factor, .true, <
		123 : factor, .false, <
		124 : factor, .( bool ), <=
		125 : factor, .loc, <=
		126 : factor, .id ( args ), <=
		127 : factor, .num, <=
		128 : factor, .real, <=
		129 : factor, .true, <=
		130 : factor, .false, <=
		131 : factor, .( bool ), >=
		132 : factor, .loc, >=
		133 : factor, .id ( args ), >=
		134 : factor, .num, >=
		135 : factor, .real, >=
		136 : factor, .true, >=
		137 : factor, .false, >=
		138 : factor, .( bool ), >
		139 : factor, .loc, >
		140 : factor, .id ( args ), >
		141 : factor, .num, >
		142 : factor, .real, >
		143 : factor, .true, >
		144 : factor, .false, >
		145 : factor, .( bool ), )
		146 : factor, .loc, )
		147 : factor, .id ( args ), )
		148 : factor, .num, )
		149 : factor, .real, )
		150 : factor, .true, )
		151 : factor, .false, )
		152 : factor, .( bool ), ,
		153 : factor, .loc, ,
		154 : factor, .id ( args ), ,
		155 : factor, .num, ,
		156 : factor, .real, ,
		157 : factor, .true, ,
		158 : factor, .false, ,
		159 : factor, .( bool ), or
		160 : factor, .loc, or
		161 : factor, .id ( args ), or
		162 : factor, .num, or
		163 : factor, .real, or
		164 : factor, .true, or
		165 : factor, .false, or
		166 : factor, .( bool ), and
		167 : factor, .loc, and
		168 : factor, .id ( args ), and
		169 : factor, .num, and
		170 : factor, .real, and
		171 : factor, .true, and
		172 : factor, .false, and
		173 : factor, .( bool ), eq
		174 : factor, .loc, eq
		175 : factor, .id ( args ), eq
		176 : factor, .num, eq
		177 : factor, .real, eq
		178 : factor, .true, eq
		179 : factor, .false, eq
		180 : factor, .( bool ), neq
		181 : factor, .loc, neq
		182 : factor, .id ( args ), neq
		183 : factor, .num, neq
		184 : factor, .real, neq
		185 : factor, .true, neq
		186 : factor, .false, neq
		187 : factor, .( bool ), +
		188 : factor, .loc, +
		189 : factor, .id ( args ), +
		190 : factor, .num, +
		191 : factor, .real, +
		192 : factor, .true, +
		193 : factor, .false, +
		194 : factor, .( bool ), -
		195 : factor, .loc, -
		196 : factor, .id ( args ), -
		197 : factor, .num, -
		198 : factor, .real, -
		199 : factor, .true, -
		200 : factor, .false, -
		201 : factor, .( bool ), *
		202 : factor, .loc, *
		203 : factor, .id ( args ), *
		204 : factor, .num, *
		205 : factor, .real, *
		206 : factor, .true, *
		207 : factor, .false, *
		208 : factor, .( bool ), /
		209 : factor, .loc, /
		210 : factor, .id ( args ), /
		211 : factor, .num, /
		212 : factor, .real, /
		213 : factor, .true, /
		214 : factor, .false, /
		215 : factor, .( bool ), mod
		216 : factor, .loc, mod
		217 : factor, .id ( args ), mod
		218 : factor, .num, mod
		219 : factor, .real, mod
		220 : factor, .true, mod
		221 : factor, .false, mod
		222 : loc, .loc [ bool ], <
		223 : loc, .id, <
		224 : loc, .loc [ bool ], <=
		225 : loc, .id, <=
		226 : loc, .loc [ bool ], >=
		227 : loc, .id, >=
		228 : loc, .loc [ bool ], >
		229 : loc, .id, >
		230 : loc, .loc [ bool ], )
		231 : loc, .id, )
		232 : loc, .loc [ bool ], ,
		233 : loc, .id, ,
		234 : loc, .loc [ bool ], or
		235 : loc, .id, or
		236 : loc, .loc [ bool ], and
		237 : loc, .id, and
		238 : loc, .loc [ bool ], eq
		239 : loc, .id, eq
		240 : loc, .loc [ bool ], neq
		241 : loc, .id, neq
		242 : loc, .loc [ bool ], +
		243 : loc, .id, +
		244 : loc, .loc [ bool ], -
		245 : loc, .id, -
		246 : loc, .loc [ bool ], *
		247 : loc, .id, *
		248 : loc, .loc [ bool ], /
		249 : loc, .id, /
		250 : loc, .loc [ bool ], mod
		251 : loc, .id, mod
		252 : loc, .loc [ bool ], [
		253 : loc, .id, [
	[311] 
		0 : expr, expr - .term, <
		1 : expr, expr - .term, <=
		2 : expr, expr - .term, >=
		3 : expr, expr - .term, >
		4 : expr, expr - .term, )
		5 : expr, expr - .term, ,
		6 : expr, expr - .term, or
		7 : expr, expr - .term, and
		8 : expr, expr - .term, eq
		9 : expr, expr - .term, neq
		10 : expr, expr - .term, +
		11 : expr, expr - .term, -
		12 : term, .term * unary, <
		13 : term, .term / unary, <
		14 : term, .term mod unary, <
		15 : term, .unary, <
		16 : term, .term * unary, <=
		17 : term, .term / unary, <=
		18 : term, .term mod unary, <=
		19 : term, .unary, <=
		20 : term, .term * unary, >=
		21 : term, .term / unary, >=
		22 : term, .term mod unary, >=
		23 : term, .unary, >=
		24 : term, .term * unary, >
		25 : term, .term / unary, >
		26 : term, .term mod unary, >
		27 : term, .unary, >
		28 : term, .term * unary, )
		29 : term, .term / unary, )
		30 : term, .term mod unary, )
		31 : term, .unary, )
		32 : term, .term * unary, ,
		33 : term, .term / unary, ,
		34 : term, .term mod unary, ,
		35 : term, .unary, ,
		36 : term, .term * unary, or
		37 : term, .term / unary, or
		38 : term, .term mod unary, or
		39 : term, .unary, or
		40 : term, .term * unary, and
		41 : term, .term / unary, and
		42 : term, .term mod unary, and
		43 : term, .unary, and
		44 : term, .term * unary, eq
		45 : term, .term / unary, eq
		46 : term, .term mod unary, eq
		47 : term, .unary, eq
		48 : term, .term * unary, neq
		49 : term, .term / unary, neq
		50 : term, .term mod unary, neq
		51 : term, .unary, neq
		52 : term, .term * unary, +
		53 : term, .term / unary, +
		54 : term, .term mod unary, +
		55 : term, .unary, +
		56 : term, .term * unary, -
		57 : term, .term / unary, -
		58 : term, .term mod unary, -
		59 : term, .unary, -
		60 : term, .term * unary, *
		61 : term, .term / unary, *
		62 : term, .term mod unary, *
		63 : term, .unary, *
		64 : term, .term * unary, /
		65 : term, .term / unary, /
		66 : term, .term mod unary, /
		67 : term, .unary, /
		68 : term, .term * unary, mod
		69 : term, .term / unary, mod
		70 : term, .term mod unary, mod
		71 : term, .unary, mod
		72 : unary, .! unary, <
		73 : unary, .- unary, <
		74 : unary, .factor, <
		75 : unary, .! unary, <=
		76 : unary, .- unary, <=
		77 : unary, .factor, <=
		78 : unary, .! unary, >=
		79 : unary, .- unary, >=
		80 : unary, .factor, >=
		81 : unary, .! unary, >
		82 : unary, .- unary, >
		83 : unary, .factor, >
		84 : unary, .! unary, )
		85 : unary, .- unary, )
		86 : unary, .factor, )
		87 : unary, .! unary, ,
		88 : unary, .- unary, ,
		89 : unary, .factor, ,
		90 : unary, .! unary, or
		91 : unary, .- unary, or
		92 : unary, .factor, or
		93 : unary, .! unary, and
		94 : unary, .- unary, and
		95 : unary, .factor, and
		96 : unary, .! unary, eq
		97 : unary, .- unary, eq
		98 : unary, .factor, eq
		99 : unary, .! unary, neq
		100 : unary, .- unary, neq
		101 : unary, .factor, neq
		102 : unary, .! unary, +
		103 : unary, .- unary, +
		104 : unary, .factor, +
		105 : unary, .! unary, -
		106 : unary, .- unary, -
		107 : unary, .factor, -
		108 : unary, .! unary, *
		109 : unary, .- unary, *
		110 : unary, .factor, *
		111 : unary, .! unary, /
		112 : unary, .- unary, /
		113 : unary, .factor, /
		114 : unary, .! unary, mod
		115 : unary, .- unary, mod
		116 : unary, .factor, mod
		117 : factor, .( bool ), <
		118 : factor, .loc, <
		119 : factor, .id ( args ), <
		120 : factor, .num, <
		121 : factor, .real, <
		122 : factor, .true, <
		123 : factor, .false, <
		124 : factor, .( bool ), <=
		125 : factor, .loc, <=
		126 : factor, .id ( args ), <=
		127 : factor, .num, <=
		128 : factor, .real, <=
		129 : factor, .true, <=
		130 : factor, .false, <=
		131 : factor, .( bool ), >=
		132 : factor, .loc, >=
		133 : factor, .id ( args ), >=
		134 : factor, .num, >=
		135 : factor, .real, >=
		136 : factor, .true, >=
		137 : factor, .false, >=
		138 : factor, .( bool ), >
		139 : factor, .loc, >
		140 : factor, .id ( args ), >
		141 : factor, .num, >
		142 : factor, .real, >
		143 : factor, .true, >
		144 : factor, .false, >
		145 : factor, .( bool ), )
		146 : factor, .loc, )
		147 : factor, .id ( args ), )
		148 : factor, .num, )
		149 : factor, .real, )
		150 : factor, .true, )
		151 : factor, .false, )
		152 : factor, .( bool ), ,
		153 : factor, .loc, ,
		154 : factor, .id ( args ), ,
		155 : factor, .num, ,
		156 : factor, .real, ,
		157 : factor, .true, ,
		158 : factor, .false, ,
		159 : factor, .( bool ), or
		160 : factor, .loc, or
		161 : factor, .id ( args ), or
		162 : factor, .num, or
		163 : factor, .real, or
		164 : factor, .true, or
		165 : factor, .false, or
		166 : factor, .( bool ), and
		167 : factor, .loc, and
		168 : factor, .id ( args ), and
		169 : factor, .num, and
		170 : factor, .real, and
		171 : factor, .true, and
		172 : factor, .false, and
		173 : factor, .( bool ), eq
		174 : factor, .loc, eq
		175 : factor, .id ( args ), eq
		176 : factor, .num, eq
		177 : factor, .real, eq
		178 : factor, .true, eq
		179 : factor, .false, eq
		180 : factor, .( bool ), neq
		181 : factor, .loc, neq
		182 : factor, .id ( args ), neq
		183 : factor, .num, neq
		184 : factor, .real, neq
		185 : factor, .true, neq
		186 : factor, .false, neq
		187 : factor, .( bool ), +
		188 : factor, .loc, +
		189 : factor, .id ( args ), +
		190 : factor, .num, +
		191 : factor, .real, +
		192 : factor, .true, +
		193 : factor, .false, +
		194 : factor, .( bool ), -
		195 : factor, .loc, -
		196 : factor, .id ( args ), -
		197 : factor, .num, -
		198 : factor, .real, -
		199 : factor, .true, -
		200 : factor, .false, -
		201 : factor, .( bool ), *
		202 : factor, .loc, *
		203 : factor, .id ( args ), *
		204 : factor, .num, *
		205 : factor, .real, *
		206 : factor, .true, *
		207 : factor, .false, *
		208 : factor, .( bool ), /
		209 : factor, .loc, /
		210 : factor, .id ( args ), /
		211 : factor, .num, /
		212 : factor, .real, /
		213 : factor, .true, /
		214 : factor, .false, /
		215 : factor, .( bool ), mod
		216 : factor, .loc, mod
		217 : factor, .id ( args ), mod
		218 : factor, .num, mod
		219 : factor, .real, mod
		220 : factor, .true, mod
		221 : factor, .false, mod
		222 : loc, .loc [ bool ], <
		223 : loc, .id, <
		224 : loc, .loc [ bool ], <=
		225 : loc, .id, <=
		226 : loc, .loc [ bool ], >=
		227 : loc, .id, >=
		228 : loc, .loc [ bool ], >
		229 : loc, .id, >
		230 : loc, .loc [ bool ], )
		231 : loc, .id, )
		232 : loc, .loc [ bool ], ,
		233 : loc, .id, ,
		234 : loc, .loc [ bool ], or
		235 : loc, .id, or
		236 : loc, .loc [ bool ], and
		237 : loc, .id, and
		238 : loc, .loc [ bool ], eq
		239 : loc, .id, eq
		240 : loc, .loc [ bool ], neq
		241 : loc, .id, neq
		242 : loc, .loc [ bool ], +
		243 : loc, .id, +
		244 : loc, .loc [ bool ], -
		245 : loc, .id, -
		246 : loc, .loc [ bool ], *
		247 : loc, .id, *
		248 : loc, .loc [ bool ], /
		249 : loc, .id, /
		250 : loc, .loc [ bool ], mod
		251 : loc, .id, mod
		252 : loc, .loc [ bool ], [
		253 : loc, .id, [
	[312] 
		0 : term, term * .unary, <
		1 : term, term * .unary, <=
		2 : term, term * .unary, >=
		3 : term, term * .unary, >
		4 : term, term * .unary, )
		5 : term, term * .unary, ,
		6 : term, term * .unary, or
		7 : term, term * .unary, and
		8 : term, term * .unary, eq
		9 : term, term * .unary, neq
		10 : term, term * .unary, +
		11 : term, term * .unary, -
		12 : term, term * .unary, *
		13 : term, term * .unary, /
		14 : term, term * .unary, mod
		15 : unary, .! unary, <
		16 : unary, .- unary, <
		17 : unary, .factor, <
		18 : unary, .! unary, <=
		19 : unary, .- unary, <=
		20 : unary, .factor, <=
		21 : unary, .! unary, >=
		22 : unary, .- unary, >=
		23 : unary, .factor, >=
		24 : unary, .! unary, >
		25 : unary, .- unary, >
		26 : unary, .factor, >
		27 : unary, .! unary, )
		28 : unary, .- unary, )
		29 : unary, .factor, )
		30 : unary, .! unary, ,
		31 : unary, .- unary, ,
		32 : unary, .factor, ,
		33 : unary, .! unary, or
		34 : unary, .- unary, or
		35 : unary, .factor, or
		36 : unary, .! unary, and
		37 : unary, .- unary, and
		38 : unary, .factor, and
		39 : unary, .! unary, eq
		40 : unary, .- unary, eq
		41 : unary, .factor, eq
		42 : unary, .! unary, neq
		43 : unary, .- unary, neq
		44 : unary, .factor, neq
		45 : unary, .! unary, +
		46 : unary, .- unary, +
		47 : unary, .factor, +
		48 : unary, .! unary, -
		49 : unary, .- unary, -
		50 : unary, .factor, -
		51 : unary, .! unary, *
		52 : unary, .- unary, *
		53 : unary, .factor, *
		54 : unary, .! unary, /
		55 : unary, .- unary, /
		56 : unary, .factor, /
		57 : unary, .! unary, mod
		58 : unary, .- unary, mod
		59 : unary, .factor, mod
		60 : factor, .( bool ), <
		61 : factor, .loc, <
		62 : factor, .id ( args ), <
		63 : factor, .num, <
		64 : factor, .real, <
		65 : factor, .true, <
		66 : factor, .false, <
		67 : factor, .( bool ), <=
		68 : factor, .loc, <=
		69 : factor, .id ( args ), <=
		70 : factor, .num, <=
		71 : factor, .real, <=
		72 : factor, .true, <=
		73 : factor, .false, <=
		74 : factor, .( bool ), >=
		75 : factor, .loc, >=
		76 : factor, .id ( args ), >=
		77 : factor, .num, >=
		78 : factor, .real, >=
		79 : factor, .true, >=
		80 : factor, .false, >=
		81 : factor, .( bool ), >
		82 : factor, .loc, >
		83 : factor, .id ( args ), >
		84 : factor, .num, >
		85 : factor, .real, >
		86 : factor, .true, >
		87 : factor, .false, >
		88 : factor, .( bool ), )
		89 : factor, .loc, )
		90 : factor, .id ( args ), )
		91 : factor, .num, )
		92 : factor, .real, )
		93 : factor, .true, )
		94 : factor, .false, )
		95 : factor, .( bool ), ,
		96 : factor, .loc, ,
		97 : factor, .id ( args ), ,
		98 : factor, .num, ,
		99 : factor, .real, ,
		100 : factor, .true, ,
		101 : factor, .false, ,
		102 : factor, .( bool ), or
		103 : factor, .loc, or
		104 : factor, .id ( args ), or
		105 : factor, .num, or
		106 : factor, .real, or
		107 : factor, .true, or
		108 : factor, .false, or
		109 : factor, .( bool ), and
		110 : factor, .loc, and
		111 : factor, .id ( args ), and
		112 : factor, .num, and
		113 : factor, .real, and
		114 : factor, .true, and
		115 : factor, .false, and
		116 : factor, .( bool ), eq
		117 : factor, .loc, eq
		118 : factor, .id ( args ), eq
		119 : factor, .num, eq
		120 : factor, .real, eq
		121 : factor, .true, eq
		122 : factor, .false, eq
		123 : factor, .( bool ), neq
		124 : factor, .loc, neq
		125 : factor, .id ( args ), neq
		126 : factor, .num, neq
		127 : factor, .real, neq
		128 : factor, .true, neq
		129 : factor, .false, neq
		130 : factor, .( bool ), +
		131 : factor, .loc, +
		132 : factor, .id ( args ), +
		133 : factor, .num, +
		134 : factor, .real, +
		135 : factor, .true, +
		136 : factor, .false, +
		137 : factor, .( bool ), -
		138 : factor, .loc, -
		139 : factor, .id ( args ), -
		140 : factor, .num, -
		141 : factor, .real, -
		142 : factor, .true, -
		143 : factor, .false, -
		144 : factor, .( bool ), *
		145 : factor, .loc, *
		146 : factor, .id ( args ), *
		147 : factor, .num, *
		148 : factor, .real, *
		149 : factor, .true, *
		150 : factor, .false, *
		151 : factor, .( bool ), /
		152 : factor, .loc, /
		153 : factor, .id ( args ), /
		154 : factor, .num, /
		155 : factor, .real, /
		156 : factor, .true, /
		157 : factor, .false, /
		158 : factor, .( bool ), mod
		159 : factor, .loc, mod
		160 : factor, .id ( args ), mod
		161 : factor, .num, mod
		162 : factor, .real, mod
		163 : factor, .true, mod
		164 : factor, .false, mod
		165 : loc, .loc [ bool ], <
		166 : loc, .id, <
		167 : loc, .loc [ bool ], <=
		168 : loc, .id, <=
		169 : loc, .loc [ bool ], >=
		170 : loc, .id, >=
		171 : loc, .loc [ bool ], >
		172 : loc, .id, >
		173 : loc, .loc [ bool ], )
		174 : loc, .id, )
		175 : loc, .loc [ bool ], ,
		176 : loc, .id, ,
		177 : loc, .loc [ bool ], or
		178 : loc, .id, or
		179 : loc, .loc [ bool ], and
		180 : loc, .id, and
		181 : loc, .loc [ bool ], eq
		182 : loc, .id, eq
		183 : loc, .loc [ bool ], neq
		184 : loc, .id, neq
		185 : loc, .loc [ bool ], +
		186 : loc, .id, +
		187 : loc, .loc [ bool ], -
		188 : loc, .id, -
		189 : loc, .loc [ bool ], *
		190 : loc, .id, *
		191 : loc, .loc [ bool ], /
		192 : loc, .id, /
		193 : loc, .loc [ bool ], mod
		194 : loc, .id, mod
		195 : loc, .loc [ bool ], [
		196 : loc, .id, [
	[313] 
		0 : term, term / .unary, <
		1 : term, term / .unary, <=
		2 : term, term / .unary, >=
		3 : term, term / .unary, >
		4 : term, term / .unary, )
		5 : term, term / .unary, ,
		6 : term, term / .unary, or
		7 : term, term / .unary, and
		8 : term, term / .unary, eq
		9 : term, term / .unary, neq
		10 : term, term / .unary, +
		11 : term, term / .unary, -
		12 : term, term / .unary, *
		13 : term, term / .unary, /
		14 : term, term / .unary, mod
		15 : unary, .! unary, <
		16 : unary, .- unary, <
		17 : unary, .factor, <
		18 : unary, .! unary, <=
		19 : unary, .- unary, <=
		20 : unary, .factor, <=
		21 : unary, .! unary, >=
		22 : unary, .- unary, >=
		23 : unary, .factor, >=
		24 : unary, .! unary, >
		25 : unary, .- unary, >
		26 : unary, .factor, >
		27 : unary, .! unary, )
		28 : unary, .- unary, )
		29 : unary, .factor, )
		30 : unary, .! unary, ,
		31 : unary, .- unary, ,
		32 : unary, .factor, ,
		33 : unary, .! unary, or
		34 : unary, .- unary, or
		35 : unary, .factor, or
		36 : unary, .! unary, and
		37 : unary, .- unary, and
		38 : unary, .factor, and
		39 : unary, .! unary, eq
		40 : unary, .- unary, eq
		41 : unary, .factor, eq
		42 : unary, .! unary, neq
		43 : unary, .- unary, neq
		44 : unary, .factor, neq
		45 : unary, .! unary, +
		46 : unary, .- unary, +
		47 : unary, .factor, +
		48 : unary, .! unary, -
		49 : unary, .- unary, -
		50 : unary, .factor, -
		51 : unary, .! unary, *
		52 : unary, .- unary, *
		53 : unary, .factor, *
		54 : unary, .! unary, /
		55 : unary, .- unary, /
		56 : unary, .factor, /
		57 : unary, .! unary, mod
		58 : unary, .- unary, mod
		59 : unary, .factor, mod
		60 : factor, .( bool ), <
		61 : factor, .loc, <
		62 : factor, .id ( args ), <
		63 : factor, .num, <
		64 : factor, .real, <
		65 : factor, .true, <
		66 : factor, .false, <
		67 : factor, .( bool ), <=
		68 : factor, .loc, <=
		69 : factor, .id ( args ), <=
		70 : factor, .num, <=
		71 : factor, .real, <=
		72 : factor, .true, <=
		73 : factor, .false, <=
		74 : factor, .( bool ), >=
		75 : factor, .loc, >=
		76 : factor, .id ( args ), >=
		77 : factor, .num, >=
		78 : factor, .real, >=
		79 : factor, .true, >=
		80 : factor, .false, >=
		81 : factor, .( bool ), >
		82 : factor, .loc, >
		83 : factor, .id ( args ), >
		84 : factor, .num, >
		85 : factor, .real, >
		86 : factor, .true, >
		87 : factor, .false, >
		88 : factor, .( bool ), )
		89 : factor, .loc, )
		90 : factor, .id ( args ), )
		91 : factor, .num, )
		92 : factor, .real, )
		93 : factor, .true, )
		94 : factor, .false, )
		95 : factor, .( bool ), ,
		96 : factor, .loc, ,
		97 : factor, .id ( args ), ,
		98 : factor, .num, ,
		99 : factor, .real, ,
		100 : factor, .true, ,
		101 : factor, .false, ,
		102 : factor, .( bool ), or
		103 : factor, .loc, or
		104 : factor, .id ( args ), or
		105 : factor, .num, or
		106 : factor, .real, or
		107 : factor, .true, or
		108 : factor, .false, or
		109 : factor, .( bool ), and
		110 : factor, .loc, and
		111 : factor, .id ( args ), and
		112 : factor, .num, and
		113 : factor, .real, and
		114 : factor, .true, and
		115 : factor, .false, and
		116 : factor, .( bool ), eq
		117 : factor, .loc, eq
		118 : factor, .id ( args ), eq
		119 : factor, .num, eq
		120 : factor, .real, eq
		121 : factor, .true, eq
		122 : factor, .false, eq
		123 : factor, .( bool ), neq
		124 : factor, .loc, neq
		125 : factor, .id ( args ), neq
		126 : factor, .num, neq
		127 : factor, .real, neq
		128 : factor, .true, neq
		129 : factor, .false, neq
		130 : factor, .( bool ), +
		131 : factor, .loc, +
		132 : factor, .id ( args ), +
		133 : factor, .num, +
		134 : factor, .real, +
		135 : factor, .true, +
		136 : factor, .false, +
		137 : factor, .( bool ), -
		138 : factor, .loc, -
		139 : factor, .id ( args ), -
		140 : factor, .num, -
		141 : factor, .real, -
		142 : factor, .true, -
		143 : factor, .false, -
		144 : factor, .( bool ), *
		145 : factor, .loc, *
		146 : factor, .id ( args ), *
		147 : factor, .num, *
		148 : factor, .real, *
		149 : factor, .true, *
		150 : factor, .false, *
		151 : factor, .( bool ), /
		152 : factor, .loc, /
		153 : factor, .id ( args ), /
		154 : factor, .num, /
		155 : factor, .real, /
		156 : factor, .true, /
		157 : factor, .false, /
		158 : factor, .( bool ), mod
		159 : factor, .loc, mod
		160 : factor, .id ( args ), mod
		161 : factor, .num, mod
		162 : factor, .real, mod
		163 : factor, .true, mod
		164 : factor, .false, mod
		165 : loc, .loc [ bool ], <
		166 : loc, .id, <
		167 : loc, .loc [ bool ], <=
		168 : loc, .id, <=
		169 : loc, .loc [ bool ], >=
		170 : loc, .id, >=
		171 : loc, .loc [ bool ], >
		172 : loc, .id, >
		173 : loc, .loc [ bool ], )
		174 : loc, .id, )
		175 : loc, .loc [ bool ], ,
		176 : loc, .id, ,
		177 : loc, .loc [ bool ], or
		178 : loc, .id, or
		179 : loc, .loc [ bool ], and
		180 : loc, .id, and
		181 : loc, .loc [ bool ], eq
		182 : loc, .id, eq
		183 : loc, .loc [ bool ], neq
		184 : loc, .id, neq
		185 : loc, .loc [ bool ], +
		186 : loc, .id, +
		187 : loc, .loc [ bool ], -
		188 : loc, .id, -
		189 : loc, .loc [ bool ], *
		190 : loc, .id, *
		191 : loc, .loc [ bool ], /
		192 : loc, .id, /
		193 : loc, .loc [ bool ], mod
		194 : loc, .id, mod
		195 : loc, .loc [ bool ], [
		196 : loc, .id, [
	[314] 
		0 : term, term mod .unary, <
		1 : term, term mod .unary, <=
		2 : term, term mod .unary, >=
		3 : term, term mod .unary, >
		4 : term, term mod .unary, )
		5 : term, term mod .unary, ,
		6 : term, term mod .unary, or
		7 : term, term mod .unary, and
		8 : term, term mod .unary, eq
		9 : term, term mod .unary, neq
		10 : term, term mod .unary, +
		11 : term, term mod .unary, -
		12 : term, term mod .unary, *
		13 : term, term mod .unary, /
		14 : term, term mod .unary, mod
		15 : unary, .! unary, <
		16 : unary, .- unary, <
		17 : unary, .factor, <
		18 : unary, .! unary, <=
		19 : unary, .- unary, <=
		20 : unary, .factor, <=
		21 : unary, .! unary, >=
		22 : unary, .- unary, >=
		23 : unary, .factor, >=
		24 : unary, .! unary, >
		25 : unary, .- unary, >
		26 : unary, .factor, >
		27 : unary, .! unary, )
		28 : unary, .- unary, )
		29 : unary, .factor, )
		30 : unary, .! unary, ,
		31 : unary, .- unary, ,
		32 : unary, .factor, ,
		33 : unary, .! unary, or
		34 : unary, .- unary, or
		35 : unary, .factor, or
		36 : unary, .! unary, and
		37 : unary, .- unary, and
		38 : unary, .factor, and
		39 : unary, .! unary, eq
		40 : unary, .- unary, eq
		41 : unary, .factor, eq
		42 : unary, .! unary, neq
		43 : unary, .- unary, neq
		44 : unary, .factor, neq
		45 : unary, .! unary, +
		46 : unary, .- unary, +
		47 : unary, .factor, +
		48 : unary, .! unary, -
		49 : unary, .- unary, -
		50 : unary, .factor, -
		51 : unary, .! unary, *
		52 : unary, .- unary, *
		53 : unary, .factor, *
		54 : unary, .! unary, /
		55 : unary, .- unary, /
		56 : unary, .factor, /
		57 : unary, .! unary, mod
		58 : unary, .- unary, mod
		59 : unary, .factor, mod
		60 : factor, .( bool ), <
		61 : factor, .loc, <
		62 : factor, .id ( args ), <
		63 : factor, .num, <
		64 : factor, .real, <
		65 : factor, .true, <
		66 : factor, .false, <
		67 : factor, .( bool ), <=
		68 : factor, .loc, <=
		69 : factor, .id ( args ), <=
		70 : factor, .num, <=
		71 : factor, .real, <=
		72 : factor, .true, <=
		73 : factor, .false, <=
		74 : factor, .( bool ), >=
		75 : factor, .loc, >=
		76 : factor, .id ( args ), >=
		77 : factor, .num, >=
		78 : factor, .real, >=
		79 : factor, .true, >=
		80 : factor, .false, >=
		81 : factor, .( bool ), >
		82 : factor, .loc, >
		83 : factor, .id ( args ), >
		84 : factor, .num, >
		85 : factor, .real, >
		86 : factor, .true, >
		87 : factor, .false, >
		88 : factor, .( bool ), )
		89 : factor, .loc, )
		90 : factor, .id ( args ), )
		91 : factor, .num, )
		92 : factor, .real, )
		93 : factor, .true, )
		94 : factor, .false, )
		95 : factor, .( bool ), ,
		96 : factor, .loc, ,
		97 : factor, .id ( args ), ,
		98 : factor, .num, ,
		99 : factor, .real, ,
		100 : factor, .true, ,
		101 : factor, .false, ,
		102 : factor, .( bool ), or
		103 : factor, .loc, or
		104 : factor, .id ( args ), or
		105 : factor, .num, or
		106 : factor, .real, or
		107 : factor, .true, or
		108 : factor, .false, or
		109 : factor, .( bool ), and
		110 : factor, .loc, and
		111 : factor, .id ( args ), and
		112 : factor, .num, and
		113 : factor, .real, and
		114 : factor, .true, and
		115 : factor, .false, and
		116 : factor, .( bool ), eq
		117 : factor, .loc, eq
		118 : factor, .id ( args ), eq
		119 : factor, .num, eq
		120 : factor, .real, eq
		121 : factor, .true, eq
		122 : factor, .false, eq
		123 : factor, .( bool ), neq
		124 : factor, .loc, neq
		125 : factor, .id ( args ), neq
		126 : factor, .num, neq
		127 : factor, .real, neq
		128 : factor, .true, neq
		129 : factor, .false, neq
		130 : factor, .( bool ), +
		131 : factor, .loc, +
		132 : factor, .id ( args ), +
		133 : factor, .num, +
		134 : factor, .real, +
		135 : factor, .true, +
		136 : factor, .false, +
		137 : factor, .( bool ), -
		138 : factor, .loc, -
		139 : factor, .id ( args ), -
		140 : factor, .num, -
		141 : factor, .real, -
		142 : factor, .true, -
		143 : factor, .false, -
		144 : factor, .( bool ), *
		145 : factor, .loc, *
		146 : factor, .id ( args ), *
		147 : factor, .num, *
		148 : factor, .real, *
		149 : factor, .true, *
		150 : factor, .false, *
		151 : factor, .( bool ), /
		152 : factor, .loc, /
		153 : factor, .id ( args ), /
		154 : factor, .num, /
		155 : factor, .real, /
		156 : factor, .true, /
		157 : factor, .false, /
		158 : factor, .( bool ), mod
		159 : factor, .loc, mod
		160 : factor, .id ( args ), mod
		161 : factor, .num, mod
		162 : factor, .real, mod
		163 : factor, .true, mod
		164 : factor, .false, mod
		165 : loc, .loc [ bool ], <
		166 : loc, .id, <
		167 : loc, .loc [ bool ], <=
		168 : loc, .id, <=
		169 : loc, .loc [ bool ], >=
		170 : loc, .id, >=
		171 : loc, .loc [ bool ], >
		172 : loc, .id, >
		173 : loc, .loc [ bool ], )
		174 : loc, .id, )
		175 : loc, .loc [ bool ], ,
		176 : loc, .id, ,
		177 : loc, .loc [ bool ], or
		178 : loc, .id, or
		179 : loc, .loc [ bool ], and
		180 : loc, .id, and
		181 : loc, .loc [ bool ], eq
		182 : loc, .id, eq
		183 : loc, .loc [ bool ], neq
		184 : loc, .id, neq
		185 : loc, .loc [ bool ], +
		186 : loc, .id, +
		187 : loc, .loc [ bool ], -
		188 : loc, .id, -
		189 : loc, .loc [ bool ], *
		190 : loc, .id, *
		191 : loc, .loc [ bool ], /
		192 : loc, .id, /
		193 : loc, .loc [ bool ], mod
		194 : loc, .id, mod
		195 : loc, .loc [ bool ], [
		196 : loc, .id, [
	[315] 
		0 : factor, id ( .args ), <
		1 : factor, id ( .args ), <=
		2 : factor, id ( .args ), >=
		3 : factor, id ( .args ), >
		4 : factor, id ( .args ), )
		5 : factor, id ( .args ), ,
		6 : factor, id ( .args ), or
		7 : factor, id ( .args ), and
		8 : factor, id ( .args ), eq
		9 : factor, id ( .args ), neq
		10 : factor, id ( .args ), +
		11 : factor, id ( .args ), -
		12 : factor, id ( .args ), *
		13 : factor, id ( .args ), /
		14 : factor, id ( .args ), mod
		15 : args, .args , arg, )
		16 : args, .arg, )
		17 : args, ., )
		18 : args, .args , arg, ,
		19 : args, .arg, ,
		20 : args, ., ,
		21 : arg, .loc, )
		22 : arg, .bool, )
		23 : arg, .loc, ,
		24 : arg, .bool, ,
		25 : loc, .loc [ bool ], )
		26 : loc, .id, )
		27 : bool, .bool or join, )
		28 : bool, .join, )
		29 : loc, .loc [ bool ], ,
		30 : loc, .id, ,
		31 : bool, .bool or join, ,
		32 : bool, .join, ,
		33 : loc, .loc [ bool ], [
		34 : loc, .id, [
		35 : bool, .bool or join, or
		36 : bool, .join, or
		37 : join, .join and equality, )
		38 : join, .equality, )
		39 : join, .join and equality, ,
		40 : join, .equality, ,
		41 : join, .join and equality, or
		42 : join, .equality, or
		43 : join, .join and equality, and
		44 : join, .equality, and
		45 : equality, .equality eq rel, )
		46 : equality, .equality neq rel, )
		47 : equality, .rel, )
		48 : equality, .equality eq rel, ,
		49 : equality, .equality neq rel, ,
		50 : equality, .rel, ,
		51 : equality, .equality eq rel, or
		52 : equality, .equality neq rel, or
		53 : equality, .rel, or
		54 : equality, .equality eq rel, and
		55 : equality, .equality neq rel, and
		56 : equality, .rel, and
		57 : equality, .equality eq rel, eq
		58 : equality, .equality neq rel, eq
		59 : equality, .rel, eq
		60 : equality, .equality eq rel, neq
		61 : equality, .equality neq rel, neq
		62 : equality, .rel, neq
		63 : rel, .expr < expr, )
		64 : rel, .expr <= expr, )
		65 : rel, .expr >= expr, )
		66 : rel, .expr > expr, )
		67 : rel, .expr, )
		68 : rel, .expr < expr, ,
		69 : rel, .expr <= expr, ,
		70 : rel, .expr >= expr, ,
		71 : rel, .expr > expr, ,
		72 : rel, .expr, ,
		73 : rel, .expr < expr, or
		74 : rel, .expr <= expr, or
		75 : rel, .expr >= expr, or
		76 : rel, .expr > expr, or
		77 : rel, .expr, or
		78 : rel, .expr < expr, and
		79 : rel, .expr <= expr, and
		80 : rel, .expr >= expr, and
		81 : rel, .expr > expr, and
		82 : rel, .expr, and
		83 : rel, .expr < expr, eq
		84 : rel, .expr <= expr, eq
		85 : rel, .expr >= expr, eq
		86 : rel, .expr > expr, eq
		87 : rel, .expr, eq
		88 : rel, .expr < expr, neq
		89 : rel, .expr <= expr, neq
		90 : rel, .expr >= expr, neq
		91 : rel, .expr > expr, neq
		92 : rel, .expr, neq
		93 : expr, .expr + term, <
		94 : expr, .expr - term, <
		95 : expr, .term, <
		96 : expr, .expr + term, <=
		97 : expr, .expr - term, <=
		98 : expr, .term, <=
		99 : expr, .expr + term, >=
		100 : expr, .expr - term, >=
		101 : expr, .term, >=
		102 : expr, .expr + term, >
		103 : expr, .expr - term, >
		104 : expr, .term, >
		105 : expr, .expr + term, )
		106 : expr, .expr - term, )
		107 : expr, .term, )
		108 : expr, .expr + term, ,
		109 : expr, .expr - term, ,
		110 : expr, .term, ,
		111 : expr, .expr + term, or
		112 : expr, .expr - term, or
		113 : expr, .term, or
		114 : expr, .expr + term, and
		115 : expr, .expr - term, and
		116 : expr, .term, and
		117 : expr, .expr + term, eq
		118 : expr, .expr - term, eq
		119 : expr, .term, eq
		120 : expr, .expr + term, neq
		121 : expr, .expr - term, neq
		122 : expr, .term, neq
		123 : expr, .expr + term, +
		124 : expr, .expr - term, +
		125 : expr, .term, +
		126 : expr, .expr + term, -
		127 : expr, .expr - term, -
		128 : expr, .term, -
		129 : term, .term * unary, <
		130 : term, .term / unary, <
		131 : term, .term mod unary, <
		132 : term, .unary, <
		133 : term, .term * unary, <=
		134 : term, .term / unary, <=
		135 : term, .term mod unary, <=
		136 : term, .unary, <=
		137 : term, .term * unary, >=
		138 : term, .term / unary, >=
		139 : term, .term mod unary, >=
		140 : term, .unary, >=
		141 : term, .term * unary, >
		142 : term, .term / unary, >
		143 : term, .term mod unary, >
		144 : term, .unary, >
		145 : term, .term * unary, )
		146 : term, .term / unary, )
		147 : term, .term mod unary, )
		148 : term, .unary, )
		149 : term, .term * unary, ,
		150 : term, .term / unary, ,
		151 : term, .term mod unary, ,
		152 : term, .unary, ,
		153 : term, .term * unary, or
		154 : term, .term / unary, or
		155 : term, .term mod unary, or
		156 : term, .unary, or
		157 : term, .term * unary, and
		158 : term, .term / unary, and
		159 : term, .term mod unary, and
		160 : term, .unary, and
		161 : term, .term * unary, eq
		162 : term, .term / unary, eq
		163 : term, .term mod unary, eq
		164 : term, .unary, eq
		165 : term, .term * unary, neq
		166 : term, .term / unary, neq
		167 : term, .term mod unary, neq
		168 : term, .unary, neq
		169 : term, .term * unary, +
		170 : term, .term / unary, +
		171 : term, .term mod unary, +
		172 : term, .unary, +
		173 : term, .term * unary, -
		174 : term, .term / unary, -
		175 : term, .term mod unary, -
		176 : term, .unary, -
		177 : term, .term * unary, *
		178 : term, .term / unary, *
		179 : term, .term mod unary, *
		180 : term, .unary, *
		181 : term, .term * unary, /
		182 : term, .term / unary, /
		183 : term, .term mod unary, /
		184 : term, .unary, /
		185 : term, .term * unary, mod
		186 : term, .term / unary, mod
		187 : term, .term mod unary, mod
		188 : term, .unary, mod
		189 : unary, .! unary, <
		190 : unary, .- unary, <
		191 : unary, .factor, <
		192 : unary, .! unary, <=
		193 : unary, .- unary, <=
		194 : unary, .factor, <=
		195 : unary, .! unary, >=
		196 : unary, .- unary, >=
		197 : unary, .factor, >=
		198 : unary, .! unary, >
		199 : unary, .- unary, >
		200 : unary, .factor, >
		201 : unary, .! unary, )
		202 : unary, .- unary, )
		203 : unary, .factor, )
		204 : unary, .! unary, ,
		205 : unary, .- unary, ,
		206 : unary, .factor, ,
		207 : unary, .! unary, or
		208 : unary, .- unary, or
		209 : unary, .factor, or
		210 : unary, .! unary, and
		211 : unary, .- unary, and
		212 : unary, .factor, and
		213 : unary, .! unary, eq
		214 : unary, .- unary, eq
		215 : unary, .factor, eq
		216 : unary, .! unary, neq
		217 : unary, .- unary, neq
		218 : unary, .factor, neq
		219 : unary, .! unary, +
		220 : unary, .- unary, +
		221 : unary, .factor, +
		222 : unary, .! unary, -
		223 : unary, .- unary, -
		224 : unary, .factor, -
		225 : unary, .! unary, *
		226 : unary, .- unary, *
		227 : unary, .factor, *
		228 : unary, .! unary, /
		229 : unary, .- unary, /
		230 : unary, .factor, /
		231 : unary, .! unary, mod
		232 : unary, .- unary, mod
		233 : unary, .factor, mod
		234 : factor, .( bool ), <
		235 : factor, .loc, <
		236 : factor, .id ( args ), <
		237 : factor, .num, <
		238 : factor, .real, <
		239 : factor, .true, <
		240 : factor, .false, <
		241 : factor, .( bool ), <=
		242 : factor, .loc, <=
		243 : factor, .id ( args ), <=
		244 : factor, .num, <=
		245 : factor, .real, <=
		246 : factor, .true, <=
		247 : factor, .false, <=
		248 : factor, .( bool ), >=
		249 : factor, .loc, >=
		250 : factor, .id ( args ), >=
		251 : factor, .num, >=
		252 : factor, .real, >=
		253 : factor, .true, >=
		254 : factor, .false, >=
		255 : factor, .( bool ), >
		256 : factor, .loc, >
		257 : factor, .id ( args ), >
		258 : factor, .num, >
		259 : factor, .real, >
		260 : factor, .true, >
		261 : factor, .false, >
		262 : factor, .( bool ), )
		263 : factor, .loc, )
		264 : factor, .id ( args ), )
		265 : factor, .num, )
		266 : factor, .real, )
		267 : factor, .true, )
		268 : factor, .false, )
		269 : factor, .( bool ), ,
		270 : factor, .loc, ,
		271 : factor, .id ( args ), ,
		272 : factor, .num, ,
		273 : factor, .real, ,
		274 : factor, .true, ,
		275 : factor, .false, ,
		276 : factor, .( bool ), or
		277 : factor, .loc, or
		278 : factor, .id ( args ), or
		279 : factor, .num, or
		280 : factor, .real, or
		281 : factor, .true, or
		282 : factor, .false, or
		283 : factor, .( bool ), and
		284 : factor, .loc, and
		285 : factor, .id ( args ), and
		286 : factor, .num, and
		287 : factor, .real, and
		288 : factor, .true, and
		289 : factor, .false, and
		290 : factor, .( bool ), eq
		291 : factor, .loc, eq
		292 : factor, .id ( args ), eq
		293 : factor, .num, eq
		294 : factor, .real, eq
		295 : factor, .true, eq
		296 : factor, .false, eq
		297 : factor, .( bool ), neq
		298 : factor, .loc, neq
		299 : factor, .id ( args ), neq
		300 : factor, .num, neq
		301 : factor, .real, neq
		302 : factor, .true, neq
		303 : factor, .false, neq
		304 : factor, .( bool ), +
		305 : factor, .loc, +
		306 : factor, .id ( args ), +
		307 : factor, .num, +
		308 : factor, .real, +
		309 : factor, .true, +
		310 : factor, .false, +
		311 : factor, .( bool ), -
		312 : factor, .loc, -
		313 : factor, .id ( args ), -
		314 : factor, .num, -
		315 : factor, .real, -
		316 : factor, .true, -
		317 : factor, .false, -
		318 : factor, .( bool ), *
		319 : factor, .loc, *
		320 : factor, .id ( args ), *
		321 : factor, .num, *
		322 : factor, .real, *
		323 : factor, .true, *
		324 : factor, .false, *
		325 : factor, .( bool ), /
		326 : factor, .loc, /
		327 : factor, .id ( args ), /
		328 : factor, .num, /
		329 : factor, .real, /
		330 : factor, .true, /
		331 : factor, .false, /
		332 : factor, .( bool ), mod
		333 : factor, .loc, mod
		334 : factor, .id ( args ), mod
		335 : factor, .num, mod
		336 : factor, .real, mod
		337 : factor, .true, mod
		338 : factor, .false, mod
		339 : loc, .loc [ bool ], <
		340 : loc, .id, <
		341 : loc, .loc [ bool ], <=
		342 : loc, .id, <=
		343 : loc, .loc [ bool ], >=
		344 : loc, .id, >=
		345 : loc, .loc [ bool ], >
		346 : loc, .id, >
		347 : loc, .loc [ bool ], or
		348 : loc, .id, or
		349 : loc, .loc [ bool ], and
		350 : loc, .id, and
		351 : loc, .loc [ bool ], eq
		352 : loc, .id, eq
		353 : loc, .loc [ bool ], neq
		354 : loc, .id, neq
		355 : loc, .loc [ bool ], +
		356 : loc, .id, +
		357 : loc, .loc [ bool ], -
		358 : loc, .id, -
		359 : loc, .loc [ bool ], *
		360 : loc, .id, *
		361 : loc, .loc [ bool ], /
		362 : loc, .id, /
		363 : loc, .loc [ bool ], mod
		364 : loc, .id, mod
	[316] 
		0 : factor, ( bool .), <
		1 : factor, ( bool .), <=
		2 : factor, ( bool .), >=
		3 : factor, ( bool .), >
		4 : factor, ( bool .), )
		5 : factor, ( bool .), ,
		6 : factor, ( bool .), or
		7 : factor, ( bool .), and
		8 : factor, ( bool .), eq
		9 : factor, ( bool .), neq
		10 : factor, ( bool .), +
		11 : factor, ( bool .), -
		12 : factor, ( bool .), *
		13 : factor, ( bool .), /
		14 : factor, ( bool .), mod
		15 : bool, bool .or join, )
		16 : bool, bool .or join, or
	[317] 
		0 : factor, loc ., <
		1 : factor, loc ., <=
		2 : factor, loc ., >=
		3 : factor, loc ., >
		4 : factor, loc ., )
		5 : factor, loc ., ,
		6 : factor, loc ., or
		7 : factor, loc ., and
		8 : factor, loc ., eq
		9 : factor, loc ., neq
		10 : factor, loc ., +
		11 : factor, loc ., -
		12 : factor, loc ., *
		13 : factor, loc ., /
		14 : factor, loc ., mod
		15 : loc, loc .[ bool ], <
		16 : loc, loc .[ bool ], <=
		17 : loc, loc .[ bool ], >=
		18 : loc, loc .[ bool ], >
		19 : loc, loc .[ bool ], )
		20 : loc, loc .[ bool ], ,
		21 : loc, loc .[ bool ], or
		22 : loc, loc .[ bool ], and
		23 : loc, loc .[ bool ], eq
		24 : loc, loc .[ bool ], neq
		25 : loc, loc .[ bool ], +
		26 : loc, loc .[ bool ], -
		27 : loc, loc .[ bool ], *
		28 : loc, loc .[ bool ], /
		29 : loc, loc .[ bool ], mod
		30 : loc, loc .[ bool ], [
	[318] 
		0 : unary, - unary ., <
		1 : unary, - unary ., <=
		2 : unary, - unary ., >=
		3 : unary, - unary ., >
		4 : unary, - unary ., )
		5 : unary, - unary ., ,
		6 : unary, - unary ., or
		7 : unary, - unary ., and
		8 : unary, - unary ., eq
		9 : unary, - unary ., neq
		10 : unary, - unary ., +
		11 : unary, - unary ., -
		12 : unary, - unary ., *
		13 : unary, - unary ., /
		14 : unary, - unary ., mod
	[319] 
		0 : factor, id .( args ), <
		1 : factor, id .( args ), <=
		2 : factor, id .( args ), >=
		3 : factor, id .( args ), >
		4 : factor, id .( args ), )
		5 : factor, id .( args ), ,
		6 : factor, id .( args ), or
		7 : factor, id .( args ), and
		8 : factor, id .( args ), eq
		9 : factor, id .( args ), neq
		10 : factor, id .( args ), +
		11 : factor, id .( args ), -
		12 : factor, id .( args ), *
		13 : factor, id .( args ), /
		14 : factor, id .( args ), mod
		15 : loc, id ., <
		16 : loc, id ., <=
		17 : loc, id ., >=
		18 : loc, id ., >
		19 : loc, id ., )
		20 : loc, id ., ,
		21 : loc, id ., or
		22 : loc, id ., and
		23 : loc, id ., eq
		24 : loc, id ., neq
		25 : loc, id ., +
		26 : loc, id ., -
		27 : loc, id ., *
		28 : loc, id ., /
		29 : loc, id ., mod
		30 : loc, id ., [
	[320] 
		0 : unary, ! unary ., <
		1 : unary, ! unary ., <=
		2 : unary, ! unary ., >=
		3 : unary, ! unary ., >
		4 : unary, ! unary ., )
		5 : unary, ! unary ., ,
		6 : unary, ! unary ., or
		7 : unary, ! unary ., and
		8 : unary, ! unary ., eq
		9 : unary, ! unary ., neq
		10 : unary, ! unary ., +
		11 : unary, ! unary ., -
		12 : unary, ! unary ., *
		13 : unary, ! unary ., /
		14 : unary, ! unary ., mod
	[321] 
		0 : loc, loc [ bool ] ., <
		1 : loc, loc [ bool ] ., <=
		2 : loc, loc [ bool ] ., >=
		3 : loc, loc [ bool ] ., >
		4 : loc, loc [ bool ] ., ]
		5 : loc, loc [ bool ] ., or
		6 : loc, loc [ bool ] ., and
		7 : loc, loc [ bool ] ., eq
		8 : loc, loc [ bool ] ., neq
		9 : loc, loc [ bool ] ., +
		10 : loc, loc [ bool ] ., -
		11 : loc, loc [ bool ] ., *
		12 : loc, loc [ bool ] ., /
		13 : loc, loc [ bool ] ., mod
		14 : loc, loc [ bool ] ., [
	[322] 
		0 : loc, loc [ .bool ], ]
		1 : loc, loc [ .bool ], or
		2 : loc, loc [ .bool ], and
		3 : loc, loc [ .bool ], eq
		4 : loc, loc [ .bool ], neq
		5 : loc, loc [ .bool ], +
		6 : loc, loc [ .bool ], -
		7 : loc, loc [ .bool ], *
		8 : loc, loc [ .bool ], /
		9 : loc, loc [ .bool ], mod
		10 : loc, loc [ .bool ], [
		11 : bool, .bool or join, ]
		12 : bool, .join, ]
		13 : bool, .bool or join, or
		14 : bool, .join, or
		15 : join, .join and equality, ]
		16 : join, .equality, ]
		17 : join, .join and equality, or
		18 : join, .equality, or
		19 : join, .join and equality, and
		20 : join, .equality, and
		21 : equality, .equality eq rel, ]
		22 : equality, .equality neq rel, ]
		23 : equality, .rel, ]
		24 : equality, .equality eq rel, or
		25 : equality, .equality neq rel, or
		26 : equality, .rel, or
		27 : equality, .equality eq rel, and
		28 : equality, .equality neq rel, and
		29 : equality, .rel, and
		30 : equality, .equality eq rel, eq
		31 : equality, .equality neq rel, eq
		32 : equality, .rel, eq
		33 : equality, .equality eq rel, neq
		34 : equality, .equality neq rel, neq
		35 : equality, .rel, neq
		36 : rel, .expr < expr, ]
		37 : rel, .expr <= expr, ]
		38 : rel, .expr >= expr, ]
		39 : rel, .expr > expr, ]
		40 : rel, .expr, ]
		41 : rel, .expr < expr, or
		42 : rel, .expr <= expr, or
		43 : rel, .expr >= expr, or
		44 : rel, .expr > expr, or
		45 : rel, .expr, or
		46 : rel, .expr < expr, and
		47 : rel, .expr <= expr, and
		48 : rel, .expr >= expr, and
		49 : rel, .expr > expr, and
		50 : rel, .expr, and
		51 : rel, .expr < expr, eq
		52 : rel, .expr <= expr, eq
		53 : rel, .expr >= expr, eq
		54 : rel, .expr > expr, eq
		55 : rel, .expr, eq
		56 : rel, .expr < expr, neq
		57 : rel, .expr <= expr, neq
		58 : rel, .expr >= expr, neq
		59 : rel, .expr > expr, neq
		60 : rel, .expr, neq
		61 : expr, .expr + term, <
		62 : expr, .expr - term, <
		63 : expr, .term, <
		64 : expr, .expr + term, <=
		65 : expr, .expr - term, <=
		66 : expr, .term, <=
		67 : expr, .expr + term, >=
		68 : expr, .expr - term, >=
		69 : expr, .term, >=
		70 : expr, .expr + term, >
		71 : expr, .expr - term, >
		72 : expr, .term, >
		73 : expr, .expr + term, ]
		74 : expr, .expr - term, ]
		75 : expr, .term, ]
		76 : expr, .expr + term, or
		77 : expr, .expr - term, or
		78 : expr, .term, or
		79 : expr, .expr + term, and
		80 : expr, .expr - term, and
		81 : expr, .term, and
		82 : expr, .expr + term, eq
		83 : expr, .expr - term, eq
		84 : expr, .term, eq
		85 : expr, .expr + term, neq
		86 : expr, .expr - term, neq
		87 : expr, .term, neq
		88 : expr, .expr + term, +
		89 : expr, .expr - term, +
		90 : expr, .term, +
		91 : expr, .expr + term, -
		92 : expr, .expr - term, -
		93 : expr, .term, -
		94 : term, .term * unary, <
		95 : term, .term / unary, <
		96 : term, .term mod unary, <
		97 : term, .unary, <
		98 : term, .term * unary, <=
		99 : term, .term / unary, <=
		100 : term, .term mod unary, <=
		101 : term, .unary, <=
		102 : term, .term * unary, >=
		103 : term, .term / unary, >=
		104 : term, .term mod unary, >=
		105 : term, .unary, >=
		106 : term, .term * unary, >
		107 : term, .term / unary, >
		108 : term, .term mod unary, >
		109 : term, .unary, >
		110 : term, .term * unary, ]
		111 : term, .term / unary, ]
		112 : term, .term mod unary, ]
		113 : term, .unary, ]
		114 : term, .term * unary, or
		115 : term, .term / unary, or
		116 : term, .term mod unary, or
		117 : term, .unary, or
		118 : term, .term * unary, and
		119 : term, .term / unary, and
		120 : term, .term mod unary, and
		121 : term, .unary, and
		122 : term, .term * unary, eq
		123 : term, .term / unary, eq
		124 : term, .term mod unary, eq
		125 : term, .unary, eq
		126 : term, .term * unary, neq
		127 : term, .term / unary, neq
		128 : term, .term mod unary, neq
		129 : term, .unary, neq
		130 : term, .term * unary, +
		131 : term, .term / unary, +
		132 : term, .term mod unary, +
		133 : term, .unary, +
		134 : term, .term * unary, -
		135 : term, .term / unary, -
		136 : term, .term mod unary, -
		137 : term, .unary, -
		138 : term, .term * unary, *
		139 : term, .term / unary, *
		140 : term, .term mod unary, *
		141 : term, .unary, *
		142 : term, .term * unary, /
		143 : term, .term / unary, /
		144 : term, .term mod unary, /
		145 : term, .unary, /
		146 : term, .term * unary, mod
		147 : term, .term / unary, mod
		148 : term, .term mod unary, mod
		149 : term, .unary, mod
		150 : unary, .! unary, <
		151 : unary, .- unary, <
		152 : unary, .factor, <
		153 : unary, .! unary, <=
		154 : unary, .- unary, <=
		155 : unary, .factor, <=
		156 : unary, .! unary, >=
		157 : unary, .- unary, >=
		158 : unary, .factor, >=
		159 : unary, .! unary, >
		160 : unary, .- unary, >
		161 : unary, .factor, >
		162 : unary, .! unary, ]
		163 : unary, .- unary, ]
		164 : unary, .factor, ]
		165 : unary, .! unary, or
		166 : unary, .- unary, or
		167 : unary, .factor, or
		168 : unary, .! unary, and
		169 : unary, .- unary, and
		170 : unary, .factor, and
		171 : unary, .! unary, eq
		172 : unary, .- unary, eq
		173 : unary, .factor, eq
		174 : unary, .! unary, neq
		175 : unary, .- unary, neq
		176 : unary, .factor, neq
		177 : unary, .! unary, +
		178 : unary, .- unary, +
		179 : unary, .factor, +
		180 : unary, .! unary, -
		181 : unary, .- unary, -
		182 : unary, .factor, -
		183 : unary, .! unary, *
		184 : unary, .- unary, *
		185 : unary, .factor, *
		186 : unary, .! unary, /
		187 : unary, .- unary, /
		188 : unary, .factor, /
		189 : unary, .! unary, mod
		190 : unary, .- unary, mod
		191 : unary, .factor, mod
		192 : factor, .( bool ), <
		193 : factor, .loc, <
		194 : factor, .id ( args ), <
		195 : factor, .num, <
		196 : factor, .real, <
		197 : factor, .true, <
		198 : factor, .false, <
		199 : factor, .( bool ), <=
		200 : factor, .loc, <=
		201 : factor, .id ( args ), <=
		202 : factor, .num, <=
		203 : factor, .real, <=
		204 : factor, .true, <=
		205 : factor, .false, <=
		206 : factor, .( bool ), >=
		207 : factor, .loc, >=
		208 : factor, .id ( args ), >=
		209 : factor, .num, >=
		210 : factor, .real, >=
		211 : factor, .true, >=
		212 : factor, .false, >=
		213 : factor, .( bool ), >
		214 : factor, .loc, >
		215 : factor, .id ( args ), >
		216 : factor, .num, >
		217 : factor, .real, >
		218 : factor, .true, >
		219 : factor, .false, >
		220 : factor, .( bool ), ]
		221 : factor, .loc, ]
		222 : factor, .id ( args ), ]
		223 : factor, .num, ]
		224 : factor, .real, ]
		225 : factor, .true, ]
		226 : factor, .false, ]
		227 : factor, .( bool ), or
		228 : factor, .loc, or
		229 : factor, .id ( args ), or
		230 : factor, .num, or
		231 : factor, .real, or
		232 : factor, .true, or
		233 : factor, .false, or
		234 : factor, .( bool ), and
		235 : factor, .loc, and
		236 : factor, .id ( args ), and
		237 : factor, .num, and
		238 : factor, .real, and
		239 : factor, .true, and
		240 : factor, .false, and
		241 : factor, .( bool ), eq
		242 : factor, .loc, eq
		243 : factor, .id ( args ), eq
		244 : factor, .num, eq
		245 : factor, .real, eq
		246 : factor, .true, eq
		247 : factor, .false, eq
		248 : factor, .( bool ), neq
		249 : factor, .loc, neq
		250 : factor, .id ( args ), neq
		251 : factor, .num, neq
		252 : factor, .real, neq
		253 : factor, .true, neq
		254 : factor, .false, neq
		255 : factor, .( bool ), +
		256 : factor, .loc, +
		257 : factor, .id ( args ), +
		258 : factor, .num, +
		259 : factor, .real, +
		260 : factor, .true, +
		261 : factor, .false, +
		262 : factor, .( bool ), -
		263 : factor, .loc, -
		264 : factor, .id ( args ), -
		265 : factor, .num, -
		266 : factor, .real, -
		267 : factor, .true, -
		268 : factor, .false, -
		269 : factor, .( bool ), *
		270 : factor, .loc, *
		271 : factor, .id ( args ), *
		272 : factor, .num, *
		273 : factor, .real, *
		274 : factor, .true, *
		275 : factor, .false, *
		276 : factor, .( bool ), /
		277 : factor, .loc, /
		278 : factor, .id ( args ), /
		279 : factor, .num, /
		280 : factor, .real, /
		281 : factor, .true, /
		282 : factor, .false, /
		283 : factor, .( bool ), mod
		284 : factor, .loc, mod
		285 : factor, .id ( args ), mod
		286 : factor, .num, mod
		287 : factor, .real, mod
		288 : factor, .true, mod
		289 : factor, .false, mod
		290 : loc, .loc [ bool ], <
		291 : loc, .id, <
		292 : loc, .loc [ bool ], <=
		293 : loc, .id, <=
		294 : loc, .loc [ bool ], >=
		295 : loc, .id, >=
		296 : loc, .loc [ bool ], >
		297 : loc, .id, >
		298 : loc, .loc [ bool ], ]
		299 : loc, .id, ]
		300 : loc, .loc [ bool ], or
		301 : loc, .id, or
		302 : loc, .loc [ bool ], and
		303 : loc, .id, and
		304 : loc, .loc [ bool ], eq
		305 : loc, .id, eq
		306 : loc, .loc [ bool ], neq
		307 : loc, .id, neq
		308 : loc, .loc [ bool ], +
		309 : loc, .id, +
		310 : loc, .loc [ bool ], -
		311 : loc, .id, -
		312 : loc, .loc [ bool ], *
		313 : loc, .id, *
		314 : loc, .loc [ bool ], /
		315 : loc, .id, /
		316 : loc, .loc [ bool ], mod
		317 : loc, .id, mod
		318 : loc, .loc [ bool ], [
		319 : loc, .id, [
	[323] 
		0 : expr, expr + .term, ]
		1 : expr, expr + .term, or
		2 : expr, expr + .term, and
		3 : expr, expr + .term, eq
		4 : expr, expr + .term, neq
		5 : expr, expr + .term, +
		6 : expr, expr + .term, -
		7 : term, .term * unary, ]
		8 : term, .term / unary, ]
		9 : term, .term mod unary, ]
		10 : term, .unary, ]
		11 : term, .term * unary, or
		12 : term, .term / unary, or
		13 : term, .term mod unary, or
		14 : term, .unary, or
		15 : term, .term * unary, and
		16 : term, .term / unary, and
		17 : term, .term mod unary, and
		18 : term, .unary, and
		19 : term, .term * unary, eq
		20 : term, .term / unary, eq
		21 : term, .term mod unary, eq
		22 : term, .unary, eq
		23 : term, .term * unary, neq
		24 : term, .term / unary, neq
		25 : term, .term mod unary, neq
		26 : term, .unary, neq
		27 : term, .term * unary, +
		28 : term, .term / unary, +
		29 : term, .term mod unary, +
		30 : term, .unary, +
		31 : term, .term * unary, -
		32 : term, .term / unary, -
		33 : term, .term mod unary, -
		34 : term, .unary, -
		35 : term, .term * unary, *
		36 : term, .term / unary, *
		37 : term, .term mod unary, *
		38 : term, .unary, *
		39 : term, .term * unary, /
		40 : term, .term / unary, /
		41 : term, .term mod unary, /
		42 : term, .unary, /
		43 : term, .term * unary, mod
		44 : term, .term / unary, mod
		45 : term, .term mod unary, mod
		46 : term, .unary, mod
		47 : unary, .! unary, ]
		48 : unary, .- unary, ]
		49 : unary, .factor, ]
		50 : unary, .! unary, or
		51 : unary, .- unary, or
		52 : unary, .factor, or
		53 : unary, .! unary, and
		54 : unary, .- unary, and
		55 : unary, .factor, and
		56 : unary, .! unary, eq
		57 : unary, .- unary, eq
		58 : unary, .factor, eq
		59 : unary, .! unary, neq
		60 : unary, .- unary, neq
		61 : unary, .factor, neq
		62 : unary, .! unary, +
		63 : unary, .- unary, +
		64 : unary, .factor, +
		65 : unary, .! unary, -
		66 : unary, .- unary, -
		67 : unary, .factor, -
		68 : unary, .! unary, *
		69 : unary, .- unary, *
		70 : unary, .factor, *
		71 : unary, .! unary, /
		72 : unary, .- unary, /
		73 : unary, .factor, /
		74 : unary, .! unary, mod
		75 : unary, .- unary, mod
		76 : unary, .factor, mod
		77 : factor, .( bool ), ]
		78 : factor, .loc, ]
		79 : factor, .id ( args ), ]
		80 : factor, .num, ]
		81 : factor, .real, ]
		82 : factor, .true, ]
		83 : factor, .false, ]
		84 : factor, .( bool ), or
		85 : factor, .loc, or
		86 : factor, .id ( args ), or
		87 : factor, .num, or
		88 : factor, .real, or
		89 : factor, .true, or
		90 : factor, .false, or
		91 : factor, .( bool ), and
		92 : factor, .loc, and
		93 : factor, .id ( args ), and
		94 : factor, .num, and
		95 : factor, .real, and
		96 : factor, .true, and
		97 : factor, .false, and
		98 : factor, .( bool ), eq
		99 : factor, .loc, eq
		100 : factor, .id ( args ), eq
		101 : factor, .num, eq
		102 : factor, .real, eq
		103 : factor, .true, eq
		104 : factor, .false, eq
		105 : factor, .( bool ), neq
		106 : factor, .loc, neq
		107 : factor, .id ( args ), neq
		108 : factor, .num, neq
		109 : factor, .real, neq
		110 : factor, .true, neq
		111 : factor, .false, neq
		112 : factor, .( bool ), +
		113 : factor, .loc, +
		114 : factor, .id ( args ), +
		115 : factor, .num, +
		116 : factor, .real, +
		117 : factor, .true, +
		118 : factor, .false, +
		119 : factor, .( bool ), -
		120 : factor, .loc, -
		121 : factor, .id ( args ), -
		122 : factor, .num, -
		123 : factor, .real, -
		124 : factor, .true, -
		125 : factor, .false, -
		126 : factor, .( bool ), *
		127 : factor, .loc, *
		128 : factor, .id ( args ), *
		129 : factor, .num, *
		130 : factor, .real, *
		131 : factor, .true, *
		132 : factor, .false, *
		133 : factor, .( bool ), /
		134 : factor, .loc, /
		135 : factor, .id ( args ), /
		136 : factor, .num, /
		137 : factor, .real, /
		138 : factor, .true, /
		139 : factor, .false, /
		140 : factor, .( bool ), mod
		141 : factor, .loc, mod
		142 : factor, .id ( args ), mod
		143 : factor, .num, mod
		144 : factor, .real, mod
		145 : factor, .true, mod
		146 : factor, .false, mod
		147 : loc, .loc [ bool ], ]
		148 : loc, .id, ]
		149 : loc, .loc [ bool ], or
		150 : loc, .id, or
		151 : loc, .loc [ bool ], and
		152 : loc, .id, and
		153 : loc, .loc [ bool ], eq
		154 : loc, .id, eq
		155 : loc, .loc [ bool ], neq
		156 : loc, .id, neq
		157 : loc, .loc [ bool ], +
		158 : loc, .id, +
		159 : loc, .loc [ bool ], -
		160 : loc, .id, -
		161 : loc, .loc [ bool ], *
		162 : loc, .id, *
		163 : loc, .loc [ bool ], /
		164 : loc, .id, /
		165 : loc, .loc [ bool ], mod
		166 : loc, .id, mod
		167 : loc, .loc [ bool ], [
		168 : loc, .id, [
	[324] 
		0 : expr, expr - .term, ]
		1 : expr, expr - .term, or
		2 : expr, expr - .term, and
		3 : expr, expr - .term, eq
		4 : expr, expr - .term, neq
		5 : expr, expr - .term, +
		6 : expr, expr - .term, -
		7 : term, .term * unary, ]
		8 : term, .term / unary, ]
		9 : term, .term mod unary, ]
		10 : term, .unary, ]
		11 : term, .term * unary, or
		12 : term, .term / unary, or
		13 : term, .term mod unary, or
		14 : term, .unary, or
		15 : term, .term * unary, and
		16 : term, .term / unary, and
		17 : term, .term mod unary, and
		18 : term, .unary, and
		19 : term, .term * unary, eq
		20 : term, .term / unary, eq
		21 : term, .term mod unary, eq
		22 : term, .unary, eq
		23 : term, .term * unary, neq
		24 : term, .term / unary, neq
		25 : term, .term mod unary, neq
		26 : term, .unary, neq
		27 : term, .term * unary, +
		28 : term, .term / unary, +
		29 : term, .term mod unary, +
		30 : term, .unary, +
		31 : term, .term * unary, -
		32 : term, .term / unary, -
		33 : term, .term mod unary, -
		34 : term, .unary, -
		35 : term, .term * unary, *
		36 : term, .term / unary, *
		37 : term, .term mod unary, *
		38 : term, .unary, *
		39 : term, .term * unary, /
		40 : term, .term / unary, /
		41 : term, .term mod unary, /
		42 : term, .unary, /
		43 : term, .term * unary, mod
		44 : term, .term / unary, mod
		45 : term, .term mod unary, mod
		46 : term, .unary, mod
		47 : unary, .! unary, ]
		48 : unary, .- unary, ]
		49 : unary, .factor, ]
		50 : unary, .! unary, or
		51 : unary, .- unary, or
		52 : unary, .factor, or
		53 : unary, .! unary, and
		54 : unary, .- unary, and
		55 : unary, .factor, and
		56 : unary, .! unary, eq
		57 : unary, .- unary, eq
		58 : unary, .factor, eq
		59 : unary, .! unary, neq
		60 : unary, .- unary, neq
		61 : unary, .factor, neq
		62 : unary, .! unary, +
		63 : unary, .- unary, +
		64 : unary, .factor, +
		65 : unary, .! unary, -
		66 : unary, .- unary, -
		67 : unary, .factor, -
		68 : unary, .! unary, *
		69 : unary, .- unary, *
		70 : unary, .factor, *
		71 : unary, .! unary, /
		72 : unary, .- unary, /
		73 : unary, .factor, /
		74 : unary, .! unary, mod
		75 : unary, .- unary, mod
		76 : unary, .factor, mod
		77 : factor, .( bool ), ]
		78 : factor, .loc, ]
		79 : factor, .id ( args ), ]
		80 : factor, .num, ]
		81 : factor, .real, ]
		82 : factor, .true, ]
		83 : factor, .false, ]
		84 : factor, .( bool ), or
		85 : factor, .loc, or
		86 : factor, .id ( args ), or
		87 : factor, .num, or
		88 : factor, .real, or
		89 : factor, .true, or
		90 : factor, .false, or
		91 : factor, .( bool ), and
		92 : factor, .loc, and
		93 : factor, .id ( args ), and
		94 : factor, .num, and
		95 : factor, .real, and
		96 : factor, .true, and
		97 : factor, .false, and
		98 : factor, .( bool ), eq
		99 : factor, .loc, eq
		100 : factor, .id ( args ), eq
		101 : factor, .num, eq
		102 : factor, .real, eq
		103 : factor, .true, eq
		104 : factor, .false, eq
		105 : factor, .( bool ), neq
		106 : factor, .loc, neq
		107 : factor, .id ( args ), neq
		108 : factor, .num, neq
		109 : factor, .real, neq
		110 : factor, .true, neq
		111 : factor, .false, neq
		112 : factor, .( bool ), +
		113 : factor, .loc, +
		114 : factor, .id ( args ), +
		115 : factor, .num, +
		116 : factor, .real, +
		117 : factor, .true, +
		118 : factor, .false, +
		119 : factor, .( bool ), -
		120 : factor, .loc, -
		121 : factor, .id ( args ), -
		122 : factor, .num, -
		123 : factor, .real, -
		124 : factor, .true, -
		125 : factor, .false, -
		126 : factor, .( bool ), *
		127 : factor, .loc, *
		128 : factor, .id ( args ), *
		129 : factor, .num, *
		130 : factor, .real, *
		131 : factor, .true, *
		132 : factor, .false, *
		133 : factor, .( bool ), /
		134 : factor, .loc, /
		135 : factor, .id ( args ), /
		136 : factor, .num, /
		137 : factor, .real, /
		138 : factor, .true, /
		139 : factor, .false, /
		140 : factor, .( bool ), mod
		141 : factor, .loc, mod
		142 : factor, .id ( args ), mod
		143 : factor, .num, mod
		144 : factor, .real, mod
		145 : factor, .true, mod
		146 : factor, .false, mod
		147 : loc, .loc [ bool ], ]
		148 : loc, .id, ]
		149 : loc, .loc [ bool ], or
		150 : loc, .id, or
		151 : loc, .loc [ bool ], and
		152 : loc, .id, and
		153 : loc, .loc [ bool ], eq
		154 : loc, .id, eq
		155 : loc, .loc [ bool ], neq
		156 : loc, .id, neq
		157 : loc, .loc [ bool ], +
		158 : loc, .id, +
		159 : loc, .loc [ bool ], -
		160 : loc, .id, -
		161 : loc, .loc [ bool ], *
		162 : loc, .id, *
		163 : loc, .loc [ bool ], /
		164 : loc, .id, /
		165 : loc, .loc [ bool ], mod
		166 : loc, .id, mod
		167 : loc, .loc [ bool ], [
		168 : loc, .id, [
	[325] 
		0 : term, term * .unary, ]
		1 : term, term * .unary, or
		2 : term, term * .unary, and
		3 : term, term * .unary, eq
		4 : term, term * .unary, neq
		5 : term, term * .unary, +
		6 : term, term * .unary, -
		7 : term, term * .unary, *
		8 : term, term * .unary, /
		9 : term, term * .unary, mod
		10 : unary, .! unary, ]
		11 : unary, .- unary, ]
		12 : unary, .factor, ]
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), ]
		41 : factor, .loc, ]
		42 : factor, .id ( args ), ]
		43 : factor, .num, ]
		44 : factor, .real, ]
		45 : factor, .true, ]
		46 : factor, .false, ]
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], ]
		111 : loc, .id, ]
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[326] 
		0 : term, term / .unary, ]
		1 : term, term / .unary, or
		2 : term, term / .unary, and
		3 : term, term / .unary, eq
		4 : term, term / .unary, neq
		5 : term, term / .unary, +
		6 : term, term / .unary, -
		7 : term, term / .unary, *
		8 : term, term / .unary, /
		9 : term, term / .unary, mod
		10 : unary, .! unary, ]
		11 : unary, .- unary, ]
		12 : unary, .factor, ]
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), ]
		41 : factor, .loc, ]
		42 : factor, .id ( args ), ]
		43 : factor, .num, ]
		44 : factor, .real, ]
		45 : factor, .true, ]
		46 : factor, .false, ]
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], ]
		111 : loc, .id, ]
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[327] 
		0 : term, term mod .unary, ]
		1 : term, term mod .unary, or
		2 : term, term mod .unary, and
		3 : term, term mod .unary, eq
		4 : term, term mod .unary, neq
		5 : term, term mod .unary, +
		6 : term, term mod .unary, -
		7 : term, term mod .unary, *
		8 : term, term mod .unary, /
		9 : term, term mod .unary, mod
		10 : unary, .! unary, ]
		11 : unary, .- unary, ]
		12 : unary, .factor, ]
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), ]
		41 : factor, .loc, ]
		42 : factor, .id ( args ), ]
		43 : factor, .num, ]
		44 : factor, .real, ]
		45 : factor, .true, ]
		46 : factor, .false, ]
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], ]
		111 : loc, .id, ]
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[328] 
		0 : factor, id ( .args ), ]
		1 : factor, id ( .args ), or
		2 : factor, id ( .args ), and
		3 : factor, id ( .args ), eq
		4 : factor, id ( .args ), neq
		5 : factor, id ( .args ), +
		6 : factor, id ( .args ), -
		7 : factor, id ( .args ), *
		8 : factor, id ( .args ), /
		9 : factor, id ( .args ), mod
		10 : args, .args , arg, )
		11 : args, .arg, )
		12 : args, ., )
		13 : args, .args , arg, ,
		14 : args, .arg, ,
		15 : args, ., ,
		16 : arg, .loc, )
		17 : arg, .bool, )
		18 : arg, .loc, ,
		19 : arg, .bool, ,
		20 : loc, .loc [ bool ], )
		21 : loc, .id, )
		22 : bool, .bool or join, )
		23 : bool, .join, )
		24 : loc, .loc [ bool ], ,
		25 : loc, .id, ,
		26 : bool, .bool or join, ,
		27 : bool, .join, ,
		28 : loc, .loc [ bool ], [
		29 : loc, .id, [
		30 : bool, .bool or join, or
		31 : bool, .join, or
		32 : join, .join and equality, )
		33 : join, .equality, )
		34 : join, .join and equality, ,
		35 : join, .equality, ,
		36 : join, .join and equality, or
		37 : join, .equality, or
		38 : join, .join and equality, and
		39 : join, .equality, and
		40 : equality, .equality eq rel, )
		41 : equality, .equality neq rel, )
		42 : equality, .rel, )
		43 : equality, .equality eq rel, ,
		44 : equality, .equality neq rel, ,
		45 : equality, .rel, ,
		46 : equality, .equality eq rel, or
		47 : equality, .equality neq rel, or
		48 : equality, .rel, or
		49 : equality, .equality eq rel, and
		50 : equality, .equality neq rel, and
		51 : equality, .rel, and
		52 : equality, .equality eq rel, eq
		53 : equality, .equality neq rel, eq
		54 : equality, .rel, eq
		55 : equality, .equality eq rel, neq
		56 : equality, .equality neq rel, neq
		57 : equality, .rel, neq
		58 : rel, .expr < expr, )
		59 : rel, .expr <= expr, )
		60 : rel, .expr >= expr, )
		61 : rel, .expr > expr, )
		62 : rel, .expr, )
		63 : rel, .expr < expr, ,
		64 : rel, .expr <= expr, ,
		65 : rel, .expr >= expr, ,
		66 : rel, .expr > expr, ,
		67 : rel, .expr, ,
		68 : rel, .expr < expr, or
		69 : rel, .expr <= expr, or
		70 : rel, .expr >= expr, or
		71 : rel, .expr > expr, or
		72 : rel, .expr, or
		73 : rel, .expr < expr, and
		74 : rel, .expr <= expr, and
		75 : rel, .expr >= expr, and
		76 : rel, .expr > expr, and
		77 : rel, .expr, and
		78 : rel, .expr < expr, eq
		79 : rel, .expr <= expr, eq
		80 : rel, .expr >= expr, eq
		81 : rel, .expr > expr, eq
		82 : rel, .expr, eq
		83 : rel, .expr < expr, neq
		84 : rel, .expr <= expr, neq
		85 : rel, .expr >= expr, neq
		86 : rel, .expr > expr, neq
		87 : rel, .expr, neq
		88 : expr, .expr + term, <
		89 : expr, .expr - term, <
		90 : expr, .term, <
		91 : expr, .expr + term, <=
		92 : expr, .expr - term, <=
		93 : expr, .term, <=
		94 : expr, .expr + term, >=
		95 : expr, .expr - term, >=
		96 : expr, .term, >=
		97 : expr, .expr + term, >
		98 : expr, .expr - term, >
		99 : expr, .term, >
		100 : expr, .expr + term, )
		101 : expr, .expr - term, )
		102 : expr, .term, )
		103 : expr, .expr + term, ,
		104 : expr, .expr - term, ,
		105 : expr, .term, ,
		106 : expr, .expr + term, or
		107 : expr, .expr - term, or
		108 : expr, .term, or
		109 : expr, .expr + term, and
		110 : expr, .expr - term, and
		111 : expr, .term, and
		112 : expr, .expr + term, eq
		113 : expr, .expr - term, eq
		114 : expr, .term, eq
		115 : expr, .expr + term, neq
		116 : expr, .expr - term, neq
		117 : expr, .term, neq
		118 : expr, .expr + term, +
		119 : expr, .expr - term, +
		120 : expr, .term, +
		121 : expr, .expr + term, -
		122 : expr, .expr - term, -
		123 : expr, .term, -
		124 : term, .term * unary, <
		125 : term, .term / unary, <
		126 : term, .term mod unary, <
		127 : term, .unary, <
		128 : term, .term * unary, <=
		129 : term, .term / unary, <=
		130 : term, .term mod unary, <=
		131 : term, .unary, <=
		132 : term, .term * unary, >=
		133 : term, .term / unary, >=
		134 : term, .term mod unary, >=
		135 : term, .unary, >=
		136 : term, .term * unary, >
		137 : term, .term / unary, >
		138 : term, .term mod unary, >
		139 : term, .unary, >
		140 : term, .term * unary, )
		141 : term, .term / unary, )
		142 : term, .term mod unary, )
		143 : term, .unary, )
		144 : term, .term * unary, ,
		145 : term, .term / unary, ,
		146 : term, .term mod unary, ,
		147 : term, .unary, ,
		148 : term, .term * unary, or
		149 : term, .term / unary, or
		150 : term, .term mod unary, or
		151 : term, .unary, or
		152 : term, .term * unary, and
		153 : term, .term / unary, and
		154 : term, .term mod unary, and
		155 : term, .unary, and
		156 : term, .term * unary, eq
		157 : term, .term / unary, eq
		158 : term, .term mod unary, eq
		159 : term, .unary, eq
		160 : term, .term * unary, neq
		161 : term, .term / unary, neq
		162 : term, .term mod unary, neq
		163 : term, .unary, neq
		164 : term, .term * unary, +
		165 : term, .term / unary, +
		166 : term, .term mod unary, +
		167 : term, .unary, +
		168 : term, .term * unary, -
		169 : term, .term / unary, -
		170 : term, .term mod unary, -
		171 : term, .unary, -
		172 : term, .term * unary, *
		173 : term, .term / unary, *
		174 : term, .term mod unary, *
		175 : term, .unary, *
		176 : term, .term * unary, /
		177 : term, .term / unary, /
		178 : term, .term mod unary, /
		179 : term, .unary, /
		180 : term, .term * unary, mod
		181 : term, .term / unary, mod
		182 : term, .term mod unary, mod
		183 : term, .unary, mod
		184 : unary, .! unary, <
		185 : unary, .- unary, <
		186 : unary, .factor, <
		187 : unary, .! unary, <=
		188 : unary, .- unary, <=
		189 : unary, .factor, <=
		190 : unary, .! unary, >=
		191 : unary, .- unary, >=
		192 : unary, .factor, >=
		193 : unary, .! unary, >
		194 : unary, .- unary, >
		195 : unary, .factor, >
		196 : unary, .! unary, )
		197 : unary, .- unary, )
		198 : unary, .factor, )
		199 : unary, .! unary, ,
		200 : unary, .- unary, ,
		201 : unary, .factor, ,
		202 : unary, .! unary, or
		203 : unary, .- unary, or
		204 : unary, .factor, or
		205 : unary, .! unary, and
		206 : unary, .- unary, and
		207 : unary, .factor, and
		208 : unary, .! unary, eq
		209 : unary, .- unary, eq
		210 : unary, .factor, eq
		211 : unary, .! unary, neq
		212 : unary, .- unary, neq
		213 : unary, .factor, neq
		214 : unary, .! unary, +
		215 : unary, .- unary, +
		216 : unary, .factor, +
		217 : unary, .! unary, -
		218 : unary, .- unary, -
		219 : unary, .factor, -
		220 : unary, .! unary, *
		221 : unary, .- unary, *
		222 : unary, .factor, *
		223 : unary, .! unary, /
		224 : unary, .- unary, /
		225 : unary, .factor, /
		226 : unary, .! unary, mod
		227 : unary, .- unary, mod
		228 : unary, .factor, mod
		229 : factor, .( bool ), <
		230 : factor, .loc, <
		231 : factor, .id ( args ), <
		232 : factor, .num, <
		233 : factor, .real, <
		234 : factor, .true, <
		235 : factor, .false, <
		236 : factor, .( bool ), <=
		237 : factor, .loc, <=
		238 : factor, .id ( args ), <=
		239 : factor, .num, <=
		240 : factor, .real, <=
		241 : factor, .true, <=
		242 : factor, .false, <=
		243 : factor, .( bool ), >=
		244 : factor, .loc, >=
		245 : factor, .id ( args ), >=
		246 : factor, .num, >=
		247 : factor, .real, >=
		248 : factor, .true, >=
		249 : factor, .false, >=
		250 : factor, .( bool ), >
		251 : factor, .loc, >
		252 : factor, .id ( args ), >
		253 : factor, .num, >
		254 : factor, .real, >
		255 : factor, .true, >
		256 : factor, .false, >
		257 : factor, .( bool ), )
		258 : factor, .loc, )
		259 : factor, .id ( args ), )
		260 : factor, .num, )
		261 : factor, .real, )
		262 : factor, .true, )
		263 : factor, .false, )
		264 : factor, .( bool ), ,
		265 : factor, .loc, ,
		266 : factor, .id ( args ), ,
		267 : factor, .num, ,
		268 : factor, .real, ,
		269 : factor, .true, ,
		270 : factor, .false, ,
		271 : factor, .( bool ), or
		272 : factor, .loc, or
		273 : factor, .id ( args ), or
		274 : factor, .num, or
		275 : factor, .real, or
		276 : factor, .true, or
		277 : factor, .false, or
		278 : factor, .( bool ), and
		279 : factor, .loc, and
		280 : factor, .id ( args ), and
		281 : factor, .num, and
		282 : factor, .real, and
		283 : factor, .true, and
		284 : factor, .false, and
		285 : factor, .( bool ), eq
		286 : factor, .loc, eq
		287 : factor, .id ( args ), eq
		288 : factor, .num, eq
		289 : factor, .real, eq
		290 : factor, .true, eq
		291 : factor, .false, eq
		292 : factor, .( bool ), neq
		293 : factor, .loc, neq
		294 : factor, .id ( args ), neq
		295 : factor, .num, neq
		296 : factor, .real, neq
		297 : factor, .true, neq
		298 : factor, .false, neq
		299 : factor, .( bool ), +
		300 : factor, .loc, +
		301 : factor, .id ( args ), +
		302 : factor, .num, +
		303 : factor, .real, +
		304 : factor, .true, +
		305 : factor, .false, +
		306 : factor, .( bool ), -
		307 : factor, .loc, -
		308 : factor, .id ( args ), -
		309 : factor, .num, -
		310 : factor, .real, -
		311 : factor, .true, -
		312 : factor, .false, -
		313 : factor, .( bool ), *
		314 : factor, .loc, *
		315 : factor, .id ( args ), *
		316 : factor, .num, *
		317 : factor, .real, *
		318 : factor, .true, *
		319 : factor, .false, *
		320 : factor, .( bool ), /
		321 : factor, .loc, /
		322 : factor, .id ( args ), /
		323 : factor, .num, /
		324 : factor, .real, /
		325 : factor, .true, /
		326 : factor, .false, /
		327 : factor, .( bool ), mod
		328 : factor, .loc, mod
		329 : factor, .id ( args ), mod
		330 : factor, .num, mod
		331 : factor, .real, mod
		332 : factor, .true, mod
		333 : factor, .false, mod
		334 : loc, .loc [ bool ], <
		335 : loc, .id, <
		336 : loc, .loc [ bool ], <=
		337 : loc, .id, <=
		338 : loc, .loc [ bool ], >=
		339 : loc, .id, >=
		340 : loc, .loc [ bool ], >
		341 : loc, .id, >
		342 : loc, .loc [ bool ], or
		343 : loc, .id, or
		344 : loc, .loc [ bool ], and
		345 : loc, .id, and
		346 : loc, .loc [ bool ], eq
		347 : loc, .id, eq
		348 : loc, .loc [ bool ], neq
		349 : loc, .id, neq
		350 : loc, .loc [ bool ], +
		351 : loc, .id, +
		352 : loc, .loc [ bool ], -
		353 : loc, .id, -
		354 : loc, .loc [ bool ], *
		355 : loc, .id, *
		356 : loc, .loc [ bool ], /
		357 : loc, .id, /
		358 : loc, .loc [ bool ], mod
		359 : loc, .id, mod
	[329] 
		0 : factor, ( bool .), ]
		1 : factor, ( bool .), or
		2 : factor, ( bool .), and
		3 : factor, ( bool .), eq
		4 : factor, ( bool .), neq
		5 : factor, ( bool .), +
		6 : factor, ( bool .), -
		7 : factor, ( bool .), *
		8 : factor, ( bool .), /
		9 : factor, ( bool .), mod
		10 : bool, bool .or join, )
		11 : bool, bool .or join, or
	[330] 
		0 : unary, - unary ., ]
		1 : unary, - unary ., or
		2 : unary, - unary ., and
		3 : unary, - unary ., eq
		4 : unary, - unary ., neq
		5 : unary, - unary ., +
		6 : unary, - unary ., -
		7 : unary, - unary ., *
		8 : unary, - unary ., /
		9 : unary, - unary ., mod
	[331] 
		0 : unary, ! unary ., ]
		1 : unary, ! unary ., or
		2 : unary, ! unary ., and
		3 : unary, ! unary ., eq
		4 : unary, ! unary ., neq
		5 : unary, ! unary ., +
		6 : unary, ! unary ., -
		7 : unary, ! unary ., *
		8 : unary, ! unary ., /
		9 : unary, ! unary ., mod
	[332] 
		0 : factor, id ( args ) ., <
		1 : factor, id ( args ) ., <=
		2 : factor, id ( args ) ., >=
		3 : factor, id ( args ) ., >
		4 : factor, id ( args ) ., ]
		5 : factor, id ( args ) ., or
		6 : factor, id ( args ) ., and
		7 : factor, id ( args ) ., eq
		8 : factor, id ( args ) ., neq
		9 : factor, id ( args ) ., +
		10 : factor, id ( args ) ., -
		11 : factor, id ( args ) ., *
		12 : factor, id ( args ) ., /
		13 : factor, id ( args ) ., mod
	[333] 
		0 : loc, loc [ bool ] ., <
		1 : loc, loc [ bool ] ., <=
		2 : loc, loc [ bool ] ., >=
		3 : loc, loc [ bool ] ., >
		4 : loc, loc [ bool ] ., ;
		5 : loc, loc [ bool ] ., or
		6 : loc, loc [ bool ] ., and
		7 : loc, loc [ bool ] ., eq
		8 : loc, loc [ bool ] ., neq
		9 : loc, loc [ bool ] ., +
		10 : loc, loc [ bool ] ., -
		11 : loc, loc [ bool ] ., *
		12 : loc, loc [ bool ] ., /
		13 : loc, loc [ bool ] ., mod
		14 : loc, loc [ bool ] ., [
	[334] 
		0 : loc, loc [ bool ] ., <
		1 : loc, loc [ bool ] ., <=
		2 : loc, loc [ bool ] ., >=
		3 : loc, loc [ bool ] ., >
		4 : loc, loc [ bool ] ., )
		5 : loc, loc [ bool ] ., or
		6 : loc, loc [ bool ] ., and
		7 : loc, loc [ bool ] ., eq
		8 : loc, loc [ bool ] ., neq
		9 : loc, loc [ bool ] ., +
		10 : loc, loc [ bool ] ., -
		11 : loc, loc [ bool ] ., *
		12 : loc, loc [ bool ] ., /
		13 : loc, loc [ bool ] ., mod
		14 : loc, loc [ bool ] ., [
	[335] 
		0 : stmt, block ., }
		1 : stmt, block ., else
		2 : stmt, block ., [
		3 : stmt, block ., id
		4 : stmt, block ., if
		5 : stmt, block ., while
		6 : stmt, block ., do
		7 : stmt, block ., return
		8 : stmt, block ., {
	[336] 
		0 : stmt, if ( bool ) M stmt ., }
		1 : stmt, if ( bool ) M stmt .else M stmt, }
		2 : stmt, if ( bool ) M stmt ., [
		3 : stmt, if ( bool ) M stmt .else M stmt, [
		4 : stmt, if ( bool ) M stmt ., id
		5 : stmt, if ( bool ) M stmt .else M stmt, id
		6 : stmt, if ( bool ) M stmt ., if
		7 : stmt, if ( bool ) M stmt .else M stmt, if
		8 : stmt, if ( bool ) M stmt ., while
		9 : stmt, if ( bool ) M stmt .else M stmt, while
		10 : stmt, if ( bool ) M stmt ., do
		11 : stmt, if ( bool ) M stmt .else M stmt, do
		12 : stmt, if ( bool ) M stmt ., return
		13 : stmt, if ( bool ) M stmt .else M stmt, return
		14 : stmt, if ( bool ) M stmt ., {
		15 : stmt, if ( bool ) M stmt .else M stmt, {
		16 : stmt, if ( bool ) M stmt ., else
		17 : stmt, if ( bool ) M stmt .else M stmt, else
	[337] 
		0 : stmt, loc .= bool ;, }
		1 : stmt, loc .= bool ;, else
		2 : stmt, loc .= bool ;, [
		3 : stmt, loc .= bool ;, id
		4 : stmt, loc .= bool ;, if
		5 : stmt, loc .= bool ;, while
		6 : stmt, loc .= bool ;, do
		7 : stmt, loc .= bool ;, return
		8 : stmt, loc .= bool ;, {
		9 : loc, loc .[ bool ], =
		10 : loc, loc .[ bool ], [
	[338] 
		0 : block, { .decls stmts }, }
		1 : block, { .decls stmts }, else
		2 : block, { .decls stmts }, [
		3 : block, { .decls stmts }, id
		4 : block, { .decls stmts }, if
		5 : block, { .decls stmts }, while
		6 : block, { .decls stmts }, do
		7 : block, { .decls stmts }, return
		8 : block, { .decls stmts }, {
		9 : decls, .decls decl, [
		10 : decls, .decls decl, id
		11 : decls, .decls decl, if
		12 : decls, .decls decl, while
		13 : decls, .decls decl, do
		14 : decls, .decls decl, return
		15 : decls, .decls decl, {
		16 : decls, .decls decl, }
		17 : decls, ., [
		18 : decls, ., id
		19 : decls, ., if
		20 : decls, ., while
		21 : decls, ., do
		22 : decls, ., return
		23 : decls, ., {
		24 : decls, ., }
		25 : decls, .decls decl, basic
		26 : decls, ., basic
	[339] 
		0 : stmt, if .( bool ) M stmt, }
		1 : stmt, if .( bool ) M stmt else M stmt, }
		2 : stmt, if .( bool ) M stmt, else
		3 : stmt, if .( bool ) M stmt else M stmt, else
		4 : stmt, if .( bool ) M stmt, [
		5 : stmt, if .( bool ) M stmt else M stmt, [
		6 : stmt, if .( bool ) M stmt, id
		7 : stmt, if .( bool ) M stmt else M stmt, id
		8 : stmt, if .( bool ) M stmt, if
		9 : stmt, if .( bool ) M stmt else M stmt, if
		10 : stmt, if .( bool ) M stmt, while
		11 : stmt, if .( bool ) M stmt else M stmt, while
		12 : stmt, if .( bool ) M stmt, do
		13 : stmt, if .( bool ) M stmt else M stmt, do
		14 : stmt, if .( bool ) M stmt, return
		15 : stmt, if .( bool ) M stmt else M stmt, return
		16 : stmt, if .( bool ) M stmt, {
		17 : stmt, if .( bool ) M stmt else M stmt, {
	[340] 
		0 : stmt, while .N ( bool ) M stmt, }
		1 : stmt, while .N ( bool ) M stmt, else
		2 : stmt, while .N ( bool ) M stmt, [
		3 : stmt, while .N ( bool ) M stmt, id
		4 : stmt, while .N ( bool ) M stmt, if
		5 : stmt, while .N ( bool ) M stmt, while
		6 : stmt, while .N ( bool ) M stmt, do
		7 : stmt, while .N ( bool ) M stmt, return
		8 : stmt, while .N ( bool ) M stmt, {
		9 : N, ., (
		10 : N, ., [
		11 : N, ., id
		12 : N, ., if
		13 : N, ., while
		14 : N, ., do
		15 : N, ., return
		16 : N, ., {
	[341] 
		0 : stmt, do .N stmt while ( bool ) M ;, }
		1 : stmt, do .N stmt while ( bool ) M ;, else
		2 : stmt, do .N stmt while ( bool ) M ;, [
		3 : stmt, do .N stmt while ( bool ) M ;, id
		4 : stmt, do .N stmt while ( bool ) M ;, if
		5 : stmt, do .N stmt while ( bool ) M ;, while
		6 : stmt, do .N stmt while ( bool ) M ;, do
		7 : stmt, do .N stmt while ( bool ) M ;, return
		8 : stmt, do .N stmt while ( bool ) M ;, {
		9 : N, ., (
		10 : N, ., [
		11 : N, ., id
		12 : N, ., if
		13 : N, ., while
		14 : N, ., do
		15 : N, ., return
		16 : N, ., {
	[342] 
		0 : stmt, return .arg ;, }
		1 : stmt, return .arg ;, else
		2 : stmt, return .arg ;, [
		3 : stmt, return .arg ;, id
		4 : stmt, return .arg ;, if
		5 : stmt, return .arg ;, while
		6 : stmt, return .arg ;, do
		7 : stmt, return .arg ;, return
		8 : stmt, return .arg ;, {
		9 : arg, .loc, ;
		10 : arg, .bool, ;
		11 : loc, .loc [ bool ], ;
		12 : loc, .id, ;
		13 : bool, .bool or join, ;
		14 : bool, .join, ;
		15 : loc, .loc [ bool ], [
		16 : loc, .id, [
		17 : bool, .bool or join, or
		18 : bool, .join, or
		19 : join, .join and equality, ;
		20 : join, .equality, ;
		21 : join, .join and equality, or
		22 : join, .equality, or
		23 : join, .join and equality, and
		24 : join, .equality, and
		25 : equality, .equality eq rel, ;
		26 : equality, .equality neq rel, ;
		27 : equality, .rel, ;
		28 : equality, .equality eq rel, or
		29 : equality, .equality neq rel, or
		30 : equality, .rel, or
		31 : equality, .equality eq rel, and
		32 : equality, .equality neq rel, and
		33 : equality, .rel, and
		34 : equality, .equality eq rel, eq
		35 : equality, .equality neq rel, eq
		36 : equality, .rel, eq
		37 : equality, .equality eq rel, neq
		38 : equality, .equality neq rel, neq
		39 : equality, .rel, neq
		40 : rel, .expr < expr, ;
		41 : rel, .expr <= expr, ;
		42 : rel, .expr >= expr, ;
		43 : rel, .expr > expr, ;
		44 : rel, .expr, ;
		45 : rel, .expr < expr, or
		46 : rel, .expr <= expr, or
		47 : rel, .expr >= expr, or
		48 : rel, .expr > expr, or
		49 : rel, .expr, or
		50 : rel, .expr < expr, and
		51 : rel, .expr <= expr, and
		52 : rel, .expr >= expr, and
		53 : rel, .expr > expr, and
		54 : rel, .expr, and
		55 : rel, .expr < expr, eq
		56 : rel, .expr <= expr, eq
		57 : rel, .expr >= expr, eq
		58 : rel, .expr > expr, eq
		59 : rel, .expr, eq
		60 : rel, .expr < expr, neq
		61 : rel, .expr <= expr, neq
		62 : rel, .expr >= expr, neq
		63 : rel, .expr > expr, neq
		64 : rel, .expr, neq
		65 : expr, .expr + term, <
		66 : expr, .expr - term, <
		67 : expr, .term, <
		68 : expr, .expr + term, <=
		69 : expr, .expr - term, <=
		70 : expr, .term, <=
		71 : expr, .expr + term, >=
		72 : expr, .expr - term, >=
		73 : expr, .term, >=
		74 : expr, .expr + term, >
		75 : expr, .expr - term, >
		76 : expr, .term, >
		77 : expr, .expr + term, ;
		78 : expr, .expr - term, ;
		79 : expr, .term, ;
		80 : expr, .expr + term, or
		81 : expr, .expr - term, or
		82 : expr, .term, or
		83 : expr, .expr + term, and
		84 : expr, .expr - term, and
		85 : expr, .term, and
		86 : expr, .expr + term, eq
		87 : expr, .expr - term, eq
		88 : expr, .term, eq
		89 : expr, .expr + term, neq
		90 : expr, .expr - term, neq
		91 : expr, .term, neq
		92 : expr, .expr + term, +
		93 : expr, .expr - term, +
		94 : expr, .term, +
		95 : expr, .expr + term, -
		96 : expr, .expr - term, -
		97 : expr, .term, -
		98 : term, .term * unary, <
		99 : term, .term / unary, <
		100 : term, .term mod unary, <
		101 : term, .unary, <
		102 : term, .term * unary, <=
		103 : term, .term / unary, <=
		104 : term, .term mod unary, <=
		105 : term, .unary, <=
		106 : term, .term * unary, >=
		107 : term, .term / unary, >=
		108 : term, .term mod unary, >=
		109 : term, .unary, >=
		110 : term, .term * unary, >
		111 : term, .term / unary, >
		112 : term, .term mod unary, >
		113 : term, .unary, >
		114 : term, .term * unary, ;
		115 : term, .term / unary, ;
		116 : term, .term mod unary, ;
		117 : term, .unary, ;
		118 : term, .term * unary, or
		119 : term, .term / unary, or
		120 : term, .term mod unary, or
		121 : term, .unary, or
		122 : term, .term * unary, and
		123 : term, .term / unary, and
		124 : term, .term mod unary, and
		125 : term, .unary, and
		126 : term, .term * unary, eq
		127 : term, .term / unary, eq
		128 : term, .term mod unary, eq
		129 : term, .unary, eq
		130 : term, .term * unary, neq
		131 : term, .term / unary, neq
		132 : term, .term mod unary, neq
		133 : term, .unary, neq
		134 : term, .term * unary, +
		135 : term, .term / unary, +
		136 : term, .term mod unary, +
		137 : term, .unary, +
		138 : term, .term * unary, -
		139 : term, .term / unary, -
		140 : term, .term mod unary, -
		141 : term, .unary, -
		142 : term, .term * unary, *
		143 : term, .term / unary, *
		144 : term, .term mod unary, *
		145 : term, .unary, *
		146 : term, .term * unary, /
		147 : term, .term / unary, /
		148 : term, .term mod unary, /
		149 : term, .unary, /
		150 : term, .term * unary, mod
		151 : term, .term / unary, mod
		152 : term, .term mod unary, mod
		153 : term, .unary, mod
		154 : unary, .! unary, <
		155 : unary, .- unary, <
		156 : unary, .factor, <
		157 : unary, .! unary, <=
		158 : unary, .- unary, <=
		159 : unary, .factor, <=
		160 : unary, .! unary, >=
		161 : unary, .- unary, >=
		162 : unary, .factor, >=
		163 : unary, .! unary, >
		164 : unary, .- unary, >
		165 : unary, .factor, >
		166 : unary, .! unary, ;
		167 : unary, .- unary, ;
		168 : unary, .factor, ;
		169 : unary, .! unary, or
		170 : unary, .- unary, or
		171 : unary, .factor, or
		172 : unary, .! unary, and
		173 : unary, .- unary, and
		174 : unary, .factor, and
		175 : unary, .! unary, eq
		176 : unary, .- unary, eq
		177 : unary, .factor, eq
		178 : unary, .! unary, neq
		179 : unary, .- unary, neq
		180 : unary, .factor, neq
		181 : unary, .! unary, +
		182 : unary, .- unary, +
		183 : unary, .factor, +
		184 : unary, .! unary, -
		185 : unary, .- unary, -
		186 : unary, .factor, -
		187 : unary, .! unary, *
		188 : unary, .- unary, *
		189 : unary, .factor, *
		190 : unary, .! unary, /
		191 : unary, .- unary, /
		192 : unary, .factor, /
		193 : unary, .! unary, mod
		194 : unary, .- unary, mod
		195 : unary, .factor, mod
		196 : factor, .( bool ), <
		197 : factor, .loc, <
		198 : factor, .id ( args ), <
		199 : factor, .num, <
		200 : factor, .real, <
		201 : factor, .true, <
		202 : factor, .false, <
		203 : factor, .( bool ), <=
		204 : factor, .loc, <=
		205 : factor, .id ( args ), <=
		206 : factor, .num, <=
		207 : factor, .real, <=
		208 : factor, .true, <=
		209 : factor, .false, <=
		210 : factor, .( bool ), >=
		211 : factor, .loc, >=
		212 : factor, .id ( args ), >=
		213 : factor, .num, >=
		214 : factor, .real, >=
		215 : factor, .true, >=
		216 : factor, .false, >=
		217 : factor, .( bool ), >
		218 : factor, .loc, >
		219 : factor, .id ( args ), >
		220 : factor, .num, >
		221 : factor, .real, >
		222 : factor, .true, >
		223 : factor, .false, >
		224 : factor, .( bool ), ;
		225 : factor, .loc, ;
		226 : factor, .id ( args ), ;
		227 : factor, .num, ;
		228 : factor, .real, ;
		229 : factor, .true, ;
		230 : factor, .false, ;
		231 : factor, .( bool ), or
		232 : factor, .loc, or
		233 : factor, .id ( args ), or
		234 : factor, .num, or
		235 : factor, .real, or
		236 : factor, .true, or
		237 : factor, .false, or
		238 : factor, .( bool ), and
		239 : factor, .loc, and
		240 : factor, .id ( args ), and
		241 : factor, .num, and
		242 : factor, .real, and
		243 : factor, .true, and
		244 : factor, .false, and
		245 : factor, .( bool ), eq
		246 : factor, .loc, eq
		247 : factor, .id ( args ), eq
		248 : factor, .num, eq
		249 : factor, .real, eq
		250 : factor, .true, eq
		251 : factor, .false, eq
		252 : factor, .( bool ), neq
		253 : factor, .loc, neq
		254 : factor, .id ( args ), neq
		255 : factor, .num, neq
		256 : factor, .real, neq
		257 : factor, .true, neq
		258 : factor, .false, neq
		259 : factor, .( bool ), +
		260 : factor, .loc, +
		261 : factor, .id ( args ), +
		262 : factor, .num, +
		263 : factor, .real, +
		264 : factor, .true, +
		265 : factor, .false, +
		266 : factor, .( bool ), -
		267 : factor, .loc, -
		268 : factor, .id ( args ), -
		269 : factor, .num, -
		270 : factor, .real, -
		271 : factor, .true, -
		272 : factor, .false, -
		273 : factor, .( bool ), *
		274 : factor, .loc, *
		275 : factor, .id ( args ), *
		276 : factor, .num, *
		277 : factor, .real, *
		278 : factor, .true, *
		279 : factor, .false, *
		280 : factor, .( bool ), /
		281 : factor, .loc, /
		282 : factor, .id ( args ), /
		283 : factor, .num, /
		284 : factor, .real, /
		285 : factor, .true, /
		286 : factor, .false, /
		287 : factor, .( bool ), mod
		288 : factor, .loc, mod
		289 : factor, .id ( args ), mod
		290 : factor, .num, mod
		291 : factor, .real, mod
		292 : factor, .true, mod
		293 : factor, .false, mod
		294 : loc, .loc [ bool ], <
		295 : loc, .id, <
		296 : loc, .loc [ bool ], <=
		297 : loc, .id, <=
		298 : loc, .loc [ bool ], >=
		299 : loc, .id, >=
		300 : loc, .loc [ bool ], >
		301 : loc, .id, >
		302 : loc, .loc [ bool ], or
		303 : loc, .id, or
		304 : loc, .loc [ bool ], and
		305 : loc, .id, and
		306 : loc, .loc [ bool ], eq
		307 : loc, .id, eq
		308 : loc, .loc [ bool ], neq
		309 : loc, .id, neq
		310 : loc, .loc [ bool ], +
		311 : loc, .id, +
		312 : loc, .loc [ bool ], -
		313 : loc, .id, -
		314 : loc, .loc [ bool ], *
		315 : loc, .id, *
		316 : loc, .loc [ bool ], /
		317 : loc, .id, /
		318 : loc, .loc [ bool ], mod
		319 : loc, .id, mod
	[343] 
		0 : loc, loc [ .bool ], )
		1 : loc, loc [ .bool ], or
		2 : loc, loc [ .bool ], and
		3 : loc, loc [ .bool ], eq
		4 : loc, loc [ .bool ], neq
		5 : loc, loc [ .bool ], +
		6 : loc, loc [ .bool ], -
		7 : loc, loc [ .bool ], *
		8 : loc, loc [ .bool ], /
		9 : loc, loc [ .bool ], mod
		10 : loc, loc [ .bool ], [
		11 : bool, .bool or join, ]
		12 : bool, .join, ]
		13 : bool, .bool or join, or
		14 : bool, .join, or
		15 : join, .join and equality, ]
		16 : join, .equality, ]
		17 : join, .join and equality, or
		18 : join, .equality, or
		19 : join, .join and equality, and
		20 : join, .equality, and
		21 : equality, .equality eq rel, ]
		22 : equality, .equality neq rel, ]
		23 : equality, .rel, ]
		24 : equality, .equality eq rel, or
		25 : equality, .equality neq rel, or
		26 : equality, .rel, or
		27 : equality, .equality eq rel, and
		28 : equality, .equality neq rel, and
		29 : equality, .rel, and
		30 : equality, .equality eq rel, eq
		31 : equality, .equality neq rel, eq
		32 : equality, .rel, eq
		33 : equality, .equality eq rel, neq
		34 : equality, .equality neq rel, neq
		35 : equality, .rel, neq
		36 : rel, .expr < expr, ]
		37 : rel, .expr <= expr, ]
		38 : rel, .expr >= expr, ]
		39 : rel, .expr > expr, ]
		40 : rel, .expr, ]
		41 : rel, .expr < expr, or
		42 : rel, .expr <= expr, or
		43 : rel, .expr >= expr, or
		44 : rel, .expr > expr, or
		45 : rel, .expr, or
		46 : rel, .expr < expr, and
		47 : rel, .expr <= expr, and
		48 : rel, .expr >= expr, and
		49 : rel, .expr > expr, and
		50 : rel, .expr, and
		51 : rel, .expr < expr, eq
		52 : rel, .expr <= expr, eq
		53 : rel, .expr >= expr, eq
		54 : rel, .expr > expr, eq
		55 : rel, .expr, eq
		56 : rel, .expr < expr, neq
		57 : rel, .expr <= expr, neq
		58 : rel, .expr >= expr, neq
		59 : rel, .expr > expr, neq
		60 : rel, .expr, neq
		61 : expr, .expr + term, <
		62 : expr, .expr - term, <
		63 : expr, .term, <
		64 : expr, .expr + term, <=
		65 : expr, .expr - term, <=
		66 : expr, .term, <=
		67 : expr, .expr + term, >=
		68 : expr, .expr - term, >=
		69 : expr, .term, >=
		70 : expr, .expr + term, >
		71 : expr, .expr - term, >
		72 : expr, .term, >
		73 : expr, .expr + term, ]
		74 : expr, .expr - term, ]
		75 : expr, .term, ]
		76 : expr, .expr + term, or
		77 : expr, .expr - term, or
		78 : expr, .term, or
		79 : expr, .expr + term, and
		80 : expr, .expr - term, and
		81 : expr, .term, and
		82 : expr, .expr + term, eq
		83 : expr, .expr - term, eq
		84 : expr, .term, eq
		85 : expr, .expr + term, neq
		86 : expr, .expr - term, neq
		87 : expr, .term, neq
		88 : expr, .expr + term, +
		89 : expr, .expr - term, +
		90 : expr, .term, +
		91 : expr, .expr + term, -
		92 : expr, .expr - term, -
		93 : expr, .term, -
		94 : term, .term * unary, <
		95 : term, .term / unary, <
		96 : term, .term mod unary, <
		97 : term, .unary, <
		98 : term, .term * unary, <=
		99 : term, .term / unary, <=
		100 : term, .term mod unary, <=
		101 : term, .unary, <=
		102 : term, .term * unary, >=
		103 : term, .term / unary, >=
		104 : term, .term mod unary, >=
		105 : term, .unary, >=
		106 : term, .term * unary, >
		107 : term, .term / unary, >
		108 : term, .term mod unary, >
		109 : term, .unary, >
		110 : term, .term * unary, ]
		111 : term, .term / unary, ]
		112 : term, .term mod unary, ]
		113 : term, .unary, ]
		114 : term, .term * unary, or
		115 : term, .term / unary, or
		116 : term, .term mod unary, or
		117 : term, .unary, or
		118 : term, .term * unary, and
		119 : term, .term / unary, and
		120 : term, .term mod unary, and
		121 : term, .unary, and
		122 : term, .term * unary, eq
		123 : term, .term / unary, eq
		124 : term, .term mod unary, eq
		125 : term, .unary, eq
		126 : term, .term * unary, neq
		127 : term, .term / unary, neq
		128 : term, .term mod unary, neq
		129 : term, .unary, neq
		130 : term, .term * unary, +
		131 : term, .term / unary, +
		132 : term, .term mod unary, +
		133 : term, .unary, +
		134 : term, .term * unary, -
		135 : term, .term / unary, -
		136 : term, .term mod unary, -
		137 : term, .unary, -
		138 : term, .term * unary, *
		139 : term, .term / unary, *
		140 : term, .term mod unary, *
		141 : term, .unary, *
		142 : term, .term * unary, /
		143 : term, .term / unary, /
		144 : term, .term mod unary, /
		145 : term, .unary, /
		146 : term, .term * unary, mod
		147 : term, .term / unary, mod
		148 : term, .term mod unary, mod
		149 : term, .unary, mod
		150 : unary, .! unary, <
		151 : unary, .- unary, <
		152 : unary, .factor, <
		153 : unary, .! unary, <=
		154 : unary, .- unary, <=
		155 : unary, .factor, <=
		156 : unary, .! unary, >=
		157 : unary, .- unary, >=
		158 : unary, .factor, >=
		159 : unary, .! unary, >
		160 : unary, .- unary, >
		161 : unary, .factor, >
		162 : unary, .! unary, ]
		163 : unary, .- unary, ]
		164 : unary, .factor, ]
		165 : unary, .! unary, or
		166 : unary, .- unary, or
		167 : unary, .factor, or
		168 : unary, .! unary, and
		169 : unary, .- unary, and
		170 : unary, .factor, and
		171 : unary, .! unary, eq
		172 : unary, .- unary, eq
		173 : unary, .factor, eq
		174 : unary, .! unary, neq
		175 : unary, .- unary, neq
		176 : unary, .factor, neq
		177 : unary, .! unary, +
		178 : unary, .- unary, +
		179 : unary, .factor, +
		180 : unary, .! unary, -
		181 : unary, .- unary, -
		182 : unary, .factor, -
		183 : unary, .! unary, *
		184 : unary, .- unary, *
		185 : unary, .factor, *
		186 : unary, .! unary, /
		187 : unary, .- unary, /
		188 : unary, .factor, /
		189 : unary, .! unary, mod
		190 : unary, .- unary, mod
		191 : unary, .factor, mod
		192 : factor, .( bool ), <
		193 : factor, .loc, <
		194 : factor, .id ( args ), <
		195 : factor, .num, <
		196 : factor, .real, <
		197 : factor, .true, <
		198 : factor, .false, <
		199 : factor, .( bool ), <=
		200 : factor, .loc, <=
		201 : factor, .id ( args ), <=
		202 : factor, .num, <=
		203 : factor, .real, <=
		204 : factor, .true, <=
		205 : factor, .false, <=
		206 : factor, .( bool ), >=
		207 : factor, .loc, >=
		208 : factor, .id ( args ), >=
		209 : factor, .num, >=
		210 : factor, .real, >=
		211 : factor, .true, >=
		212 : factor, .false, >=
		213 : factor, .( bool ), >
		214 : factor, .loc, >
		215 : factor, .id ( args ), >
		216 : factor, .num, >
		217 : factor, .real, >
		218 : factor, .true, >
		219 : factor, .false, >
		220 : factor, .( bool ), ]
		221 : factor, .loc, ]
		222 : factor, .id ( args ), ]
		223 : factor, .num, ]
		224 : factor, .real, ]
		225 : factor, .true, ]
		226 : factor, .false, ]
		227 : factor, .( bool ), or
		228 : factor, .loc, or
		229 : factor, .id ( args ), or
		230 : factor, .num, or
		231 : factor, .real, or
		232 : factor, .true, or
		233 : factor, .false, or
		234 : factor, .( bool ), and
		235 : factor, .loc, and
		236 : factor, .id ( args ), and
		237 : factor, .num, and
		238 : factor, .real, and
		239 : factor, .true, and
		240 : factor, .false, and
		241 : factor, .( bool ), eq
		242 : factor, .loc, eq
		243 : factor, .id ( args ), eq
		244 : factor, .num, eq
		245 : factor, .real, eq
		246 : factor, .true, eq
		247 : factor, .false, eq
		248 : factor, .( bool ), neq
		249 : factor, .loc, neq
		250 : factor, .id ( args ), neq
		251 : factor, .num, neq
		252 : factor, .real, neq
		253 : factor, .true, neq
		254 : factor, .false, neq
		255 : factor, .( bool ), +
		256 : factor, .loc, +
		257 : factor, .id ( args ), +
		258 : factor, .num, +
		259 : factor, .real, +
		260 : factor, .true, +
		261 : factor, .false, +
		262 : factor, .( bool ), -
		263 : factor, .loc, -
		264 : factor, .id ( args ), -
		265 : factor, .num, -
		266 : factor, .real, -
		267 : factor, .true, -
		268 : factor, .false, -
		269 : factor, .( bool ), *
		270 : factor, .loc, *
		271 : factor, .id ( args ), *
		272 : factor, .num, *
		273 : factor, .real, *
		274 : factor, .true, *
		275 : factor, .false, *
		276 : factor, .( bool ), /
		277 : factor, .loc, /
		278 : factor, .id ( args ), /
		279 : factor, .num, /
		280 : factor, .real, /
		281 : factor, .true, /
		282 : factor, .false, /
		283 : factor, .( bool ), mod
		284 : factor, .loc, mod
		285 : factor, .id ( args ), mod
		286 : factor, .num, mod
		287 : factor, .real, mod
		288 : factor, .true, mod
		289 : factor, .false, mod
		290 : loc, .loc [ bool ], <
		291 : loc, .id, <
		292 : loc, .loc [ bool ], <=
		293 : loc, .id, <=
		294 : loc, .loc [ bool ], >=
		295 : loc, .id, >=
		296 : loc, .loc [ bool ], >
		297 : loc, .id, >
		298 : loc, .loc [ bool ], ]
		299 : loc, .id, ]
		300 : loc, .loc [ bool ], or
		301 : loc, .id, or
		302 : loc, .loc [ bool ], and
		303 : loc, .id, and
		304 : loc, .loc [ bool ], eq
		305 : loc, .id, eq
		306 : loc, .loc [ bool ], neq
		307 : loc, .id, neq
		308 : loc, .loc [ bool ], +
		309 : loc, .id, +
		310 : loc, .loc [ bool ], -
		311 : loc, .id, -
		312 : loc, .loc [ bool ], *
		313 : loc, .id, *
		314 : loc, .loc [ bool ], /
		315 : loc, .id, /
		316 : loc, .loc [ bool ], mod
		317 : loc, .id, mod
		318 : loc, .loc [ bool ], [
		319 : loc, .id, [
	[344] 
		0 : expr, expr + .term, )
		1 : expr, expr + .term, or
		2 : expr, expr + .term, and
		3 : expr, expr + .term, eq
		4 : expr, expr + .term, neq
		5 : expr, expr + .term, +
		6 : expr, expr + .term, -
		7 : term, .term * unary, )
		8 : term, .term / unary, )
		9 : term, .term mod unary, )
		10 : term, .unary, )
		11 : term, .term * unary, or
		12 : term, .term / unary, or
		13 : term, .term mod unary, or
		14 : term, .unary, or
		15 : term, .term * unary, and
		16 : term, .term / unary, and
		17 : term, .term mod unary, and
		18 : term, .unary, and
		19 : term, .term * unary, eq
		20 : term, .term / unary, eq
		21 : term, .term mod unary, eq
		22 : term, .unary, eq
		23 : term, .term * unary, neq
		24 : term, .term / unary, neq
		25 : term, .term mod unary, neq
		26 : term, .unary, neq
		27 : term, .term * unary, +
		28 : term, .term / unary, +
		29 : term, .term mod unary, +
		30 : term, .unary, +
		31 : term, .term * unary, -
		32 : term, .term / unary, -
		33 : term, .term mod unary, -
		34 : term, .unary, -
		35 : term, .term * unary, *
		36 : term, .term / unary, *
		37 : term, .term mod unary, *
		38 : term, .unary, *
		39 : term, .term * unary, /
		40 : term, .term / unary, /
		41 : term, .term mod unary, /
		42 : term, .unary, /
		43 : term, .term * unary, mod
		44 : term, .term / unary, mod
		45 : term, .term mod unary, mod
		46 : term, .unary, mod
		47 : unary, .! unary, )
		48 : unary, .- unary, )
		49 : unary, .factor, )
		50 : unary, .! unary, or
		51 : unary, .- unary, or
		52 : unary, .factor, or
		53 : unary, .! unary, and
		54 : unary, .- unary, and
		55 : unary, .factor, and
		56 : unary, .! unary, eq
		57 : unary, .- unary, eq
		58 : unary, .factor, eq
		59 : unary, .! unary, neq
		60 : unary, .- unary, neq
		61 : unary, .factor, neq
		62 : unary, .! unary, +
		63 : unary, .- unary, +
		64 : unary, .factor, +
		65 : unary, .! unary, -
		66 : unary, .- unary, -
		67 : unary, .factor, -
		68 : unary, .! unary, *
		69 : unary, .- unary, *
		70 : unary, .factor, *
		71 : unary, .! unary, /
		72 : unary, .- unary, /
		73 : unary, .factor, /
		74 : unary, .! unary, mod
		75 : unary, .- unary, mod
		76 : unary, .factor, mod
		77 : factor, .( bool ), )
		78 : factor, .loc, )
		79 : factor, .id ( args ), )
		80 : factor, .num, )
		81 : factor, .real, )
		82 : factor, .true, )
		83 : factor, .false, )
		84 : factor, .( bool ), or
		85 : factor, .loc, or
		86 : factor, .id ( args ), or
		87 : factor, .num, or
		88 : factor, .real, or
		89 : factor, .true, or
		90 : factor, .false, or
		91 : factor, .( bool ), and
		92 : factor, .loc, and
		93 : factor, .id ( args ), and
		94 : factor, .num, and
		95 : factor, .real, and
		96 : factor, .true, and
		97 : factor, .false, and
		98 : factor, .( bool ), eq
		99 : factor, .loc, eq
		100 : factor, .id ( args ), eq
		101 : factor, .num, eq
		102 : factor, .real, eq
		103 : factor, .true, eq
		104 : factor, .false, eq
		105 : factor, .( bool ), neq
		106 : factor, .loc, neq
		107 : factor, .id ( args ), neq
		108 : factor, .num, neq
		109 : factor, .real, neq
		110 : factor, .true, neq
		111 : factor, .false, neq
		112 : factor, .( bool ), +
		113 : factor, .loc, +
		114 : factor, .id ( args ), +
		115 : factor, .num, +
		116 : factor, .real, +
		117 : factor, .true, +
		118 : factor, .false, +
		119 : factor, .( bool ), -
		120 : factor, .loc, -
		121 : factor, .id ( args ), -
		122 : factor, .num, -
		123 : factor, .real, -
		124 : factor, .true, -
		125 : factor, .false, -
		126 : factor, .( bool ), *
		127 : factor, .loc, *
		128 : factor, .id ( args ), *
		129 : factor, .num, *
		130 : factor, .real, *
		131 : factor, .true, *
		132 : factor, .false, *
		133 : factor, .( bool ), /
		134 : factor, .loc, /
		135 : factor, .id ( args ), /
		136 : factor, .num, /
		137 : factor, .real, /
		138 : factor, .true, /
		139 : factor, .false, /
		140 : factor, .( bool ), mod
		141 : factor, .loc, mod
		142 : factor, .id ( args ), mod
		143 : factor, .num, mod
		144 : factor, .real, mod
		145 : factor, .true, mod
		146 : factor, .false, mod
		147 : loc, .loc [ bool ], )
		148 : loc, .id, )
		149 : loc, .loc [ bool ], or
		150 : loc, .id, or
		151 : loc, .loc [ bool ], and
		152 : loc, .id, and
		153 : loc, .loc [ bool ], eq
		154 : loc, .id, eq
		155 : loc, .loc [ bool ], neq
		156 : loc, .id, neq
		157 : loc, .loc [ bool ], +
		158 : loc, .id, +
		159 : loc, .loc [ bool ], -
		160 : loc, .id, -
		161 : loc, .loc [ bool ], *
		162 : loc, .id, *
		163 : loc, .loc [ bool ], /
		164 : loc, .id, /
		165 : loc, .loc [ bool ], mod
		166 : loc, .id, mod
		167 : loc, .loc [ bool ], [
		168 : loc, .id, [
	[345] 
		0 : expr, expr - .term, )
		1 : expr, expr - .term, or
		2 : expr, expr - .term, and
		3 : expr, expr - .term, eq
		4 : expr, expr - .term, neq
		5 : expr, expr - .term, +
		6 : expr, expr - .term, -
		7 : term, .term * unary, )
		8 : term, .term / unary, )
		9 : term, .term mod unary, )
		10 : term, .unary, )
		11 : term, .term * unary, or
		12 : term, .term / unary, or
		13 : term, .term mod unary, or
		14 : term, .unary, or
		15 : term, .term * unary, and
		16 : term, .term / unary, and
		17 : term, .term mod unary, and
		18 : term, .unary, and
		19 : term, .term * unary, eq
		20 : term, .term / unary, eq
		21 : term, .term mod unary, eq
		22 : term, .unary, eq
		23 : term, .term * unary, neq
		24 : term, .term / unary, neq
		25 : term, .term mod unary, neq
		26 : term, .unary, neq
		27 : term, .term * unary, +
		28 : term, .term / unary, +
		29 : term, .term mod unary, +
		30 : term, .unary, +
		31 : term, .term * unary, -
		32 : term, .term / unary, -
		33 : term, .term mod unary, -
		34 : term, .unary, -
		35 : term, .term * unary, *
		36 : term, .term / unary, *
		37 : term, .term mod unary, *
		38 : term, .unary, *
		39 : term, .term * unary, /
		40 : term, .term / unary, /
		41 : term, .term mod unary, /
		42 : term, .unary, /
		43 : term, .term * unary, mod
		44 : term, .term / unary, mod
		45 : term, .term mod unary, mod
		46 : term, .unary, mod
		47 : unary, .! unary, )
		48 : unary, .- unary, )
		49 : unary, .factor, )
		50 : unary, .! unary, or
		51 : unary, .- unary, or
		52 : unary, .factor, or
		53 : unary, .! unary, and
		54 : unary, .- unary, and
		55 : unary, .factor, and
		56 : unary, .! unary, eq
		57 : unary, .- unary, eq
		58 : unary, .factor, eq
		59 : unary, .! unary, neq
		60 : unary, .- unary, neq
		61 : unary, .factor, neq
		62 : unary, .! unary, +
		63 : unary, .- unary, +
		64 : unary, .factor, +
		65 : unary, .! unary, -
		66 : unary, .- unary, -
		67 : unary, .factor, -
		68 : unary, .! unary, *
		69 : unary, .- unary, *
		70 : unary, .factor, *
		71 : unary, .! unary, /
		72 : unary, .- unary, /
		73 : unary, .factor, /
		74 : unary, .! unary, mod
		75 : unary, .- unary, mod
		76 : unary, .factor, mod
		77 : factor, .( bool ), )
		78 : factor, .loc, )
		79 : factor, .id ( args ), )
		80 : factor, .num, )
		81 : factor, .real, )
		82 : factor, .true, )
		83 : factor, .false, )
		84 : factor, .( bool ), or
		85 : factor, .loc, or
		86 : factor, .id ( args ), or
		87 : factor, .num, or
		88 : factor, .real, or
		89 : factor, .true, or
		90 : factor, .false, or
		91 : factor, .( bool ), and
		92 : factor, .loc, and
		93 : factor, .id ( args ), and
		94 : factor, .num, and
		95 : factor, .real, and
		96 : factor, .true, and
		97 : factor, .false, and
		98 : factor, .( bool ), eq
		99 : factor, .loc, eq
		100 : factor, .id ( args ), eq
		101 : factor, .num, eq
		102 : factor, .real, eq
		103 : factor, .true, eq
		104 : factor, .false, eq
		105 : factor, .( bool ), neq
		106 : factor, .loc, neq
		107 : factor, .id ( args ), neq
		108 : factor, .num, neq
		109 : factor, .real, neq
		110 : factor, .true, neq
		111 : factor, .false, neq
		112 : factor, .( bool ), +
		113 : factor, .loc, +
		114 : factor, .id ( args ), +
		115 : factor, .num, +
		116 : factor, .real, +
		117 : factor, .true, +
		118 : factor, .false, +
		119 : factor, .( bool ), -
		120 : factor, .loc, -
		121 : factor, .id ( args ), -
		122 : factor, .num, -
		123 : factor, .real, -
		124 : factor, .true, -
		125 : factor, .false, -
		126 : factor, .( bool ), *
		127 : factor, .loc, *
		128 : factor, .id ( args ), *
		129 : factor, .num, *
		130 : factor, .real, *
		131 : factor, .true, *
		132 : factor, .false, *
		133 : factor, .( bool ), /
		134 : factor, .loc, /
		135 : factor, .id ( args ), /
		136 : factor, .num, /
		137 : factor, .real, /
		138 : factor, .true, /
		139 : factor, .false, /
		140 : factor, .( bool ), mod
		141 : factor, .loc, mod
		142 : factor, .id ( args ), mod
		143 : factor, .num, mod
		144 : factor, .real, mod
		145 : factor, .true, mod
		146 : factor, .false, mod
		147 : loc, .loc [ bool ], )
		148 : loc, .id, )
		149 : loc, .loc [ bool ], or
		150 : loc, .id, or
		151 : loc, .loc [ bool ], and
		152 : loc, .id, and
		153 : loc, .loc [ bool ], eq
		154 : loc, .id, eq
		155 : loc, .loc [ bool ], neq
		156 : loc, .id, neq
		157 : loc, .loc [ bool ], +
		158 : loc, .id, +
		159 : loc, .loc [ bool ], -
		160 : loc, .id, -
		161 : loc, .loc [ bool ], *
		162 : loc, .id, *
		163 : loc, .loc [ bool ], /
		164 : loc, .id, /
		165 : loc, .loc [ bool ], mod
		166 : loc, .id, mod
		167 : loc, .loc [ bool ], [
		168 : loc, .id, [
	[346] 
		0 : term, term * .unary, )
		1 : term, term * .unary, or
		2 : term, term * .unary, and
		3 : term, term * .unary, eq
		4 : term, term * .unary, neq
		5 : term, term * .unary, +
		6 : term, term * .unary, -
		7 : term, term * .unary, *
		8 : term, term * .unary, /
		9 : term, term * .unary, mod
		10 : unary, .! unary, )
		11 : unary, .- unary, )
		12 : unary, .factor, )
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), )
		41 : factor, .loc, )
		42 : factor, .id ( args ), )
		43 : factor, .num, )
		44 : factor, .real, )
		45 : factor, .true, )
		46 : factor, .false, )
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], )
		111 : loc, .id, )
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[347] 
		0 : term, term / .unary, )
		1 : term, term / .unary, or
		2 : term, term / .unary, and
		3 : term, term / .unary, eq
		4 : term, term / .unary, neq
		5 : term, term / .unary, +
		6 : term, term / .unary, -
		7 : term, term / .unary, *
		8 : term, term / .unary, /
		9 : term, term / .unary, mod
		10 : unary, .! unary, )
		11 : unary, .- unary, )
		12 : unary, .factor, )
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), )
		41 : factor, .loc, )
		42 : factor, .id ( args ), )
		43 : factor, .num, )
		44 : factor, .real, )
		45 : factor, .true, )
		46 : factor, .false, )
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], )
		111 : loc, .id, )
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[348] 
		0 : term, term mod .unary, )
		1 : term, term mod .unary, or
		2 : term, term mod .unary, and
		3 : term, term mod .unary, eq
		4 : term, term mod .unary, neq
		5 : term, term mod .unary, +
		6 : term, term mod .unary, -
		7 : term, term mod .unary, *
		8 : term, term mod .unary, /
		9 : term, term mod .unary, mod
		10 : unary, .! unary, )
		11 : unary, .- unary, )
		12 : unary, .factor, )
		13 : unary, .! unary, or
		14 : unary, .- unary, or
		15 : unary, .factor, or
		16 : unary, .! unary, and
		17 : unary, .- unary, and
		18 : unary, .factor, and
		19 : unary, .! unary, eq
		20 : unary, .- unary, eq
		21 : unary, .factor, eq
		22 : unary, .! unary, neq
		23 : unary, .- unary, neq
		24 : unary, .factor, neq
		25 : unary, .! unary, +
		26 : unary, .- unary, +
		27 : unary, .factor, +
		28 : unary, .! unary, -
		29 : unary, .- unary, -
		30 : unary, .factor, -
		31 : unary, .! unary, *
		32 : unary, .- unary, *
		33 : unary, .factor, *
		34 : unary, .! unary, /
		35 : unary, .- unary, /
		36 : unary, .factor, /
		37 : unary, .! unary, mod
		38 : unary, .- unary, mod
		39 : unary, .factor, mod
		40 : factor, .( bool ), )
		41 : factor, .loc, )
		42 : factor, .id ( args ), )
		43 : factor, .num, )
		44 : factor, .real, )
		45 : factor, .true, )
		46 : factor, .false, )
		47 : factor, .( bool ), or
		48 : factor, .loc, or
		49 : factor, .id ( args ), or
		50 : factor, .num, or
		51 : factor, .real, or
		52 : factor, .true, or
		53 : factor, .false, or
		54 : factor, .( bool ), and
		55 : factor, .loc, and
		56 : factor, .id ( args ), and
		57 : factor, .num, and
		58 : factor, .real, and
		59 : factor, .true, and
		60 : factor, .false, and
		61 : factor, .( bool ), eq
		62 : factor, .loc, eq
		63 : factor, .id ( args ), eq
		64 : factor, .num, eq
		65 : factor, .real, eq
		66 : factor, .true, eq
		67 : factor, .false, eq
		68 : factor, .( bool ), neq
		69 : factor, .loc, neq
		70 : factor, .id ( args ), neq
		71 : factor, .num, neq
		72 : factor, .real, neq
		73 : factor, .true, neq
		74 : factor, .false, neq
		75 : factor, .( bool ), +
		76 : factor, .loc, +
		77 : factor, .id ( args ), +
		78 : factor, .num, +
		79 : factor, .real, +
		80 : factor, .true, +
		81 : factor, .false, +
		82 : factor, .( bool ), -
		83 : factor, .loc, -
		84 : factor, .id ( args ), -
		85 : factor, .num, -
		86 : factor, .real, -
		87 : factor, .true, -
		88 : factor, .false, -
		89 : factor, .( bool ), *
		90 : factor, .loc, *
		91 : factor, .id ( args ), *
		92 : factor, .num, *
		93 : factor, .real, *
		94 : factor, .true, *
		95 : factor, .false, *
		96 : factor, .( bool ), /
		97 : factor, .loc, /
		98 : factor, .id ( args ), /
		99 : factor, .num, /
		100 : factor, .real, /
		101 : factor, .true, /
		102 : factor, .false, /
		103 : factor, .( bool ), mod
		104 : factor, .loc, mod
		105 : factor, .id ( args ), mod
		106 : factor, .num, mod
		107 : factor, .real, mod
		108 : factor, .true, mod
		109 : factor, .false, mod
		110 : loc, .loc [ bool ], )
		111 : loc, .id, )
		112 : loc, .loc [ bool ], or
		113 : loc, .id, or
		114 : loc, .loc [ bool ], and
		115 : loc, .id, and
		116 : loc, .loc [ bool ], eq
		117 : loc, .id, eq
		118 : loc, .loc [ bool ], neq
		119 : loc, .id, neq
		120 : loc, .loc [ bool ], +
		121 : loc, .id, +
		122 : loc, .loc [ bool ], -
		123 : loc, .id, -
		124 : loc, .loc [ bool ], *
		125 : loc, .id, *
		126 : loc, .loc [ bool ], /
		127 : loc, .id, /
		128 : loc, .loc [ bool ], mod
		129 : loc, .id, mod
		130 : loc, .loc [ bool ], [
		131 : loc, .id, [
	[349] 
		0 : factor, id ( .args ), )
		1 : factor, id ( .args ), or
		2 : factor, id ( .args ), and
		3 : factor, id ( .args ), eq
		4 : factor, id ( .args ), neq
		5 : factor, id ( .args ), +
		6 : factor, id ( .args ), -
		7 : factor, id ( .args ), *
		8 : factor, id ( .args ), /
		9 : factor, id ( .args ), mod
		10 : args, .args , arg, )
		11 : args, .arg, )
		12 : args, ., )
		13 : args, .args , arg, ,
		14 : args, .arg, ,
		15 : args, ., ,
		16 : arg, .loc, )
		17 : arg, .bool, )
		18 : arg, .loc, ,
		19 : arg, .bool, ,
		20 : loc, .loc [ bool ], )
		21 : loc, .id, )
		22 : bool, .bool or join, )
		23 : bool, .join, )
		24 : loc, .loc [ bool ], ,
		25 : loc, .id, ,
		26 : bool, .bool or join, ,
		27 : bool, .join, ,
		28 : loc, .loc [ bool ], [
		29 : loc, .id, [
		30 : bool, .bool or join, or
		31 : bool, .join, or
		32 : join, .join and equality, )
		33 : join, .equality, )
		34 : join, .join and equality, ,
		35 : join, .equality, ,
		36 : join, .join and equality, or
		37 : join, .equality, or
		38 : join, .join and equality, and
		39 : join, .equality, and
		40 : equality, .equality eq rel, )
		41 : equality, .equality neq rel, )
		42 : equality, .rel, )
		43 : equality, .equality eq rel, ,
		44 : equality, .equality neq rel, ,
		45 : equality, .rel, ,
		46 : equality, .equality eq rel, or
		47 : equality, .equality neq rel, or
		48 : equality, .rel, or
		49 : equality, .equality eq rel, and
		50 : equality, .equality neq rel, and
		51 : equality, .rel, and
		52 : equality, .equality eq rel, eq
		53 : equality, .equality neq rel, eq
		54 : equality, .rel, eq
		55 : equality, .equality eq rel, neq
		56 : equality, .equality neq rel, neq
		57 : equality, .rel, neq
		58 : rel, .expr < expr, )
		59 : rel, .expr <= expr, )
		60 : rel, .expr >= expr, )
		61 : rel, .expr > expr, )
		62 : rel, .expr, )
		63 : rel, .expr < expr, ,
		64 : rel, .expr <= expr, ,
		65 : rel, .expr >= expr, ,
		66 : rel, .expr > expr, ,
		67 : rel, .expr, ,
		68 : rel, .expr < expr, or
		69 : rel, .expr <= expr, or
		70 : rel, .expr >= expr, or
		71 : rel, .expr > expr, or
		72 : rel, .expr, or
		73 : rel, .expr < expr, and
		74 : rel, .expr <= expr, and
		75 : rel, .expr >= expr, and
		76 : rel, .expr > expr, and
		77 : rel, .expr, and
		78 : rel, .expr < expr, eq
		79 : rel, .expr <= expr, eq
		80 : rel, .expr >= expr, eq
		81 : rel, .expr > expr, eq
		82 : rel, .expr, eq
		83 : rel, .expr < expr, neq
		84 : rel, .expr <= expr, neq
		85 : rel, .expr >= expr, neq
		86 : rel, .expr > expr, neq
		87 : rel, .expr, neq
		88 : expr, .expr + term, <
		89 : expr, .expr - term, <
		90 : expr, .term, <
		91 : expr, .expr + term, <=
		92 : expr, .expr - term, <=
		93 : expr, .term, <=
		94 : expr, .expr + term, >=
		95 : expr, .expr - term, >=
		96 : expr, .term, >=
		97 : expr, .expr + term, >
		98 : expr, .expr - term, >
		99 : expr, .term, >
		100 : expr, .expr + term, )
		101 : expr, .expr - term, )
		102 : expr, .term, )
		103 : expr, .expr + term, ,
		104 : expr, .expr - term, ,
		105 : expr, .term, ,
		106 : expr, .expr + term, or
		107 : expr, .expr - term, or
		108 : expr, .term, or
		109 : expr, .expr + term, and
		110 : expr, .expr - term, and
		111 : expr, .term, and
		112 : expr, .expr + term, eq
		113 : expr, .expr - term, eq
		114 : expr, .term, eq
		115 : expr, .expr + term, neq
		116 : expr, .expr - term, neq
		117 : expr, .term, neq
		118 : expr, .expr + term, +
		119 : expr, .expr - term, +
		120 : expr, .term, +
		121 : expr, .expr + term, -
		122 : expr, .expr - term, -
		123 : expr, .term, -
		124 : term, .term * unary, <
		125 : term, .term / unary, <
		126 : term, .term mod unary, <
		127 : term, .unary, <
		128 : term, .term * unary, <=
		129 : term, .term / unary, <=
		130 : term, .term mod unary, <=
		131 : term, .unary, <=
		132 : term, .term * unary, >=
		133 : term, .term / unary, >=
		134 : term, .term mod unary, >=
		135 : term, .unary, >=
		136 : term, .term * unary, >
		137 : term, .term / unary, >
		138 : term, .term mod unary, >
		139 : term, .unary, >
		140 : term, .term * unary, )
		141 : term, .term / unary, )
		142 : term, .term mod unary, )
		143 : term, .unary, )
		144 : term, .term * unary, ,
		145 : term, .term / unary, ,
		146 : term, .term mod unary, ,
		147 : term, .unary, ,
		148 : term, .term * unary, or
		149 : term, .term / unary, or
		150 : term, .term mod unary, or
		151 : term, .unary, or
		152 : term, .term * unary, and
		153 : term, .term / unary, and
		154 : term, .term mod unary, and
		155 : term, .unary, and
		156 : term, .term * unary, eq
		157 : term, .term / unary, eq
		158 : term, .term mod unary, eq
		159 : term, .unary, eq
		160 : term, .term * unary, neq
		161 : term, .term / unary, neq
		162 : term, .term mod unary, neq
		163 : term, .unary, neq
		164 : term, .term * unary, +
		165 : term, .term / unary, +
		166 : term, .term mod unary, +
		167 : term, .unary, +
		168 : term, .term * unary, -
		169 : term, .term / unary, -
		170 : term, .term mod unary, -
		171 : term, .unary, -
		172 : term, .term * unary, *
		173 : term, .term / unary, *
		174 : term, .term mod unary, *
		175 : term, .unary, *
		176 : term, .term * unary, /
		177 : term, .term / unary, /
		178 : term, .term mod unary, /
		179 : term, .unary, /
		180 : term, .term * unary, mod
		181 : term, .term / unary, mod
		182 : term, .term mod unary, mod
		183 : term, .unary, mod
		184 : unary, .! unary, <
		185 : unary, .- unary, <
		186 : unary, .factor, <
		187 : unary, .! unary, <=
		188 : unary, .- unary, <=
		189 : unary, .factor, <=
		190 : unary, .! unary, >=
		191 : unary, .- unary, >=
		192 : unary, .factor, >=
		193 : unary, .! unary, >
		194 : unary, .- unary, >
		195 : unary, .factor, >
		196 : unary, .! unary, )
		197 : unary, .- unary, )
		198 : unary, .factor, )
		199 : unary, .! unary, ,
		200 : unary, .- unary, ,
		201 : unary, .factor, ,
		202 : unary, .! unary, or
		203 : unary, .- unary, or
		204 : unary, .factor, or
		205 : unary, .! unary, and
		206 : unary, .- unary, and
		207 : unary, .factor, and
		208 : unary, .! unary, eq
		209 : unary, .- unary, eq
		210 : unary, .factor, eq
		211 : unary, .! unary, neq
		212 : unary, .- unary, neq
		213 : unary, .factor, neq
		214 : unary, .! unary, +
		215 : unary, .- unary, +
		216 : unary, .factor, +
		217 : unary, .! unary, -
		218 : unary, .- unary, -
		219 : unary, .factor, -
		220 : unary, .! unary, *
		221 : unary, .- unary, *
		222 : unary, .factor, *
		223 : unary, .! unary, /
		224 : unary, .- unary, /
		225 : unary, .factor, /
		226 : unary, .! unary, mod
		227 : unary, .- unary, mod
		228 : unary, .factor, mod
		229 : factor, .( bool ), <
		230 : factor, .loc, <
		231 : factor, .id ( args ), <
		232 : factor, .num, <
		233 : factor, .real, <
		234 : factor, .true, <
		235 : factor, .false, <
		236 : factor, .( bool ), <=
		237 : factor, .loc, <=
		238 : factor, .id ( args ), <=
		239 : factor, .num, <=
		240 : factor, .real, <=
		241 : factor, .true, <=
		242 : factor, .false, <=
		243 : factor, .( bool ), >=
		244 : factor, .loc, >=
		245 : factor, .id ( args ), >=
		246 : factor, .num, >=
		247 : factor, .real, >=
		248 : factor, .true, >=
		249 : factor, .false, >=
		250 : factor, .( bool ), >
		251 : factor, .loc, >
		252 : factor, .id ( args ), >
		253 : factor, .num, >
		254 : factor, .real, >
		255 : factor, .true, >
		256 : factor, .false, >
		257 : factor, .( bool ), )
		258 : factor, .loc, )
		259 : factor, .id ( args ), )
		260 : factor, .num, )
		261 : factor, .real, )
		262 : factor, .true, )
		263 : factor, .false, )
		264 : factor, .( bool ), ,
		265 : factor, .loc, ,
		266 : factor, .id ( args ), ,
		267 : factor, .num, ,
		268 : factor, .real, ,
		269 : factor, .true, ,
		270 : factor, .false, ,
		271 : factor, .( bool ), or
		272 : factor, .loc, or
		273 : factor, .id ( args ), or
		274 : factor, .num, or
		275 : factor, .real, or
		276 : factor, .true, or
		277 : factor, .false, or
		278 : factor, .( bool ), and
		279 : factor, .loc, and
		280 : factor, .id ( args ), and
		281 : factor, .num, and
		282 : factor, .real, and
		283 : factor, .true, and
		284 : factor, .false, and
		285 : factor, .( bool ), eq
		286 : factor, .loc, eq
		287 : factor, .id ( args ), eq
		288 : factor, .num, eq
		289 : factor, .real, eq
		290 : factor, .true, eq
		291 : factor, .false, eq
		292 : factor, .( bool ), neq
		293 : factor, .loc, neq
		294 : factor, .id ( args ), neq
		295 : factor, .num, neq
		296 : factor, .real, neq
		297 : factor, .true, neq
		298 : factor, .false, neq
		299 : factor, .( bool ), +
		300 : factor, .loc, +
		301 : factor, .id ( args ), +
		302 : factor, .num, +
		303 : factor, .real, +
		304 : factor, .true, +
		305 : factor, .false, +
		306 : factor, .( bool ), -
		307 : factor, .loc, -
		308 : factor, .id ( args ), -
		309 : factor, .num, -
		310 : factor, .real, -
		311 : factor, .true, -
		312 : factor, .false, -
		313 : factor, .( bool ), *
		314 : factor, .loc, *
		315 : factor, .id ( args ), *
		316 : factor, .num, *
		317 : factor, .real, *
		318 : factor, .true, *
		319 : factor, .false, *
		320 : factor, .( bool ), /
		321 : factor, .loc, /
		322 : factor, .id ( args ), /
		323 : factor, .num, /
		324 : factor, .real, /
		325 : factor, .true, /
		326 : factor, .false, /
		327 : factor, .( bool ), mod
		328 : factor, .loc, mod
		329 : factor, .id ( args ), mod
		330 : factor, .num, mod
		331 : factor, .real, mod
		332 : factor, .true, mod
		333 : factor, .false, mod
		334 : loc, .loc [ bool ], <
		335 : loc, .id, <
		336 : loc, .loc [ bool ], <=
		337 : loc, .id, <=
		338 : loc, .loc [ bool ], >=
		339 : loc, .id, >=
		340 : loc, .loc [ bool ], >
		341 : loc, .id, >
		342 : loc, .loc [ bool ], or
		343 : loc, .id, or
		344 : loc, .loc [ bool ], and
		345 : loc, .id, and
		346 : loc, .loc [ bool ], eq
		347 : loc, .id, eq
		348 : loc, .loc [ bool ], neq
		349 : loc, .id, neq
		350 : loc, .loc [ bool ], +
		351 : loc, .id, +
		352 : loc, .loc [ bool ], -
		353 : loc, .id, -
		354 : loc, .loc [ bool ], *
		355 : loc, .id, *
		356 : loc, .loc [ bool ], /
		357 : loc, .id, /
		358 : loc, .loc [ bool ], mod
		359 : loc, .id, mod
	[350] 
		0 : factor, ( bool .), )
		1 : factor, ( bool .), or
		2 : factor, ( bool .), and
		3 : factor, ( bool .), eq
		4 : factor, ( bool .), neq
		5 : factor, ( bool .), +
		6 : factor, ( bool .), -
		7 : factor, ( bool .), *
		8 : factor, ( bool .), /
		9 : factor, ( bool .), mod
		10 : bool, bool .or join, )
		11 : bool, bool .or join, or
	[351] 
		0 : unary, - unary ., )
		1 : unary, - unary ., or
		2 : unary, - unary ., and
		3 : unary, - unary ., eq
		4 : unary, - unary ., neq
		5 : unary, - unary ., +
		6 : unary, - unary ., -
		7 : unary, - unary ., *
		8 : unary, - unary ., /
		9 : unary, - unary ., mod
	[352] 
		0 : unary, ! unary ., )
		1 : unary, ! unary ., or
		2 : unary, ! unary ., and
		3 : unary, ! unary ., eq
		4 : unary, ! unary ., neq
		5 : unary, ! unary ., +
		6 : unary, ! unary ., -
		7 : unary, ! unary ., *
		8 : unary, ! unary ., /
		9 : unary, ! unary ., mod
	[353] 
		0 : factor, id ( args ) ., <
		1 : factor, id ( args ) ., <=
		2 : factor, id ( args ) ., >=
		3 : factor, id ( args ) ., >
		4 : factor, id ( args ) ., )
		5 : factor, id ( args ) ., or
		6 : factor, id ( args ) ., and
		7 : factor, id ( args ) ., eq
		8 : factor, id ( args ) ., neq
		9 : factor, id ( args ) ., +
		10 : factor, id ( args ) ., -
		11 : factor, id ( args ) ., *
		12 : factor, id ( args ) ., /
		13 : factor, id ( args ) ., mod
	[354] 
		0 : stmt, while N ( bool ) M .stmt, }
		1 : stmt, while N ( bool ) M .stmt, [
		2 : stmt, while N ( bool ) M .stmt, id
		3 : stmt, while N ( bool ) M .stmt, if
		4 : stmt, while N ( bool ) M .stmt, while
		5 : stmt, while N ( bool ) M .stmt, do
		6 : stmt, while N ( bool ) M .stmt, return
		7 : stmt, while N ( bool ) M .stmt, {
		8 : stmt, while N ( bool ) M .stmt, else
		9 : stmt, .loc = bool ;, }
		10 : stmt, .if ( bool ) M stmt, }
		11 : stmt, .if ( bool ) M stmt else M stmt, }
		12 : stmt, .while N ( bool ) M stmt, }
		13 : stmt, .do N stmt while ( bool ) M ;, }
		14 : stmt, .return arg ;, }
		15 : stmt, .block, }
		16 : stmt, .loc = bool ;, [
		17 : stmt, .if ( bool ) M stmt, [
		18 : stmt, .if ( bool ) M stmt else M stmt, [
		19 : stmt, .while N ( bool ) M stmt, [
		20 : stmt, .do N stmt while ( bool ) M ;, [
		21 : stmt, .return arg ;, [
		22 : stmt, .block, [
		23 : stmt, .loc = bool ;, id
		24 : stmt, .if ( bool ) M stmt, id
		25 : stmt, .if ( bool ) M stmt else M stmt, id
		26 : stmt, .while N ( bool ) M stmt, id
		27 : stmt, .do N stmt while ( bool ) M ;, id
		28 : stmt, .return arg ;, id
		29 : stmt, .block, id
		30 : stmt, .loc = bool ;, if
		31 : stmt, .if ( bool ) M stmt, if
		32 : stmt, .if ( bool ) M stmt else M stmt, if
		33 : stmt, .while N ( bool ) M stmt, if
		34 : stmt, .do N stmt while ( bool ) M ;, if
		35 : stmt, .return arg ;, if
		36 : stmt, .block, if
		37 : stmt, .loc = bool ;, while
		38 : stmt, .if ( bool ) M stmt, while
		39 : stmt, .if ( bool ) M stmt else M stmt, while
		40 : stmt, .while N ( bool ) M stmt, while
		41 : stmt, .do N stmt while ( bool ) M ;, while
		42 : stmt, .return arg ;, while
		43 : stmt, .block, while
		44 : stmt, .loc = bool ;, do
		45 : stmt, .if ( bool ) M stmt, do
		46 : stmt, .if ( bool ) M stmt else M stmt, do
		47 : stmt, .while N ( bool ) M stmt, do
		48 : stmt, .do N stmt while ( bool ) M ;, do
		49 : stmt, .return arg ;, do
		50 : stmt, .block, do
		51 : stmt, .loc = bool ;, return
		52 : stmt, .if ( bool ) M stmt, return
		53 : stmt, .if ( bool ) M stmt else M stmt, return
		54 : stmt, .while N ( bool ) M stmt, return
		55 : stmt, .do N stmt while ( bool ) M ;, return
		56 : stmt, .return arg ;, return
		57 : stmt, .block, return
		58 : stmt, .loc = bool ;, {
		59 : stmt, .if ( bool ) M stmt, {
		60 : stmt, .if ( bool ) M stmt else M stmt, {
		61 : stmt, .while N ( bool ) M stmt, {
		62 : stmt, .do N stmt while ( bool ) M ;, {
		63 : stmt, .return arg ;, {
		64 : stmt, .block, {
		65 : stmt, .loc = bool ;, else
		66 : stmt, .if ( bool ) M stmt, else
		67 : stmt, .if ( bool ) M stmt else M stmt, else
		68 : stmt, .while N ( bool ) M stmt, else
		69 : stmt, .do N stmt while ( bool ) M ;, else
		70 : stmt, .return arg ;, else
		71 : stmt, .block, else
		72 : loc, .loc [ bool ], =
		73 : loc, .id, =
		74 : block, .{ decls stmts }, }
		75 : block, .{ decls stmts }, [
		76 : block, .{ decls stmts }, id
		77 : block, .{ decls stmts }, if
		78 : block, .{ decls stmts }, while
		79 : block, .{ decls stmts }, do
		80 : block, .{ decls stmts }, return
		81 : block, .{ decls stmts }, {
		82 : block, .{ decls stmts }, else
		83 : loc, .loc [ bool ], [
		84 : loc, .id, [
	[355] 
		0 : stmt, do N stmt while ( bool .) M ;, }
		1 : stmt, do N stmt while ( bool .) M ;, [
		2 : stmt, do N stmt while ( bool .) M ;, id
		3 : stmt, do N stmt while ( bool .) M ;, if
		4 : stmt, do N stmt while ( bool .) M ;, while
		5 : stmt, do N stmt while ( bool .) M ;, do
		6 : stmt, do N stmt while ( bool .) M ;, return
		7 : stmt, do N stmt while ( bool .) M ;, {
		8 : stmt, do N stmt while ( bool .) M ;, else
		9 : bool, bool .or join, )
		10 : bool, bool .or join, or
	[356] 
		0 : stmt, loc = bool ; ., while
	[357] 
		0 : block, { decls stmts } ., while
	[358] 
		0 : stmt, if ( bool ) .M stmt, while
		1 : stmt, if ( bool ) .M stmt else M stmt, while
		2 : M, ., [
		3 : M, ., id
		4 : M, ., if
		5 : M, ., while
		6 : M, ., do
		7 : M, ., return
		8 : M, ., {
		9 : M, ., ;
	[359] 
		0 : stmt, while N ( bool .) M stmt, while
		1 : bool, bool .or join, )
		2 : bool, bool .or join, or
	[360] 
		0 : stmt, do N stmt while .( bool ) M ;, while
	[361] 
		0 : loc, loc [ bool .], ;
		1 : loc, loc [ bool .], or
		2 : loc, loc [ bool .], and
		3 : loc, loc [ bool .], eq
		4 : loc, loc [ bool .], neq
		5 : loc, loc [ bool .], +
		6 : loc, loc [ bool .], -
		7 : loc, loc [ bool .], *
		8 : loc, loc [ bool .], /
		9 : loc, loc [ bool .], mod
		10 : loc, loc [ bool .], [
		11 : bool, bool .or join, ]
		12 : bool, bool .or join, or
	[362] 
		0 : expr, expr + term ., ;
		1 : expr, expr + term ., or
		2 : expr, expr + term ., and
		3 : expr, expr + term ., eq
		4 : expr, expr + term ., neq
		5 : expr, expr + term ., +
		6 : expr, expr + term ., -
		7 : term, term .* unary, ;
		8 : term, term ./ unary, ;
		9 : term, term .mod unary, ;
		10 : term, term .* unary, or
		11 : term, term ./ unary, or
		12 : term, term .mod unary, or
		13 : term, term .* unary, and
		14 : term, term ./ unary, and
		15 : term, term .mod unary, and
		16 : term, term .* unary, eq
		17 : term, term ./ unary, eq
		18 : term, term .mod unary, eq
		19 : term, term .* unary, neq
		20 : term, term ./ unary, neq
		21 : term, term .mod unary, neq
		22 : term, term .* unary, +
		23 : term, term ./ unary, +
		24 : term, term .mod unary, +
		25 : term, term .* unary, -
		26 : term, term ./ unary, -
		27 : term, term .mod unary, -
		28 : term, term .* unary, *
		29 : term, term ./ unary, *
		30 : term, term .mod unary, *
		31 : term, term .* unary, /
		32 : term, term ./ unary, /
		33 : term, term .mod unary, /
		34 : term, term .* unary, mod
		35 : term, term ./ unary, mod
		36 : term, term .mod unary, mod
	[363] 
		0 : expr, expr - term ., ;
		1 : expr, expr - term ., or
		2 : expr, expr - term ., and
		3 : expr, expr - term ., eq
		4 : expr, expr - term ., neq
		5 : expr, expr - term ., +
		6 : expr, expr - term ., -
		7 : term, term .* unary, ;
		8 : term, term ./ unary, ;
		9 : term, term .mod unary, ;
		10 : term, term .* unary, or
		11 : term, term ./ unary, or
		12 : term, term .mod unary, or
		13 : term, term .* unary, and
		14 : term, term ./ unary, and
		15 : term, term .mod unary, and
		16 : term, term .* unary, eq
		17 : term, term ./ unary, eq
		18 : term, term .mod unary, eq
		19 : term, term .* unary, neq
		20 : term, term ./ unary, neq
		21 : term, term .mod unary, neq
		22 : term, term .* unary, +
		23 : term, term ./ unary, +
		24 : term, term .mod unary, +
		25 : term, term .* unary, -
		26 : term, term ./ unary, -
		27 : term, term .mod unary, -
		28 : term, term .* unary, *
		29 : term, term ./ unary, *
		30 : term, term .mod unary, *
		31 : term, term .* unary, /
		32 : term, term ./ unary, /
		33 : term, term .mod unary, /
		34 : term, term .* unary, mod
		35 : term, term ./ unary, mod
		36 : term, term .mod unary, mod
	[364] 
		0 : term, term * unary ., ;
		1 : term, term * unary ., or
		2 : term, term * unary ., and
		3 : term, term * unary ., eq
		4 : term, term * unary ., neq
		5 : term, term * unary ., +
		6 : term, term * unary ., -
		7 : term, term * unary ., *
		8 : term, term * unary ., /
		9 : term, term * unary ., mod
	[365] 
		0 : term, term / unary ., ;
		1 : term, term / unary ., or
		2 : term, term / unary ., and
		3 : term, term / unary ., eq
		4 : term, term / unary ., neq
		5 : term, term / unary ., +
		6 : term, term / unary ., -
		7 : term, term / unary ., *
		8 : term, term / unary ., /
		9 : term, term / unary ., mod
	[366] 
		0 : term, term mod unary ., ;
		1 : term, term mod unary ., or
		2 : term, term mod unary ., and
		3 : term, term mod unary ., eq
		4 : term, term mod unary ., neq
		5 : term, term mod unary ., +
		6 : term, term mod unary ., -
		7 : term, term mod unary ., *
		8 : term, term mod unary ., /
		9 : term, term mod unary ., mod
	[367] 
		0 : factor, id ( args .), ;
		1 : factor, id ( args .), or
		2 : factor, id ( args .), and
		3 : factor, id ( args .), eq
		4 : factor, id ( args .), neq
		5 : factor, id ( args .), +
		6 : factor, id ( args .), -
		7 : factor, id ( args .), *
		8 : factor, id ( args .), /
		9 : factor, id ( args .), mod
		10 : args, args ., arg, )
		11 : args, args ., arg, ,
	[368] 
		0 : factor, ( bool ) ., ;
		1 : factor, ( bool ) ., or
		2 : factor, ( bool ) ., and
		3 : factor, ( bool ) ., eq
		4 : factor, ( bool ) ., neq
		5 : factor, ( bool ) ., +
		6 : factor, ( bool ) ., -
		7 : factor, ( bool ) ., *
		8 : factor, ( bool ) ., /
		9 : factor, ( bool ) ., mod
	[369] 
		0 : args, args , arg ., )
		1 : args, args , arg ., ,
	[370] 
		0 : loc, loc [ bool .], )
		1 : loc, loc [ bool .], ,
		2 : loc, loc [ bool .], [
		3 : loc, loc [ bool .], <
		4 : loc, loc [ bool .], <=
		5 : loc, loc [ bool .], >=
		6 : loc, loc [ bool .], >
		7 : loc, loc [ bool .], or
		8 : loc, loc [ bool .], and
		9 : loc, loc [ bool .], eq
		10 : loc, loc [ bool .], neq
		11 : loc, loc [ bool .], +
		12 : loc, loc [ bool .], -
		13 : loc, loc [ bool .], *
		14 : loc, loc [ bool .], /
		15 : loc, loc [ bool .], mod
		16 : bool, bool .or join, ]
		17 : bool, bool .or join, or
	[371] 
		0 : bool, bool or join ., )
		1 : bool, bool or join ., ,
		2 : bool, bool or join ., or
		3 : join, join .and equality, )
		4 : join, join .and equality, ,
		5 : join, join .and equality, or
		6 : join, join .and equality, and
	[372] 
		0 : join, join and equality ., )
		1 : join, join and equality ., ,
		2 : join, join and equality ., or
		3 : join, join and equality ., and
		4 : equality, equality .eq rel, )
		5 : equality, equality .neq rel, )
		6 : equality, equality .eq rel, ,
		7 : equality, equality .neq rel, ,
		8 : equality, equality .eq rel, or
		9 : equality, equality .neq rel, or
		10 : equality, equality .eq rel, and
		11 : equality, equality .neq rel, and
		12 : equality, equality .eq rel, eq
		13 : equality, equality .neq rel, eq
		14 : equality, equality .eq rel, neq
		15 : equality, equality .neq rel, neq
	[373] 
		0 : equality, equality eq rel ., )
		1 : equality, equality eq rel ., ,
		2 : equality, equality eq rel ., or
		3 : equality, equality eq rel ., and
		4 : equality, equality eq rel ., eq
		5 : equality, equality eq rel ., neq
	[374] 
		0 : equality, equality neq rel ., )
		1 : equality, equality neq rel ., ,
		2 : equality, equality neq rel ., or
		3 : equality, equality neq rel ., and
		4 : equality, equality neq rel ., eq
		5 : equality, equality neq rel ., neq
	[375] 
		0 : factor, loc ., )
		1 : factor, loc ., ,
		2 : factor, loc ., or
		3 : factor, loc ., and
		4 : factor, loc ., eq
		5 : factor, loc ., neq
		6 : factor, loc ., +
		7 : factor, loc ., -
		8 : factor, loc ., *
		9 : factor, loc ., /
		10 : factor, loc ., mod
		11 : loc, loc .[ bool ], )
		12 : loc, loc .[ bool ], ,
		13 : loc, loc .[ bool ], or
		14 : loc, loc .[ bool ], and
		15 : loc, loc .[ bool ], eq
		16 : loc, loc .[ bool ], neq
		17 : loc, loc .[ bool ], +
		18 : loc, loc .[ bool ], -
		19 : loc, loc .[ bool ], *
		20 : loc, loc .[ bool ], /
		21 : loc, loc .[ bool ], mod
		22 : loc, loc .[ bool ], [
	[376] 
		0 : rel, expr < expr ., )
		1 : rel, expr < expr ., ,
		2 : rel, expr < expr ., or
		3 : rel, expr < expr ., and
		4 : rel, expr < expr ., eq
		5 : rel, expr < expr ., neq
		6 : expr, expr .+ term, )
		7 : expr, expr .- term, )
		8 : expr, expr .+ term, ,
		9 : expr, expr .- term, ,
		10 : expr, expr .+ term, or
		11 : expr, expr .- term, or
		12 : expr, expr .+ term, and
		13 : expr, expr .- term, and
		14 : expr, expr .+ term, eq
		15 : expr, expr .- term, eq
		16 : expr, expr .+ term, neq
		17 : expr, expr .- term, neq
		18 : expr, expr .+ term, +
		19 : expr, expr .- term, +
		20 : expr, expr .+ term, -
		21 : expr, expr .- term, -
	[377] 
		0 : expr, term ., )
		1 : expr, term ., ,
		2 : expr, term ., or
		3 : expr, term ., and
		4 : expr, term ., eq
		5 : expr, term ., neq
		6 : expr, term ., +
		7 : expr, term ., -
		8 : term, term .* unary, )
		9 : term, term ./ unary, )
		10 : term, term .mod unary, )
		11 : term, term .* unary, ,
		12 : term, term ./ unary, ,
		13 : term, term .mod unary, ,
		14 : term, term .* unary, or
		15 : term, term ./ unary, or
		16 : term, term .mod unary, or
		17 : term, term .* unary, and
		18 : term, term ./ unary, and
		19 : term, term .mod unary, and
		20 : term, term .* unary, eq
		21 : term, term ./ unary, eq
		22 : term, term .mod unary, eq
		23 : term, term .* unary, neq
		24 : term, term ./ unary, neq
		25 : term, term .mod unary, neq
		26 : term, term .* unary, +
		27 : term, term ./ unary, +
		28 : term, term .mod unary, +
		29 : term, term .* unary, -
		30 : term, term ./ unary, -
		31 : term, term .mod unary, -
		32 : term, term .* unary, *
		33 : term, term ./ unary, *
		34 : term, term .mod unary, *
		35 : term, term .* unary, /
		36 : term, term ./ unary, /
		37 : term, term .mod unary, /
		38 : term, term .* unary, mod
		39 : term, term ./ unary, mod
		40 : term, term .mod unary, mod
	[378] 
		0 : term, unary ., )
		1 : term, unary ., ,
		2 : term, unary ., or
		3 : term, unary ., and
		4 : term, unary ., eq
		5 : term, unary ., neq
		6 : term, unary ., +
		7 : term, unary ., -
		8 : term, unary ., *
		9 : term, unary ., /
		10 : term, unary ., mod
	[379] 
		0 : unary, factor ., )
		1 : unary, factor ., ,
		2 : unary, factor ., or
		3 : unary, factor ., and
		4 : unary, factor ., eq
		5 : unary, factor ., neq
		6 : unary, factor ., +
		7 : unary, factor ., -
		8 : unary, factor ., *
		9 : unary, factor ., /
		10 : unary, factor ., mod
	[380] 
		0 : factor, id .( args ), )
		1 : factor, id .( args ), ,
		2 : factor, id .( args ), or
		3 : factor, id .( args ), and
		4 : factor, id .( args ), eq
		5 : factor, id .( args ), neq
		6 : factor, id .( args ), +
		7 : factor, id .( args ), -
		8 : factor, id .( args ), *
		9 : factor, id .( args ), /
		10 : factor, id .( args ), mod
		11 : loc, id ., )
		12 : loc, id ., ,
		13 : loc, id ., or
		14 : loc, id ., and
		15 : loc, id ., eq
		16 : loc, id ., neq
		17 : loc, id ., +
		18 : loc, id ., -
		19 : loc, id ., *
		20 : loc, id ., /
		21 : loc, id ., mod
		22 : loc, id ., [
	[381] 
		0 : factor, ( .bool ), )
		1 : factor, ( .bool ), ,
		2 : factor, ( .bool ), or
		3 : factor, ( .bool ), and
		4 : factor, ( .bool ), eq
		5 : factor, ( .bool ), neq
		6 : factor, ( .bool ), +
		7 : factor, ( .bool ), -
		8 : factor, ( .bool ), *
		9 : factor, ( .bool ), /
		10 : factor, ( .bool ), mod
		11 : bool, .bool or join, )
		12 : bool, .join, )
		13 : bool, .bool or join, or
		14 : bool, .join, or
		15 : join, .join and equality, )
		16 : join, .equality, )
		17 : join, .join and equality, or
		18 : join, .equality, or
		19 : join, .join and equality, and
		20 : join, .equality, and
		21 : equality, .equality eq rel, )
		22 : equality, .equality neq rel, )
		23 : equality, .rel, )
		24 : equality, .equality eq rel, or
		25 : equality, .equality neq rel, or
		26 : equality, .rel, or
		27 : equality, .equality eq rel, and
		28 : equality, .equality neq rel, and
		29 : equality, .rel, and
		30 : equality, .equality eq rel, eq
		31 : equality, .equality neq rel, eq
		32 : equality, .rel, eq
		33 : equality, .equality eq rel, neq
		34 : equality, .equality neq rel, neq
		35 : equality, .rel, neq
		36 : rel, .expr < expr, )
		37 : rel, .expr <= expr, )
		38 : rel, .expr >= expr, )
		39 : rel, .expr > expr, )
		40 : rel, .expr, )
		41 : rel, .expr < expr, or
		42 : rel, .expr <= expr, or
		43 : rel, .expr >= expr, or
		44 : rel, .expr > expr, or
		45 : rel, .expr, or
		46 : rel, .expr < expr, and
		47 : rel, .expr <= expr, and
		48 : rel, .expr >= expr, and
		49 : rel, .expr > expr, and
		50 : rel, .expr, and
		51 : rel, .expr < expr, eq
		52 : rel, .expr <= expr, eq
		53 : rel, .expr >= expr, eq
		54 : rel, .expr > expr, eq
		55 : rel, .expr, eq
		56 : rel, .expr < expr, neq
		57 : rel, .expr <= expr, neq
		58 : rel, .expr >= expr, neq
		59 : rel, .expr > expr, neq
		60 : rel, .expr, neq
		61 : expr, .expr + term, <
		62 : expr, .expr - term, <
		63 : expr, .term, <
		64 : expr, .expr + term, <=
		65 : expr, .expr - term, <=
		66 : expr, .term, <=
		67 : expr, .expr + term, >=
		68 : expr, .expr - term, >=
		69 : expr, .term, >=
		70 : expr, .expr + term, >
		71 : expr, .expr - term, >
		72 : expr, .term, >
		73 : expr, .expr + term, )
		74 : expr, .expr - term, )
		75 : expr, .term, )
		76 : expr, .expr + term, or
		77 : expr, .expr - term, or
		78 : expr, .term, or
		79 : expr, .expr + term, and
		80 : expr, .expr - term, and
		81 : expr, .term, and
		82 : expr, .expr + term, eq
		83 : expr, .expr - term, eq
		84 : expr, .term, eq
		85 : expr, .expr + term, neq
		86 : expr, .expr - term, neq
		87 : expr, .term, neq
		88 : expr, .expr + term, +
		89 : expr, .expr - term, +
		90 : expr, .term, +
		91 : expr, .expr + term, -
		92 : expr, .expr - term, -
		93 : expr, .term, -
		94 : term, .term * unary, <
		95 : term, .term / unary, <
		96 : term, .term mod unary, <
		97 : term, .unary, <
		98 : term, .term * unary, <=
		99 : term, .term / unary, <=
		100 : term, .term mod unary, <=
		101 : term, .unary, <=
		102 : term, .term * unary, >=
		103 : term, .term / unary, >=
		104 : term, .term mod unary, >=
		105 : term, .unary, >=
		106 : term, .term * unary, >
		107 : term, .term / unary, >
		108 : term, .term mod unary, >
		109 : term, .unary, >
		110 : term, .term * unary, )
		111 : term, .term / unary, )
		112 : term, .term mod unary, )
		113 : term, .unary, )
		114 : term, .term * unary, or
		115 : term, .term / unary, or
		116 : term, .term mod unary, or
		117 : term, .unary, or
		118 : term, .term * unary, and
		119 : term, .term / unary, and
		120 : term, .term mod unary, and
		121 : term, .unary, and
		122 : term, .term * unary, eq
		123 : term, .term / unary, eq
		124 : term, .term mod unary, eq
		125 : term, .unary, eq
		126 : term, .term * unary, neq
		127 : term, .term / unary, neq
		128 : term, .term mod unary, neq
		129 : term, .unary, neq
		130 : term, .term * unary, +
		131 : term, .term / unary, +
		132 : term, .term mod unary, +
		133 : term, .unary, +
		134 : term, .term * unary, -
		135 : term, .term / unary, -
		136 : term, .term mod unary, -
		137 : term, .unary, -
		138 : term, .term * unary, *
		139 : term, .term / unary, *
		140 : term, .term mod unary, *
		141 : term, .unary, *
		142 : term, .term * unary, /
		143 : term, .term / unary, /
		144 : term, .term mod unary, /
		145 : term, .unary, /
		146 : term, .term * unary, mod
		147 : term, .term / unary, mod
		148 : term, .term mod unary, mod
		149 : term, .unary, mod
		150 : unary, .! unary, <
		151 : unary, .- unary, <
		152 : unary, .factor, <
		153 : unary, .! unary, <=
		154 : unary, .- unary, <=
		155 : unary, .factor, <=
		156 : unary, .! unary, >=
		157 : unary, .- unary, >=
		158 : unary, .factor, >=
		159 : unary, .! unary, >
		160 : unary, .- unary, >
		161 : unary, .factor, >
		162 : unary, .! unary, )
		163 : unary, .- unary, )
		164 : unary, .factor, )
		165 : unary, .! unary, or
		166 : unary, .- unary, or
		167 : unary, .factor, or
		168 : unary, .! unary, and
		169 : unary, .- unary, and
		170 : unary, .factor, and
		171 : unary, .! unary, eq
		172 : unary, .- unary, eq
		173 : unary, .factor, eq
		174 : unary, .! unary, neq
		175 : unary, .- unary, neq
		176 : unary, .factor, neq
		177 : unary, .! unary, +
		178 : unary, .- unary, +
		179 : unary, .factor, +
		180 : unary, .! unary, -
		181 : unary, .- unary, -
		182 : unary, .factor, -
		183 : unary, .! unary, *
		184 : unary, .- unary, *
		185 : unary, .factor, *
		186 : unary, .! unary, /
		187 : unary, .- unary, /
		188 : unary, .factor, /
		189 : unary, .! unary, mod
		190 : unary, .- unary, mod
		191 : unary, .factor, mod
		192 : factor, .( bool ), <
		193 : factor, .loc, <
		194 : factor, .id ( args ), <
		195 : factor, .num, <
		196 : factor, .real, <
		197 : factor, .true, <
		198 : factor, .false, <
		199 : factor, .( bool ), <=
		200 : factor, .loc, <=
		201 : factor, .id ( args ), <=
		202 : factor, .num, <=
		203 : factor, .real, <=
		204 : factor, .true, <=
		205 : factor, .false, <=
		206 : factor, .( bool ), >=
		207 : factor, .loc, >=
		208 : factor, .id ( args ), >=
		209 : factor, .num, >=
		210 : factor, .real, >=
		211 : factor, .true, >=
		212 : factor, .false, >=
		213 : factor, .( bool ), >
		214 : factor, .loc, >
		215 : factor, .id ( args ), >
		216 : factor, .num, >
		217 : factor, .real, >
		218 : factor, .true, >
		219 : factor, .false, >
		220 : factor, .( bool ), )
		221 : factor, .loc, )
		222 : factor, .id ( args ), )
		223 : factor, .num, )
		224 : factor, .real, )
		225 : factor, .true, )
		226 : factor, .false, )
		227 : factor, .( bool ), or
		228 : factor, .loc, or
		229 : factor, .id ( args ), or
		230 : factor, .num, or
		231 : factor, .real, or
		232 : factor, .true, or
		233 : factor, .false, or
		234 : factor, .( bool ), and
		235 : factor, .loc, and
		236 : factor, .id ( args ), and
		237 : factor, .num, and
		238 : factor, .real, and
		239 : factor, .true, and
		240 : factor, .false, and
		241 : factor, .( bool ), eq
		242 : factor, .loc, eq
		243 : factor, .id ( args ), eq
		244 : factor, .num, eq
		245 : factor, .real, eq
		246 : factor, .true, eq
		247 : factor, .false, eq
		248 : factor, .( bool ), neq
		249 : factor, .loc, neq
		250 : factor, .id ( args ), neq
		251 : factor, .num, neq
		252 : factor, .real, neq
		253 : factor, .true, neq
		254 : factor, .false, neq
		255 : factor, .( bool ), +
		256 : factor, .loc, +
		257 : factor, .id ( args ), +
		258 : factor, .num, +
		259 : factor, .real, +
		260 : factor, .true, +
		261 : factor, .false, +
		262 : factor, .( bool ), -
		263 : factor, .loc, -
		264 : factor, .id ( args ), -
		265 : factor, .num, -
		266 : factor, .real, -
		267 : factor, .true, -
		268 : factor, .false, -
		269 : factor, .( bool ), *
		270 : factor, .loc, *
		271 : factor, .id ( args ), *
		272 : factor, .num, *
		273 : factor, .real, *
		274 : factor, .true, *
		275 : factor, .false, *
		276 : factor, .( bool ), /
		277 : factor, .loc, /
		278 : factor, .id ( args ), /
		279 : factor, .num, /
		280 : factor, .real, /
		281 : factor, .true, /
		282 : factor, .false, /
		283 : factor, .( bool ), mod
		284 : factor, .loc, mod
		285 : factor, .id ( args ), mod
		286 : factor, .num, mod
		287 : factor, .real, mod
		288 : factor, .true, mod
		289 : factor, .false, mod
		290 : loc, .loc [ bool ], <
		291 : loc, .id, <
		292 : loc, .loc [ bool ], <=
		293 : loc, .id, <=
		294 : loc, .loc [ bool ], >=
		295 : loc, .id, >=
		296 : loc, .loc [ bool ], >
		297 : loc, .id, >
		298 : loc, .loc [ bool ], )
		299 : loc, .id, )
		300 : loc, .loc [ bool ], or
		301 : loc, .id, or
		302 : loc, .loc [ bool ], and
		303 : loc, .id, and
		304 : loc, .loc [ bool ], eq
		305 : loc, .id, eq
		306 : loc, .loc [ bool ], neq
		307 : loc, .id, neq
		308 : loc, .loc [ bool ], +
		309 : loc, .id, +
		310 : loc, .loc [ bool ], -
		311 : loc, .id, -
		312 : loc, .loc [ bool ], *
		313 : loc, .id, *
		314 : loc, .loc [ bool ], /
		315 : loc, .id, /
		316 : loc, .loc [ bool ], mod
		317 : loc, .id, mod
		318 : loc, .loc [ bool ], [
		319 : loc, .id, [
	[382] 
		0 : unary, - .unary, )
		1 : unary, - .unary, ,
		2 : unary, - .unary, or
		3 : unary, - .unary, and
		4 : unary, - .unary, eq
		5 : unary, - .unary, neq
		6 : unary, - .unary, +
		7 : unary, - .unary, -
		8 : unary, - .unary, *
		9 : unary, - .unary, /
		10 : unary, - .unary, mod
		11 : unary, .! unary, )
		12 : unary, .- unary, )
		13 : unary, .factor, )
		14 : unary, .! unary, ,
		15 : unary, .- unary, ,
		16 : unary, .factor, ,
		17 : unary, .! unary, or
		18 : unary, .- unary, or
		19 : unary, .factor, or
		20 : unary, .! unary, and
		21 : unary, .- unary, and
		22 : unary, .factor, and
		23 : unary, .! unary, eq
		24 : unary, .- unary, eq
		25 : unary, .factor, eq
		26 : unary, .! unary, neq
		27 : unary, .- unary, neq
		28 : unary, .factor, neq
		29 : unary, .! unary, +
		30 : unary, .- unary, +
		31 : unary, .factor, +
		32 : unary, .! unary, -
		33 : unary, .- unary, -
		34 : unary, .factor, -
		35 : unary, .! unary, *
		36 : unary, .- unary, *
		37 : unary, .factor, *
		38 : unary, .! unary, /
		39 : unary, .- unary, /
		40 : unary, .factor, /
		41 : unary, .! unary, mod
		42 : unary, .- unary, mod
		43 : unary, .factor, mod
		44 : factor, .( bool ), )
		45 : factor, .loc, )
		46 : factor, .id ( args ), )
		47 : factor, .num, )
		48 : factor, .real, )
		49 : factor, .true, )
		50 : factor, .false, )
		51 : factor, .( bool ), ,
		52 : factor, .loc, ,
		53 : factor, .id ( args ), ,
		54 : factor, .num, ,
		55 : factor, .real, ,
		56 : factor, .true, ,
		57 : factor, .false, ,
		58 : factor, .( bool ), or
		59 : factor, .loc, or
		60 : factor, .id ( args ), or
		61 : factor, .num, or
		62 : factor, .real, or
		63 : factor, .true, or
		64 : factor, .false, or
		65 : factor, .( bool ), and
		66 : factor, .loc, and
		67 : factor, .id ( args ), and
		68 : factor, .num, and
		69 : factor, .real, and
		70 : factor, .true, and
		71 : factor, .false, and
		72 : factor, .( bool ), eq
		73 : factor, .loc, eq
		74 : factor, .id ( args ), eq
		75 : factor, .num, eq
		76 : factor, .real, eq
		77 : factor, .true, eq
		78 : factor, .false, eq
		79 : factor, .( bool ), neq
		80 : factor, .loc, neq
		81 : factor, .id ( args ), neq
		82 : factor, .num, neq
		83 : factor, .real, neq
		84 : factor, .true, neq
		85 : factor, .false, neq
		86 : factor, .( bool ), +
		87 : factor, .loc, +
		88 : factor, .id ( args ), +
		89 : factor, .num, +
		90 : factor, .real, +
		91 : factor, .true, +
		92 : factor, .false, +
		93 : factor, .( bool ), -
		94 : factor, .loc, -
		95 : factor, .id ( args ), -
		96 : factor, .num, -
		97 : factor, .real, -
		98 : factor, .true, -
		99 : factor, .false, -
		100 : factor, .( bool ), *
		101 : factor, .loc, *
		102 : factor, .id ( args ), *
		103 : factor, .num, *
		104 : factor, .real, *
		105 : factor, .true, *
		106 : factor, .false, *
		107 : factor, .( bool ), /
		108 : factor, .loc, /
		109 : factor, .id ( args ), /
		110 : factor, .num, /
		111 : factor, .real, /
		112 : factor, .true, /
		113 : factor, .false, /
		114 : factor, .( bool ), mod
		115 : factor, .loc, mod
		116 : factor, .id ( args ), mod
		117 : factor, .num, mod
		118 : factor, .real, mod
		119 : factor, .true, mod
		120 : factor, .false, mod
		121 : loc, .loc [ bool ], )
		122 : loc, .id, )
		123 : loc, .loc [ bool ], ,
		124 : loc, .id, ,
		125 : loc, .loc [ bool ], or
		126 : loc, .id, or
		127 : loc, .loc [ bool ], and
		128 : loc, .id, and
		129 : loc, .loc [ bool ], eq
		130 : loc, .id, eq
		131 : loc, .loc [ bool ], neq
		132 : loc, .id, neq
		133 : loc, .loc [ bool ], +
		134 : loc, .id, +
		135 : loc, .loc [ bool ], -
		136 : loc, .id, -
		137 : loc, .loc [ bool ], *
		138 : loc, .id, *
		139 : loc, .loc [ bool ], /
		140 : loc, .id, /
		141 : loc, .loc [ bool ], mod
		142 : loc, .id, mod
		143 : loc, .loc [ bool ], [
		144 : loc, .id, [
	[383] 
		0 : unary, ! .unary, )
		1 : unary, ! .unary, ,
		2 : unary, ! .unary, or
		3 : unary, ! .unary, and
		4 : unary, ! .unary, eq
		5 : unary, ! .unary, neq
		6 : unary, ! .unary, +
		7 : unary, ! .unary, -
		8 : unary, ! .unary, *
		9 : unary, ! .unary, /
		10 : unary, ! .unary, mod
		11 : unary, .! unary, )
		12 : unary, .- unary, )
		13 : unary, .factor, )
		14 : unary, .! unary, ,
		15 : unary, .- unary, ,
		16 : unary, .factor, ,
		17 : unary, .! unary, or
		18 : unary, .- unary, or
		19 : unary, .factor, or
		20 : unary, .! unary, and
		21 : unary, .- unary, and
		22 : unary, .factor, and
		23 : unary, .! unary, eq
		24 : unary, .- unary, eq
		25 : unary, .factor, eq
		26 : unary, .! unary, neq
		27 : unary, .- unary, neq
		28 : unary, .factor, neq
		29 : unary, .! unary, +
		30 : unary, .- unary, +
		31 : unary, .factor, +
		32 : unary, .! unary, -
		33 : unary, .- unary, -
		34 : unary, .factor, -
		35 : unary, .! unary, *
		36 : unary, .- unary, *
		37 : unary, .factor, *
		38 : unary, .! unary, /
		39 : unary, .- unary, /
		40 : unary, .factor, /
		41 : unary, .! unary, mod
		42 : unary, .- unary, mod
		43 : unary, .factor, mod
		44 : factor, .( bool ), )
		45 : factor, .loc, )
		46 : factor, .id ( args ), )
		47 : factor, .num, )
		48 : factor, .real, )
		49 : factor, .true, )
		50 : factor, .false, )
		51 : factor, .( bool ), ,
		52 : factor, .loc, ,
		53 : factor, .id ( args ), ,
		54 : factor, .num, ,
		55 : factor, .real, ,
		56 : factor, .true, ,
		57 : factor, .false, ,
		58 : factor, .( bool ), or
		59 : factor, .loc, or
		60 : factor, .id ( args ), or
		61 : factor, .num, or
		62 : factor, .real, or
		63 : factor, .true, or
		64 : factor, .false, or
		65 : factor, .( bool ), and
		66 : factor, .loc, and
		67 : factor, .id ( args ), and
		68 : factor, .num, and
		69 : factor, .real, and
		70 : factor, .true, and
		71 : factor, .false, and
		72 : factor, .( bool ), eq
		73 : factor, .loc, eq
		74 : factor, .id ( args ), eq
		75 : factor, .num, eq
		76 : factor, .real, eq
		77 : factor, .true, eq
		78 : factor, .false, eq
		79 : factor, .( bool ), neq
		80 : factor, .loc, neq
		81 : factor, .id ( args ), neq
		82 : factor, .num, neq
		83 : factor, .real, neq
		84 : factor, .true, neq
		85 : factor, .false, neq
		86 : factor, .( bool ), +
		87 : factor, .loc, +
		88 : factor, .id ( args ), +
		89 : factor, .num, +
		90 : factor, .real, +
		91 : factor, .true, +
		92 : factor, .false, +
		93 : factor, .( bool ), -
		94 : factor, .loc, -
		95 : factor, .id ( args ), -
		96 : factor, .num, -
		97 : factor, .real, -
		98 : factor, .true, -
		99 : factor, .false, -
		100 : factor, .( bool ), *
		101 : factor, .loc, *
		102 : factor, .id ( args ), *
		103 : factor, .num, *
		104 : factor, .real, *
		105 : factor, .true, *
		106 : factor, .false, *
		107 : factor, .( bool ), /
		108 : factor, .loc, /
		109 : factor, .id ( args ), /
		110 : factor, .num, /
		111 : factor, .real, /
		112 : factor, .true, /
		113 : factor, .false, /
		114 : factor, .( bool ), mod
		115 : factor, .loc, mod
		116 : factor, .id ( args ), mod
		117 : factor, .num, mod
		118 : factor, .real, mod
		119 : factor, .true, mod
		120 : factor, .false, mod
		121 : loc, .loc [ bool ], )
		122 : loc, .id, )
		123 : loc, .loc [ bool ], ,
		124 : loc, .id, ,
		125 : loc, .loc [ bool ], or
		126 : loc, .id, or
		127 : loc, .loc [ bool ], and
		128 : loc, .id, and
		129 : loc, .loc [ bool ], eq
		130 : loc, .id, eq
		131 : loc, .loc [ bool ], neq
		132 : loc, .id, neq
		133 : loc, .loc [ bool ], +
		134 : loc, .id, +
		135 : loc, .loc [ bool ], -
		136 : loc, .id, -
		137 : loc, .loc [ bool ], *
		138 : loc, .id, *
		139 : loc, .loc [ bool ], /
		140 : loc, .id, /
		141 : loc, .loc [ bool ], mod
		142 : loc, .id, mod
		143 : loc, .loc [ bool ], [
		144 : loc, .id, [
	[384] 
		0 : factor, num ., )
		1 : factor, num ., ,
		2 : factor, num ., or
		3 : factor, num ., and
		4 : factor, num ., eq
		5 : factor, num ., neq
		6 : factor, num ., +
		7 : factor, num ., -
		8 : factor, num ., *
		9 : factor, num ., /
		10 : factor, num ., mod
	[385] 
		0 : factor, real ., )
		1 : factor, real ., ,
		2 : factor, real ., or
		3 : factor, real ., and
		4 : factor, real ., eq
		5 : factor, real ., neq
		6 : factor, real ., +
		7 : factor, real ., -
		8 : factor, real ., *
		9 : factor, real ., /
		10 : factor, real ., mod
	[386] 
		0 : factor, true ., )
		1 : factor, true ., ,
		2 : factor, true ., or
		3 : factor, true ., and
		4 : factor, true ., eq
		5 : factor, true ., neq
		6 : factor, true ., +
		7 : factor, true ., -
		8 : factor, true ., *
		9 : factor, true ., /
		10 : factor, true ., mod
	[387] 
		0 : factor, false ., )
		1 : factor, false ., ,
		2 : factor, false ., or
		3 : factor, false ., and
		4 : factor, false ., eq
		5 : factor, false ., neq
		6 : factor, false ., +
		7 : factor, false ., -
		8 : factor, false ., *
		9 : factor, false ., /
		10 : factor, false ., mod
	[388] 
		0 : rel, expr <= expr ., )
		1 : rel, expr <= expr ., ,
		2 : rel, expr <= expr ., or
		3 : rel, expr <= expr ., and
		4 : rel, expr <= expr ., eq
		5 : rel, expr <= expr ., neq
		6 : expr, expr .+ term, )
		7 : expr, expr .- term, )
		8 : expr, expr .+ term, ,
		9 : expr, expr .- term, ,
		10 : expr, expr .+ term, or
		11 : expr, expr .- term, or
		12 : expr, expr .+ term, and
		13 : expr, expr .- term, and
		14 : expr, expr .+ term, eq
		15 : expr, expr .- term, eq
		16 : expr, expr .+ term, neq
		17 : expr, expr .- term, neq
		18 : expr, expr .+ term, +
		19 : expr, expr .- term, +
		20 : expr, expr .+ term, -
		21 : expr, expr .- term, -
	[389] 
		0 : rel, expr >= expr ., )
		1 : rel, expr >= expr ., ,
		2 : rel, expr >= expr ., or
		3 : rel, expr >= expr ., and
		4 : rel, expr >= expr ., eq
		5 : rel, expr >= expr ., neq
		6 : expr, expr .+ term, )
		7 : expr, expr .- term, )
		8 : expr, expr .+ term, ,
		9 : expr, expr .- term, ,
		10 : expr, expr .+ term, or
		11 : expr, expr .- term, or
		12 : expr, expr .+ term, and
		13 : expr, expr .- term, and
		14 : expr, expr .+ term, eq
		15 : expr, expr .- term, eq
		16 : expr, expr .+ term, neq
		17 : expr, expr .- term, neq
		18 : expr, expr .+ term, +
		19 : expr, expr .- term, +
		20 : expr, expr .+ term, -
		21 : expr, expr .- term, -
	[390] 
		0 : rel, expr > expr ., )
		1 : rel, expr > expr ., ,
		2 : rel, expr > expr ., or
		3 : rel, expr > expr ., and
		4 : rel, expr > expr ., eq
		5 : rel, expr > expr ., neq
		6 : expr, expr .+ term, )
		7 : expr, expr .- term, )
		8 : expr, expr .+ term, ,
		9 : expr, expr .- term, ,
		10 : expr, expr .+ term, or
		11 : expr, expr .- term, or
		12 : expr, expr .+ term, and
		13 : expr, expr .- term, and
		14 : expr, expr .+ term, eq
		15 : expr, expr .- term, eq
		16 : expr, expr .+ term, neq
		17 : expr, expr .- term, neq
		18 : expr, expr .+ term, +
		19 : expr, expr .- term, +
		20 : expr, expr .+ term, -
		21 : expr, expr .- term, -
	[391] 
		0 : expr, expr + term ., <
		1 : expr, expr + term ., <=
		2 : expr, expr + term ., >=
		3 : expr, expr + term ., >
		4 : expr, expr + term ., )
		5 : expr, expr + term ., ,
		6 : expr, expr + term ., or
		7 : expr, expr + term ., and
		8 : expr, expr + term ., eq
		9 : expr, expr + term ., neq
		10 : expr, expr + term ., +
		11 : expr, expr + term ., -
		12 : term, term .* unary, <
		13 : term, term ./ unary, <
		14 : term, term .mod unary, <
		15 : term, term .* unary, <=
		16 : term, term ./ unary, <=
		17 : term, term .mod unary, <=
		18 : term, term .* unary, >=
		19 : term, term ./ unary, >=
		20 : term, term .mod unary, >=
		21 : term, term .* unary, >
		22 : term, term ./ unary, >
		23 : term, term .mod unary, >
		24 : term, term .* unary, )
		25 : term, term ./ unary, )
		26 : term, term .mod unary, )
		27 : term, term .* unary, ,
		28 : term, term ./ unary, ,
		29 : term, term .mod unary, ,
		30 : term, term .* unary, or
		31 : term, term ./ unary, or
		32 : term, term .mod unary, or
		33 : term, term .* unary, and
		34 : term, term ./ unary, and
		35 : term, term .mod unary, and
		36 : term, term .* unary, eq
		37 : term, term ./ unary, eq
		38 : term, term .mod unary, eq
		39 : term, term .* unary, neq
		40 : term, term ./ unary, neq
		41 : term, term .mod unary, neq
		42 : term, term .* unary, +
		43 : term, term ./ unary, +
		44 : term, term .mod unary, +
		45 : term, term .* unary, -
		46 : term, term ./ unary, -
		47 : term, term .mod unary, -
		48 : term, term .* unary, *
		49 : term, term ./ unary, *
		50 : term, term .mod unary, *
		51 : term, term .* unary, /
		52 : term, term ./ unary, /
		53 : term, term .mod unary, /
		54 : term, term .* unary, mod
		55 : term, term ./ unary, mod
		56 : term, term .mod unary, mod
	[392] 
		0 : expr, expr - term ., <
		1 : expr, expr - term ., <=
		2 : expr, expr - term ., >=
		3 : expr, expr - term ., >
		4 : expr, expr - term ., )
		5 : expr, expr - term ., ,
		6 : expr, expr - term ., or
		7 : expr, expr - term ., and
		8 : expr, expr - term ., eq
		9 : expr, expr - term ., neq
		10 : expr, expr - term ., +
		11 : expr, expr - term ., -
		12 : term, term .* unary, <
		13 : term, term ./ unary, <
		14 : term, term .mod unary, <
		15 : term, term .* unary, <=
		16 : term, term ./ unary, <=
		17 : term, term .mod unary, <=
		18 : term, term .* unary, >=
		19 : term, term ./ unary, >=
		20 : term, term .mod unary, >=
		21 : term, term .* unary, >
		22 : term, term ./ unary, >
		23 : term, term .mod unary, >
		24 : term, term .* unary, )
		25 : term, term ./ unary, )
		26 : term, term .mod unary, )
		27 : term, term .* unary, ,
		28 : term, term ./ unary, ,
		29 : term, term .mod unary, ,
		30 : term, term .* unary, or
		31 : term, term ./ unary, or
		32 : term, term .mod unary, or
		33 : term, term .* unary, and
		34 : term, term ./ unary, and
		35 : term, term .mod unary, and
		36 : term, term .* unary, eq
		37 : term, term ./ unary, eq
		38 : term, term .mod unary, eq
		39 : term, term .* unary, neq
		40 : term, term ./ unary, neq
		41 : term, term .mod unary, neq
		42 : term, term .* unary, +
		43 : term, term ./ unary, +
		44 : term, term .mod unary, +
		45 : term, term .* unary, -
		46 : term, term ./ unary, -
		47 : term, term .mod unary, -
		48 : term, term .* unary, *
		49 : term, term ./ unary, *
		50 : term, term .mod unary, *
		51 : term, term .* unary, /
		52 : term, term ./ unary, /
		53 : term, term .mod unary, /
		54 : term, term .* unary, mod
		55 : term, term ./ unary, mod
		56 : term, term .mod unary, mod
	[393] 
		0 : term, term * unary ., <
		1 : term, term * unary ., <=
		2 : term, term * unary ., >=
		3 : term, term * unary ., >
		4 : term, term * unary ., )
		5 : term, term * unary ., ,
		6 : term, term * unary ., or
		7 : term, term * unary ., and
		8 : term, term * unary ., eq
		9 : term, term * unary ., neq
		10 : term, term * unary ., +
		11 : term, term * unary ., -
		12 : term, term * unary ., *
		13 : term, term * unary ., /
		14 : term, term * unary ., mod
	[394] 
		0 : term, term / unary ., <
		1 : term, term / unary ., <=
		2 : term, term / unary ., >=
		3 : term, term / unary ., >
		4 : term, term / unary ., )
		5 : term, term / unary ., ,
		6 : term, term / unary ., or
		7 : term, term / unary ., and
		8 : term, term / unary ., eq
		9 : term, term / unary ., neq
		10 : term, term / unary ., +
		11 : term, term / unary ., -
		12 : term, term / unary ., *
		13 : term, term / unary ., /
		14 : term, term / unary ., mod
	[395] 
		0 : term, term mod unary ., <
		1 : term, term mod unary ., <=
		2 : term, term mod unary ., >=
		3 : term, term mod unary ., >
		4 : term, term mod unary ., )
		5 : term, term mod unary ., ,
		6 : term, term mod unary ., or
		7 : term, term mod unary ., and
		8 : term, term mod unary ., eq
		9 : term, term mod unary ., neq
		10 : term, term mod unary ., +
		11 : term, term mod unary ., -
		12 : term, term mod unary ., *
		13 : term, term mod unary ., /
		14 : term, term mod unary ., mod
	[396] 
		0 : factor, id ( args .), <
		1 : factor, id ( args .), <=
		2 : factor, id ( args .), >=
		3 : factor, id ( args .), >
		4 : factor, id ( args .), )
		5 : factor, id ( args .), ,
		6 : factor, id ( args .), or
		7 : factor, id ( args .), and
		8 : factor, id ( args .), eq
		9 : factor, id ( args .), neq
		10 : factor, id ( args .), +
		11 : factor, id ( args .), -
		12 : factor, id ( args .), *
		13 : factor, id ( args .), /
		14 : factor, id ( args .), mod
		15 : args, args ., arg, )
		16 : args, args ., arg, ,
	[397] 
		0 : factor, ( bool ) ., <
		1 : factor, ( bool ) ., <=
		2 : factor, ( bool ) ., >=
		3 : factor, ( bool ) ., >
		4 : factor, ( bool ) ., )
		5 : factor, ( bool ) ., ,
		6 : factor, ( bool ) ., or
		7 : factor, ( bool ) ., and
		8 : factor, ( bool ) ., eq
		9 : factor, ( bool ) ., neq
		10 : factor, ( bool ) ., +
		11 : factor, ( bool ) ., -
		12 : factor, ( bool ) ., *
		13 : factor, ( bool ) ., /
		14 : factor, ( bool ) ., mod
	[398] 
		0 : loc, loc [ .bool ], <
		1 : loc, loc [ .bool ], <=
		2 : loc, loc [ .bool ], >=
		3 : loc, loc [ .bool ], >
		4 : loc, loc [ .bool ], )
		5 : loc, loc [ .bool ], ,
		6 : loc, loc [ .bool ], or
		7 : loc, loc [ .bool ], and
		8 : loc, loc [ .bool ], eq
		9 : loc, loc [ .bool ], neq
		10 : loc, loc [ .bool ], +
		11 : loc, loc [ .bool ], -
		12 : loc, loc [ .bool ], *
		13 : loc, loc [ .bool ], /
		14 : loc, loc [ .bool ], mod
		15 : loc, loc [ .bool ], [
		16 : bool, .bool or join, ]
		17 : bool, .join, ]
		18 : bool, .bool or join, or
		19 : bool, .join, or
		20 : join, .join and equality, ]
		21 : join, .equality, ]
		22 : join, .join and equality, or
		23 : join, .equality, or
		24 : join, .join and equality, and
		25 : join, .equality, and
		26 : equality, .equality eq rel, ]
		27 : equality, .equality neq rel, ]
		28 : equality, .rel, ]
		29 : equality, .equality eq rel, or
		30 : equality, .equality neq rel, or
		31 : equality, .rel, or
		32 : equality, .equality eq rel, and
		33 : equality, .equality neq rel, and
		34 : equality, .rel, and
		35 : equality, .equality eq rel, eq
		36 : equality, .equality neq rel, eq
		37 : equality, .rel, eq
		38 : equality, .equality eq rel, neq
		39 : equality, .equality neq rel, neq
		40 : equality, .rel, neq
		41 : rel, .expr < expr, ]
		42 : rel, .expr <= expr, ]
		43 : rel, .expr >= expr, ]
		44 : rel, .expr > expr, ]
		45 : rel, .expr, ]
		46 : rel, .expr < expr, or
		47 : rel, .expr <= expr, or
		48 : rel, .expr >= expr, or
		49 : rel, .expr > expr, or
		50 : rel, .expr, or
		51 : rel, .expr < expr, and
		52 : rel, .expr <= expr, and
		53 : rel, .expr >= expr, and
		54 : rel, .expr > expr, and
		55 : rel, .expr, and
		56 : rel, .expr < expr, eq
		57 : rel, .expr <= expr, eq
		58 : rel, .expr >= expr, eq
		59 : rel, .expr > expr, eq
		60 : rel, .expr, eq
		61 : rel, .expr < expr, neq
		62 : rel, .expr <= expr, neq
		63 : rel, .expr >= expr, neq
		64 : rel, .expr > expr, neq
		65 : rel, .expr, neq
		66 : expr, .expr + term, <
		67 : expr, .expr - term, <
		68 : expr, .term, <
		69 : expr, .expr + term, <=
		70 : expr, .expr - term, <=
		71 : expr, .term, <=
		72 : expr, .expr + term, >=
		73 : expr, .expr - term, >=
		74 : expr, .term, >=
		75 : expr, .expr + term, >
		76 : expr, .expr - term, >
		77 : expr, .term, >
		78 : expr, .expr + term, ]
		79 : expr, .expr - term, ]
		80 : expr, .term, ]
		81 : expr, .expr + term, or
		82 : expr, .expr - term, or
		83 : expr, .term, or
		84 : expr, .expr + term, and
		85 : expr, .expr - term, and
		86 : expr, .term, and
		87 : expr, .expr + term, eq
		88 : expr, .expr - term, eq
		89 : expr, .term, eq
		90 : expr, .expr + term, neq
		91 : expr, .expr - term, neq
		92 : expr, .term, neq
		93 : expr, .expr + term, +
		94 : expr, .expr - term, +
		95 : expr, .term, +
		96 : expr, .expr + term, -
		97 : expr, .expr - term, -
		98 : expr, .term, -
		99 : term, .term * unary, <
		100 : term, .term / unary, <
		101 : term, .term mod unary, <
		102 : term, .unary, <
		103 : term, .term * unary, <=
		104 : term, .term / unary, <=
		105 : term, .term mod unary, <=
		106 : term, .unary, <=
		107 : term, .term * unary, >=
		108 : term, .term / unary, >=
		109 : term, .term mod unary, >=
		110 : term, .unary, >=
		111 : term, .term * unary, >
		112 : term, .term / unary, >
		113 : term, .term mod unary, >
		114 : term, .unary, >
		115 : term, .term * unary, ]
		116 : term, .term / unary, ]
		117 : term, .term mod unary, ]
		118 : term, .unary, ]
		119 : term, .term * unary, or
		120 : term, .term / unary, or
		121 : term, .term mod unary, or
		122 : term, .unary, or
		123 : term, .term * unary, and
		124 : term, .term / unary, and
		125 : term, .term mod unary, and
		126 : term, .unary, and
		127 : term, .term * unary, eq
		128 : term, .term / unary, eq
		129 : term, .term mod unary, eq
		130 : term, .unary, eq
		131 : term, .term * unary, neq
		132 : term, .term / unary, neq
		133 : term, .term mod unary, neq
		134 : term, .unary, neq
		135 : term, .term * unary, +
		136 : term, .term / unary, +
		137 : term, .term mod unary, +
		138 : term, .unary, +
		139 : term, .term * unary, -
		140 : term, .term / unary, -
		141 : term, .term mod unary, -
		142 : term, .unary, -
		143 : term, .term * unary, *
		144 : term, .term / unary, *
		145 : term, .term mod unary, *
		146 : term, .unary, *
		147 : term, .term * unary, /
		148 : term, .term / unary, /
		149 : term, .term mod unary, /
		150 : term, .unary, /
		151 : term, .term * unary, mod
		152 : term, .term / unary, mod
		153 : term, .term mod unary, mod
		154 : term, .unary, mod
		155 : unary, .! unary, <
		156 : unary, .- unary, <
		157 : unary, .factor, <
		158 : unary, .! unary, <=
		159 : unary, .- unary, <=
		160 : unary, .factor, <=
		161 : unary, .! unary, >=
		162 : unary, .- unary, >=
		163 : unary, .factor, >=
		164 : unary, .! unary, >
		165 : unary, .- unary, >
		166 : unary, .factor, >
		167 : unary, .! unary, ]
		168 : unary, .- unary, ]
		169 : unary, .factor, ]
		170 : unary, .! unary, or
		171 : unary, .- unary, or
		172 : unary, .factor, or
		173 : unary, .! unary, and
		174 : unary, .- unary, and
		175 : unary, .factor, and
		176 : unary, .! unary, eq
		177 : unary, .- unary, eq
		178 : unary, .factor, eq
		179 : unary, .! unary, neq
		180 : unary, .- unary, neq
		181 : unary, .factor, neq
		182 : unary, .! unary, +
		183 : unary, .- unary, +
		184 : unary, .factor, +
		185 : unary, .! unary, -
		186 : unary, .- unary, -
		187 : unary, .factor, -
		188 : unary, .! unary, *
		189 : unary, .- unary, *
		190 : unary, .factor, *
		191 : unary, .! unary, /
		192 : unary, .- unary, /
		193 : unary, .factor, /
		194 : unary, .! unary, mod
		195 : unary, .- unary, mod
		196 : unary, .factor, mod
		197 : factor, .( bool ), <
		198 : factor, .loc, <
		199 : factor, .id ( args ), <
		200 : factor, .num, <
		201 : factor, .real, <
		202 : factor, .true, <
		203 : factor, .false, <
		204 : factor, .( bool ), <=
		205 : factor, .loc, <=
		206 : factor, .id ( args ), <=
		207 : factor, .num, <=
		208 : factor, .real, <=
		209 : factor, .true, <=
		210 : factor, .false, <=
		211 : factor, .( bool ), >=
		212 : factor, .loc, >=
		213 : factor, .id ( args ), >=
		214 : factor, .num, >=
		215 : factor, .real, >=
		216 : factor, .true, >=
		217 : factor, .false, >=
		218 : factor, .( bool ), >
		219 : factor, .loc, >
		220 : factor, .id ( args ), >
		221 : factor, .num, >
		222 : factor, .real, >
		223 : factor, .true, >
		224 : factor, .false, >
		225 : factor, .( bool ), ]
		226 : factor, .loc, ]
		227 : factor, .id ( args ), ]
		228 : factor, .num, ]
		229 : factor, .real, ]
		230 : factor, .true, ]
		231 : factor, .false, ]
		232 : factor, .( bool ), or
		233 : factor, .loc, or
		234 : factor, .id ( args ), or
		235 : factor, .num, or
		236 : factor, .real, or
		237 : factor, .true, or
		238 : factor, .false, or
		239 : factor, .( bool ), and
		240 : factor, .loc, and
		241 : factor, .id ( args ), and
		242 : factor, .num, and
		243 : factor, .real, and
		244 : factor, .true, and
		245 : factor, .false, and
		246 : factor, .( bool ), eq
		247 : factor, .loc, eq
		248 : factor, .id ( args ), eq
		249 : factor, .num, eq
		250 : factor, .real, eq
		251 : factor, .true, eq
		252 : factor, .false, eq
		253 : factor, .( bool ), neq
		254 : factor, .loc, neq
		255 : factor, .id ( args ), neq
		256 : factor, .num, neq
		257 : factor, .real, neq
		258 : factor, .true, neq
		259 : factor, .false, neq
		260 : factor, .( bool ), +
		261 : factor, .loc, +
		262 : factor, .id ( args ), +
		263 : factor, .num, +
		264 : factor, .real, +
		265 : factor, .true, +
		266 : factor, .false, +
		267 : factor, .( bool ), -
		268 : factor, .loc, -
		269 : factor, .id ( args ), -
		270 : factor, .num, -
		271 : factor, .real, -
		272 : factor, .true, -
		273 : factor, .false, -
		274 : factor, .( bool ), *
		275 : factor, .loc, *
		276 : factor, .id ( args ), *
		277 : factor, .num, *
		278 : factor, .real, *
		279 : factor, .true, *
		280 : factor, .false, *
		281 : factor, .( bool ), /
		282 : factor, .loc, /
		283 : factor, .id ( args ), /
		284 : factor, .num, /
		285 : factor, .real, /
		286 : factor, .true, /
		287 : factor, .false, /
		288 : factor, .( bool ), mod
		289 : factor, .loc, mod
		290 : factor, .id ( args ), mod
		291 : factor, .num, mod
		292 : factor, .real, mod
		293 : factor, .true, mod
		294 : factor, .false, mod
		295 : loc, .loc [ bool ], <
		296 : loc, .id, <
		297 : loc, .loc [ bool ], <=
		298 : loc, .id, <=
		299 : loc, .loc [ bool ], >=
		300 : loc, .id, >=
		301 : loc, .loc [ bool ], >
		302 : loc, .id, >
		303 : loc, .loc [ bool ], ]
		304 : loc, .id, ]
		305 : loc, .loc [ bool ], or
		306 : loc, .id, or
		307 : loc, .loc [ bool ], and
		308 : loc, .id, and
		309 : loc, .loc [ bool ], eq
		310 : loc, .id, eq
		311 : loc, .loc [ bool ], neq
		312 : loc, .id, neq
		313 : loc, .loc [ bool ], +
		314 : loc, .id, +
		315 : loc, .loc [ bool ], -
		316 : loc, .id, -
		317 : loc, .loc [ bool ], *
		318 : loc, .id, *
		319 : loc, .loc [ bool ], /
		320 : loc, .id, /
		321 : loc, .loc [ bool ], mod
		322 : loc, .id, mod
		323 : loc, .loc [ bool ], [
		324 : loc, .id, [
	[399] 
		0 : loc, loc [ bool .], ]
		1 : loc, loc [ bool .], or
		2 : loc, loc [ bool .], and
		3 : loc, loc [ bool .], eq
		4 : loc, loc [ bool .], neq
		5 : loc, loc [ bool .], +
		6 : loc, loc [ bool .], -
		7 : loc, loc [ bool .], *
		8 : loc, loc [ bool .], /
		9 : loc, loc [ bool .], mod
		10 : loc, loc [ bool .], [
		11 : bool, bool .or join, ]
		12 : bool, bool .or join, or
	[400] 
		0 : expr, expr + term ., ]
		1 : expr, expr + term ., or
		2 : expr, expr + term ., and
		3 : expr, expr + term ., eq
		4 : expr, expr + term ., neq
		5 : expr, expr + term ., +
		6 : expr, expr + term ., -
		7 : term, term .* unary, ]
		8 : term, term ./ unary, ]
		9 : term, term .mod unary, ]
		10 : term, term .* unary, or
		11 : term, term ./ unary, or
		12 : term, term .mod unary, or
		13 : term, term .* unary, and
		14 : term, term ./ unary, and
		15 : term, term .mod unary, and
		16 : term, term .* unary, eq
		17 : term, term ./ unary, eq
		18 : term, term .mod unary, eq
		19 : term, term .* unary, neq
		20 : term, term ./ unary, neq
		21 : term, term .mod unary, neq
		22 : term, term .* unary, +
		23 : term, term ./ unary, +
		24 : term, term .mod unary, +
		25 : term, term .* unary, -
		26 : term, term ./ unary, -
		27 : term, term .mod unary, -
		28 : term, term .* unary, *
		29 : term, term ./ unary, *
		30 : term, term .mod unary, *
		31 : term, term .* unary, /
		32 : term, term ./ unary, /
		33 : term, term .mod unary, /
		34 : term, term .* unary, mod
		35 : term, term ./ unary, mod
		36 : term, term .mod unary, mod
	[401] 
		0 : expr, expr - term ., ]
		1 : expr, expr - term ., or
		2 : expr, expr - term ., and
		3 : expr, expr - term ., eq
		4 : expr, expr - term ., neq
		5 : expr, expr - term ., +
		6 : expr, expr - term ., -
		7 : term, term .* unary, ]
		8 : term, term ./ unary, ]
		9 : term, term .mod unary, ]
		10 : term, term .* unary, or
		11 : term, term ./ unary, or
		12 : term, term .mod unary, or
		13 : term, term .* unary, and
		14 : term, term ./ unary, and
		15 : term, term .mod unary, and
		16 : term, term .* unary, eq
		17 : term, term ./ unary, eq
		18 : term, term .mod unary, eq
		19 : term, term .* unary, neq
		20 : term, term ./ unary, neq
		21 : term, term .mod unary, neq
		22 : term, term .* unary, +
		23 : term, term ./ unary, +
		24 : term, term .mod unary, +
		25 : term, term .* unary, -
		26 : term, term ./ unary, -
		27 : term, term .mod unary, -
		28 : term, term .* unary, *
		29 : term, term ./ unary, *
		30 : term, term .mod unary, *
		31 : term, term .* unary, /
		32 : term, term ./ unary, /
		33 : term, term .mod unary, /
		34 : term, term .* unary, mod
		35 : term, term ./ unary, mod
		36 : term, term .mod unary, mod
	[402] 
		0 : term, term * unary ., ]
		1 : term, term * unary ., or
		2 : term, term * unary ., and
		3 : term, term * unary ., eq
		4 : term, term * unary ., neq
		5 : term, term * unary ., +
		6 : term, term * unary ., -
		7 : term, term * unary ., *
		8 : term, term * unary ., /
		9 : term, term * unary ., mod
	[403] 
		0 : term, term / unary ., ]
		1 : term, term / unary ., or
		2 : term, term / unary ., and
		3 : term, term / unary ., eq
		4 : term, term / unary ., neq
		5 : term, term / unary ., +
		6 : term, term / unary ., -
		7 : term, term / unary ., *
		8 : term, term / unary ., /
		9 : term, term / unary ., mod
	[404] 
		0 : term, term mod unary ., ]
		1 : term, term mod unary ., or
		2 : term, term mod unary ., and
		3 : term, term mod unary ., eq
		4 : term, term mod unary ., neq
		5 : term, term mod unary ., +
		6 : term, term mod unary ., -
		7 : term, term mod unary ., *
		8 : term, term mod unary ., /
		9 : term, term mod unary ., mod
	[405] 
		0 : factor, id ( args .), ]
		1 : factor, id ( args .), or
		2 : factor, id ( args .), and
		3 : factor, id ( args .), eq
		4 : factor, id ( args .), neq
		5 : factor, id ( args .), +
		6 : factor, id ( args .), -
		7 : factor, id ( args .), *
		8 : factor, id ( args .), /
		9 : factor, id ( args .), mod
		10 : args, args ., arg, )
		11 : args, args ., arg, ,
	[406] 
		0 : factor, ( bool ) ., ]
		1 : factor, ( bool ) ., or
		2 : factor, ( bool ) ., and
		3 : factor, ( bool ) ., eq
		4 : factor, ( bool ) ., neq
		5 : factor, ( bool ) ., +
		6 : factor, ( bool ) ., -
		7 : factor, ( bool ) ., *
		8 : factor, ( bool ) ., /
		9 : factor, ( bool ) ., mod
	[407] 
		0 : stmt, if ( bool ) M stmt else .M stmt, }
		1 : stmt, if ( bool ) M stmt else .M stmt, [
		2 : stmt, if ( bool ) M stmt else .M stmt, id
		3 : stmt, if ( bool ) M stmt else .M stmt, if
		4 : stmt, if ( bool ) M stmt else .M stmt, while
		5 : stmt, if ( bool ) M stmt else .M stmt, do
		6 : stmt, if ( bool ) M stmt else .M stmt, return
		7 : stmt, if ( bool ) M stmt else .M stmt, {
		8 : stmt, if ( bool ) M stmt else .M stmt, else
		9 : M, ., [
		10 : M, ., id
		11 : M, ., if
		12 : M, ., while
		13 : M, ., do
		14 : M, ., return
		15 : M, ., {
		16 : M, ., ;
	[408] 
		0 : stmt, loc = .bool ;, }
		1 : stmt, loc = .bool ;, else
		2 : stmt, loc = .bool ;, [
		3 : stmt, loc = .bool ;, id
		4 : stmt, loc = .bool ;, if
		5 : stmt, loc = .bool ;, while
		6 : stmt, loc = .bool ;, do
		7 : stmt, loc = .bool ;, return
		8 : stmt, loc = .bool ;, {
		9 : bool, .bool or join, ;
		10 : bool, .join, ;
		11 : bool, .bool or join, or
		12 : bool, .join, or
		13 : join, .join and equality, ;
		14 : join, .equality, ;
		15 : join, .join and equality, or
		16 : join, .equality, or
		17 : join, .join and equality, and
		18 : join, .equality, and
		19 : equality, .equality eq rel, ;
		20 : equality, .equality neq rel, ;
		21 : equality, .rel, ;
		22 : equality, .equality eq rel, or
		23 : equality, .equality neq rel, or
		24 : equality, .rel, or
		25 : equality, .equality eq rel, and
		26 : equality, .equality neq rel, and
		27 : equality, .rel, and
		28 : equality, .equality eq rel, eq
		29 : equality, .equality neq rel, eq
		30 : equality, .rel, eq
		31 : equality, .equality eq rel, neq
		32 : equality, .equality neq rel, neq
		33 : equality, .rel, neq
		34 : rel, .expr < expr, ;
		35 : rel, .expr <= expr, ;
		36 : rel, .expr >= expr, ;
		37 : rel, .expr > expr, ;
		38 : rel, .expr, ;
		39 : rel, .expr < expr, or
		40 : rel, .expr <= expr, or
		41 : rel, .expr >= expr, or
		42 : rel, .expr > expr, or
		43 : rel, .expr, or
		44 : rel, .expr < expr, and
		45 : rel, .expr <= expr, and
		46 : rel, .expr >= expr, and
		47 : rel, .expr > expr, and
		48 : rel, .expr, and
		49 : rel, .expr < expr, eq
		50 : rel, .expr <= expr, eq
		51 : rel, .expr >= expr, eq
		52 : rel, .expr > expr, eq
		53 : rel, .expr, eq
		54 : rel, .expr < expr, neq
		55 : rel, .expr <= expr, neq
		56 : rel, .expr >= expr, neq
		57 : rel, .expr > expr, neq
		58 : rel, .expr, neq
		59 : expr, .expr + term, <
		60 : expr, .expr - term, <
		61 : expr, .term, <
		62 : expr, .expr + term, <=
		63 : expr, .expr - term, <=
		64 : expr, .term, <=
		65 : expr, .expr + term, >=
		66 : expr, .expr - term, >=
		67 : expr, .term, >=
		68 : expr, .expr + term, >
		69 : expr, .expr - term, >
		70 : expr, .term, >
		71 : expr, .expr + term, ;
		72 : expr, .expr - term, ;
		73 : expr, .term, ;
		74 : expr, .expr + term, or
		75 : expr, .expr - term, or
		76 : expr, .term, or
		77 : expr, .expr + term, and
		78 : expr, .expr - term, and
		79 : expr, .term, and
		80 : expr, .expr + term, eq
		81 : expr, .expr - term, eq
		82 : expr, .term, eq
		83 : expr, .expr + term, neq
		84 : expr, .expr - term, neq
		85 : expr, .term, neq
		86 : expr, .expr + term, +
		87 : expr, .expr - term, +
		88 : expr, .term, +
		89 : expr, .expr + term, -
		90 : expr, .expr - term, -
		91 : expr, .term, -
		92 : term, .term * unary, <
		93 : term, .term / unary, <
		94 : term, .term mod unary, <
		95 : term, .unary, <
		96 : term, .term * unary, <=
		97 : term, .term / unary, <=
		98 : term, .term mod unary, <=
		99 : term, .unary, <=
		100 : term, .term * unary, >=
		101 : term, .term / unary, >=
		102 : term, .term mod unary, >=
		103 : term, .unary, >=
		104 : term, .term * unary, >
		105 : term, .term / unary, >
		106 : term, .term mod unary, >
		107 : term, .unary, >
		108 : term, .term * unary, ;
		109 : term, .term / unary, ;
		110 : term, .term mod unary, ;
		111 : term, .unary, ;
		112 : term, .term * unary, or
		113 : term, .term / unary, or
		114 : term, .term mod unary, or
		115 : term, .unary, or
		116 : term, .term * unary, and
		117 : term, .term / unary, and
		118 : term, .term mod unary, and
		119 : term, .unary, and
		120 : term, .term * unary, eq
		121 : term, .term / unary, eq
		122 : term, .term mod unary, eq
		123 : term, .unary, eq
		124 : term, .term * unary, neq
		125 : term, .term / unary, neq
		126 : term, .term mod unary, neq
		127 : term, .unary, neq
		128 : term, .term * unary, +
		129 : term, .term / unary, +
		130 : term, .term mod unary, +
		131 : term, .unary, +
		132 : term, .term * unary, -
		133 : term, .term / unary, -
		134 : term, .term mod unary, -
		135 : term, .unary, -
		136 : term, .term * unary, *
		137 : term, .term / unary, *
		138 : term, .term mod unary, *
		139 : term, .unary, *
		140 : term, .term * unary, /
		141 : term, .term / unary, /
		142 : term, .term mod unary, /
		143 : term, .unary, /
		144 : term, .term * unary, mod
		145 : term, .term / unary, mod
		146 : term, .term mod unary, mod
		147 : term, .unary, mod
		148 : unary, .! unary, <
		149 : unary, .- unary, <
		150 : unary, .factor, <
		151 : unary, .! unary, <=
		152 : unary, .- unary, <=
		153 : unary, .factor, <=
		154 : unary, .! unary, >=
		155 : unary, .- unary, >=
		156 : unary, .factor, >=
		157 : unary, .! unary, >
		158 : unary, .- unary, >
		159 : unary, .factor, >
		160 : unary, .! unary, ;
		161 : unary, .- unary, ;
		162 : unary, .factor, ;
		163 : unary, .! unary, or
		164 : unary, .- unary, or
		165 : unary, .factor, or
		166 : unary, .! unary, and
		167 : unary, .- unary, and
		168 : unary, .factor, and
		169 : unary, .! unary, eq
		170 : unary, .- unary, eq
		171 : unary, .factor, eq
		172 : unary, .! unary, neq
		173 : unary, .- unary, neq
		174 : unary, .factor, neq
		175 : unary, .! unary, +
		176 : unary, .- unary, +
		177 : unary, .factor, +
		178 : unary, .! unary, -
		179 : unary, .- unary, -
		180 : unary, .factor, -
		181 : unary, .! unary, *
		182 : unary, .- unary, *
		183 : unary, .factor, *
		184 : unary, .! unary, /
		185 : unary, .- unary, /
		186 : unary, .factor, /
		187 : unary, .! unary, mod
		188 : unary, .- unary, mod
		189 : unary, .factor, mod
		190 : factor, .( bool ), <
		191 : factor, .loc, <
		192 : factor, .id ( args ), <
		193 : factor, .num, <
		194 : factor, .real, <
		195 : factor, .true, <
		196 : factor, .false, <
		197 : factor, .( bool ), <=
		198 : factor, .loc, <=
		199 : factor, .id ( args ), <=
		200 : factor, .num, <=
		201 : factor, .real, <=
		202 : factor, .true, <=
		203 : factor, .false, <=
		204 : factor, .( bool ), >=
		205 : factor, .loc, >=
		206 : factor, .id ( args ), >=
		207 : factor, .num, >=
		208 : factor, .real, >=
		209 : factor, .true, >=
		210 : factor, .false, >=
		211 : factor, .( bool ), >
		212 : factor, .loc, >
		213 : factor, .id ( args ), >
		214 : factor, .num, >
		215 : factor, .real, >
		216 : factor, .true, >
		217 : factor, .false, >
		218 : factor, .( bool ), ;
		219 : factor, .loc, ;
		220 : factor, .id ( args ), ;
		221 : factor, .num, ;
		222 : factor, .real, ;
		223 : factor, .true, ;
		224 : factor, .false, ;
		225 : factor, .( bool ), or
		226 : factor, .loc, or
		227 : factor, .id ( args ), or
		228 : factor, .num, or
		229 : factor, .real, or
		230 : factor, .true, or
		231 : factor, .false, or
		232 : factor, .( bool ), and
		233 : factor, .loc, and
		234 : factor, .id ( args ), and
		235 : factor, .num, and
		236 : factor, .real, and
		237 : factor, .true, and
		238 : factor, .false, and
		239 : factor, .( bool ), eq
		240 : factor, .loc, eq
		241 : factor, .id ( args ), eq
		242 : factor, .num, eq
		243 : factor, .real, eq
		244 : factor, .true, eq
		245 : factor, .false, eq
		246 : factor, .( bool ), neq
		247 : factor, .loc, neq
		248 : factor, .id ( args ), neq
		249 : factor, .num, neq
		250 : factor, .real, neq
		251 : factor, .true, neq
		252 : factor, .false, neq
		253 : factor, .( bool ), +
		254 : factor, .loc, +
		255 : factor, .id ( args ), +
		256 : factor, .num, +
		257 : factor, .real, +
		258 : factor, .true, +
		259 : factor, .false, +
		260 : factor, .( bool ), -
		261 : factor, .loc, -
		262 : factor, .id ( args ), -
		263 : factor, .num, -
		264 : factor, .real, -
		265 : factor, .true, -
		266 : factor, .false, -
		267 : factor, .( bool ), *
		268 : factor, .loc, *
		269 : factor, .id ( args ), *
		270 : factor, .num, *
		271 : factor, .real, *
		272 : factor, .true, *
		273 : factor, .false, *
		274 : factor, .( bool ), /
		275 : factor, .loc, /
		276 : factor, .id ( args ), /
		277 : factor, .num, /
		278 : factor, .real, /
		279 : factor, .true, /
		280 : factor, .false, /
		281 : factor, .( bool ), mod
		282 : factor, .loc, mod
		283 : factor, .id ( args ), mod
		284 : factor, .num, mod
		285 : factor, .real, mod
		286 : factor, .true, mod
		287 : factor, .false, mod
		288 : loc, .loc [ bool ], <
		289 : loc, .id, <
		290 : loc, .loc [ bool ], <=
		291 : loc, .id, <=
		292 : loc, .loc [ bool ], >=
		293 : loc, .id, >=
		294 : loc, .loc [ bool ], >
		295 : loc, .id, >
		296 : loc, .loc [ bool ], ;
		297 : loc, .id, ;
		298 : loc, .loc [ bool ], or
		299 : loc, .id, or
		300 : loc, .loc [ bool ], and
		301 : loc, .id, and
		302 : loc, .loc [ bool ], eq
		303 : loc, .id, eq
		304 : loc, .loc [ bool ], neq
		305 : loc, .id, neq
		306 : loc, .loc [ bool ], +
		307 : loc, .id, +
		308 : loc, .loc [ bool ], -
		309 : loc, .id, -
		310 : loc, .loc [ bool ], *
		311 : loc, .id, *
		312 : loc, .loc [ bool ], /
		313 : loc, .id, /
		314 : loc, .loc [ bool ], mod
		315 : loc, .id, mod
		316 : loc, .loc [ bool ], [
		317 : loc, .id, [
	[409] 
		0 : block, { decls .stmts }, }
		1 : block, { decls .stmts }, else
		2 : block, { decls .stmts }, [
		3 : block, { decls .stmts }, id
		4 : block, { decls .stmts }, if
		5 : block, { decls .stmts }, while
		6 : block, { decls .stmts }, do
		7 : block, { decls .stmts }, return
		8 : block, { decls .stmts }, {
		9 : decls, decls .decl, [
		10 : decls, decls .decl, id
		11 : decls, decls .decl, if
		12 : decls, decls .decl, while
		13 : decls, decls .decl, do
		14 : decls, decls .decl, return
		15 : decls, decls .decl, {
		16 : decls, decls .decl, }
		17 : decls, decls .decl, basic
		18 : stmts, .stmts stmt, }
		19 : stmts, ., }
		20 : decl, .type id ;, [
		21 : decl, .type id ;, id
		22 : decl, .type id ;, if
		23 : decl, .type id ;, while
		24 : decl, .type id ;, do
		25 : decl, .type id ;, return
		26 : decl, .type id ;, {
		27 : decl, .type id ;, }
		28 : decl, .type id ;, basic
		29 : stmts, .stmts stmt, [
		30 : stmts, .stmts stmt, id
		31 : stmts, .stmts stmt, if
		32 : stmts, .stmts stmt, while
		33 : stmts, .stmts stmt, do
		34 : stmts, .stmts stmt, return
		35 : stmts, .stmts stmt, {
		36 : stmts, .stmts stmt, else
		37 : stmts, ., [
		38 : stmts, ., id
		39 : stmts, ., if
		40 : stmts, ., while
		41 : stmts, ., do
		42 : stmts, ., return
		43 : stmts, ., {
		44 : stmts, ., else
		45 : type, .type [ num ], id
		46 : type, .basic, id
		47 : type, .type [ num ], [
		48 : type, .basic, [
	[410] 
		0 : stmt, if ( .bool ) M stmt, }
		1 : stmt, if ( .bool ) M stmt else M stmt, }
		2 : stmt, if ( .bool ) M stmt, else
		3 : stmt, if ( .bool ) M stmt else M stmt, else
		4 : stmt, if ( .bool ) M stmt, [
		5 : stmt, if ( .bool ) M stmt else M stmt, [
		6 : stmt, if ( .bool ) M stmt, id
		7 : stmt, if ( .bool ) M stmt else M stmt, id
		8 : stmt, if ( .bool ) M stmt, if
		9 : stmt, if ( .bool ) M stmt else M stmt, if
		10 : stmt, if ( .bool ) M stmt, while
		11 : stmt, if ( .bool ) M stmt else M stmt, while
		12 : stmt, if ( .bool ) M stmt, do
		13 : stmt, if ( .bool ) M stmt else M stmt, do
		14 : stmt, if ( .bool ) M stmt, return
		15 : stmt, if ( .bool ) M stmt else M stmt, return
		16 : stmt, if ( .bool ) M stmt, {
		17 : stmt, if ( .bool ) M stmt else M stmt, {
		18 : bool, .bool or join, )
		19 : bool, .join, )
		20 : bool, .bool or join, or
		21 : bool, .join, or
		22 : join, .join and equality, )
		23 : join, .equality, )
		24 : join, .join and equality, or
		25 : join, .equality, or
		26 : join, .join and equality, and
		27 : join, .equality, and
		28 : equality, .equality eq rel, )
		29 : equality, .equality neq rel, )
		30 : equality, .rel, )
		31 : equality, .equality eq rel, or
		32 : equality, .equality neq rel, or
		33 : equality, .rel, or
		34 : equality, .equality eq rel, and
		35 : equality, .equality neq rel, and
		36 : equality, .rel, and
		37 : equality, .equality eq rel, eq
		38 : equality, .equality neq rel, eq
		39 : equality, .rel, eq
		40 : equality, .equality eq rel, neq
		41 : equality, .equality neq rel, neq
		42 : equality, .rel, neq
		43 : rel, .expr < expr, )
		44 : rel, .expr <= expr, )
		45 : rel, .expr >= expr, )
		46 : rel, .expr > expr, )
		47 : rel, .expr, )
		48 : rel, .expr < expr, or
		49 : rel, .expr <= expr, or
		50 : rel, .expr >= expr, or
		51 : rel, .expr > expr, or
		52 : rel, .expr, or
		53 : rel, .expr < expr, and
		54 : rel, .expr <= expr, and
		55 : rel, .expr >= expr, and
		56 : rel, .expr > expr, and
		57 : rel, .expr, and
		58 : rel, .expr < expr, eq
		59 : rel, .expr <= expr, eq
		60 : rel, .expr >= expr, eq
		61 : rel, .expr > expr, eq
		62 : rel, .expr, eq
		63 : rel, .expr < expr, neq
		64 : rel, .expr <= expr, neq
		65 : rel, .expr >= expr, neq
		66 : rel, .expr > expr, neq
		67 : rel, .expr, neq
		68 : expr, .expr + term, <
		69 : expr, .expr - term, <
		70 : expr, .term, <
		71 : expr, .expr + term, <=
		72 : expr, .expr - term, <=
		73 : expr, .term, <=
		74 : expr, .expr + term, >=
		75 : expr, .expr - term, >=
		76 : expr, .term, >=
		77 : expr, .expr + term, >
		78 : expr, .expr - term, >
		79 : expr, .term, >
		80 : expr, .expr + term, )
		81 : expr, .expr - term, )
		82 : expr, .term, )
		83 : expr, .expr + term, or
		84 : expr, .expr - term, or
		85 : expr, .term, or
		86 : expr, .expr + term, and
		87 : expr, .expr - term, and
		88 : expr, .term, and
		89 : expr, .expr + term, eq
		90 : expr, .expr - term, eq
		91 : expr, .term, eq
		92 : expr, .expr + term, neq
		93 : expr, .expr - term, neq
		94 : expr, .term, neq
		95 : expr, .expr + term, +
		96 : expr, .expr - term, +
		97 : expr, .term, +
		98 : expr, .expr + term, -
		99 : expr, .expr - term, -
		100 : expr, .term, -
		101 : term, .term * unary, <
		102 : term, .term / unary, <
		103 : term, .term mod unary, <
		104 : term, .unary, <
		105 : term, .term * unary, <=
		106 : term, .term / unary, <=
		107 : term, .term mod unary, <=
		108 : term, .unary, <=
		109 : term, .term * unary, >=
		110 : term, .term / unary, >=
		111 : term, .term mod unary, >=
		112 : term, .unary, >=
		113 : term, .term * unary, >
		114 : term, .term / unary, >
		115 : term, .term mod unary, >
		116 : term, .unary, >
		117 : term, .term * unary, )
		118 : term, .term / unary, )
		119 : term, .term mod unary, )
		120 : term, .unary, )
		121 : term, .term * unary, or
		122 : term, .term / unary, or
		123 : term, .term mod unary, or
		124 : term, .unary, or
		125 : term, .term * unary, and
		126 : term, .term / unary, and
		127 : term, .term mod unary, and
		128 : term, .unary, and
		129 : term, .term * unary, eq
		130 : term, .term / unary, eq
		131 : term, .term mod unary, eq
		132 : term, .unary, eq
		133 : term, .term * unary, neq
		134 : term, .term / unary, neq
		135 : term, .term mod unary, neq
		136 : term, .unary, neq
		137 : term, .term * unary, +
		138 : term, .term / unary, +
		139 : term, .term mod unary, +
		140 : term, .unary, +
		141 : term, .term * unary, -
		142 : term, .term / unary, -
		143 : term, .term mod unary, -
		144 : term, .unary, -
		145 : term, .term * unary, *
		146 : term, .term / unary, *
		147 : term, .term mod unary, *
		148 : term, .unary, *
		149 : term, .term * unary, /
		150 : term, .term / unary, /
		151 : term, .term mod unary, /
		152 : term, .unary, /
		153 : term, .term * unary, mod
		154 : term, .term / unary, mod
		155 : term, .term mod unary, mod
		156 : term, .unary, mod
		157 : unary, .! unary, <
		158 : unary, .- unary, <
		159 : unary, .factor, <
		160 : unary, .! unary, <=
		161 : unary, .- unary, <=
		162 : unary, .factor, <=
		163 : unary, .! unary, >=
		164 : unary, .- unary, >=
		165 : unary, .factor, >=
		166 : unary, .! unary, >
		167 : unary, .- unary, >
		168 : unary, .factor, >
		169 : unary, .! unary, )
		170 : unary, .- unary, )
		171 : unary, .factor, )
		172 : unary, .! unary, or
		173 : unary, .- unary, or
		174 : unary, .factor, or
		175 : unary, .! unary, and
		176 : unary, .- unary, and
		177 : unary, .factor, and
		178 : unary, .! unary, eq
		179 : unary, .- unary, eq
		180 : unary, .factor, eq
		181 : unary, .! unary, neq
		182 : unary, .- unary, neq
		183 : unary, .factor, neq
		184 : unary, .! unary, +
		185 : unary, .- unary, +
		186 : unary, .factor, +
		187 : unary, .! unary, -
		188 : unary, .- unary, -
		189 : unary, .factor, -
		190 : unary, .! unary, *
		191 : unary, .- unary, *
		192 : unary, .factor, *
		193 : unary, .! unary, /
		194 : unary, .- unary, /
		195 : unary, .factor, /
		196 : unary, .! unary, mod
		197 : unary, .- unary, mod
		198 : unary, .factor, mod
		199 : factor, .( bool ), <
		200 : factor, .loc, <
		201 : factor, .id ( args ), <
		202 : factor, .num, <
		203 : factor, .real, <
		204 : factor, .true, <
		205 : factor, .false, <
		206 : factor, .( bool ), <=
		207 : factor, .loc, <=
		208 : factor, .id ( args ), <=
		209 : factor, .num, <=
		210 : factor, .real, <=
		211 : factor, .true, <=
		212 : factor, .false, <=
		213 : factor, .( bool ), >=
		214 : factor, .loc, >=
		215 : factor, .id ( args ), >=
		216 : factor, .num, >=
		217 : factor, .real, >=
		218 : factor, .true, >=
		219 : factor, .false, >=
		220 : factor, .( bool ), >
		221 : factor, .loc, >
		222 : factor, .id ( args ), >
		223 : factor, .num, >
		224 : factor, .real, >
		225 : factor, .true, >
		226 : factor, .false, >
		227 : factor, .( bool ), )
		228 : factor, .loc, )
		229 : factor, .id ( args ), )
		230 : factor, .num, )
		231 : factor, .real, )
		232 : factor, .true, )
		233 : factor, .false, )
		234 : factor, .( bool ), or
		235 : factor, .loc, or
		236 : factor, .id ( args ), or
		237 : factor, .num, or
		238 : factor, .real, or
		239 : factor, .true, or
		240 : factor, .false, or
		241 : factor, .( bool ), and
		242 : factor, .loc, and
		243 : factor, .id ( args ), and
		244 : factor, .num, and
		245 : factor, .real, and
		246 : factor, .true, and
		247 : factor, .false, and
		248 : factor, .( bool ), eq
		249 : factor, .loc, eq
		250 : factor, .id ( args ), eq
		251 : factor, .num, eq
		252 : factor, .real, eq
		253 : factor, .true, eq
		254 : factor, .false, eq
		255 : factor, .( bool ), neq
		256 : factor, .loc, neq
		257 : factor, .id ( args ), neq
		258 : factor, .num, neq
		259 : factor, .real, neq
		260 : factor, .true, neq
		261 : factor, .false, neq
		262 : factor, .( bool ), +
		263 : factor, .loc, +
		264 : factor, .id ( args ), +
		265 : factor, .num, +
		266 : factor, .real, +
		267 : factor, .true, +
		268 : factor, .false, +
		269 : factor, .( bool ), -
		270 : factor, .loc, -
		271 : factor, .id ( args ), -
		272 : factor, .num, -
		273 : factor, .real, -
		274 : factor, .true, -
		275 : factor, .false, -
		276 : factor, .( bool ), *
		277 : factor, .loc, *
		278 : factor, .id ( args ), *
		279 : factor, .num, *
		280 : factor, .real, *
		281 : factor, .true, *
		282 : factor, .false, *
		283 : factor, .( bool ), /
		284 : factor, .loc, /
		285 : factor, .id ( args ), /
		286 : factor, .num, /
		287 : factor, .real, /
		288 : factor, .true, /
		289 : factor, .false, /
		290 : factor, .( bool ), mod
		291 : factor, .loc, mod
		292 : factor, .id ( args ), mod
		293 : factor, .num, mod
		294 : factor, .real, mod
		295 : factor, .true, mod
		296 : factor, .false, mod
		297 : loc, .loc [ bool ], <
		298 : loc, .id, <
		299 : loc, .loc [ bool ], <=
		300 : loc, .id, <=
		301 : loc, .loc [ bool ], >=
		302 : loc, .id, >=
		303 : loc, .loc [ bool ], >
		304 : loc, .id, >
		305 : loc, .loc [ bool ], )
		306 : loc, .id, )
		307 : loc, .loc [ bool ], or
		308 : loc, .id, or
		309 : loc, .loc [ bool ], and
		310 : loc, .id, and
		311 : loc, .loc [ bool ], eq
		312 : loc, .id, eq
		313 : loc, .loc [ bool ], neq
		314 : loc, .id, neq
		315 : loc, .loc [ bool ], +
		316 : loc, .id, +
		317 : loc, .loc [ bool ], -
		318 : loc, .id, -
		319 : loc, .loc [ bool ], *
		320 : loc, .id, *
		321 : loc, .loc [ bool ], /
		322 : loc, .id, /
		323 : loc, .loc [ bool ], mod
		324 : loc, .id, mod
		325 : loc, .loc [ bool ], [
		326 : loc, .id, [
	[411] 
		0 : stmt, while N .( bool ) M stmt, }
		1 : stmt, while N .( bool ) M stmt, else
		2 : stmt, while N .( bool ) M stmt, [
		3 : stmt, while N .( bool ) M stmt, id
		4 : stmt, while N .( bool ) M stmt, if
		5 : stmt, while N .( bool ) M stmt, while
		6 : stmt, while N .( bool ) M stmt, do
		7 : stmt, while N .( bool ) M stmt, return
		8 : stmt, while N .( bool ) M stmt, {
	[412] 
		0 : stmt, do N .stmt while ( bool ) M ;, }
		1 : stmt, do N .stmt while ( bool ) M ;, else
		2 : stmt, do N .stmt while ( bool ) M ;, [
		3 : stmt, do N .stmt while ( bool ) M ;, id
		4 : stmt, do N .stmt while ( bool ) M ;, if
		5 : stmt, do N .stmt while ( bool ) M ;, while
		6 : stmt, do N .stmt while ( bool ) M ;, do
		7 : stmt, do N .stmt while ( bool ) M ;, return
		8 : stmt, do N .stmt while ( bool ) M ;, {
		9 : stmt, .loc = bool ;, while
		10 : stmt, .if ( bool ) M stmt, while
		11 : stmt, .if ( bool ) M stmt else M stmt, while
		12 : stmt, .while N ( bool ) M stmt, while
		13 : stmt, .do N stmt while ( bool ) M ;, while
		14 : stmt, .return arg ;, while
		15 : stmt, .block, while
		16 : loc, .loc [ bool ], =
		17 : loc, .id, =
		18 : block, .{ decls stmts }, while
		19 : loc, .loc [ bool ], [
		20 : loc, .id, [
	[413] 
		0 : stmt, return arg .;, }
		1 : stmt, return arg .;, else
		2 : stmt, return arg .;, [
		3 : stmt, return arg .;, id
		4 : stmt, return arg .;, if
		5 : stmt, return arg .;, while
		6 : stmt, return arg .;, do
		7 : stmt, return arg .;, return
		8 : stmt, return arg .;, {
	[414] 
		0 : loc, loc [ bool .], )
		1 : loc, loc [ bool .], or
		2 : loc, loc [ bool .], and
		3 : loc, loc [ bool .], eq
		4 : loc, loc [ bool .], neq
		5 : loc, loc [ bool .], +
		6 : loc, loc [ bool .], -
		7 : loc, loc [ bool .], *
		8 : loc, loc [ bool .], /
		9 : loc, loc [ bool .], mod
		10 : loc, loc [ bool .], [
		11 : bool, bool .or join, ]
		12 : bool, bool .or join, or
	[415] 
		0 : expr, expr + term ., )
		1 : expr, expr + term ., or
		2 : expr, expr + term ., and
		3 : expr, expr + term ., eq
		4 : expr, expr + term ., neq
		5 : expr, expr + term ., +
		6 : expr, expr + term ., -
		7 : term, term .* unary, )
		8 : term, term ./ unary, )
		9 : term, term .mod unary, )
		10 : term, term .* unary, or
		11 : term, term ./ unary, or
		12 : term, term .mod unary, or
		13 : term, term .* unary, and
		14 : term, term ./ unary, and
		15 : term, term .mod unary, and
		16 : term, term .* unary, eq
		17 : term, term ./ unary, eq
		18 : term, term .mod unary, eq
		19 : term, term .* unary, neq
		20 : term, term ./ unary, neq
		21 : term, term .mod unary, neq
		22 : term, term .* unary, +
		23 : term, term ./ unary, +
		24 : term, term .mod unary, +
		25 : term, term .* unary, -
		26 : term, term ./ unary, -
		27 : term, term .mod unary, -
		28 : term, term .* unary, *
		29 : term, term ./ unary, *
		30 : term, term .mod unary, *
		31 : term, term .* unary, /
		32 : term, term ./ unary, /
		33 : term, term .mod unary, /
		34 : term, term .* unary, mod
		35 : term, term ./ unary, mod
		36 : term, term .mod unary, mod
	[416] 
		0 : expr, expr - term ., )
		1 : expr, expr - term ., or
		2 : expr, expr - term ., and
		3 : expr, expr - term ., eq
		4 : expr, expr - term ., neq
		5 : expr, expr - term ., +
		6 : expr, expr - term ., -
		7 : term, term .* unary, )
		8 : term, term ./ unary, )
		9 : term, term .mod unary, )
		10 : term, term .* unary, or
		11 : term, term ./ unary, or
		12 : term, term .mod unary, or
		13 : term, term .* unary, and
		14 : term, term ./ unary, and
		15 : term, term .mod unary, and
		16 : term, term .* unary, eq
		17 : term, term ./ unary, eq
		18 : term, term .mod unary, eq
		19 : term, term .* unary, neq
		20 : term, term ./ unary, neq
		21 : term, term .mod unary, neq
		22 : term, term .* unary, +
		23 : term, term ./ unary, +
		24 : term, term .mod unary, +
		25 : term, term .* unary, -
		26 : term, term ./ unary, -
		27 : term, term .mod unary, -
		28 : term, term .* unary, *
		29 : term, term ./ unary, *
		30 : term, term .mod unary, *
		31 : term, term .* unary, /
		32 : term, term ./ unary, /
		33 : term, term .mod unary, /
		34 : term, term .* unary, mod
		35 : term, term ./ unary, mod
		36 : term, term .mod unary, mod
	[417] 
		0 : term, term * unary ., )
		1 : term, term * unary ., or
		2 : term, term * unary ., and
		3 : term, term * unary ., eq
		4 : term, term * unary ., neq
		5 : term, term * unary ., +
		6 : term, term * unary ., -
		7 : term, term * unary ., *
		8 : term, term * unary ., /
		9 : term, term * unary ., mod
	[418] 
		0 : term, term / unary ., )
		1 : term, term / unary ., or
		2 : term, term / unary ., and
		3 : term, term / unary ., eq
		4 : term, term / unary ., neq
		5 : term, term / unary ., +
		6 : term, term / unary ., -
		7 : term, term / unary ., *
		8 : term, term / unary ., /
		9 : term, term / unary ., mod
	[419] 
		0 : term, term mod unary ., )
		1 : term, term mod unary ., or
		2 : term, term mod unary ., and
		3 : term, term mod unary ., eq
		4 : term, term mod unary ., neq
		5 : term, term mod unary ., +
		6 : term, term mod unary ., -
		7 : term, term mod unary ., *
		8 : term, term mod unary ., /
		9 : term, term mod unary ., mod
	[420] 
		0 : factor, id ( args .), )
		1 : factor, id ( args .), or
		2 : factor, id ( args .), and
		3 : factor, id ( args .), eq
		4 : factor, id ( args .), neq
		5 : factor, id ( args .), +
		6 : factor, id ( args .), -
		7 : factor, id ( args .), *
		8 : factor, id ( args .), /
		9 : factor, id ( args .), mod
		10 : args, args ., arg, )
		11 : args, args ., arg, ,
	[421] 
		0 : factor, ( bool ) ., )
		1 : factor, ( bool ) ., or
		2 : factor, ( bool ) ., and
		3 : factor, ( bool ) ., eq
		4 : factor, ( bool ) ., neq
		5 : factor, ( bool ) ., +
		6 : factor, ( bool ) ., -
		7 : factor, ( bool ) ., *
		8 : factor, ( bool ) ., /
		9 : factor, ( bool ) ., mod
	[422] 
		0 : stmt, while N ( bool ) M stmt ., }
		1 : stmt, while N ( bool ) M stmt ., [
		2 : stmt, while N ( bool ) M stmt ., id
		3 : stmt, while N ( bool ) M stmt ., if
		4 : stmt, while N ( bool ) M stmt ., while
		5 : stmt, while N ( bool ) M stmt ., do
		6 : stmt, while N ( bool ) M stmt ., return
		7 : stmt, while N ( bool ) M stmt ., {
		8 : stmt, while N ( bool ) M stmt ., else
	[423] 
		0 : stmt, do N stmt while ( bool ) .M ;, }
		1 : stmt, do N stmt while ( bool ) .M ;, [
		2 : stmt, do N stmt while ( bool ) .M ;, id
		3 : stmt, do N stmt while ( bool ) .M ;, if
		4 : stmt, do N stmt while ( bool ) .M ;, while
		5 : stmt, do N stmt while ( bool ) .M ;, do
		6 : stmt, do N stmt while ( bool ) .M ;, return
		7 : stmt, do N stmt while ( bool ) .M ;, {
		8 : stmt, do N stmt while ( bool ) .M ;, else
		9 : M, ., [
		10 : M, ., id
		11 : M, ., if
		12 : M, ., while
		13 : M, ., do
		14 : M, ., return
		15 : M, ., {
		16 : M, ., ;
	[424] 
		0 : stmt, if ( bool ) M .stmt, while
		1 : stmt, if ( bool ) M .stmt else M stmt, while
		2 : stmt, .loc = bool ;, while
		3 : stmt, .if ( bool ) M stmt, while
		4 : stmt, .if ( bool ) M stmt else M stmt, while
		5 : stmt, .while N ( bool ) M stmt, while
		6 : stmt, .do N stmt while ( bool ) M ;, while
		7 : stmt, .return arg ;, while
		8 : stmt, .block, while
		9 : stmt, .loc = bool ;, else
		10 : stmt, .if ( bool ) M stmt, else
		11 : stmt, .if ( bool ) M stmt else M stmt, else
		12 : stmt, .while N ( bool ) M stmt, else
		13 : stmt, .do N stmt while ( bool ) M ;, else
		14 : stmt, .return arg ;, else
		15 : stmt, .block, else
		16 : loc, .loc [ bool ], =
		17 : loc, .id, =
		18 : block, .{ decls stmts }, while
		19 : block, .{ decls stmts }, else
		20 : loc, .loc [ bool ], [
		21 : loc, .id, [
	[425] 
		0 : stmt, while N ( bool ) .M stmt, while
		1 : M, ., [
		2 : M, ., id
		3 : M, ., if
		4 : M, ., while
		5 : M, ., do
		6 : M, ., return
		7 : M, ., {
		8 : M, ., ;
	[426] 
		0 : stmt, do N stmt while ( .bool ) M ;, while
		1 : bool, .bool or join, )
		2 : bool, .join, )
		3 : bool, .bool or join, or
		4 : bool, .join, or
		5 : join, .join and equality, )
		6 : join, .equality, )
		7 : join, .join and equality, or
		8 : join, .equality, or
		9 : join, .join and equality, and
		10 : join, .equality, and
		11 : equality, .equality eq rel, )
		12 : equality, .equality neq rel, )
		13 : equality, .rel, )
		14 : equality, .equality eq rel, or
		15 : equality, .equality neq rel, or
		16 : equality, .rel, or
		17 : equality, .equality eq rel, and
		18 : equality, .equality neq rel, and
		19 : equality, .rel, and
		20 : equality, .equality eq rel, eq
		21 : equality, .equality neq rel, eq
		22 : equality, .rel, eq
		23 : equality, .equality eq rel, neq
		24 : equality, .equality neq rel, neq
		25 : equality, .rel, neq
		26 : rel, .expr < expr, )
		27 : rel, .expr <= expr, )
		28 : rel, .expr >= expr, )
		29 : rel, .expr > expr, )
		30 : rel, .expr, )
		31 : rel, .expr < expr, or
		32 : rel, .expr <= expr, or
		33 : rel, .expr >= expr, or
		34 : rel, .expr > expr, or
		35 : rel, .expr, or
		36 : rel, .expr < expr, and
		37 : rel, .expr <= expr, and
		38 : rel, .expr >= expr, and
		39 : rel, .expr > expr, and
		40 : rel, .expr, and
		41 : rel, .expr < expr, eq
		42 : rel, .expr <= expr, eq
		43 : rel, .expr >= expr, eq
		44 : rel, .expr > expr, eq
		45 : rel, .expr, eq
		46 : rel, .expr < expr, neq
		47 : rel, .expr <= expr, neq
		48 : rel, .expr >= expr, neq
		49 : rel, .expr > expr, neq
		50 : rel, .expr, neq
		51 : expr, .expr + term, <
		52 : expr, .expr - term, <
		53 : expr, .term, <
		54 : expr, .expr + term, <=
		55 : expr, .expr - term, <=
		56 : expr, .term, <=
		57 : expr, .expr + term, >=
		58 : expr, .expr - term, >=
		59 : expr, .term, >=
		60 : expr, .expr + term, >
		61 : expr, .expr - term, >
		62 : expr, .term, >
		63 : expr, .expr + term, )
		64 : expr, .expr - term, )
		65 : expr, .term, )
		66 : expr, .expr + term, or
		67 : expr, .expr - term, or
		68 : expr, .term, or
		69 : expr, .expr + term, and
		70 : expr, .expr - term, and
		71 : expr, .term, and
		72 : expr, .expr + term, eq
		73 : expr, .expr - term, eq
		74 : expr, .term, eq
		75 : expr, .expr + term, neq
		76 : expr, .expr - term, neq
		77 : expr, .term, neq
		78 : expr, .expr + term, +
		79 : expr, .expr - term, +
		80 : expr, .term, +
		81 : expr, .expr + term, -
		82 : expr, .expr - term, -
		83 : expr, .term, -
		84 : term, .term * unary, <
		85 : term, .term / unary, <
		86 : term, .term mod unary, <
		87 : term, .unary, <
		88 : term, .term * unary, <=
		89 : term, .term / unary, <=
		90 : term, .term mod unary, <=
		91 : term, .unary, <=
		92 : term, .term * unary, >=
		93 : term, .term / unary, >=
		94 : term, .term mod unary, >=
		95 : term, .unary, >=
		96 : term, .term * unary, >
		97 : term, .term / unary, >
		98 : term, .term mod unary, >
		99 : term, .unary, >
		100 : term, .term * unary, )
		101 : term, .term / unary, )
		102 : term, .term mod unary, )
		103 : term, .unary, )
		104 : term, .term * unary, or
		105 : term, .term / unary, or
		106 : term, .term mod unary, or
		107 : term, .unary, or
		108 : term, .term * unary, and
		109 : term, .term / unary, and
		110 : term, .term mod unary, and
		111 : term, .unary, and
		112 : term, .term * unary, eq
		113 : term, .term / unary, eq
		114 : term, .term mod unary, eq
		115 : term, .unary, eq
		116 : term, .term * unary, neq
		117 : term, .term / unary, neq
		118 : term, .term mod unary, neq
		119 : term, .unary, neq
		120 : term, .term * unary, +
		121 : term, .term / unary, +
		122 : term, .term mod unary, +
		123 : term, .unary, +
		124 : term, .term * unary, -
		125 : term, .term / unary, -
		126 : term, .term mod unary, -
		127 : term, .unary, -
		128 : term, .term * unary, *
		129 : term, .term / unary, *
		130 : term, .term mod unary, *
		131 : term, .unary, *
		132 : term, .term * unary, /
		133 : term, .term / unary, /
		134 : term, .term mod unary, /
		135 : term, .unary, /
		136 : term, .term * unary, mod
		137 : term, .term / unary, mod
		138 : term, .term mod unary, mod
		139 : term, .unary, mod
		140 : unary, .! unary, <
		141 : unary, .- unary, <
		142 : unary, .factor, <
		143 : unary, .! unary, <=
		144 : unary, .- unary, <=
		145 : unary, .factor, <=
		146 : unary, .! unary, >=
		147 : unary, .- unary, >=
		148 : unary, .factor, >=
		149 : unary, .! unary, >
		150 : unary, .- unary, >
		151 : unary, .factor, >
		152 : unary, .! unary, )
		153 : unary, .- unary, )
		154 : unary, .factor, )
		155 : unary, .! unary, or
		156 : unary, .- unary, or
		157 : unary, .factor, or
		158 : unary, .! unary, and
		159 : unary, .- unary, and
		160 : unary, .factor, and
		161 : unary, .! unary, eq
		162 : unary, .- unary, eq
		163 : unary, .factor, eq
		164 : unary, .! unary, neq
		165 : unary, .- unary, neq
		166 : unary, .factor, neq
		167 : unary, .! unary, +
		168 : unary, .- unary, +
		169 : unary, .factor, +
		170 : unary, .! unary, -
		171 : unary, .- unary, -
		172 : unary, .factor, -
		173 : unary, .! unary, *
		174 : unary, .- unary, *
		175 : unary, .factor, *
		176 : unary, .! unary, /
		177 : unary, .- unary, /
		178 : unary, .factor, /
		179 : unary, .! unary, mod
		180 : unary, .- unary, mod
		181 : unary, .factor, mod
		182 : factor, .( bool ), <
		183 : factor, .loc, <
		184 : factor, .id ( args ), <
		185 : factor, .num, <
		186 : factor, .real, <
		187 : factor, .true, <
		188 : factor, .false, <
		189 : factor, .( bool ), <=
		190 : factor, .loc, <=
		191 : factor, .id ( args ), <=
		192 : factor, .num, <=
		193 : factor, .real, <=
		194 : factor, .true, <=
		195 : factor, .false, <=
		196 : factor, .( bool ), >=
		197 : factor, .loc, >=
		198 : factor, .id ( args ), >=
		199 : factor, .num, >=
		200 : factor, .real, >=
		201 : factor, .true, >=
		202 : factor, .false, >=
		203 : factor, .( bool ), >
		204 : factor, .loc, >
		205 : factor, .id ( args ), >
		206 : factor, .num, >
		207 : factor, .real, >
		208 : factor, .true, >
		209 : factor, .false, >
		210 : factor, .( bool ), )
		211 : factor, .loc, )
		212 : factor, .id ( args ), )
		213 : factor, .num, )
		214 : factor, .real, )
		215 : factor, .true, )
		216 : factor, .false, )
		217 : factor, .( bool ), or
		218 : factor, .loc, or
		219 : factor, .id ( args ), or
		220 : factor, .num, or
		221 : factor, .real, or
		222 : factor, .true, or
		223 : factor, .false, or
		224 : factor, .( bool ), and
		225 : factor, .loc, and
		226 : factor, .id ( args ), and
		227 : factor, .num, and
		228 : factor, .real, and
		229 : factor, .true, and
		230 : factor, .false, and
		231 : factor, .( bool ), eq
		232 : factor, .loc, eq
		233 : factor, .id ( args ), eq
		234 : factor, .num, eq
		235 : factor, .real, eq
		236 : factor, .true, eq
		237 : factor, .false, eq
		238 : factor, .( bool ), neq
		239 : factor, .loc, neq
		240 : factor, .id ( args ), neq
		241 : factor, .num, neq
		242 : factor, .real, neq
		243 : factor, .true, neq
		244 : factor, .false, neq
		245 : factor, .( bool ), +
		246 : factor, .loc, +
		247 : factor, .id ( args ), +
		248 : factor, .num, +
		249 : factor, .real, +
		250 : factor, .true, +
		251 : factor, .false, +
		252 : factor, .( bool ), -
		253 : factor, .loc, -
		254 : factor, .id ( args ), -
		255 : factor, .num, -
		256 : factor, .real, -
		257 : factor, .true, -
		258 : factor, .false, -
		259 : factor, .( bool ), *
		260 : factor, .loc, *
		261 : factor, .id ( args ), *
		262 : factor, .num, *
		263 : factor, .real, *
		264 : factor, .true, *
		265 : factor, .false, *
		266 : factor, .( bool ), /
		267 : factor, .loc, /
		268 : factor, .id ( args ), /
		269 : factor, .num, /
		270 : factor, .real, /
		271 : factor, .true, /
		272 : factor, .false, /
		273 : factor, .( bool ), mod
		274 : factor, .loc, mod
		275 : factor, .id ( args ), mod
		276 : factor, .num, mod
		277 : factor, .real, mod
		278 : factor, .true, mod
		279 : factor, .false, mod
		280 : loc, .loc [ bool ], <
		281 : loc, .id, <
		282 : loc, .loc [ bool ], <=
		283 : loc, .id, <=
		284 : loc, .loc [ bool ], >=
		285 : loc, .id, >=
		286 : loc, .loc [ bool ], >
		287 : loc, .id, >
		288 : loc, .loc [ bool ], )
		289 : loc, .id, )
		290 : loc, .loc [ bool ], or
		291 : loc, .id, or
		292 : loc, .loc [ bool ], and
		293 : loc, .id, and
		294 : loc, .loc [ bool ], eq
		295 : loc, .id, eq
		296 : loc, .loc [ bool ], neq
		297 : loc, .id, neq
		298 : loc, .loc [ bool ], +
		299 : loc, .id, +
		300 : loc, .loc [ bool ], -
		301 : loc, .id, -
		302 : loc, .loc [ bool ], *
		303 : loc, .id, *
		304 : loc, .loc [ bool ], /
		305 : loc, .id, /
		306 : loc, .loc [ bool ], mod
		307 : loc, .id, mod
		308 : loc, .loc [ bool ], [
		309 : loc, .id, [
	[427] 
		0 : loc, loc [ bool ] ., ;
		1 : loc, loc [ bool ] ., or
		2 : loc, loc [ bool ] ., and
		3 : loc, loc [ bool ] ., eq
		4 : loc, loc [ bool ] ., neq
		5 : loc, loc [ bool ] ., +
		6 : loc, loc [ bool ] ., -
		7 : loc, loc [ bool ] ., *
		8 : loc, loc [ bool ] ., /
		9 : loc, loc [ bool ] ., mod
		10 : loc, loc [ bool ] ., [
	[428] 
		0 : factor, id ( args ) ., ;
		1 : factor, id ( args ) ., or
		2 : factor, id ( args ) ., and
		3 : factor, id ( args ) ., eq
		4 : factor, id ( args ) ., neq
		5 : factor, id ( args ) ., +
		6 : factor, id ( args ) ., -
		7 : factor, id ( args ) ., *
		8 : factor, id ( args ) ., /
		9 : factor, id ( args ) ., mod
	[429] 
		0 : loc, loc [ bool ] ., )
		1 : loc, loc [ bool ] ., ,
		2 : loc, loc [ bool ] ., [
		3 : loc, loc [ bool ] ., <
		4 : loc, loc [ bool ] ., <=
		5 : loc, loc [ bool ] ., >=
		6 : loc, loc [ bool ] ., >
		7 : loc, loc [ bool ] ., or
		8 : loc, loc [ bool ] ., and
		9 : loc, loc [ bool ] ., eq
		10 : loc, loc [ bool ] ., neq
		11 : loc, loc [ bool ] ., +
		12 : loc, loc [ bool ] ., -
		13 : loc, loc [ bool ] ., *
		14 : loc, loc [ bool ] ., /
		15 : loc, loc [ bool ] ., mod
	[430] 
		0 : loc, loc [ .bool ], )
		1 : loc, loc [ .bool ], ,
		2 : loc, loc [ .bool ], or
		3 : loc, loc [ .bool ], and
		4 : loc, loc [ .bool ], eq
		5 : loc, loc [ .bool ], neq
		6 : loc, loc [ .bool ], +
		7 : loc, loc [ .bool ], -
		8 : loc, loc [ .bool ], *
		9 : loc, loc [ .bool ], /
		10 : loc, loc [ .bool ], mod
		11 : loc, loc [ .bool ], [
		12 : bool, .bool or join, ]
		13 : bool, .join, ]
		14 : bool, .bool or join, or
		15 : bool, .join, or
		16 : join, .join and equality, ]
		17 : join, .equality, ]
		18 : join, .join and equality, or
		19 : join, .equality, or
		20 : join, .join and equality, and
		21 : join, .equality, and
		22 : equality, .equality eq rel, ]
		23 : equality, .equality neq rel, ]
		24 : equality, .rel, ]
		25 : equality, .equality eq rel, or
		26 : equality, .equality neq rel, or
		27 : equality, .rel, or
		28 : equality, .equality eq rel, and
		29 : equality, .equality neq rel, and
		30 : equality, .rel, and
		31 : equality, .equality eq rel, eq
		32 : equality, .equality neq rel, eq
		33 : equality, .rel, eq
		34 : equality, .equality eq rel, neq
		35 : equality, .equality neq rel, neq
		36 : equality, .rel, neq
		37 : rel, .expr < expr, ]
		38 : rel, .expr <= expr, ]
		39 : rel, .expr >= expr, ]
		40 : rel, .expr > expr, ]
		41 : rel, .expr, ]
		42 : rel, .expr < expr, or
		43 : rel, .expr <= expr, or
		44 : rel, .expr >= expr, or
		45 : rel, .expr > expr, or
		46 : rel, .expr, or
		47 : rel, .expr < expr, and
		48 : rel, .expr <= expr, and
		49 : rel, .expr >= expr, and
		50 : rel, .expr > expr, and
		51 : rel, .expr, and
		52 : rel, .expr < expr, eq
		53 : rel, .expr <= expr, eq
		54 : rel, .expr >= expr, eq
		55 : rel, .expr > expr, eq
		56 : rel, .expr, eq
		57 : rel, .expr < expr, neq
		58 : rel, .expr <= expr, neq
		59 : rel, .expr >= expr, neq
		60 : rel, .expr > expr, neq
		61 : rel, .expr, neq
		62 : expr, .expr + term, <
		63 : expr, .expr - term, <
		64 : expr, .term, <
		65 : expr, .expr + term, <=
		66 : expr, .expr - term, <=
		67 : expr, .term, <=
		68 : expr, .expr + term, >=
		69 : expr, .expr - term, >=
		70 : expr, .term, >=
		71 : expr, .expr + term, >
		72 : expr, .expr - term, >
		73 : expr, .term, >
		74 : expr, .expr + term, ]
		75 : expr, .expr - term, ]
		76 : expr, .term, ]
		77 : expr, .expr + term, or
		78 : expr, .expr - term, or
		79 : expr, .term, or
		80 : expr, .expr + term, and
		81 : expr, .expr - term, and
		82 : expr, .term, and
		83 : expr, .expr + term, eq
		84 : expr, .expr - term, eq
		85 : expr, .term, eq
		86 : expr, .expr + term, neq
		87 : expr, .expr - term, neq
		88 : expr, .term, neq
		89 : expr, .expr + term, +
		90 : expr, .expr - term, +
		91 : expr, .term, +
		92 : expr, .expr + term, -
		93 : expr, .expr - term, -
		94 : expr, .term, -
		95 : term, .term * unary, <
		96 : term, .term / unary, <
		97 : term, .term mod unary, <
		98 : term, .unary, <
		99 : term, .term * unary, <=
		100 : term, .term / unary, <=
		101 : term, .term mod unary, <=
		102 : term, .unary, <=
		103 : term, .term * unary, >=
		104 : term, .term / unary, >=
		105 : term, .term mod unary, >=
		106 : term, .unary, >=
		107 : term, .term * unary, >
		108 : term, .term / unary, >
		109 : term, .term mod unary, >
		110 : term, .unary, >
		111 : term, .term * unary, ]
		112 : term, .term / unary, ]
		113 : term, .term mod unary, ]
		114 : term, .unary, ]
		115 : term, .term * unary, or
		116 : term, .term / unary, or
		117 : term, .term mod unary, or
		118 : term, .unary, or
		119 : term, .term * unary, and
		120 : term, .term / unary, and
		121 : term, .term mod unary, and
		122 : term, .unary, and
		123 : term, .term * unary, eq
		124 : term, .term / unary, eq
		125 : term, .term mod unary, eq
		126 : term, .unary, eq
		127 : term, .term * unary, neq
		128 : term, .term / unary, neq
		129 : term, .term mod unary, neq
		130 : term, .unary, neq
		131 : term, .term * unary, +
		132 : term, .term / unary, +
		133 : term, .term mod unary, +
		134 : term, .unary, +
		135 : term, .term * unary, -
		136 : term, .term / unary, -
		137 : term, .term mod unary, -
		138 : term, .unary, -
		139 : term, .term * unary, *
		140 : term, .term / unary, *
		141 : term, .term mod unary, *
		142 : term, .unary, *
		143 : term, .term * unary, /
		144 : term, .term / unary, /
		145 : term, .term mod unary, /
		146 : term, .unary, /
		147 : term, .term * unary, mod
		148 : term, .term / unary, mod
		149 : term, .term mod unary, mod
		150 : term, .unary, mod
		151 : unary, .! unary, <
		152 : unary, .- unary, <
		153 : unary, .factor, <
		154 : unary, .! unary, <=
		155 : unary, .- unary, <=
		156 : unary, .factor, <=
		157 : unary, .! unary, >=
		158 : unary, .- unary, >=
		159 : unary, .factor, >=
		160 : unary, .! unary, >
		161 : unary, .- unary, >
		162 : unary, .factor, >
		163 : unary, .! unary, ]
		164 : unary, .- unary, ]
		165 : unary, .factor, ]
		166 : unary, .! unary, or
		167 : unary, .- unary, or
		168 : unary, .factor, or
		169 : unary, .! unary, and
		170 : unary, .- unary, and
		171 : unary, .factor, and
		172 : unary, .! unary, eq
		173 : unary, .- unary, eq
		174 : unary, .factor, eq
		175 : unary, .! unary, neq
		176 : unary, .- unary, neq
		177 : unary, .factor, neq
		178 : unary, .! unary, +
		179 : unary, .- unary, +
		180 : unary, .factor, +
		181 : unary, .! unary, -
		182 : unary, .- unary, -
		183 : unary, .factor, -
		184 : unary, .! unary, *
		185 : unary, .- unary, *
		186 : unary, .factor, *
		187 : unary, .! unary, /
		188 : unary, .- unary, /
		189 : unary, .factor, /
		190 : unary, .! unary, mod
		191 : unary, .- unary, mod
		192 : unary, .factor, mod
		193 : factor, .( bool ), <
		194 : factor, .loc, <
		195 : factor, .id ( args ), <
		196 : factor, .num, <
		197 : factor, .real, <
		198 : factor, .true, <
		199 : factor, .false, <
		200 : factor, .( bool ), <=
		201 : factor, .loc, <=
		202 : factor, .id ( args ), <=
		203 : factor, .num, <=
		204 : factor, .real, <=
		205 : factor, .true, <=
		206 : factor, .false, <=
		207 : factor, .( bool ), >=
		208 : factor, .loc, >=
		209 : factor, .id ( args ), >=
		210 : factor, .num, >=
		211 : factor, .real, >=
		212 : factor, .true, >=
		213 : factor, .false, >=
		214 : factor, .( bool ), >
		215 : factor, .loc, >
		216 : factor, .id ( args ), >
		217 : factor, .num, >
		218 : factor, .real, >
		219 : factor, .true, >
		220 : factor, .false, >
		221 : factor, .( bool ), ]
		222 : factor, .loc, ]
		223 : factor, .id ( args ), ]
		224 : factor, .num, ]
		225 : factor, .real, ]
		226 : factor, .true, ]
		227 : factor, .false, ]
		228 : factor, .( bool ), or
		229 : factor, .loc, or
		230 : factor, .id ( args ), or
		231 : factor, .num, or
		232 : factor, .real, or
		233 : factor, .true, or
		234 : factor, .false, or
		235 : factor, .( bool ), and
		236 : factor, .loc, and
		237 : factor, .id ( args ), and
		238 : factor, .num, and
		239 : factor, .real, and
		240 : factor, .true, and
		241 : factor, .false, and
		242 : factor, .( bool ), eq
		243 : factor, .loc, eq
		244 : factor, .id ( args ), eq
		245 : factor, .num, eq
		246 : factor, .real, eq
		247 : factor, .true, eq
		248 : factor, .false, eq
		249 : factor, .( bool ), neq
		250 : factor, .loc, neq
		251 : factor, .id ( args ), neq
		252 : factor, .num, neq
		253 : factor, .real, neq
		254 : factor, .true, neq
		255 : factor, .false, neq
		256 : factor, .( bool ), +
		257 : factor, .loc, +
		258 : factor, .id ( args ), +
		259 : factor, .num, +
		260 : factor, .real, +
		261 : factor, .true, +
		262 : factor, .false, +
		263 : factor, .( bool ), -
		264 : factor, .loc, -
		265 : factor, .id ( args ), -
		266 : factor, .num, -
		267 : factor, .real, -
		268 : factor, .true, -
		269 : factor, .false, -
		270 : factor, .( bool ), *
		271 : factor, .loc, *
		272 : factor, .id ( args ), *
		273 : factor, .num, *
		274 : factor, .real, *
		275 : factor, .true, *
		276 : factor, .false, *
		277 : factor, .( bool ), /
		278 : factor, .loc, /
		279 : factor, .id ( args ), /
		280 : factor, .num, /
		281 : factor, .real, /
		282 : factor, .true, /
		283 : factor, .false, /
		284 : factor, .( bool ), mod
		285 : factor, .loc, mod
		286 : factor, .id ( args ), mod
		287 : factor, .num, mod
		288 : factor, .real, mod
		289 : factor, .true, mod
		290 : factor, .false, mod
		291 : loc, .loc [ bool ], <
		292 : loc, .id, <
		293 : loc, .loc [ bool ], <=
		294 : loc, .id, <=
		295 : loc, .loc [ bool ], >=
		296 : loc, .id, >=
		297 : loc, .loc [ bool ], >
		298 : loc, .id, >
		299 : loc, .loc [ bool ], ]
		300 : loc, .id, ]
		301 : loc, .loc [ bool ], or
		302 : loc, .id, or
		303 : loc, .loc [ bool ], and
		304 : loc, .id, and
		305 : loc, .loc [ bool ], eq
		306 : loc, .id, eq
		307 : loc, .loc [ bool ], neq
		308 : loc, .id, neq
		309 : loc, .loc [ bool ], +
		310 : loc, .id, +
		311 : loc, .loc [ bool ], -
		312 : loc, .id, -
		313 : loc, .loc [ bool ], *
		314 : loc, .id, *
		315 : loc, .loc [ bool ], /
		316 : loc, .id, /
		317 : loc, .loc [ bool ], mod
		318 : loc, .id, mod
		319 : loc, .loc [ bool ], [
		320 : loc, .id, [
	[431] 
		0 : expr, expr + .term, )
		1 : expr, expr + .term, ,
		2 : expr, expr + .term, or
		3 : expr, expr + .term, and
		4 : expr, expr + .term, eq
		5 : expr, expr + .term, neq
		6 : expr, expr + .term, +
		7 : expr, expr + .term, -
		8 : term, .term * unary, )
		9 : term, .term / unary, )
		10 : term, .term mod unary, )
		11 : term, .unary, )
		12 : term, .term * unary, ,
		13 : term, .term / unary, ,
		14 : term, .term mod unary, ,
		15 : term, .unary, ,
		16 : term, .term * unary, or
		17 : term, .term / unary, or
		18 : term, .term mod unary, or
		19 : term, .unary, or
		20 : term, .term * unary, and
		21 : term, .term / unary, and
		22 : term, .term mod unary, and
		23 : term, .unary, and
		24 : term, .term * unary, eq
		25 : term, .term / unary, eq
		26 : term, .term mod unary, eq
		27 : term, .unary, eq
		28 : term, .term * unary, neq
		29 : term, .term / unary, neq
		30 : term, .term mod unary, neq
		31 : term, .unary, neq
		32 : term, .term * unary, +
		33 : term, .term / unary, +
		34 : term, .term mod unary, +
		35 : term, .unary, +
		36 : term, .term * unary, -
		37 : term, .term / unary, -
		38 : term, .term mod unary, -
		39 : term, .unary, -
		40 : term, .term * unary, *
		41 : term, .term / unary, *
		42 : term, .term mod unary, *
		43 : term, .unary, *
		44 : term, .term * unary, /
		45 : term, .term / unary, /
		46 : term, .term mod unary, /
		47 : term, .unary, /
		48 : term, .term * unary, mod
		49 : term, .term / unary, mod
		50 : term, .term mod unary, mod
		51 : term, .unary, mod
		52 : unary, .! unary, )
		53 : unary, .- unary, )
		54 : unary, .factor, )
		55 : unary, .! unary, ,
		56 : unary, .- unary, ,
		57 : unary, .factor, ,
		58 : unary, .! unary, or
		59 : unary, .- unary, or
		60 : unary, .factor, or
		61 : unary, .! unary, and
		62 : unary, .- unary, and
		63 : unary, .factor, and
		64 : unary, .! unary, eq
		65 : unary, .- unary, eq
		66 : unary, .factor, eq
		67 : unary, .! unary, neq
		68 : unary, .- unary, neq
		69 : unary, .factor, neq
		70 : unary, .! unary, +
		71 : unary, .- unary, +
		72 : unary, .factor, +
		73 : unary, .! unary, -
		74 : unary, .- unary, -
		75 : unary, .factor, -
		76 : unary, .! unary, *
		77 : unary, .- unary, *
		78 : unary, .factor, *
		79 : unary, .! unary, /
		80 : unary, .- unary, /
		81 : unary, .factor, /
		82 : unary, .! unary, mod
		83 : unary, .- unary, mod
		84 : unary, .factor, mod
		85 : factor, .( bool ), )
		86 : factor, .loc, )
		87 : factor, .id ( args ), )
		88 : factor, .num, )
		89 : factor, .real, )
		90 : factor, .true, )
		91 : factor, .false, )
		92 : factor, .( bool ), ,
		93 : factor, .loc, ,
		94 : factor, .id ( args ), ,
		95 : factor, .num, ,
		96 : factor, .real, ,
		97 : factor, .true, ,
		98 : factor, .false, ,
		99 : factor, .( bool ), or
		100 : factor, .loc, or
		101 : factor, .id ( args ), or
		102 : factor, .num, or
		103 : factor, .real, or
		104 : factor, .true, or
		105 : factor, .false, or
		106 : factor, .( bool ), and
		107 : factor, .loc, and
		108 : factor, .id ( args ), and
		109 : factor, .num, and
		110 : factor, .real, and
		111 : factor, .true, and
		112 : factor, .false, and
		113 : factor, .( bool ), eq
		114 : factor, .loc, eq
		115 : factor, .id ( args ), eq
		116 : factor, .num, eq
		117 : factor, .real, eq
		118 : factor, .true, eq
		119 : factor, .false, eq
		120 : factor, .( bool ), neq
		121 : factor, .loc, neq
		122 : factor, .id ( args ), neq
		123 : factor, .num, neq
		124 : factor, .real, neq
		125 : factor, .true, neq
		126 : factor, .false, neq
		127 : factor, .( bool ), +
		128 : factor, .loc, +
		129 : factor, .id ( args ), +
		130 : factor, .num, +
		131 : factor, .real, +
		132 : factor, .true, +
		133 : factor, .false, +
		134 : factor, .( bool ), -
		135 : factor, .loc, -
		136 : factor, .id ( args ), -
		137 : factor, .num, -
		138 : factor, .real, -
		139 : factor, .true, -
		140 : factor, .false, -
		141 : factor, .( bool ), *
		142 : factor, .loc, *
		143 : factor, .id ( args ), *
		144 : factor, .num, *
		145 : factor, .real, *
		146 : factor, .true, *
		147 : factor, .false, *
		148 : factor, .( bool ), /
		149 : factor, .loc, /
		150 : factor, .id ( args ), /
		151 : factor, .num, /
		152 : factor, .real, /
		153 : factor, .true, /
		154 : factor, .false, /
		155 : factor, .( bool ), mod
		156 : factor, .loc, mod
		157 : factor, .id ( args ), mod
		158 : factor, .num, mod
		159 : factor, .real, mod
		160 : factor, .true, mod
		161 : factor, .false, mod
		162 : loc, .loc [ bool ], )
		163 : loc, .id, )
		164 : loc, .loc [ bool ], ,
		165 : loc, .id, ,
		166 : loc, .loc [ bool ], or
		167 : loc, .id, or
		168 : loc, .loc [ bool ], and
		169 : loc, .id, and
		170 : loc, .loc [ bool ], eq
		171 : loc, .id, eq
		172 : loc, .loc [ bool ], neq
		173 : loc, .id, neq
		174 : loc, .loc [ bool ], +
		175 : loc, .id, +
		176 : loc, .loc [ bool ], -
		177 : loc, .id, -
		178 : loc, .loc [ bool ], *
		179 : loc, .id, *
		180 : loc, .loc [ bool ], /
		181 : loc, .id, /
		182 : loc, .loc [ bool ], mod
		183 : loc, .id, mod
		184 : loc, .loc [ bool ], [
		185 : loc, .id, [
	[432] 
		0 : expr, expr - .term, )
		1 : expr, expr - .term, ,
		2 : expr, expr - .term, or
		3 : expr, expr - .term, and
		4 : expr, expr - .term, eq
		5 : expr, expr - .term, neq
		6 : expr, expr - .term, +
		7 : expr, expr - .term, -
		8 : term, .term * unary, )
		9 : term, .term / unary, )
		10 : term, .term mod unary, )
		11 : term, .unary, )
		12 : term, .term * unary, ,
		13 : term, .term / unary, ,
		14 : term, .term mod unary, ,
		15 : term, .unary, ,
		16 : term, .term * unary, or
		17 : term, .term / unary, or
		18 : term, .term mod unary, or
		19 : term, .unary, or
		20 : term, .term * unary, and
		21 : term, .term / unary, and
		22 : term, .term mod unary, and
		23 : term, .unary, and
		24 : term, .term * unary, eq
		25 : term, .term / unary, eq
		26 : term, .term mod unary, eq
		27 : term, .unary, eq
		28 : term, .term * unary, neq
		29 : term, .term / unary, neq
		30 : term, .term mod unary, neq
		31 : term, .unary, neq
		32 : term, .term * unary, +
		33 : term, .term / unary, +
		34 : term, .term mod unary, +
		35 : term, .unary, +
		36 : term, .term * unary, -
		37 : term, .term / unary, -
		38 : term, .term mod unary, -
		39 : term, .unary, -
		40 : term, .term * unary, *
		41 : term, .term / unary, *
		42 : term, .term mod unary, *
		43 : term, .unary, *
		44 : term, .term * unary, /
		45 : term, .term / unary, /
		46 : term, .term mod unary, /
		47 : term, .unary, /
		48 : term, .term * unary, mod
		49 : term, .term / unary, mod
		50 : term, .term mod unary, mod
		51 : term, .unary, mod
		52 : unary, .! unary, )
		53 : unary, .- unary, )
		54 : unary, .factor, )
		55 : unary, .! unary, ,
		56 : unary, .- unary, ,
		57 : unary, .factor, ,
		58 : unary, .! unary, or
		59 : unary, .- unary, or
		60 : unary, .factor, or
		61 : unary, .! unary, and
		62 : unary, .- unary, and
		63 : unary, .factor, and
		64 : unary, .! unary, eq
		65 : unary, .- unary, eq
		66 : unary, .factor, eq
		67 : unary, .! unary, neq
		68 : unary, .- unary, neq
		69 : unary, .factor, neq
		70 : unary, .! unary, +
		71 : unary, .- unary, +
		72 : unary, .factor, +
		73 : unary, .! unary, -
		74 : unary, .- unary, -
		75 : unary, .factor, -
		76 : unary, .! unary, *
		77 : unary, .- unary, *
		78 : unary, .factor, *
		79 : unary, .! unary, /
		80 : unary, .- unary, /
		81 : unary, .factor, /
		82 : unary, .! unary, mod
		83 : unary, .- unary, mod
		84 : unary, .factor, mod
		85 : factor, .( bool ), )
		86 : factor, .loc, )
		87 : factor, .id ( args ), )
		88 : factor, .num, )
		89 : factor, .real, )
		90 : factor, .true, )
		91 : factor, .false, )
		92 : factor, .( bool ), ,
		93 : factor, .loc, ,
		94 : factor, .id ( args ), ,
		95 : factor, .num, ,
		96 : factor, .real, ,
		97 : factor, .true, ,
		98 : factor, .false, ,
		99 : factor, .( bool ), or
		100 : factor, .loc, or
		101 : factor, .id ( args ), or
		102 : factor, .num, or
		103 : factor, .real, or
		104 : factor, .true, or
		105 : factor, .false, or
		106 : factor, .( bool ), and
		107 : factor, .loc, and
		108 : factor, .id ( args ), and
		109 : factor, .num, and
		110 : factor, .real, and
		111 : factor, .true, and
		112 : factor, .false, and
		113 : factor, .( bool ), eq
		114 : factor, .loc, eq
		115 : factor, .id ( args ), eq
		116 : factor, .num, eq
		117 : factor, .real, eq
		118 : factor, .true, eq
		119 : factor, .false, eq
		120 : factor, .( bool ), neq
		121 : factor, .loc, neq
		122 : factor, .id ( args ), neq
		123 : factor, .num, neq
		124 : factor, .real, neq
		125 : factor, .true, neq
		126 : factor, .false, neq
		127 : factor, .( bool ), +
		128 : factor, .loc, +
		129 : factor, .id ( args ), +
		130 : factor, .num, +
		131 : factor, .real, +
		132 : factor, .true, +
		133 : factor, .false, +
		134 : factor, .( bool ), -
		135 : factor, .loc, -
		136 : factor, .id ( args ), -
		137 : factor, .num, -
		138 : factor, .real, -
		139 : factor, .true, -
		140 : factor, .false, -
		141 : factor, .( bool ), *
		142 : factor, .loc, *
		143 : factor, .id ( args ), *
		144 : factor, .num, *
		145 : factor, .real, *
		146 : factor, .true, *
		147 : factor, .false, *
		148 : factor, .( bool ), /
		149 : factor, .loc, /
		150 : factor, .id ( args ), /
		151 : factor, .num, /
		152 : factor, .real, /
		153 : factor, .true, /
		154 : factor, .false, /
		155 : factor, .( bool ), mod
		156 : factor, .loc, mod
		157 : factor, .id ( args ), mod
		158 : factor, .num, mod
		159 : factor, .real, mod
		160 : factor, .true, mod
		161 : factor, .false, mod
		162 : loc, .loc [ bool ], )
		163 : loc, .id, )
		164 : loc, .loc [ bool ], ,
		165 : loc, .id, ,
		166 : loc, .loc [ bool ], or
		167 : loc, .id, or
		168 : loc, .loc [ bool ], and
		169 : loc, .id, and
		170 : loc, .loc [ bool ], eq
		171 : loc, .id, eq
		172 : loc, .loc [ bool ], neq
		173 : loc, .id, neq
		174 : loc, .loc [ bool ], +
		175 : loc, .id, +
		176 : loc, .loc [ bool ], -
		177 : loc, .id, -
		178 : loc, .loc [ bool ], *
		179 : loc, .id, *
		180 : loc, .loc [ bool ], /
		181 : loc, .id, /
		182 : loc, .loc [ bool ], mod
		183 : loc, .id, mod
		184 : loc, .loc [ bool ], [
		185 : loc, .id, [
	[433] 
		0 : term, term * .unary, )
		1 : term, term * .unary, ,
		2 : term, term * .unary, or
		3 : term, term * .unary, and
		4 : term, term * .unary, eq
		5 : term, term * .unary, neq
		6 : term, term * .unary, +
		7 : term, term * .unary, -
		8 : term, term * .unary, *
		9 : term, term * .unary, /
		10 : term, term * .unary, mod
		11 : unary, .! unary, )
		12 : unary, .- unary, )
		13 : unary, .factor, )
		14 : unary, .! unary, ,
		15 : unary, .- unary, ,
		16 : unary, .factor, ,
		17 : unary, .! unary, or
		18 : unary, .- unary, or
		19 : unary, .factor, or
		20 : unary, .! unary, and
		21 : unary, .- unary, and
		22 : unary, .factor, and
		23 : unary, .! unary, eq
		24 : unary, .- unary, eq
		25 : unary, .factor, eq
		26 : unary, .! unary, neq
		27 : unary, .- unary, neq
		28 : unary, .factor, neq
		29 : unary, .! unary, +
		30 : unary, .- unary, +
		31 : unary, .factor, +
		32 : unary, .! unary, -
		33 : unary, .- unary, -
		34 : unary, .factor, -
		35 : unary, .! unary, *
		36 : unary, .- unary, *
		37 : unary, .factor, *
		38 : unary, .! unary, /
		39 : unary, .- unary, /
		40 : unary, .factor, /
		41 : unary, .! unary, mod
		42 : unary, .- unary, mod
		43 : unary, .factor, mod
		44 : factor, .( bool ), )
		45 : factor, .loc, )
		46 : factor, .id ( args ), )
		47 : factor, .num, )
		48 : factor, .real, )
		49 : factor, .true, )
		50 : factor, .false, )
		51 : factor, .( bool ), ,
		52 : factor, .loc, ,
		53 : factor, .id ( args ), ,
		54 : factor, .num, ,
		55 : factor, .real, ,
		56 : factor, .true, ,
		57 : factor, .false, ,
		58 : factor, .( bool ), or
		59 : factor, .loc, or
		60 : factor, .id ( args ), or
		61 : factor, .num, or
		62 : factor, .real, or
		63 : factor, .true, or
		64 : factor, .false, or
		65 : factor, .( bool ), and
		66 : factor, .loc, and
		67 : factor, .id ( args ), and
		68 : factor, .num, and
		69 : factor, .real, and
		70 : factor, .true, and
		71 : factor, .false, and
		72 : factor, .( bool ), eq
		73 : factor, .loc, eq
		74 : factor, .id ( args ), eq
		75 : factor, .num, eq
		76 : factor, .real, eq
		77 : factor, .true, eq
		78 : factor, .false, eq
		79 : factor, .( bool ), neq
		80 : factor, .loc, neq
		81 : factor, .id ( args ), neq
		82 : factor, .num, neq
		83 : factor, .real, neq
		84 : factor, .true, neq
		85 : factor, .false, neq
		86 : factor, .( bool ), +
		87 : factor, .loc, +
		88 : factor, .id ( args ), +
		89 : factor, .num, +
		90 : factor, .real, +
		91 : factor, .true, +
		92 : factor, .false, +
		93 : factor, .( bool ), -
		94 : factor, .loc, -
		95 : factor, .id ( args ), -
		96 : factor, .num, -
		97 : factor, .real, -
		98 : factor, .true, -
		99 : factor, .false, -
		100 : factor, .( bool ), *
		101 : factor, .loc, *
		102 : factor, .id ( args ), *
		103 : factor, .num, *
		104 : factor, .real, *
		105 : factor, .true, *
		106 : factor, .false, *
		107 : factor, .( bool ), /
		108 : factor, .loc, /
		109 : factor, .id ( args ), /
		110 : factor, .num, /
		111 : factor, .real, /
		112 : factor, .true, /
		113 : factor, .false, /
		114 : factor, .( bool ), mod
		115 : factor, .loc, mod
		116 : factor, .id ( args ), mod
		117 : factor, .num, mod
		118 : factor, .real, mod
		119 : factor, .true, mod
		120 : factor, .false, mod
		121 : loc, .loc [ bool ], )
		122 : loc, .id, )
		123 : loc, .loc [ bool ], ,
		124 : loc, .id, ,
		125 : loc, .loc [ bool ], or
		126 : loc, .id, or
		127 : loc, .loc [ bool ], and
		128 : loc, .id, and
		129 : loc, .loc [ bool ], eq
		130 : loc, .id, eq
		131 : loc, .loc [ bool ], neq
		132 : loc, .id, neq
		133 : loc, .loc [ bool ], +
		134 : loc, .id, +
		135 : loc, .loc [ bool ], -
		136 : loc, .id, -
		137 : loc, .loc [ bool ], *
		138 : loc, .id, *
		139 : loc, .loc [ bool ], /
		140 : loc, .id, /
		141 : loc, .loc [ bool ], mod
		142 : loc, .id, mod
		143 : loc, .loc [ bool ], [
		144 : loc, .id, [
	[434] 
		0 : term, term / .unary, )
		1 : term, term / .unary, ,
		2 : term, term / .unary, or
		3 : term, term / .unary, and
		4 : term, term / .unary, eq
		5 : term, term / .unary, neq
		6 : term, term / .unary, +
		7 : term, term / .unary, -
		8 : term, term / .unary, *
		9 : term, term / .unary, /
		10 : term, term / .unary, mod
		11 : unary, .! unary, )
		12 : unary, .- unary, )
		13 : unary, .factor, )
		14 : unary, .! unary, ,
		15 : unary, .- unary, ,
		16 : unary, .factor, ,
		17 : unary, .! unary, or
		18 : unary, .- unary, or
		19 : unary, .factor, or
		20 : unary, .! unary, and
		21 : unary, .- unary, and
		22 : unary, .factor, and
		23 : unary, .! unary, eq
		24 : unary, .- unary, eq
		25 : unary, .factor, eq
		26 : unary, .! unary, neq
		27 : unary, .- unary, neq
		28 : unary, .factor, neq
		29 : unary, .! unary, +
		30 : unary, .- unary, +
		31 : unary, .factor, +
		32 : unary, .! unary, -
		33 : unary, .- unary, -
		34 : unary, .factor, -
		35 : unary, .! unary, *
		36 : unary, .- unary, *
		37 : unary, .factor, *
		38 : unary, .! unary, /
		39 : unary, .- unary, /
		40 : unary, .factor, /
		41 : unary, .! unary, mod
		42 : unary, .- unary, mod
		43 : unary, .factor, mod
		44 : factor, .( bool ), )
		45 : factor, .loc, )
		46 : factor, .id ( args ), )
		47 : factor, .num, )
		48 : factor, .real, )
		49 : factor, .true, )
		50 : factor, .false, )
		51 : factor, .( bool ), ,
		52 : factor, .loc, ,
		53 : factor, .id ( args ), ,
		54 : factor, .num, ,
		55 : factor, .real, ,
		56 : factor, .true, ,
		57 : factor, .false, ,
		58 : factor, .( bool ), or
		59 : factor, .loc, or
		60 : factor, .id ( args ), or
		61 : factor, .num, or
		62 : factor, .real, or
		63 : factor, .true, or
		64 : factor, .false, or
		65 : factor, .( bool ), and
		66 : factor, .loc, and
		67 : factor, .id ( args ), and
		68 : factor, .num, and
		69 : factor, .real, and
		70 : factor, .true, and
		71 : factor, .false, and
		72 : factor, .( bool ), eq
		73 : factor, .loc, eq
		74 : factor, .id ( args ), eq
		75 : factor, .num, eq
		76 : factor, .real, eq
		77 : factor, .true, eq
		78 : factor, .false, eq
		79 : factor, .( bool ), neq
		80 : factor, .loc, neq
		81 : factor, .id ( args ), neq
		82 : factor, .num, neq
		83 : factor, .real, neq
		84 : factor, .true, neq
		85 : factor, .false, neq
		86 : factor, .( bool ), +
		87 : factor, .loc, +
		88 : factor, .id ( args ), +
		89 : factor, .num, +
		90 : factor, .real, +
		91 : factor, .true, +
		92 : factor, .false, +
		93 : factor, .( bool ), -
		94 : factor, .loc, -
		95 : factor, .id ( args ), -
		96 : factor, .num, -
		97 : factor, .real, -
		98 : factor, .true, -
		99 : factor, .false, -
		100 : factor, .( bool ), *
		101 : factor, .loc, *
		102 : factor, .id ( args ), *
		103 : factor, .num, *
		104 : factor, .real, *
		105 : factor, .true, *
		106 : factor, .false, *
		107 : factor, .( bool ), /
		108 : factor, .loc, /
		109 : factor, .id ( args ), /
		110 : factor, .num, /
		111 : factor, .real, /
		112 : factor, .true, /
		113 : factor, .false, /
		114 : factor, .( bool ), mod
		115 : factor, .loc, mod
		116 : factor, .id ( args ), mod
		117 : factor, .num, mod
		118 : factor, .real, mod
		119 : factor, .true, mod
		120 : factor, .false, mod
		121 : loc, .loc [ bool ], )
		122 : loc, .id, )
		123 : loc, .loc [ bool ], ,
		124 : loc, .id, ,
		125 : loc, .loc [ bool ], or
		126 : loc, .id, or
		127 : loc, .loc [ bool ], and
		128 : loc, .id, and
		129 : loc, .loc [ bool ], eq
		130 : loc, .id, eq
		131 : loc, .loc [ bool ], neq
		132 : loc, .id, neq
		133 : loc, .loc [ bool ], +
		134 : loc, .id, +
		135 : loc, .loc [ bool ], -
		136 : loc, .id, -
		137 : loc, .loc [ bool ], *
		138 : loc, .id, *
		139 : loc, .loc [ bool ], /
		140 : loc, .id, /
		141 : loc, .loc [ bool ], mod
		142 : loc, .id, mod
		143 : loc, .loc [ bool ], [
		144 : loc, .id, [
	[435] 
		0 : term, term mod .unary, )
		1 : term, term mod .unary, ,
		2 : term, term mod .unary, or
		3 : term, term mod .unary, and
		4 : term, term mod .unary, eq
		5 : term, term mod .unary, neq
		6 : term, term mod .unary, +
		7 : term, term mod .unary, -
		8 : term, term mod .unary, *
		9 : term, term mod .unary, /
		10 : term, term mod .unary, mod
		11 : unary, .! unary, )
		12 : unary, .- unary, )
		13 : unary, .factor, )
		14 : unary, .! unary, ,
		15 : unary, .- unary, ,
		16 : unary, .factor, ,
		17 : unary, .! unary, or
		18 : unary, .- unary, or
		19 : unary, .factor, or
		20 : unary, .! unary, and
		21 : unary, .- unary, and
		22 : unary, .factor, and
		23 : unary, .! unary, eq
		24 : unary, .- unary, eq
		25 : unary, .factor, eq
		26 : unary, .! unary, neq
		27 : unary, .- unary, neq
		28 : unary, .factor, neq
		29 : unary, .! unary, +
		30 : unary, .- unary, +
		31 : unary, .factor, +
		32 : unary, .! unary, -
		33 : unary, .- unary, -
		34 : unary, .factor, -
		35 : unary, .! unary, *
		36 : unary, .- unary, *
		37 : unary, .factor, *
		38 : unary, .! unary, /
		39 : unary, .- unary, /
		40 : unary, .factor, /
		41 : unary, .! unary, mod
		42 : unary, .- unary, mod
		43 : unary, .factor, mod
		44 : factor, .( bool ), )
		45 : factor, .loc, )
		46 : factor, .id ( args ), )
		47 : factor, .num, )
		48 : factor, .real, )
		49 : factor, .true, )
		50 : factor, .false, )
		51 : factor, .( bool ), ,
		52 : factor, .loc, ,
		53 : factor, .id ( args ), ,
		54 : factor, .num, ,
		55 : factor, .real, ,
		56 : factor, .true, ,
		57 : factor, .false, ,
		58 : factor, .( bool ), or
		59 : factor, .loc, or
		60 : factor, .id ( args ), or
		61 : factor, .num, or
		62 : factor, .real, or
		63 : factor, .true, or
		64 : factor, .false, or
		65 : factor, .( bool ), and
		66 : factor, .loc, and
		67 : factor, .id ( args ), and
		68 : factor, .num, and
		69 : factor, .real, and
		70 : factor, .true, and
		71 : factor, .false, and
		72 : factor, .( bool ), eq
		73 : factor, .loc, eq
		74 : factor, .id ( args ), eq
		75 : factor, .num, eq
		76 : factor, .real, eq
		77 : factor, .true, eq
		78 : factor, .false, eq
		79 : factor, .( bool ), neq
		80 : factor, .loc, neq
		81 : factor, .id ( args ), neq
		82 : factor, .num, neq
		83 : factor, .real, neq
		84 : factor, .true, neq
		85 : factor, .false, neq
		86 : factor, .( bool ), +
		87 : factor, .loc, +
		88 : factor, .id ( args ), +
		89 : factor, .num, +
		90 : factor, .real, +
		91 : factor, .true, +
		92 : factor, .false, +
		93 : factor, .( bool ), -
		94 : factor, .loc, -
		95 : factor, .id ( args ), -
		96 : factor, .num, -
		97 : factor, .real, -
		98 : factor, .true, -
		99 : factor, .false, -
		100 : factor, .( bool ), *
		101 : factor, .loc, *
		102 : factor, .id ( args ), *
		103 : factor, .num, *
		104 : factor, .real, *
		105 : factor, .true, *
		106 : factor, .false, *
		107 : factor, .( bool ), /
		108 : factor, .loc, /
		109 : factor, .id ( args ), /
		110 : factor, .num, /
		111 : factor, .real, /
		112 : factor, .true, /
		113 : factor, .false, /
		114 : factor, .( bool ), mod
		115 : factor, .loc, mod
		116 : factor, .id ( args ), mod
		117 : factor, .num, mod
		118 : factor, .real, mod
		119 : factor, .true, mod
		120 : factor, .false, mod
		121 : loc, .loc [ bool ], )
		122 : loc, .id, )
		123 : loc, .loc [ bool ], ,
		124 : loc, .id, ,
		125 : loc, .loc [ bool ], or
		126 : loc, .id, or
		127 : loc, .loc [ bool ], and
		128 : loc, .id, and
		129 : loc, .loc [ bool ], eq
		130 : loc, .id, eq
		131 : loc, .loc [ bool ], neq
		132 : loc, .id, neq
		133 : loc, .loc [ bool ], +
		134 : loc, .id, +
		135 : loc, .loc [ bool ], -
		136 : loc, .id, -
		137 : loc, .loc [ bool ], *
		138 : loc, .id, *
		139 : loc, .loc [ bool ], /
		140 : loc, .id, /
		141 : loc, .loc [ bool ], mod
		142 : loc, .id, mod
		143 : loc, .loc [ bool ], [
		144 : loc, .id, [
	[436] 
		0 : factor, id ( .args ), )
		1 : factor, id ( .args ), ,
		2 : factor, id ( .args ), or
		3 : factor, id ( .args ), and
		4 : factor, id ( .args ), eq
		5 : factor, id ( .args ), neq
		6 : factor, id ( .args ), +
		7 : factor, id ( .args ), -
		8 : factor, id ( .args ), *
		9 : factor, id ( .args ), /
		10 : factor, id ( .args ), mod
		11 : args, .args , arg, )
		12 : args, .arg, )
		13 : args, ., )
		14 : args, .args , arg, ,
		15 : args, .arg, ,
		16 : args, ., ,
		17 : arg, .loc, )
		18 : arg, .bool, )
		19 : arg, .loc, ,
		20 : arg, .bool, ,
		21 : loc, .loc [ bool ], )
		22 : loc, .id, )
		23 : bool, .bool or join, )
		24 : bool, .join, )
		25 : loc, .loc [ bool ], ,
		26 : loc, .id, ,
		27 : bool, .bool or join, ,
		28 : bool, .join, ,
		29 : loc, .loc [ bool ], [
		30 : loc, .id, [
		31 : bool, .bool or join, or
		32 : bool, .join, or
		33 : join, .join and equality, )
		34 : join, .equality, )
		35 : join, .join and equality, ,
		36 : join, .equality, ,
		37 : join, .join and equality, or
		38 : join, .equality, or
		39 : join, .join and equality, and
		40 : join, .equality, and
		41 : equality, .equality eq rel, )
		42 : equality, .equality neq rel, )
		43 : equality, .rel, )
		44 : equality, .equality eq rel, ,
		45 : equality, .equality neq rel, ,
		46 : equality, .rel, ,
		47 : equality, .equality eq rel, or
		48 : equality, .equality neq rel, or
		49 : equality, .rel, or
		50 : equality, .equality eq rel, and
		51 : equality, .equality neq rel, and
		52 : equality, .rel, and
		53 : equality, .equality eq rel, eq
		54 : equality, .equality neq rel, eq
		55 : equality, .rel, eq
		56 : equality, .equality eq rel, neq
		57 : equality, .equality neq rel, neq
		58 : equality, .rel, neq
		59 : rel, .expr < expr, )
		60 : rel, .expr <= expr, )
		61 : rel, .expr >= expr, )
		62 : rel, .expr > expr, )
		63 : rel, .expr, )
		64 : rel, .expr < expr, ,
		65 : rel, .expr <= expr, ,
		66 : rel, .expr >= expr, ,
		67 : rel, .expr > expr, ,
		68 : rel, .expr, ,
		69 : rel, .expr < expr, or
		70 : rel, .expr <= expr, or
		71 : rel, .expr >= expr, or
		72 : rel, .expr > expr, or
		73 : rel, .expr, or
		74 : rel, .expr < expr, and
		75 : rel, .expr <= expr, and
		76 : rel, .expr >= expr, and
		77 : rel, .expr > expr, and
		78 : rel, .expr, and
		79 : rel, .expr < expr, eq
		80 : rel, .expr <= expr, eq
		81 : rel, .expr >= expr, eq
		82 : rel, .expr > expr, eq
		83 : rel, .expr, eq
		84 : rel, .expr < expr, neq
		85 : rel, .expr <= expr, neq
		86 : rel, .expr >= expr, neq
		87 : rel, .expr > expr, neq
		88 : rel, .expr, neq
		89 : expr, .expr + term, <
		90 : expr, .expr - term, <
		91 : expr, .term, <
		92 : expr, .expr + term, <=
		93 : expr, .expr - term, <=
		94 : expr, .term, <=
		95 : expr, .expr + term, >=
		96 : expr, .expr - term, >=
		97 : expr, .term, >=
		98 : expr, .expr + term, >
		99 : expr, .expr - term, >
		100 : expr, .term, >
		101 : expr, .expr + term, )
		102 : expr, .expr - term, )
		103 : expr, .term, )
		104 : expr, .expr + term, ,
		105 : expr, .expr - term, ,
		106 : expr, .term, ,
		107 : expr, .expr + term, or
		108 : expr, .expr - term, or
		109 : expr, .term, or
		110 : expr, .expr + term, and
		111 : expr, .expr - term, and
		112 : expr, .term, and
		113 : expr, .expr + term, eq
		114 : expr, .expr - term, eq
		115 : expr, .term, eq
		116 : expr, .expr + term, neq
		117 : expr, .expr - term, neq
		118 : expr, .term, neq
		119 : expr, .expr + term, +
		120 : expr, .expr - term, +
		121 : expr, .term, +
		122 : expr, .expr + term, -
		123 : expr, .expr - term, -
		124 : expr, .term, -
		125 : term, .term * unary, <
		126 : term, .term / unary, <
		127 : term, .term mod unary, <
		128 : term, .unary, <
		129 : term, .term * unary, <=
		130 : term, .term / unary, <=
		131 : term, .term mod unary, <=
		132 : term, .unary, <=
		133 : term, .term * unary, >=
		134 : term, .term / unary, >=
		135 : term, .term mod unary, >=
		136 : term, .unary, >=
		137 : term, .term * unary, >
		138 : term, .term / unary, >
		139 : term, .term mod unary, >
		140 : term, .unary, >
		141 : term, .term * unary, )
		142 : term, .term / unary, )
		143 : term, .term mod unary, )
		144 : term, .unary, )
		145 : term, .term * unary, ,
		146 : term, .term / unary, ,
		147 : term, .term mod unary, ,
		148 : term, .unary, ,
		149 : term, .term * unary, or
		150 : term, .term / unary, or
		151 : term, .term mod unary, or
		152 : term, .unary, or
		153 : term, .term * unary, and
		154 : term, .term / unary, and
		155 : term, .term mod unary, and
		156 : term, .unary, and
		157 : term, .term * unary, eq
		158 : term, .term / unary, eq
		159 : term, .term mod unary, eq
		160 : term, .unary, eq
		161 : term, .term * unary, neq
		162 : term, .term / unary, neq
		163 : term, .term mod unary, neq
		164 : term, .unary, neq
		165 : term, .term * unary, +
		166 : term, .term / unary, +
		167 : term, .term mod unary, +
		168 : term, .unary, +
		169 : term, .term * unary, -
		170 : term, .term / unary, -
		171 : term, .term mod unary, -
		172 : term, .unary, -
		173 : term, .term * unary, *
		174 : term, .term / unary, *
		175 : term, .term mod unary, *
		176 : term, .unary, *
		177 : term, .term * unary, /
		178 : term, .term / unary, /
		179 : term, .term mod unary, /
		180 : term, .unary, /
		181 : term, .term * unary, mod
		182 : term, .term / unary, mod
		183 : term, .term mod unary, mod
		184 : term, .unary, mod
		185 : unary, .! unary, <
		186 : unary, .- unary, <
		187 : unary, .factor, <
		188 : unary, .! unary, <=
		189 : unary, .- unary, <=
		190 : unary, .factor, <=
		191 : unary, .! unary, >=
		192 : unary, .- unary, >=
		193 : unary, .factor, >=
		194 : unary, .! unary, >
		195 : unary, .- unary, >
		196 : unary, .factor, >
		197 : unary, .! unary, )
		198 : unary, .- unary, )
		199 : unary, .factor, )
		200 : unary, .! unary, ,
		201 : unary, .- unary, ,
		202 : unary, .factor, ,
		203 : unary, .! unary, or
		204 : unary, .- unary, or
		205 : unary, .factor, or
		206 : unary, .! unary, and
		207 : unary, .- unary, and
		208 : unary, .factor, and
		209 : unary, .! unary, eq
		210 : unary, .- unary, eq
		211 : unary, .factor, eq
		212 : unary, .! unary, neq
		213 : unary, .- unary, neq
		214 : unary, .factor, neq
		215 : unary, .! unary, +
		216 : unary, .- unary, +
		217 : unary, .factor, +
		218 : unary, .! unary, -
		219 : unary, .- unary, -
		220 : unary, .factor, -
		221 : unary, .! unary, *
		222 : unary, .- unary, *
		223 : unary, .factor, *
		224 : unary, .! unary, /
		225 : unary, .- unary, /
		226 : unary, .factor, /
		227 : unary, .! unary, mod
		228 : unary, .- unary, mod
		229 : unary, .factor, mod
		230 : factor, .( bool ), <
		231 : factor, .loc, <
		232 : factor, .id ( args ), <
		233 : factor, .num, <
		234 : factor, .real, <
		235 : factor, .true, <
		236 : factor, .false, <
		237 : factor, .( bool ), <=
		238 : factor, .loc, <=
		239 : factor, .id ( args ), <=
		240 : factor, .num, <=
		241 : factor, .real, <=
		242 : factor, .true, <=
		243 : factor, .false, <=
		244 : factor, .( bool ), >=
		245 : factor, .loc, >=
		246 : factor, .id ( args ), >=
		247 : factor, .num, >=
		248 : factor, .real, >=
		249 : factor, .true, >=
		250 : factor, .false, >=
		251 : factor, .( bool ), >
		252 : factor, .loc, >
		253 : factor, .id ( args ), >
		254 : factor, .num, >
		255 : factor, .real, >
		256 : factor, .true, >
		257 : factor, .false, >
		258 : factor, .( bool ), )
		259 : factor, .loc, )
		260 : factor, .id ( args ), )
		261 : factor, .num, )
		262 : factor, .real, )
		263 : factor, .true, )
		264 : factor, .false, )
		265 : factor, .( bool ), ,
		266 : factor, .loc, ,
		267 : factor, .id ( args ), ,
		268 : factor, .num, ,
		269 : factor, .real, ,
		270 : factor, .true, ,
		271 : factor, .false, ,
		272 : factor, .( bool ), or
		273 : factor, .loc, or
		274 : factor, .id ( args ), or
		275 : factor, .num, or
		276 : factor, .real, or
		277 : factor, .true, or
		278 : factor, .false, or
		279 : factor, .( bool ), and
		280 : factor, .loc, and
		281 : factor, .id ( args ), and
		282 : factor, .num, and
		283 : factor, .real, and
		284 : factor, .true, and
		285 : factor, .false, and
		286 : factor, .( bool ), eq
		287 : factor, .loc, eq
		288 : factor, .id ( args ), eq
		289 : factor, .num, eq
		290 : factor, .real, eq
		291 : factor, .true, eq
		292 : factor, .false, eq
		293 : factor, .( bool ), neq
		294 : factor, .loc, neq
		295 : factor, .id ( args ), neq
		296 : factor, .num, neq
		297 : factor, .real, neq
		298 : factor, .true, neq
		299 : factor, .false, neq
		300 : factor, .( bool ), +
		301 : factor, .loc, +
		302 : factor, .id ( args ), +
		303 : factor, .num, +
		304 : factor, .real, +
		305 : factor, .true, +
		306 : factor, .false, +
		307 : factor, .( bool ), -
		308 : factor, .loc, -
		309 : factor, .id ( args ), -
		310 : factor, .num, -
		311 : factor, .real, -
		312 : factor, .true, -
		313 : factor, .false, -
		314 : factor, .( bool ), *
		315 : factor, .loc, *
		316 : factor, .id ( args ), *
		317 : factor, .num, *
		318 : factor, .real, *
		319 : factor, .true, *
		320 : factor, .false, *
		321 : factor, .( bool ), /
		322 : factor, .loc, /
		323 : factor, .id ( args ), /
		324 : factor, .num, /
		325 : factor, .real, /
		326 : factor, .true, /
		327 : factor, .false, /
		328 : factor, .( bool ), mod
		329 : factor, .loc, mod
		330 : factor, .id ( args ), mod
		331 : factor, .num, mod
		332 : factor, .real, mod
		333 : factor, .true, mod
		334 : factor, .false, mod
		335 : loc, .loc [ bool ], <
		336 : loc, .id, <
		337 : loc, .loc [ bool ], <=
		338 : loc, .id, <=
		339 : loc, .loc [ bool ], >=
		340 : loc, .id, >=
		341 : loc, .loc [ bool ], >
		342 : loc, .id, >
		343 : loc, .loc [ bool ], or
		344 : loc, .id, or
		345 : loc, .loc [ bool ], and
		346 : loc, .id, and
		347 : loc, .loc [ bool ], eq
		348 : loc, .id, eq
		349 : loc, .loc [ bool ], neq
		350 : loc, .id, neq
		351 : loc, .loc [ bool ], +
		352 : loc, .id, +
		353 : loc, .loc [ bool ], -
		354 : loc, .id, -
		355 : loc, .loc [ bool ], *
		356 : loc, .id, *
		357 : loc, .loc [ bool ], /
		358 : loc, .id, /
		359 : loc, .loc [ bool ], mod
		360 : loc, .id, mod
	[437] 
		0 : factor, ( bool .), )
		1 : factor, ( bool .), ,
		2 : factor, ( bool .), or
		3 : factor, ( bool .), and
		4 : factor, ( bool .), eq
		5 : factor, ( bool .), neq
		6 : factor, ( bool .), +
		7 : factor, ( bool .), -
		8 : factor, ( bool .), *
		9 : factor, ( bool .), /
		10 : factor, ( bool .), mod
		11 : bool, bool .or join, )
		12 : bool, bool .or join, or
	[438] 
		0 : unary, - unary ., )
		1 : unary, - unary ., ,
		2 : unary, - unary ., or
		3 : unary, - unary ., and
		4 : unary, - unary ., eq
		5 : unary, - unary ., neq
		6 : unary, - unary ., +
		7 : unary, - unary ., -
		8 : unary, - unary ., *
		9 : unary, - unary ., /
		10 : unary, - unary ., mod
	[439] 
		0 : unary, ! unary ., )
		1 : unary, ! unary ., ,
		2 : unary, ! unary ., or
		3 : unary, ! unary ., and
		4 : unary, ! unary ., eq
		5 : unary, ! unary ., neq
		6 : unary, ! unary ., +
		7 : unary, ! unary ., -
		8 : unary, ! unary ., *
		9 : unary, ! unary ., /
		10 : unary, ! unary ., mod
	[440] 
		0 : factor, id ( args ) ., <
		1 : factor, id ( args ) ., <=
		2 : factor, id ( args ) ., >=
		3 : factor, id ( args ) ., >
		4 : factor, id ( args ) ., )
		5 : factor, id ( args ) ., ,
		6 : factor, id ( args ) ., or
		7 : factor, id ( args ) ., and
		8 : factor, id ( args ) ., eq
		9 : factor, id ( args ) ., neq
		10 : factor, id ( args ) ., +
		11 : factor, id ( args ) ., -
		12 : factor, id ( args ) ., *
		13 : factor, id ( args ) ., /
		14 : factor, id ( args ) ., mod
	[441] 
		0 : loc, loc [ bool .], <
		1 : loc, loc [ bool .], <=
		2 : loc, loc [ bool .], >=
		3 : loc, loc [ bool .], >
		4 : loc, loc [ bool .], )
		5 : loc, loc [ bool .], ,
		6 : loc, loc [ bool .], or
		7 : loc, loc [ bool .], and
		8 : loc, loc [ bool .], eq
		9 : loc, loc [ bool .], neq
		10 : loc, loc [ bool .], +
		11 : loc, loc [ bool .], -
		12 : loc, loc [ bool .], *
		13 : loc, loc [ bool .], /
		14 : loc, loc [ bool .], mod
		15 : loc, loc [ bool .], [
		16 : bool, bool .or join, ]
		17 : bool, bool .or join, or
	[442] 
		0 : loc, loc [ bool ] ., ]
		1 : loc, loc [ bool ] ., or
		2 : loc, loc [ bool ] ., and
		3 : loc, loc [ bool ] ., eq
		4 : loc, loc [ bool ] ., neq
		5 : loc, loc [ bool ] ., +
		6 : loc, loc [ bool ] ., -
		7 : loc, loc [ bool ] ., *
		8 : loc, loc [ bool ] ., /
		9 : loc, loc [ bool ] ., mod
		10 : loc, loc [ bool ] ., [
	[443] 
		0 : factor, id ( args ) ., ]
		1 : factor, id ( args ) ., or
		2 : factor, id ( args ) ., and
		3 : factor, id ( args ) ., eq
		4 : factor, id ( args ) ., neq
		5 : factor, id ( args ) ., +
		6 : factor, id ( args ) ., -
		7 : factor, id ( args ) ., *
		8 : factor, id ( args ) ., /
		9 : factor, id ( args ) ., mod
	[444] 
		0 : stmt, if ( bool ) M stmt else M .stmt, }
		1 : stmt, if ( bool ) M stmt else M .stmt, [
		2 : stmt, if ( bool ) M stmt else M .stmt, id
		3 : stmt, if ( bool ) M stmt else M .stmt, if
		4 : stmt, if ( bool ) M stmt else M .stmt, while
		5 : stmt, if ( bool ) M stmt else M .stmt, do
		6 : stmt, if ( bool ) M stmt else M .stmt, return
		7 : stmt, if ( bool ) M stmt else M .stmt, {
		8 : stmt, if ( bool ) M stmt else M .stmt, else
		9 : stmt, .loc = bool ;, }
		10 : stmt, .if ( bool ) M stmt, }
		11 : stmt, .if ( bool ) M stmt else M stmt, }
		12 : stmt, .while N ( bool ) M stmt, }
		13 : stmt, .do N stmt while ( bool ) M ;, }
		14 : stmt, .return arg ;, }
		15 : stmt, .block, }
		16 : stmt, .loc = bool ;, [
		17 : stmt, .if ( bool ) M stmt, [
		18 : stmt, .if ( bool ) M stmt else M stmt, [
		19 : stmt, .while N ( bool ) M stmt, [
		20 : stmt, .do N stmt while ( bool ) M ;, [
		21 : stmt, .return arg ;, [
		22 : stmt, .block, [
		23 : stmt, .loc = bool ;, id
		24 : stmt, .if ( bool ) M stmt, id
		25 : stmt, .if ( bool ) M stmt else M stmt, id
		26 : stmt, .while N ( bool ) M stmt, id
		27 : stmt, .do N stmt while ( bool ) M ;, id
		28 : stmt, .return arg ;, id
		29 : stmt, .block, id
		30 : stmt, .loc = bool ;, if
		31 : stmt, .if ( bool ) M stmt, if
		32 : stmt, .if ( bool ) M stmt else M stmt, if
		33 : stmt, .while N ( bool ) M stmt, if
		34 : stmt, .do N stmt while ( bool ) M ;, if
		35 : stmt, .return arg ;, if
		36 : stmt, .block, if
		37 : stmt, .loc = bool ;, while
		38 : stmt, .if ( bool ) M stmt, while
		39 : stmt, .if ( bool ) M stmt else M stmt, while
		40 : stmt, .while N ( bool ) M stmt, while
		41 : stmt, .do N stmt while ( bool ) M ;, while
		42 : stmt, .return arg ;, while
		43 : stmt, .block, while
		44 : stmt, .loc = bool ;, do
		45 : stmt, .if ( bool ) M stmt, do
		46 : stmt, .if ( bool ) M stmt else M stmt, do
		47 : stmt, .while N ( bool ) M stmt, do
		48 : stmt, .do N stmt while ( bool ) M ;, do
		49 : stmt, .return arg ;, do
		50 : stmt, .block, do
		51 : stmt, .loc = bool ;, return
		52 : stmt, .if ( bool ) M stmt, return
		53 : stmt, .if ( bool ) M stmt else M stmt, return
		54 : stmt, .while N ( bool ) M stmt, return
		55 : stmt, .do N stmt while ( bool ) M ;, return
		56 : stmt, .return arg ;, return
		57 : stmt, .block, return
		58 : stmt, .loc = bool ;, {
		59 : stmt, .if ( bool ) M stmt, {
		60 : stmt, .if ( bool ) M stmt else M stmt, {
		61 : stmt, .while N ( bool ) M stmt, {
		62 : stmt, .do N stmt while ( bool ) M ;, {
		63 : stmt, .return arg ;, {
		64 : stmt, .block, {
		65 : stmt, .loc = bool ;, else
		66 : stmt, .if ( bool ) M stmt, else
		67 : stmt, .if ( bool ) M stmt else M stmt, else
		68 : stmt, .while N ( bool ) M stmt, else
		69 : stmt, .do N stmt while ( bool ) M ;, else
		70 : stmt, .return arg ;, else
		71 : stmt, .block, else
		72 : loc, .loc [ bool ], =
		73 : loc, .id, =
		74 : block, .{ decls stmts }, }
		75 : block, .{ decls stmts }, [
		76 : block, .{ decls stmts }, id
		77 : block, .{ decls stmts }, if
		78 : block, .{ decls stmts }, while
		79 : block, .{ decls stmts }, do
		80 : block, .{ decls stmts }, return
		81 : block, .{ decls stmts }, {
		82 : block, .{ decls stmts }, else
		83 : loc, .loc [ bool ], [
		84 : loc, .id, [
	[445] 
		0 : stmt, loc = bool .;, }
		1 : stmt, loc = bool .;, else
		2 : stmt, loc = bool .;, [
		3 : stmt, loc = bool .;, id
		4 : stmt, loc = bool .;, if
		5 : stmt, loc = bool .;, while
		6 : stmt, loc = bool .;, do
		7 : stmt, loc = bool .;, return
		8 : stmt, loc = bool .;, {
		9 : bool, bool .or join, ;
		10 : bool, bool .or join, or
	[446] 
		0 : block, { decls stmts .}, }
		1 : block, { decls stmts .}, else
		2 : block, { decls stmts .}, [
		3 : block, { decls stmts .}, id
		4 : block, { decls stmts .}, if
		5 : block, { decls stmts .}, while
		6 : block, { decls stmts .}, do
		7 : block, { decls stmts .}, return
		8 : block, { decls stmts .}, {
		9 : stmts, stmts .stmt, }
		10 : stmts, stmts .stmt, [
		11 : stmts, stmts .stmt, id
		12 : stmts, stmts .stmt, if
		13 : stmts, stmts .stmt, while
		14 : stmts, stmts .stmt, do
		15 : stmts, stmts .stmt, return
		16 : stmts, stmts .stmt, {
		17 : stmts, stmts .stmt, else
		18 : stmt, .loc = bool ;, }
		19 : stmt, .if ( bool ) M stmt, }
		20 : stmt, .if ( bool ) M stmt else M stmt, }
		21 : stmt, .while N ( bool ) M stmt, }
		22 : stmt, .do N stmt while ( bool ) M ;, }
		23 : stmt, .return arg ;, }
		24 : stmt, .block, }
		25 : stmt, .loc = bool ;, [
		26 : stmt, .if ( bool ) M stmt, [
		27 : stmt, .if ( bool ) M stmt else M stmt, [
		28 : stmt, .while N ( bool ) M stmt, [
		29 : stmt, .do N stmt while ( bool ) M ;, [
		30 : stmt, .return arg ;, [
		31 : stmt, .block, [
		32 : stmt, .loc = bool ;, id
		33 : stmt, .if ( bool ) M stmt, id
		34 : stmt, .if ( bool ) M stmt else M stmt, id
		35 : stmt, .while N ( bool ) M stmt, id
		36 : stmt, .do N stmt while ( bool ) M ;, id
		37 : stmt, .return arg ;, id
		38 : stmt, .block, id
		39 : stmt, .loc = bool ;, if
		40 : stmt, .if ( bool ) M stmt, if
		41 : stmt, .if ( bool ) M stmt else M stmt, if
		42 : stmt, .while N ( bool ) M stmt, if
		43 : stmt, .do N stmt while ( bool ) M ;, if
		44 : stmt, .return arg ;, if
		45 : stmt, .block, if
		46 : stmt, .loc = bool ;, while
		47 : stmt, .if ( bool ) M stmt, while
		48 : stmt, .if ( bool ) M stmt else M stmt, while
		49 : stmt, .while N ( bool ) M stmt, while
		50 : stmt, .do N stmt while ( bool ) M ;, while
		51 : stmt, .return arg ;, while
		52 : stmt, .block, while
		53 : stmt, .loc = bool ;, do
		54 : stmt, .if ( bool ) M stmt, do
		55 : stmt, .if ( bool ) M stmt else M stmt, do
		56 : stmt, .while N ( bool ) M stmt, do
		57 : stmt, .do N stmt while ( bool ) M ;, do
		58 : stmt, .return arg ;, do
		59 : stmt, .block, do
		60 : stmt, .loc = bool ;, return
		61 : stmt, .if ( bool ) M stmt, return
		62 : stmt, .if ( bool ) M stmt else M stmt, return
		63 : stmt, .while N ( bool ) M stmt, return
		64 : stmt, .do N stmt while ( bool ) M ;, return
		65 : stmt, .return arg ;, return
		66 : stmt, .block, return
		67 : stmt, .loc = bool ;, {
		68 : stmt, .if ( bool ) M stmt, {
		69 : stmt, .if ( bool ) M stmt else M stmt, {
		70 : stmt, .while N ( bool ) M stmt, {
		71 : stmt, .do N stmt while ( bool ) M ;, {
		72 : stmt, .return arg ;, {
		73 : stmt, .block, {
		74 : stmt, .loc = bool ;, else
		75 : stmt, .if ( bool ) M stmt, else
		76 : stmt, .if ( bool ) M stmt else M stmt, else
		77 : stmt, .while N ( bool ) M stmt, else
		78 : stmt, .do N stmt while ( bool ) M ;, else
		79 : stmt, .return arg ;, else
		80 : stmt, .block, else
		81 : loc, .loc [ bool ], =
		82 : loc, .id, =
		83 : block, .{ decls stmts }, }
		84 : block, .{ decls stmts }, [
		85 : block, .{ decls stmts }, id
		86 : block, .{ decls stmts }, if
		87 : block, .{ decls stmts }, while
		88 : block, .{ decls stmts }, do
		89 : block, .{ decls stmts }, return
		90 : block, .{ decls stmts }, {
		91 : block, .{ decls stmts }, else
		92 : loc, .loc [ bool ], [
		93 : loc, .id, [
	[447] 
		0 : stmt, if ( bool .) M stmt, }
		1 : stmt, if ( bool .) M stmt else M stmt, }
		2 : stmt, if ( bool .) M stmt, else
		3 : stmt, if ( bool .) M stmt else M stmt, else
		4 : stmt, if ( bool .) M stmt, [
		5 : stmt, if ( bool .) M stmt else M stmt, [
		6 : stmt, if ( bool .) M stmt, id
		7 : stmt, if ( bool .) M stmt else M stmt, id
		8 : stmt, if ( bool .) M stmt, if
		9 : stmt, if ( bool .) M stmt else M stmt, if
		10 : stmt, if ( bool .) M stmt, while
		11 : stmt, if ( bool .) M stmt else M stmt, while
		12 : stmt, if ( bool .) M stmt, do
		13 : stmt, if ( bool .) M stmt else M stmt, do
		14 : stmt, if ( bool .) M stmt, return
		15 : stmt, if ( bool .) M stmt else M stmt, return
		16 : stmt, if ( bool .) M stmt, {
		17 : stmt, if ( bool .) M stmt else M stmt, {
		18 : bool, bool .or join, )
		19 : bool, bool .or join, or
	[448] 
		0 : stmt, while N ( .bool ) M stmt, }
		1 : stmt, while N ( .bool ) M stmt, else
		2 : stmt, while N ( .bool ) M stmt, [
		3 : stmt, while N ( .bool ) M stmt, id
		4 : stmt, while N ( .bool ) M stmt, if
		5 : stmt, while N ( .bool ) M stmt, while
		6 : stmt, while N ( .bool ) M stmt, do
		7 : stmt, while N ( .bool ) M stmt, return
		8 : stmt, while N ( .bool ) M stmt, {
		9 : bool, .bool or join, )
		10 : bool, .join, )
		11 : bool, .bool or join, or
		12 : bool, .join, or
		13 : join, .join and equality, )
		14 : join, .equality, )
		15 : join, .join and equality, or
		16 : join, .equality, or
		17 : join, .join and equality, and
		18 : join, .equality, and
		19 : equality, .equality eq rel, )
		20 : equality, .equality neq rel, )
		21 : equality, .rel, )
		22 : equality, .equality eq rel, or
		23 : equality, .equality neq rel, or
		24 : equality, .rel, or
		25 : equality, .equality eq rel, and
		26 : equality, .equality neq rel, and
		27 : equality, .rel, and
		28 : equality, .equality eq rel, eq
		29 : equality, .equality neq rel, eq
		30 : equality, .rel, eq
		31 : equality, .equality eq rel, neq
		32 : equality, .equality neq rel, neq
		33 : equality, .rel, neq
		34 : rel, .expr < expr, )
		35 : rel, .expr <= expr, )
		36 : rel, .expr >= expr, )
		37 : rel, .expr > expr, )
		38 : rel, .expr, )
		39 : rel, .expr < expr, or
		40 : rel, .expr <= expr, or
		41 : rel, .expr >= expr, or
		42 : rel, .expr > expr, or
		43 : rel, .expr, or
		44 : rel, .expr < expr, and
		45 : rel, .expr <= expr, and
		46 : rel, .expr >= expr, and
		47 : rel, .expr > expr, and
		48 : rel, .expr, and
		49 : rel, .expr < expr, eq
		50 : rel, .expr <= expr, eq
		51 : rel, .expr >= expr, eq
		52 : rel, .expr > expr, eq
		53 : rel, .expr, eq
		54 : rel, .expr < expr, neq
		55 : rel, .expr <= expr, neq
		56 : rel, .expr >= expr, neq
		57 : rel, .expr > expr, neq
		58 : rel, .expr, neq
		59 : expr, .expr + term, <
		60 : expr, .expr - term, <
		61 : expr, .term, <
		62 : expr, .expr + term, <=
		63 : expr, .expr - term, <=
		64 : expr, .term, <=
		65 : expr, .expr + term, >=
		66 : expr, .expr - term, >=
		67 : expr, .term, >=
		68 : expr, .expr + term, >
		69 : expr, .expr - term, >
		70 : expr, .term, >
		71 : expr, .expr + term, )
		72 : expr, .expr - term, )
		73 : expr, .term, )
		74 : expr, .expr + term, or
		75 : expr, .expr - term, or
		76 : expr, .term, or
		77 : expr, .expr + term, and
		78 : expr, .expr - term, and
		79 : expr, .term, and
		80 : expr, .expr + term, eq
		81 : expr, .expr - term, eq
		82 : expr, .term, eq
		83 : expr, .expr + term, neq
		84 : expr, .expr - term, neq
		85 : expr, .term, neq
		86 : expr, .expr + term, +
		87 : expr, .expr - term, +
		88 : expr, .term, +
		89 : expr, .expr + term, -
		90 : expr, .expr - term, -
		91 : expr, .term, -
		92 : term, .term * unary, <
		93 : term, .term / unary, <
		94 : term, .term mod unary, <
		95 : term, .unary, <
		96 : term, .term * unary, <=
		97 : term, .term / unary, <=
		98 : term, .term mod unary, <=
		99 : term, .unary, <=
		100 : term, .term * unary, >=
		101 : term, .term / unary, >=
		102 : term, .term mod unary, >=
		103 : term, .unary, >=
		104 : term, .term * unary, >
		105 : term, .term / unary, >
		106 : term, .term mod unary, >
		107 : term, .unary, >
		108 : term, .term * unary, )
		109 : term, .term / unary, )
		110 : term, .term mod unary, )
		111 : term, .unary, )
		112 : term, .term * unary, or
		113 : term, .term / unary, or
		114 : term, .term mod unary, or
		115 : term, .unary, or
		116 : term, .term * unary, and
		117 : term, .term / unary, and
		118 : term, .term mod unary, and
		119 : term, .unary, and
		120 : term, .term * unary, eq
		121 : term, .term / unary, eq
		122 : term, .term mod unary, eq
		123 : term, .unary, eq
		124 : term, .term * unary, neq
		125 : term, .term / unary, neq
		126 : term, .term mod unary, neq
		127 : term, .unary, neq
		128 : term, .term * unary, +
		129 : term, .term / unary, +
		130 : term, .term mod unary, +
		131 : term, .unary, +
		132 : term, .term * unary, -
		133 : term, .term / unary, -
		134 : term, .term mod unary, -
		135 : term, .unary, -
		136 : term, .term * unary, *
		137 : term, .term / unary, *
		138 : term, .term mod unary, *
		139 : term, .unary, *
		140 : term, .term * unary, /
		141 : term, .term / unary, /
		142 : term, .term mod unary, /
		143 : term, .unary, /
		144 : term, .term * unary, mod
		145 : term, .term / unary, mod
		146 : term, .term mod unary, mod
		147 : term, .unary, mod
		148 : unary, .! unary, <
		149 : unary, .- unary, <
		150 : unary, .factor, <
		151 : unary, .! unary, <=
		152 : unary, .- unary, <=
		153 : unary, .factor, <=
		154 : unary, .! unary, >=
		155 : unary, .- unary, >=
		156 : unary, .factor, >=
		157 : unary, .! unary, >
		158 : unary, .- unary, >
		159 : unary, .factor, >
		160 : unary, .! unary, )
		161 : unary, .- unary, )
		162 : unary, .factor, )
		163 : unary, .! unary, or
		164 : unary, .- unary, or
		165 : unary, .factor, or
		166 : unary, .! unary, and
		167 : unary, .- unary, and
		168 : unary, .factor, and
		169 : unary, .! unary, eq
		170 : unary, .- unary, eq
		171 : unary, .factor, eq
		172 : unary, .! unary, neq
		173 : unary, .- unary, neq
		174 : unary, .factor, neq
		175 : unary, .! unary, +
		176 : unary, .- unary, +
		177 : unary, .factor, +
		178 : unary, .! unary, -
		179 : unary, .- unary, -
		180 : unary, .factor, -
		181 : unary, .! unary, *
		182 : unary, .- unary, *
		183 : unary, .factor, *
		184 : unary, .! unary, /
		185 : unary, .- unary, /
		186 : unary, .factor, /
		187 : unary, .! unary, mod
		188 : unary, .- unary, mod
		189 : unary, .factor, mod
		190 : factor, .( bool ), <
		191 : factor, .loc, <
		192 : factor, .id ( args ), <
		193 : factor, .num, <
		194 : factor, .real, <
		195 : factor, .true, <
		196 : factor, .false, <
		197 : factor, .( bool ), <=
		198 : factor, .loc, <=
		199 : factor, .id ( args ), <=
		200 : factor, .num, <=
		201 : factor, .real, <=
		202 : factor, .true, <=
		203 : factor, .false, <=
		204 : factor, .( bool ), >=
		205 : factor, .loc, >=
		206 : factor, .id ( args ), >=
		207 : factor, .num, >=
		208 : factor, .real, >=
		209 : factor, .true, >=
		210 : factor, .false, >=
		211 : factor, .( bool ), >
		212 : factor, .loc, >
		213 : factor, .id ( args ), >
		214 : factor, .num, >
		215 : factor, .real, >
		216 : factor, .true, >
		217 : factor, .false, >
		218 : factor, .( bool ), )
		219 : factor, .loc, )
		220 : factor, .id ( args ), )
		221 : factor, .num, )
		222 : factor, .real, )
		223 : factor, .true, )
		224 : factor, .false, )
		225 : factor, .( bool ), or
		226 : factor, .loc, or
		227 : factor, .id ( args ), or
		228 : factor, .num, or
		229 : factor, .real, or
		230 : factor, .true, or
		231 : factor, .false, or
		232 : factor, .( bool ), and
		233 : factor, .loc, and
		234 : factor, .id ( args ), and
		235 : factor, .num, and
		236 : factor, .real, and
		237 : factor, .true, and
		238 : factor, .false, and
		239 : factor, .( bool ), eq
		240 : factor, .loc, eq
		241 : factor, .id ( args ), eq
		242 : factor, .num, eq
		243 : factor, .real, eq
		244 : factor, .true, eq
		245 : factor, .false, eq
		246 : factor, .( bool ), neq
		247 : factor, .loc, neq
		248 : factor, .id ( args ), neq
		249 : factor, .num, neq
		250 : factor, .real, neq
		251 : factor, .true, neq
		252 : factor, .false, neq
		253 : factor, .( bool ), +
		254 : factor, .loc, +
		255 : factor, .id ( args ), +
		256 : factor, .num, +
		257 : factor, .real, +
		258 : factor, .true, +
		259 : factor, .false, +
		260 : factor, .( bool ), -
		261 : factor, .loc, -
		262 : factor, .id ( args ), -
		263 : factor, .num, -
		264 : factor, .real, -
		265 : factor, .true, -
		266 : factor, .false, -
		267 : factor, .( bool ), *
		268 : factor, .loc, *
		269 : factor, .id ( args ), *
		270 : factor, .num, *
		271 : factor, .real, *
		272 : factor, .true, *
		273 : factor, .false, *
		274 : factor, .( bool ), /
		275 : factor, .loc, /
		276 : factor, .id ( args ), /
		277 : factor, .num, /
		278 : factor, .real, /
		279 : factor, .true, /
		280 : factor, .false, /
		281 : factor, .( bool ), mod
		282 : factor, .loc, mod
		283 : factor, .id ( args ), mod
		284 : factor, .num, mod
		285 : factor, .real, mod
		286 : factor, .true, mod
		287 : factor, .false, mod
		288 : loc, .loc [ bool ], <
		289 : loc, .id, <
		290 : loc, .loc [ bool ], <=
		291 : loc, .id, <=
		292 : loc, .loc [ bool ], >=
		293 : loc, .id, >=
		294 : loc, .loc [ bool ], >
		295 : loc, .id, >
		296 : loc, .loc [ bool ], )
		297 : loc, .id, )
		298 : loc, .loc [ bool ], or
		299 : loc, .id, or
		300 : loc, .loc [ bool ], and
		301 : loc, .id, and
		302 : loc, .loc [ bool ], eq
		303 : loc, .id, eq
		304 : loc, .loc [ bool ], neq
		305 : loc, .id, neq
		306 : loc, .loc [ bool ], +
		307 : loc, .id, +
		308 : loc, .loc [ bool ], -
		309 : loc, .id, -
		310 : loc, .loc [ bool ], *
		311 : loc, .id, *
		312 : loc, .loc [ bool ], /
		313 : loc, .id, /
		314 : loc, .loc [ bool ], mod
		315 : loc, .id, mod
		316 : loc, .loc [ bool ], [
		317 : loc, .id, [
	[449] 
		0 : stmt, do N stmt .while ( bool ) M ;, }
		1 : stmt, do N stmt .while ( bool ) M ;, else
		2 : stmt, do N stmt .while ( bool ) M ;, [
		3 : stmt, do N stmt .while ( bool ) M ;, id
		4 : stmt, do N stmt .while ( bool ) M ;, if
		5 : stmt, do N stmt .while ( bool ) M ;, while
		6 : stmt, do N stmt .while ( bool ) M ;, do
		7 : stmt, do N stmt .while ( bool ) M ;, return
		8 : stmt, do N stmt .while ( bool ) M ;, {
	[450] 
		0 : stmt, return arg ; ., }
		1 : stmt, return arg ; ., else
		2 : stmt, return arg ; ., [
		3 : stmt, return arg ; ., id
		4 : stmt, return arg ; ., if
		5 : stmt, return arg ; ., while
		6 : stmt, return arg ; ., do
		7 : stmt, return arg ; ., return
		8 : stmt, return arg ; ., {
	[451] 
		0 : loc, loc [ bool ] ., )
		1 : loc, loc [ bool ] ., or
		2 : loc, loc [ bool ] ., and
		3 : loc, loc [ bool ] ., eq
		4 : loc, loc [ bool ] ., neq
		5 : loc, loc [ bool ] ., +
		6 : loc, loc [ bool ] ., -
		7 : loc, loc [ bool ] ., *
		8 : loc, loc [ bool ] ., /
		9 : loc, loc [ bool ] ., mod
		10 : loc, loc [ bool ] ., [
	[452] 
		0 : factor, id ( args ) ., )
		1 : factor, id ( args ) ., or
		2 : factor, id ( args ) ., and
		3 : factor, id ( args ) ., eq
		4 : factor, id ( args ) ., neq
		5 : factor, id ( args ) ., +
		6 : factor, id ( args ) ., -
		7 : factor, id ( args ) ., *
		8 : factor, id ( args ) ., /
		9 : factor, id ( args ) ., mod
	[453] 
		0 : stmt, do N stmt while ( bool ) M .;, }
		1 : stmt, do N stmt while ( bool ) M .;, [
		2 : stmt, do N stmt while ( bool ) M .;, id
		3 : stmt, do N stmt while ( bool ) M .;, if
		4 : stmt, do N stmt while ( bool ) M .;, while
		5 : stmt, do N stmt while ( bool ) M .;, do
		6 : stmt, do N stmt while ( bool ) M .;, return
		7 : stmt, do N stmt while ( bool ) M .;, {
		8 : stmt, do N stmt while ( bool ) M .;, else
	[454] 
		0 : stmt, block ., while
		1 : stmt, block ., else
	[455] 
		0 : stmt, if ( bool ) M stmt ., while
		1 : stmt, if ( bool ) M stmt .else M stmt, while
	[456] 
		0 : stmt, loc .= bool ;, while
		1 : stmt, loc .= bool ;, else
		2 : loc, loc .[ bool ], =
		3 : loc, loc .[ bool ], [
	[457] 
		0 : block, { .decls stmts }, while
		1 : block, { .decls stmts }, else
		2 : decls, .decls decl, [
		3 : decls, .decls decl, id
		4 : decls, .decls decl, if
		5 : decls, .decls decl, while
		6 : decls, .decls decl, do
		7 : decls, .decls decl, return
		8 : decls, .decls decl, {
		9 : decls, .decls decl, }
		10 : decls, ., [
		11 : decls, ., id
		12 : decls, ., if
		13 : decls, ., while
		14 : decls, ., do
		15 : decls, ., return
		16 : decls, ., {
		17 : decls, ., }
		18 : decls, .decls decl, basic
		19 : decls, ., basic
	[458] 
		0 : stmt, if .( bool ) M stmt, while
		1 : stmt, if .( bool ) M stmt else M stmt, while
		2 : stmt, if .( bool ) M stmt, else
		3 : stmt, if .( bool ) M stmt else M stmt, else
	[459] 
		0 : stmt, while .N ( bool ) M stmt, while
		1 : stmt, while .N ( bool ) M stmt, else
		2 : N, ., (
		3 : N, ., [
		4 : N, ., id
		5 : N, ., if
		6 : N, ., while
		7 : N, ., do
		8 : N, ., return
		9 : N, ., {
	[460] 
		0 : stmt, do .N stmt while ( bool ) M ;, while
		1 : stmt, do .N stmt while ( bool ) M ;, else
		2 : N, ., (
		3 : N, ., [
		4 : N, ., id
		5 : N, ., if
		6 : N, ., while
		7 : N, ., do
		8 : N, ., return
		9 : N, ., {
	[461] 
		0 : stmt, return .arg ;, while
		1 : stmt, return .arg ;, else
		2 : arg, .loc, ;
		3 : arg, .bool, ;
		4 : loc, .loc [ bool ], ;
		5 : loc, .id, ;
		6 : bool, .bool or join, ;
		7 : bool, .join, ;
		8 : loc, .loc [ bool ], [
		9 : loc, .id, [
		10 : bool, .bool or join, or
		11 : bool, .join, or
		12 : join, .join and equality, ;
		13 : join, .equality, ;
		14 : join, .join and equality, or
		15 : join, .equality, or
		16 : join, .join and equality, and
		17 : join, .equality, and
		18 : equality, .equality eq rel, ;
		19 : equality, .equality neq rel, ;
		20 : equality, .rel, ;
		21 : equality, .equality eq rel, or
		22 : equality, .equality neq rel, or
		23 : equality, .rel, or
		24 : equality, .equality eq rel, and
		25 : equality, .equality neq rel, and
		26 : equality, .rel, and
		27 : equality, .equality eq rel, eq
		28 : equality, .equality neq rel, eq
		29 : equality, .rel, eq
		30 : equality, .equality eq rel, neq
		31 : equality, .equality neq rel, neq
		32 : equality, .rel, neq
		33 : rel, .expr < expr, ;
		34 : rel, .expr <= expr, ;
		35 : rel, .expr >= expr, ;
		36 : rel, .expr > expr, ;
		37 : rel, .expr, ;
		38 : rel, .expr < expr, or
		39 : rel, .expr <= expr, or
		40 : rel, .expr >= expr, or
		41 : rel, .expr > expr, or
		42 : rel, .expr, or
		43 : rel, .expr < expr, and
		44 : rel, .expr <= expr, and
		45 : rel, .expr >= expr, and
		46 : rel, .expr > expr, and
		47 : rel, .expr, and
		48 : rel, .expr < expr, eq
		49 : rel, .expr <= expr, eq
		50 : rel, .expr >= expr, eq
		51 : rel, .expr > expr, eq
		52 : rel, .expr, eq
		53 : rel, .expr < expr, neq
		54 : rel, .expr <= expr, neq
		55 : rel, .expr >= expr, neq
		56 : rel, .expr > expr, neq
		57 : rel, .expr, neq
		58 : expr, .expr + term, <
		59 : expr, .expr - term, <
		60 : expr, .term, <
		61 : expr, .expr + term, <=
		62 : expr, .expr - term, <=
		63 : expr, .term, <=
		64 : expr, .expr + term, >=
		65 : expr, .expr - term, >=
		66 : expr, .term, >=
		67 : expr, .expr + term, >
		68 : expr, .expr - term, >
		69 : expr, .term, >
		70 : expr, .expr + term, ;
		71 : expr, .expr - term, ;
		72 : expr, .term, ;
		73 : expr, .expr + term, or
		74 : expr, .expr - term, or
		75 : expr, .term, or
		76 : expr, .expr + term, and
		77 : expr, .expr - term, and
		78 : expr, .term, and
		79 : expr, .expr + term, eq
		80 : expr, .expr - term, eq
		81 : expr, .term, eq
		82 : expr, .expr + term, neq
		83 : expr, .expr - term, neq
		84 : expr, .term, neq
		85 : expr, .expr + term, +
		86 : expr, .expr - term, +
		87 : expr, .term, +
		88 : expr, .expr + term, -
		89 : expr, .expr - term, -
		90 : expr, .term, -
		91 : term, .term * unary, <
		92 : term, .term / unary, <
		93 : term, .term mod unary, <
		94 : term, .unary, <
		95 : term, .term * unary, <=
		96 : term, .term / unary, <=
		97 : term, .term mod unary, <=
		98 : term, .unary, <=
		99 : term, .term * unary, >=
		100 : term, .term / unary, >=
		101 : term, .term mod unary, >=
		102 : term, .unary, >=
		103 : term, .term * unary, >
		104 : term, .term / unary, >
		105 : term, .term mod unary, >
		106 : term, .unary, >
		107 : term, .term * unary, ;
		108 : term, .term / unary, ;
		109 : term, .term mod unary, ;
		110 : term, .unary, ;
		111 : term, .term * unary, or
		112 : term, .term / unary, or
		113 : term, .term mod unary, or
		114 : term, .unary, or
		115 : term, .term * unary, and
		116 : term, .term / unary, and
		117 : term, .term mod unary, and
		118 : term, .unary, and
		119 : term, .term * unary, eq
		120 : term, .term / unary, eq
		121 : term, .term mod unary, eq
		122 : term, .unary, eq
		123 : term, .term * unary, neq
		124 : term, .term / unary, neq
		125 : term, .term mod unary, neq
		126 : term, .unary, neq
		127 : term, .term * unary, +
		128 : term, .term / unary, +
		129 : term, .term mod unary, +
		130 : term, .unary, +
		131 : term, .term * unary, -
		132 : term, .term / unary, -
		133 : term, .term mod unary, -
		134 : term, .unary, -
		135 : term, .term * unary, *
		136 : term, .term / unary, *
		137 : term, .term mod unary, *
		138 : term, .unary, *
		139 : term, .term * unary, /
		140 : term, .term / unary, /
		141 : term, .term mod unary, /
		142 : term, .unary, /
		143 : term, .term * unary, mod
		144 : term, .term / unary, mod
		145 : term, .term mod unary, mod
		146 : term, .unary, mod
		147 : unary, .! unary, <
		148 : unary, .- unary, <
		149 : unary, .factor, <
		150 : unary, .! unary, <=
		151 : unary, .- unary, <=
		152 : unary, .factor, <=
		153 : unary, .! unary, >=
		154 : unary, .- unary, >=
		155 : unary, .factor, >=
		156 : unary, .! unary, >
		157 : unary, .- unary, >
		158 : unary, .factor, >
		159 : unary, .! unary, ;
		160 : unary, .- unary, ;
		161 : unary, .factor, ;
		162 : unary, .! unary, or
		163 : unary, .- unary, or
		164 : unary, .factor, or
		165 : unary, .! unary, and
		166 : unary, .- unary, and
		167 : unary, .factor, and
		168 : unary, .! unary, eq
		169 : unary, .- unary, eq
		170 : unary, .factor, eq
		171 : unary, .! unary, neq
		172 : unary, .- unary, neq
		173 : unary, .factor, neq
		174 : unary, .! unary, +
		175 : unary, .- unary, +
		176 : unary, .factor, +
		177 : unary, .! unary, -
		178 : unary, .- unary, -
		179 : unary, .factor, -
		180 : unary, .! unary, *
		181 : unary, .- unary, *
		182 : unary, .factor, *
		183 : unary, .! unary, /
		184 : unary, .- unary, /
		185 : unary, .factor, /
		186 : unary, .! unary, mod
		187 : unary, .- unary, mod
		188 : unary, .factor, mod
		189 : factor, .( bool ), <
		190 : factor, .loc, <
		191 : factor, .id ( args ), <
		192 : factor, .num, <
		193 : factor, .real, <
		194 : factor, .true, <
		195 : factor, .false, <
		196 : factor, .( bool ), <=
		197 : factor, .loc, <=
		198 : factor, .id ( args ), <=
		199 : factor, .num, <=
		200 : factor, .real, <=
		201 : factor, .true, <=
		202 : factor, .false, <=
		203 : factor, .( bool ), >=
		204 : factor, .loc, >=
		205 : factor, .id ( args ), >=
		206 : factor, .num, >=
		207 : factor, .real, >=
		208 : factor, .true, >=
		209 : factor, .false, >=
		210 : factor, .( bool ), >
		211 : factor, .loc, >
		212 : factor, .id ( args ), >
		213 : factor, .num, >
		214 : factor, .real, >
		215 : factor, .true, >
		216 : factor, .false, >
		217 : factor, .( bool ), ;
		218 : factor, .loc, ;
		219 : factor, .id ( args ), ;
		220 : factor, .num, ;
		221 : factor, .real, ;
		222 : factor, .true, ;
		223 : factor, .false, ;
		224 : factor, .( bool ), or
		225 : factor, .loc, or
		226 : factor, .id ( args ), or
		227 : factor, .num, or
		228 : factor, .real, or
		229 : factor, .true, or
		230 : factor, .false, or
		231 : factor, .( bool ), and
		232 : factor, .loc, and
		233 : factor, .id ( args ), and
		234 : factor, .num, and
		235 : factor, .real, and
		236 : factor, .true, and
		237 : factor, .false, and
		238 : factor, .( bool ), eq
		239 : factor, .loc, eq
		240 : factor, .id ( args ), eq
		241 : factor, .num, eq
		242 : factor, .real, eq
		243 : factor, .true, eq
		244 : factor, .false, eq
		245 : factor, .( bool ), neq
		246 : factor, .loc, neq
		247 : factor, .id ( args ), neq
		248 : factor, .num, neq
		249 : factor, .real, neq
		250 : factor, .true, neq
		251 : factor, .false, neq
		252 : factor, .( bool ), +
		253 : factor, .loc, +
		254 : factor, .id ( args ), +
		255 : factor, .num, +
		256 : factor, .real, +
		257 : factor, .true, +
		258 : factor, .false, +
		259 : factor, .( bool ), -
		260 : factor, .loc, -
		261 : factor, .id ( args ), -
		262 : factor, .num, -
		263 : factor, .real, -
		264 : factor, .true, -
		265 : factor, .false, -
		266 : factor, .( bool ), *
		267 : factor, .loc, *
		268 : factor, .id ( args ), *
		269 : factor, .num, *
		270 : factor, .real, *
		271 : factor, .true, *
		272 : factor, .false, *
		273 : factor, .( bool ), /
		274 : factor, .loc, /
		275 : factor, .id ( args ), /
		276 : factor, .num, /
		277 : factor, .real, /
		278 : factor, .true, /
		279 : factor, .false, /
		280 : factor, .( bool ), mod
		281 : factor, .loc, mod
		282 : factor, .id ( args ), mod
		283 : factor, .num, mod
		284 : factor, .real, mod
		285 : factor, .true, mod
		286 : factor, .false, mod
		287 : loc, .loc [ bool ], <
		288 : loc, .id, <
		289 : loc, .loc [ bool ], <=
		290 : loc, .id, <=
		291 : loc, .loc [ bool ], >=
		292 : loc, .id, >=
		293 : loc, .loc [ bool ], >
		294 : loc, .id, >
		295 : loc, .loc [ bool ], or
		296 : loc, .id, or
		297 : loc, .loc [ bool ], and
		298 : loc, .id, and
		299 : loc, .loc [ bool ], eq
		300 : loc, .id, eq
		301 : loc, .loc [ bool ], neq
		302 : loc, .id, neq
		303 : loc, .loc [ bool ], +
		304 : loc, .id, +
		305 : loc, .loc [ bool ], -
		306 : loc, .id, -
		307 : loc, .loc [ bool ], *
		308 : loc, .id, *
		309 : loc, .loc [ bool ], /
		310 : loc, .id, /
		311 : loc, .loc [ bool ], mod
		312 : loc, .id, mod
	[462] 
		0 : stmt, while N ( bool ) M .stmt, while
		1 : stmt, .loc = bool ;, while
		2 : stmt, .if ( bool ) M stmt, while
		3 : stmt, .if ( bool ) M stmt else M stmt, while
		4 : stmt, .while N ( bool ) M stmt, while
		5 : stmt, .do N stmt while ( bool ) M ;, while
		6 : stmt, .return arg ;, while
		7 : stmt, .block, while
		8 : loc, .loc [ bool ], =
		9 : loc, .id, =
		10 : block, .{ decls stmts }, while
		11 : loc, .loc [ bool ], [
		12 : loc, .id, [
	[463] 
		0 : stmt, do N stmt while ( bool .) M ;, while
		1 : bool, bool .or join, )
		2 : bool, bool .or join, or
	[464] 
		0 : loc, loc [ bool .], )
		1 : loc, loc [ bool .], ,
		2 : loc, loc [ bool .], or
		3 : loc, loc [ bool .], and
		4 : loc, loc [ bool .], eq
		5 : loc, loc [ bool .], neq
		6 : loc, loc [ bool .], +
		7 : loc, loc [ bool .], -
		8 : loc, loc [ bool .], *
		9 : loc, loc [ bool .], /
		10 : loc, loc [ bool .], mod
		11 : loc, loc [ bool .], [
		12 : bool, bool .or join, ]
		13 : bool, bool .or join, or
	[465] 
		0 : expr, expr + term ., )
		1 : expr, expr + term ., ,
		2 : expr, expr + term ., or
		3 : expr, expr + term ., and
		4 : expr, expr + term ., eq
		5 : expr, expr + term ., neq
		6 : expr, expr + term ., +
		7 : expr, expr + term ., -
		8 : term, term .* unary, )
		9 : term, term ./ unary, )
		10 : term, term .mod unary, )
		11 : term, term .* unary, ,
		12 : term, term ./ unary, ,
		13 : term, term .mod unary, ,
		14 : term, term .* unary, or
		15 : term, term ./ unary, or
		16 : term, term .mod unary, or
		17 : term, term .* unary, and
		18 : term, term ./ unary, and
		19 : term, term .mod unary, and
		20 : term, term .* unary, eq
		21 : term, term ./ unary, eq
		22 : term, term .mod unary, eq
		23 : term, term .* unary, neq
		24 : term, term ./ unary, neq
		25 : term, term .mod unary, neq
		26 : term, term .* unary, +
		27 : term, term ./ unary, +
		28 : term, term .mod unary, +
		29 : term, term .* unary, -
		30 : term, term ./ unary, -
		31 : term, term .mod unary, -
		32 : term, term .* unary, *
		33 : term, term ./ unary, *
		34 : term, term .mod unary, *
		35 : term, term .* unary, /
		36 : term, term ./ unary, /
		37 : term, term .mod unary, /
		38 : term, term .* unary, mod
		39 : term, term ./ unary, mod
		40 : term, term .mod unary, mod
	[466] 
		0 : expr, expr - term ., )
		1 : expr, expr - term ., ,
		2 : expr, expr - term ., or
		3 : expr, expr - term ., and
		4 : expr, expr - term ., eq
		5 : expr, expr - term ., neq
		6 : expr, expr - term ., +
		7 : expr, expr - term ., -
		8 : term, term .* unary, )
		9 : term, term ./ unary, )
		10 : term, term .mod unary, )
		11 : term, term .* unary, ,
		12 : term, term ./ unary, ,
		13 : term, term .mod unary, ,
		14 : term, term .* unary, or
		15 : term, term ./ unary, or
		16 : term, term .mod unary, or
		17 : term, term .* unary, and
		18 : term, term ./ unary, and
		19 : term, term .mod unary, and
		20 : term, term .* unary, eq
		21 : term, term ./ unary, eq
		22 : term, term .mod unary, eq
		23 : term, term .* unary, neq
		24 : term, term ./ unary, neq
		25 : term, term .mod unary, neq
		26 : term, term .* unary, +
		27 : term, term ./ unary, +
		28 : term, term .mod unary, +
		29 : term, term .* unary, -
		30 : term, term ./ unary, -
		31 : term, term .mod unary, -
		32 : term, term .* unary, *
		33 : term, term ./ unary, *
		34 : term, term .mod unary, *
		35 : term, term .* unary, /
		36 : term, term ./ unary, /
		37 : term, term .mod unary, /
		38 : term, term .* unary, mod
		39 : term, term ./ unary, mod
		40 : term, term .mod unary, mod
	[467] 
		0 : term, term * unary ., )
		1 : term, term * unary ., ,
		2 : term, term * unary ., or
		3 : term, term * unary ., and
		4 : term, term * unary ., eq
		5 : term, term * unary ., neq
		6 : term, term * unary ., +
		7 : term, term * unary ., -
		8 : term, term * unary ., *
		9 : term, term * unary ., /
		10 : term, term * unary ., mod
	[468] 
		0 : term, term / unary ., )
		1 : term, term / unary ., ,
		2 : term, term / unary ., or
		3 : term, term / unary ., and
		4 : term, term / unary ., eq
		5 : term, term / unary ., neq
		6 : term, term / unary ., +
		7 : term, term / unary ., -
		8 : term, term / unary ., *
		9 : term, term / unary ., /
		10 : term, term / unary ., mod
	[469] 
		0 : term, term mod unary ., )
		1 : term, term mod unary ., ,
		2 : term, term mod unary ., or
		3 : term, term mod unary ., and
		4 : term, term mod unary ., eq
		5 : term, term mod unary ., neq
		6 : term, term mod unary ., +
		7 : term, term mod unary ., -
		8 : term, term mod unary ., *
		9 : term, term mod unary ., /
		10 : term, term mod unary ., mod
	[470] 
		0 : factor, id ( args .), )
		1 : factor, id ( args .), ,
		2 : factor, id ( args .), or
		3 : factor, id ( args .), and
		4 : factor, id ( args .), eq
		5 : factor, id ( args .), neq
		6 : factor, id ( args .), +
		7 : factor, id ( args .), -
		8 : factor, id ( args .), *
		9 : factor, id ( args .), /
		10 : factor, id ( args .), mod
		11 : args, args ., arg, )
		12 : args, args ., arg, ,
	[471] 
		0 : factor, ( bool ) ., )
		1 : factor, ( bool ) ., ,
		2 : factor, ( bool ) ., or
		3 : factor, ( bool ) ., and
		4 : factor, ( bool ) ., eq
		5 : factor, ( bool ) ., neq
		6 : factor, ( bool ) ., +
		7 : factor, ( bool ) ., -
		8 : factor, ( bool ) ., *
		9 : factor, ( bool ) ., /
		10 : factor, ( bool ) ., mod
	[472] 
		0 : loc, loc [ bool ] ., <
		1 : loc, loc [ bool ] ., <=
		2 : loc, loc [ bool ] ., >=
		3 : loc, loc [ bool ] ., >
		4 : loc, loc [ bool ] ., )
		5 : loc, loc [ bool ] ., ,
		6 : loc, loc [ bool ] ., or
		7 : loc, loc [ bool ] ., and
		8 : loc, loc [ bool ] ., eq
		9 : loc, loc [ bool ] ., neq
		10 : loc, loc [ bool ] ., +
		11 : loc, loc [ bool ] ., -
		12 : loc, loc [ bool ] ., *
		13 : loc, loc [ bool ] ., /
		14 : loc, loc [ bool ] ., mod
		15 : loc, loc [ bool ] ., [
	[473] 
		0 : stmt, if ( bool ) M stmt else M stmt ., }
		1 : stmt, if ( bool ) M stmt else M stmt ., [
		2 : stmt, if ( bool ) M stmt else M stmt ., id
		3 : stmt, if ( bool ) M stmt else M stmt ., if
		4 : stmt, if ( bool ) M stmt else M stmt ., while
		5 : stmt, if ( bool ) M stmt else M stmt ., do
		6 : stmt, if ( bool ) M stmt else M stmt ., return
		7 : stmt, if ( bool ) M stmt else M stmt ., {
		8 : stmt, if ( bool ) M stmt else M stmt ., else
	[474] 
		0 : stmt, loc = bool ; ., }
		1 : stmt, loc = bool ; ., else
		2 : stmt, loc = bool ; ., [
		3 : stmt, loc = bool ; ., id
		4 : stmt, loc = bool ; ., if
		5 : stmt, loc = bool ; ., while
		6 : stmt, loc = bool ; ., do
		7 : stmt, loc = bool ; ., return
		8 : stmt, loc = bool ; ., {
	[475] 
		0 : block, { decls stmts } ., }
		1 : block, { decls stmts } ., else
		2 : block, { decls stmts } ., [
		3 : block, { decls stmts } ., id
		4 : block, { decls stmts } ., if
		5 : block, { decls stmts } ., while
		6 : block, { decls stmts } ., do
		7 : block, { decls stmts } ., return
		8 : block, { decls stmts } ., {
	[476] 
		0 : stmt, if ( bool ) .M stmt, }
		1 : stmt, if ( bool ) .M stmt else M stmt, }
		2 : stmt, if ( bool ) .M stmt, else
		3 : stmt, if ( bool ) .M stmt else M stmt, else
		4 : stmt, if ( bool ) .M stmt, [
		5 : stmt, if ( bool ) .M stmt else M stmt, [
		6 : stmt, if ( bool ) .M stmt, id
		7 : stmt, if ( bool ) .M stmt else M stmt, id
		8 : stmt, if ( bool ) .M stmt, if
		9 : stmt, if ( bool ) .M stmt else M stmt, if
		10 : stmt, if ( bool ) .M stmt, while
		11 : stmt, if ( bool ) .M stmt else M stmt, while
		12 : stmt, if ( bool ) .M stmt, do
		13 : stmt, if ( bool ) .M stmt else M stmt, do
		14 : stmt, if ( bool ) .M stmt, return
		15 : stmt, if ( bool ) .M stmt else M stmt, return
		16 : stmt, if ( bool ) .M stmt, {
		17 : stmt, if ( bool ) .M stmt else M stmt, {
		18 : M, ., [
		19 : M, ., id
		20 : M, ., if
		21 : M, ., while
		22 : M, ., do
		23 : M, ., return
		24 : M, ., {
		25 : M, ., ;
	[477] 
		0 : stmt, while N ( bool .) M stmt, }
		1 : stmt, while N ( bool .) M stmt, else
		2 : stmt, while N ( bool .) M stmt, [
		3 : stmt, while N ( bool .) M stmt, id
		4 : stmt, while N ( bool .) M stmt, if
		5 : stmt, while N ( bool .) M stmt, while
		6 : stmt, while N ( bool .) M stmt, do
		7 : stmt, while N ( bool .) M stmt, return
		8 : stmt, while N ( bool .) M stmt, {
		9 : bool, bool .or join, )
		10 : bool, bool .or join, or
	[478] 
		0 : stmt, do N stmt while .( bool ) M ;, }
		1 : stmt, do N stmt while .( bool ) M ;, else
		2 : stmt, do N stmt while .( bool ) M ;, [
		3 : stmt, do N stmt while .( bool ) M ;, id
		4 : stmt, do N stmt while .( bool ) M ;, if
		5 : stmt, do N stmt while .( bool ) M ;, while
		6 : stmt, do N stmt while .( bool ) M ;, do
		7 : stmt, do N stmt while .( bool ) M ;, return
		8 : stmt, do N stmt while .( bool ) M ;, {
	[479] 
		0 : stmt, do N stmt while ( bool ) M ; ., }
		1 : stmt, do N stmt while ( bool ) M ; ., [
		2 : stmt, do N stmt while ( bool ) M ; ., id
		3 : stmt, do N stmt while ( bool ) M ; ., if
		4 : stmt, do N stmt while ( bool ) M ; ., while
		5 : stmt, do N stmt while ( bool ) M ; ., do
		6 : stmt, do N stmt while ( bool ) M ; ., return
		7 : stmt, do N stmt while ( bool ) M ; ., {
		8 : stmt, do N stmt while ( bool ) M ; ., else
	[480] 
		0 : stmt, if ( bool ) M stmt else .M stmt, while
		1 : M, ., [
		2 : M, ., id
		3 : M, ., if
		4 : M, ., while
		5 : M, ., do
		6 : M, ., return
		7 : M, ., {
		8 : M, ., ;
	[481] 
		0 : stmt, loc = .bool ;, while
		1 : stmt, loc = .bool ;, else
		2 : bool, .bool or join, ;
		3 : bool, .join, ;
		4 : bool, .bool or join, or
		5 : bool, .join, or
		6 : join, .join and equality, ;
		7 : join, .equality, ;
		8 : join, .join and equality, or
		9 : join, .equality, or
		10 : join, .join and equality, and
		11 : join, .equality, and
		12 : equality, .equality eq rel, ;
		13 : equality, .equality neq rel, ;
		14 : equality, .rel, ;
		15 : equality, .equality eq rel, or
		16 : equality, .equality neq rel, or
		17 : equality, .rel, or
		18 : equality, .equality eq rel, and
		19 : equality, .equality neq rel, and
		20 : equality, .rel, and
		21 : equality, .equality eq rel, eq
		22 : equality, .equality neq rel, eq
		23 : equality, .rel, eq
		24 : equality, .equality eq rel, neq
		25 : equality, .equality neq rel, neq
		26 : equality, .rel, neq
		27 : rel, .expr < expr, ;
		28 : rel, .expr <= expr, ;
		29 : rel, .expr >= expr, ;
		30 : rel, .expr > expr, ;
		31 : rel, .expr, ;
		32 : rel, .expr < expr, or
		33 : rel, .expr <= expr, or
		34 : rel, .expr >= expr, or
		35 : rel, .expr > expr, or
		36 : rel, .expr, or
		37 : rel, .expr < expr, and
		38 : rel, .expr <= expr, and
		39 : rel, .expr >= expr, and
		40 : rel, .expr > expr, and
		41 : rel, .expr, and
		42 : rel, .expr < expr, eq
		43 : rel, .expr <= expr, eq
		44 : rel, .expr >= expr, eq
		45 : rel, .expr > expr, eq
		46 : rel, .expr, eq
		47 : rel, .expr < expr, neq
		48 : rel, .expr <= expr, neq
		49 : rel, .expr >= expr, neq
		50 : rel, .expr > expr, neq
		51 : rel, .expr, neq
		52 : expr, .expr + term, <
		53 : expr, .expr - term, <
		54 : expr, .term, <
		55 : expr, .expr + term, <=
		56 : expr, .expr - term, <=
		57 : expr, .term, <=
		58 : expr, .expr + term, >=
		59 : expr, .expr - term, >=
		60 : expr, .term, >=
		61 : expr, .expr + term, >
		62 : expr, .expr - term, >
		63 : expr, .term, >
		64 : expr, .expr + term, ;
		65 : expr, .expr - term, ;
		66 : expr, .term, ;
		67 : expr, .expr + term, or
		68 : expr, .expr - term, or
		69 : expr, .term, or
		70 : expr, .expr + term, and
		71 : expr, .expr - term, and
		72 : expr, .term, and
		73 : expr, .expr + term, eq
		74 : expr, .expr - term, eq
		75 : expr, .term, eq
		76 : expr, .expr + term, neq
		77 : expr, .expr - term, neq
		78 : expr, .term, neq
		79 : expr, .expr + term, +
		80 : expr, .expr - term, +
		81 : expr, .term, +
		82 : expr, .expr + term, -
		83 : expr, .expr - term, -
		84 : expr, .term, -
		85 : term, .term * unary, <
		86 : term, .term / unary, <
		87 : term, .term mod unary, <
		88 : term, .unary, <
		89 : term, .term * unary, <=
		90 : term, .term / unary, <=
		91 : term, .term mod unary, <=
		92 : term, .unary, <=
		93 : term, .term * unary, >=
		94 : term, .term / unary, >=
		95 : term, .term mod unary, >=
		96 : term, .unary, >=
		97 : term, .term * unary, >
		98 : term, .term / unary, >
		99 : term, .term mod unary, >
		100 : term, .unary, >
		101 : term, .term * unary, ;
		102 : term, .term / unary, ;
		103 : term, .term mod unary, ;
		104 : term, .unary, ;
		105 : term, .term * unary, or
		106 : term, .term / unary, or
		107 : term, .term mod unary, or
		108 : term, .unary, or
		109 : term, .term * unary, and
		110 : term, .term / unary, and
		111 : term, .term mod unary, and
		112 : term, .unary, and
		113 : term, .term * unary, eq
		114 : term, .term / unary, eq
		115 : term, .term mod unary, eq
		116 : term, .unary, eq
		117 : term, .term * unary, neq
		118 : term, .term / unary, neq
		119 : term, .term mod unary, neq
		120 : term, .unary, neq
		121 : term, .term * unary, +
		122 : term, .term / unary, +
		123 : term, .term mod unary, +
		124 : term, .unary, +
		125 : term, .term * unary, -
		126 : term, .term / unary, -
		127 : term, .term mod unary, -
		128 : term, .unary, -
		129 : term, .term * unary, *
		130 : term, .term / unary, *
		131 : term, .term mod unary, *
		132 : term, .unary, *
		133 : term, .term * unary, /
		134 : term, .term / unary, /
		135 : term, .term mod unary, /
		136 : term, .unary, /
		137 : term, .term * unary, mod
		138 : term, .term / unary, mod
		139 : term, .term mod unary, mod
		140 : term, .unary, mod
		141 : unary, .! unary, <
		142 : unary, .- unary, <
		143 : unary, .factor, <
		144 : unary, .! unary, <=
		145 : unary, .- unary, <=
		146 : unary, .factor, <=
		147 : unary, .! unary, >=
		148 : unary, .- unary, >=
		149 : unary, .factor, >=
		150 : unary, .! unary, >
		151 : unary, .- unary, >
		152 : unary, .factor, >
		153 : unary, .! unary, ;
		154 : unary, .- unary, ;
		155 : unary, .factor, ;
		156 : unary, .! unary, or
		157 : unary, .- unary, or
		158 : unary, .factor, or
		159 : unary, .! unary, and
		160 : unary, .- unary, and
		161 : unary, .factor, and
		162 : unary, .! unary, eq
		163 : unary, .- unary, eq
		164 : unary, .factor, eq
		165 : unary, .! unary, neq
		166 : unary, .- unary, neq
		167 : unary, .factor, neq
		168 : unary, .! unary, +
		169 : unary, .- unary, +
		170 : unary, .factor, +
		171 : unary, .! unary, -
		172 : unary, .- unary, -
		173 : unary, .factor, -
		174 : unary, .! unary, *
		175 : unary, .- unary, *
		176 : unary, .factor, *
		177 : unary, .! unary, /
		178 : unary, .- unary, /
		179 : unary, .factor, /
		180 : unary, .! unary, mod
		181 : unary, .- unary, mod
		182 : unary, .factor, mod
		183 : factor, .( bool ), <
		184 : factor, .loc, <
		185 : factor, .id ( args ), <
		186 : factor, .num, <
		187 : factor, .real, <
		188 : factor, .true, <
		189 : factor, .false, <
		190 : factor, .( bool ), <=
		191 : factor, .loc, <=
		192 : factor, .id ( args ), <=
		193 : factor, .num, <=
		194 : factor, .real, <=
		195 : factor, .true, <=
		196 : factor, .false, <=
		197 : factor, .( bool ), >=
		198 : factor, .loc, >=
		199 : factor, .id ( args ), >=
		200 : factor, .num, >=
		201 : factor, .real, >=
		202 : factor, .true, >=
		203 : factor, .false, >=
		204 : factor, .( bool ), >
		205 : factor, .loc, >
		206 : factor, .id ( args ), >
		207 : factor, .num, >
		208 : factor, .real, >
		209 : factor, .true, >
		210 : factor, .false, >
		211 : factor, .( bool ), ;
		212 : factor, .loc, ;
		213 : factor, .id ( args ), ;
		214 : factor, .num, ;
		215 : factor, .real, ;
		216 : factor, .true, ;
		217 : factor, .false, ;
		218 : factor, .( bool ), or
		219 : factor, .loc, or
		220 : factor, .id ( args ), or
		221 : factor, .num, or
		222 : factor, .real, or
		223 : factor, .true, or
		224 : factor, .false, or
		225 : factor, .( bool ), and
		226 : factor, .loc, and
		227 : factor, .id ( args ), and
		228 : factor, .num, and
		229 : factor, .real, and
		230 : factor, .true, and
		231 : factor, .false, and
		232 : factor, .( bool ), eq
		233 : factor, .loc, eq
		234 : factor, .id ( args ), eq
		235 : factor, .num, eq
		236 : factor, .real, eq
		237 : factor, .true, eq
		238 : factor, .false, eq
		239 : factor, .( bool ), neq
		240 : factor, .loc, neq
		241 : factor, .id ( args ), neq
		242 : factor, .num, neq
		243 : factor, .real, neq
		244 : factor, .true, neq
		245 : factor, .false, neq
		246 : factor, .( bool ), +
		247 : factor, .loc, +
		248 : factor, .id ( args ), +
		249 : factor, .num, +
		250 : factor, .real, +
		251 : factor, .true, +
		252 : factor, .false, +
		253 : factor, .( bool ), -
		254 : factor, .loc, -
		255 : factor, .id ( args ), -
		256 : factor, .num, -
		257 : factor, .real, -
		258 : factor, .true, -
		259 : factor, .false, -
		260 : factor, .( bool ), *
		261 : factor, .loc, *
		262 : factor, .id ( args ), *
		263 : factor, .num, *
		264 : factor, .real, *
		265 : factor, .true, *
		266 : factor, .false, *
		267 : factor, .( bool ), /
		268 : factor, .loc, /
		269 : factor, .id ( args ), /
		270 : factor, .num, /
		271 : factor, .real, /
		272 : factor, .true, /
		273 : factor, .false, /
		274 : factor, .( bool ), mod
		275 : factor, .loc, mod
		276 : factor, .id ( args ), mod
		277 : factor, .num, mod
		278 : factor, .real, mod
		279 : factor, .true, mod
		280 : factor, .false, mod
		281 : loc, .loc [ bool ], <
		282 : loc, .id, <
		283 : loc, .loc [ bool ], <=
		284 : loc, .id, <=
		285 : loc, .loc [ bool ], >=
		286 : loc, .id, >=
		287 : loc, .loc [ bool ], >
		288 : loc, .id, >
		289 : loc, .loc [ bool ], ;
		290 : loc, .id, ;
		291 : loc, .loc [ bool ], or
		292 : loc, .id, or
		293 : loc, .loc [ bool ], and
		294 : loc, .id, and
		295 : loc, .loc [ bool ], eq
		296 : loc, .id, eq
		297 : loc, .loc [ bool ], neq
		298 : loc, .id, neq
		299 : loc, .loc [ bool ], +
		300 : loc, .id, +
		301 : loc, .loc [ bool ], -
		302 : loc, .id, -
		303 : loc, .loc [ bool ], *
		304 : loc, .id, *
		305 : loc, .loc [ bool ], /
		306 : loc, .id, /
		307 : loc, .loc [ bool ], mod
		308 : loc, .id, mod
		309 : loc, .loc [ bool ], [
		310 : loc, .id, [
	[482] 
		0 : block, { decls .stmts }, while
		1 : block, { decls .stmts }, else
		2 : decls, decls .decl, [
		3 : decls, decls .decl, id
		4 : decls, decls .decl, if
		5 : decls, decls .decl, while
		6 : decls, decls .decl, do
		7 : decls, decls .decl, return
		8 : decls, decls .decl, {
		9 : decls, decls .decl, }
		10 : decls, decls .decl, basic
		11 : stmts, .stmts stmt, }
		12 : stmts, ., }
		13 : decl, .type id ;, [
		14 : decl, .type id ;, id
		15 : decl, .type id ;, if
		16 : decl, .type id ;, while
		17 : decl, .type id ;, do
		18 : decl, .type id ;, return
		19 : decl, .type id ;, {
		20 : decl, .type id ;, }
		21 : decl, .type id ;, basic
		22 : stmts, .stmts stmt, [
		23 : stmts, .stmts stmt, id
		24 : stmts, .stmts stmt, if
		25 : stmts, .stmts stmt, while
		26 : stmts, .stmts stmt, do
		27 : stmts, .stmts stmt, return
		28 : stmts, .stmts stmt, {
		29 : stmts, .stmts stmt, else
		30 : stmts, ., [
		31 : stmts, ., id
		32 : stmts, ., if
		33 : stmts, ., while
		34 : stmts, ., do
		35 : stmts, ., return
		36 : stmts, ., {
		37 : stmts, ., else
		38 : type, .type [ num ], id
		39 : type, .basic, id
		40 : type, .type [ num ], [
		41 : type, .basic, [
	[483] 
		0 : stmt, if ( .bool ) M stmt, while
		1 : stmt, if ( .bool ) M stmt else M stmt, while
		2 : stmt, if ( .bool ) M stmt, else
		3 : stmt, if ( .bool ) M stmt else M stmt, else
		4 : bool, .bool or join, )
		5 : bool, .join, )
		6 : bool, .bool or join, or
		7 : bool, .join, or
		8 : join, .join and equality, )
		9 : join, .equality, )
		10 : join, .join and equality, or
		11 : join, .equality, or
		12 : join, .join and equality, and
		13 : join, .equality, and
		14 : equality, .equality eq rel, )
		15 : equality, .equality neq rel, )
		16 : equality, .rel, )
		17 : equality, .equality eq rel, or
		18 : equality, .equality neq rel, or
		19 : equality, .rel, or
		20 : equality, .equality eq rel, and
		21 : equality, .equality neq rel, and
		22 : equality, .rel, and
		23 : equality, .equality eq rel, eq
		24 : equality, .equality neq rel, eq
		25 : equality, .rel, eq
		26 : equality, .equality eq rel, neq
		27 : equality, .equality neq rel, neq
		28 : equality, .rel, neq
		29 : rel, .expr < expr, )
		30 : rel, .expr <= expr, )
		31 : rel, .expr >= expr, )
		32 : rel, .expr > expr, )
		33 : rel, .expr, )
		34 : rel, .expr < expr, or
		35 : rel, .expr <= expr, or
		36 : rel, .expr >= expr, or
		37 : rel, .expr > expr, or
		38 : rel, .expr, or
		39 : rel, .expr < expr, and
		40 : rel, .expr <= expr, and
		41 : rel, .expr >= expr, and
		42 : rel, .expr > expr, and
		43 : rel, .expr, and
		44 : rel, .expr < expr, eq
		45 : rel, .expr <= expr, eq
		46 : rel, .expr >= expr, eq
		47 : rel, .expr > expr, eq
		48 : rel, .expr, eq
		49 : rel, .expr < expr, neq
		50 : rel, .expr <= expr, neq
		51 : rel, .expr >= expr, neq
		52 : rel, .expr > expr, neq
		53 : rel, .expr, neq
		54 : expr, .expr + term, <
		55 : expr, .expr - term, <
		56 : expr, .term, <
		57 : expr, .expr + term, <=
		58 : expr, .expr - term, <=
		59 : expr, .term, <=
		60 : expr, .expr + term, >=
		61 : expr, .expr - term, >=
		62 : expr, .term, >=
		63 : expr, .expr + term, >
		64 : expr, .expr - term, >
		65 : expr, .term, >
		66 : expr, .expr + term, )
		67 : expr, .expr - term, )
		68 : expr, .term, )
		69 : expr, .expr + term, or
		70 : expr, .expr - term, or
		71 : expr, .term, or
		72 : expr, .expr + term, and
		73 : expr, .expr - term, and
		74 : expr, .term, and
		75 : expr, .expr + term, eq
		76 : expr, .expr - term, eq
		77 : expr, .term, eq
		78 : expr, .expr + term, neq
		79 : expr, .expr - term, neq
		80 : expr, .term, neq
		81 : expr, .expr + term, +
		82 : expr, .expr - term, +
		83 : expr, .term, +
		84 : expr, .expr + term, -
		85 : expr, .expr - term, -
		86 : expr, .term, -
		87 : term, .term * unary, <
		88 : term, .term / unary, <
		89 : term, .term mod unary, <
		90 : term, .unary, <
		91 : term, .term * unary, <=
		92 : term, .term / unary, <=
		93 : term, .term mod unary, <=
		94 : term, .unary, <=
		95 : term, .term * unary, >=
		96 : term, .term / unary, >=
		97 : term, .term mod unary, >=
		98 : term, .unary, >=
		99 : term, .term * unary, >
		100 : term, .term / unary, >
		101 : term, .term mod unary, >
		102 : term, .unary, >
		103 : term, .term * unary, )
		104 : term, .term / unary, )
		105 : term, .term mod unary, )
		106 : term, .unary, )
		107 : term, .term * unary, or
		108 : term, .term / unary, or
		109 : term, .term mod unary, or
		110 : term, .unary, or
		111 : term, .term * unary, and
		112 : term, .term / unary, and
		113 : term, .term mod unary, and
		114 : term, .unary, and
		115 : term, .term * unary, eq
		116 : term, .term / unary, eq
		117 : term, .term mod unary, eq
		118 : term, .unary, eq
		119 : term, .term * unary, neq
		120 : term, .term / unary, neq
		121 : term, .term mod unary, neq
		122 : term, .unary, neq
		123 : term, .term * unary, +
		124 : term, .term / unary, +
		125 : term, .term mod unary, +
		126 : term, .unary, +
		127 : term, .term * unary, -
		128 : term, .term / unary, -
		129 : term, .term mod unary, -
		130 : term, .unary, -
		131 : term, .term * unary, *
		132 : term, .term / unary, *
		133 : term, .term mod unary, *
		134 : term, .unary, *
		135 : term, .term * unary, /
		136 : term, .term / unary, /
		137 : term, .term mod unary, /
		138 : term, .unary, /
		139 : term, .term * unary, mod
		140 : term, .term / unary, mod
		141 : term, .term mod unary, mod
		142 : term, .unary, mod
		143 : unary, .! unary, <
		144 : unary, .- unary, <
		145 : unary, .factor, <
		146 : unary, .! unary, <=
		147 : unary, .- unary, <=
		148 : unary, .factor, <=
		149 : unary, .! unary, >=
		150 : unary, .- unary, >=
		151 : unary, .factor, >=
		152 : unary, .! unary, >
		153 : unary, .- unary, >
		154 : unary, .factor, >
		155 : unary, .! unary, )
		156 : unary, .- unary, )
		157 : unary, .factor, )
		158 : unary, .! unary, or
		159 : unary, .- unary, or
		160 : unary, .factor, or
		161 : unary, .! unary, and
		162 : unary, .- unary, and
		163 : unary, .factor, and
		164 : unary, .! unary, eq
		165 : unary, .- unary, eq
		166 : unary, .factor, eq
		167 : unary, .! unary, neq
		168 : unary, .- unary, neq
		169 : unary, .factor, neq
		170 : unary, .! unary, +
		171 : unary, .- unary, +
		172 : unary, .factor, +
		173 : unary, .! unary, -
		174 : unary, .- unary, -
		175 : unary, .factor, -
		176 : unary, .! unary, *
		177 : unary, .- unary, *
		178 : unary, .factor, *
		179 : unary, .! unary, /
		180 : unary, .- unary, /
		181 : unary, .factor, /
		182 : unary, .! unary, mod
		183 : unary, .- unary, mod
		184 : unary, .factor, mod
		185 : factor, .( bool ), <
		186 : factor, .loc, <
		187 : factor, .id ( args ), <
		188 : factor, .num, <
		189 : factor, .real, <
		190 : factor, .true, <
		191 : factor, .false, <
		192 : factor, .( bool ), <=
		193 : factor, .loc, <=
		194 : factor, .id ( args ), <=
		195 : factor, .num, <=
		196 : factor, .real, <=
		197 : factor, .true, <=
		198 : factor, .false, <=
		199 : factor, .( bool ), >=
		200 : factor, .loc, >=
		201 : factor, .id ( args ), >=
		202 : factor, .num, >=
		203 : factor, .real, >=
		204 : factor, .true, >=
		205 : factor, .false, >=
		206 : factor, .( bool ), >
		207 : factor, .loc, >
		208 : factor, .id ( args ), >
		209 : factor, .num, >
		210 : factor, .real, >
		211 : factor, .true, >
		212 : factor, .false, >
		213 : factor, .( bool ), )
		214 : factor, .loc, )
		215 : factor, .id ( args ), )
		216 : factor, .num, )
		217 : factor, .real, )
		218 : factor, .true, )
		219 : factor, .false, )
		220 : factor, .( bool ), or
		221 : factor, .loc, or
		222 : factor, .id ( args ), or
		223 : factor, .num, or
		224 : factor, .real, or
		225 : factor, .true, or
		226 : factor, .false, or
		227 : factor, .( bool ), and
		228 : factor, .loc, and
		229 : factor, .id ( args ), and
		230 : factor, .num, and
		231 : factor, .real, and
		232 : factor, .true, and
		233 : factor, .false, and
		234 : factor, .( bool ), eq
		235 : factor, .loc, eq
		236 : factor, .id ( args ), eq
		237 : factor, .num, eq
		238 : factor, .real, eq
		239 : factor, .true, eq
		240 : factor, .false, eq
		241 : factor, .( bool ), neq
		242 : factor, .loc, neq
		243 : factor, .id ( args ), neq
		244 : factor, .num, neq
		245 : factor, .real, neq
		246 : factor, .true, neq
		247 : factor, .false, neq
		248 : factor, .( bool ), +
		249 : factor, .loc, +
		250 : factor, .id ( args ), +
		251 : factor, .num, +
		252 : factor, .real, +
		253 : factor, .true, +
		254 : factor, .false, +
		255 : factor, .( bool ), -
		256 : factor, .loc, -
		257 : factor, .id ( args ), -
		258 : factor, .num, -
		259 : factor, .real, -
		260 : factor, .true, -
		261 : factor, .false, -
		262 : factor, .( bool ), *
		263 : factor, .loc, *
		264 : factor, .id ( args ), *
		265 : factor, .num, *
		266 : factor, .real, *
		267 : factor, .true, *
		268 : factor, .false, *
		269 : factor, .( bool ), /
		270 : factor, .loc, /
		271 : factor, .id ( args ), /
		272 : factor, .num, /
		273 : factor, .real, /
		274 : factor, .true, /
		275 : factor, .false, /
		276 : factor, .( bool ), mod
		277 : factor, .loc, mod
		278 : factor, .id ( args ), mod
		279 : factor, .num, mod
		280 : factor, .real, mod
		281 : factor, .true, mod
		282 : factor, .false, mod
		283 : loc, .loc [ bool ], <
		284 : loc, .id, <
		285 : loc, .loc [ bool ], <=
		286 : loc, .id, <=
		287 : loc, .loc [ bool ], >=
		288 : loc, .id, >=
		289 : loc, .loc [ bool ], >
		290 : loc, .id, >
		291 : loc, .loc [ bool ], )
		292 : loc, .id, )
		293 : loc, .loc [ bool ], or
		294 : loc, .id, or
		295 : loc, .loc [ bool ], and
		296 : loc, .id, and
		297 : loc, .loc [ bool ], eq
		298 : loc, .id, eq
		299 : loc, .loc [ bool ], neq
		300 : loc, .id, neq
		301 : loc, .loc [ bool ], +
		302 : loc, .id, +
		303 : loc, .loc [ bool ], -
		304 : loc, .id, -
		305 : loc, .loc [ bool ], *
		306 : loc, .id, *
		307 : loc, .loc [ bool ], /
		308 : loc, .id, /
		309 : loc, .loc [ bool ], mod
		310 : loc, .id, mod
		311 : loc, .loc [ bool ], [
		312 : loc, .id, [
	[484] 
		0 : stmt, while N .( bool ) M stmt, while
		1 : stmt, while N .( bool ) M stmt, else
	[485] 
		0 : stmt, do N .stmt while ( bool ) M ;, while
		1 : stmt, do N .stmt while ( bool ) M ;, else
		2 : stmt, .loc = bool ;, while
		3 : stmt, .if ( bool ) M stmt, while
		4 : stmt, .if ( bool ) M stmt else M stmt, while
		5 : stmt, .while N ( bool ) M stmt, while
		6 : stmt, .do N stmt while ( bool ) M ;, while
		7 : stmt, .return arg ;, while
		8 : stmt, .block, while
		9 : loc, .loc [ bool ], =
		10 : loc, .id, =
		11 : block, .{ decls stmts }, while
		12 : loc, .loc [ bool ], [
		13 : loc, .id, [
	[486] 
		0 : stmt, return arg .;, while
		1 : stmt, return arg .;, else
	[487] 
		0 : stmt, while N ( bool ) M stmt ., while
	[488] 
		0 : stmt, do N stmt while ( bool ) .M ;, while
		1 : M, ., [
		2 : M, ., id
		3 : M, ., if
		4 : M, ., while
		5 : M, ., do
		6 : M, ., return
		7 : M, ., {
		8 : M, ., ;
	[489] 
		0 : loc, loc [ bool ] ., )
		1 : loc, loc [ bool ] ., ,
		2 : loc, loc [ bool ] ., or
		3 : loc, loc [ bool ] ., and
		4 : loc, loc [ bool ] ., eq
		5 : loc, loc [ bool ] ., neq
		6 : loc, loc [ bool ] ., +
		7 : loc, loc [ bool ] ., -
		8 : loc, loc [ bool ] ., *
		9 : loc, loc [ bool ] ., /
		10 : loc, loc [ bool ] ., mod
		11 : loc, loc [ bool ] ., [
	[490] 
		0 : factor, id ( args ) ., )
		1 : factor, id ( args ) ., ,
		2 : factor, id ( args ) ., or
		3 : factor, id ( args ) ., and
		4 : factor, id ( args ) ., eq
		5 : factor, id ( args ) ., neq
		6 : factor, id ( args ) ., +
		7 : factor, id ( args ) ., -
		8 : factor, id ( args ) ., *
		9 : factor, id ( args ) ., /
		10 : factor, id ( args ) ., mod
	[491] 
		0 : stmt, if ( bool ) M .stmt, }
		1 : stmt, if ( bool ) M .stmt else M stmt, }
		2 : stmt, if ( bool ) M .stmt, else
		3 : stmt, if ( bool ) M .stmt else M stmt, else
		4 : stmt, if ( bool ) M .stmt, [
		5 : stmt, if ( bool ) M .stmt else M stmt, [
		6 : stmt, if ( bool ) M .stmt, id
		7 : stmt, if ( bool ) M .stmt else M stmt, id
		8 : stmt, if ( bool ) M .stmt, if
		9 : stmt, if ( bool ) M .stmt else M stmt, if
		10 : stmt, if ( bool ) M .stmt, while
		11 : stmt, if ( bool ) M .stmt else M stmt, while
		12 : stmt, if ( bool ) M .stmt, do
		13 : stmt, if ( bool ) M .stmt else M stmt, do
		14 : stmt, if ( bool ) M .stmt, return
		15 : stmt, if ( bool ) M .stmt else M stmt, return
		16 : stmt, if ( bool ) M .stmt, {
		17 : stmt, if ( bool ) M .stmt else M stmt, {
		18 : stmt, .loc = bool ;, }
		19 : stmt, .if ( bool ) M stmt, }
		20 : stmt, .if ( bool ) M stmt else M stmt, }
		21 : stmt, .while N ( bool ) M stmt, }
		22 : stmt, .do N stmt while ( bool ) M ;, }
		23 : stmt, .return arg ;, }
		24 : stmt, .block, }
		25 : stmt, .loc = bool ;, else
		26 : stmt, .if ( bool ) M stmt, else
		27 : stmt, .if ( bool ) M stmt else M stmt, else
		28 : stmt, .while N ( bool ) M stmt, else
		29 : stmt, .do N stmt while ( bool ) M ;, else
		30 : stmt, .return arg ;, else
		31 : stmt, .block, else
		32 : stmt, .loc = bool ;, [
		33 : stmt, .if ( bool ) M stmt, [
		34 : stmt, .if ( bool ) M stmt else M stmt, [
		35 : stmt, .while N ( bool ) M stmt, [
		36 : stmt, .do N stmt while ( bool ) M ;, [
		37 : stmt, .return arg ;, [
		38 : stmt, .block, [
		39 : stmt, .loc = bool ;, id
		40 : stmt, .if ( bool ) M stmt, id
		41 : stmt, .if ( bool ) M stmt else M stmt, id
		42 : stmt, .while N ( bool ) M stmt, id
		43 : stmt, .do N stmt while ( bool ) M ;, id
		44 : stmt, .return arg ;, id
		45 : stmt, .block, id
		46 : stmt, .loc = bool ;, if
		47 : stmt, .if ( bool ) M stmt, if
		48 : stmt, .if ( bool ) M stmt else M stmt, if
		49 : stmt, .while N ( bool ) M stmt, if
		50 : stmt, .do N stmt while ( bool ) M ;, if
		51 : stmt, .return arg ;, if
		52 : stmt, .block, if
		53 : stmt, .loc = bool ;, while
		54 : stmt, .if ( bool ) M stmt, while
		55 : stmt, .if ( bool ) M stmt else M stmt, while
		56 : stmt, .while N ( bool ) M stmt, while
		57 : stmt, .do N stmt while ( bool ) M ;, while
		58 : stmt, .return arg ;, while
		59 : stmt, .block, while
		60 : stmt, .loc = bool ;, do
		61 : stmt, .if ( bool ) M stmt, do
		62 : stmt, .if ( bool ) M stmt else M stmt, do
		63 : stmt, .while N ( bool ) M stmt, do
		64 : stmt, .do N stmt while ( bool ) M ;, do
		65 : stmt, .return arg ;, do
		66 : stmt, .block, do
		67 : stmt, .loc = bool ;, return
		68 : stmt, .if ( bool ) M stmt, return
		69 : stmt, .if ( bool ) M stmt else M stmt, return
		70 : stmt, .while N ( bool ) M stmt, return
		71 : stmt, .do N stmt while ( bool ) M ;, return
		72 : stmt, .return arg ;, return
		73 : stmt, .block, return
		74 : stmt, .loc = bool ;, {
		75 : stmt, .if ( bool ) M stmt, {
		76 : stmt, .if ( bool ) M stmt else M stmt, {
		77 : stmt, .while N ( bool ) M stmt, {
		78 : stmt, .do N stmt while ( bool ) M ;, {
		79 : stmt, .return arg ;, {
		80 : stmt, .block, {
		81 : loc, .loc [ bool ], =
		82 : loc, .id, =
		83 : block, .{ decls stmts }, }
		84 : block, .{ decls stmts }, else
		85 : block, .{ decls stmts }, [
		86 : block, .{ decls stmts }, id
		87 : block, .{ decls stmts }, if
		88 : block, .{ decls stmts }, while
		89 : block, .{ decls stmts }, do
		90 : block, .{ decls stmts }, return
		91 : block, .{ decls stmts }, {
		92 : loc, .loc [ bool ], [
		93 : loc, .id, [
	[492] 
		0 : stmt, while N ( bool ) .M stmt, }
		1 : stmt, while N ( bool ) .M stmt, else
		2 : stmt, while N ( bool ) .M stmt, [
		3 : stmt, while N ( bool ) .M stmt, id
		4 : stmt, while N ( bool ) .M stmt, if
		5 : stmt, while N ( bool ) .M stmt, while
		6 : stmt, while N ( bool ) .M stmt, do
		7 : stmt, while N ( bool ) .M stmt, return
		8 : stmt, while N ( bool ) .M stmt, {
		9 : M, ., [
		10 : M, ., id
		11 : M, ., if
		12 : M, ., while
		13 : M, ., do
		14 : M, ., return
		15 : M, ., {
		16 : M, ., ;
	[493] 
		0 : stmt, do N stmt while ( .bool ) M ;, }
		1 : stmt, do N stmt while ( .bool ) M ;, else
		2 : stmt, do N stmt while ( .bool ) M ;, [
		3 : stmt, do N stmt while ( .bool ) M ;, id
		4 : stmt, do N stmt while ( .bool ) M ;, if
		5 : stmt, do N stmt while ( .bool ) M ;, while
		6 : stmt, do N stmt while ( .bool ) M ;, do
		7 : stmt, do N stmt while ( .bool ) M ;, return
		8 : stmt, do N stmt while ( .bool ) M ;, {
		9 : bool, .bool or join, )
		10 : bool, .join, )
		11 : bool, .bool or join, or
		12 : bool, .join, or
		13 : join, .join and equality, )
		14 : join, .equality, )
		15 : join, .join and equality, or
		16 : join, .equality, or
		17 : join, .join and equality, and
		18 : join, .equality, and
		19 : equality, .equality eq rel, )
		20 : equality, .equality neq rel, )
		21 : equality, .rel, )
		22 : equality, .equality eq rel, or
		23 : equality, .equality neq rel, or
		24 : equality, .rel, or
		25 : equality, .equality eq rel, and
		26 : equality, .equality neq rel, and
		27 : equality, .rel, and
		28 : equality, .equality eq rel, eq
		29 : equality, .equality neq rel, eq
		30 : equality, .rel, eq
		31 : equality, .equality eq rel, neq
		32 : equality, .equality neq rel, neq
		33 : equality, .rel, neq
		34 : rel, .expr < expr, )
		35 : rel, .expr <= expr, )
		36 : rel, .expr >= expr, )
		37 : rel, .expr > expr, )
		38 : rel, .expr, )
		39 : rel, .expr < expr, or
		40 : rel, .expr <= expr, or
		41 : rel, .expr >= expr, or
		42 : rel, .expr > expr, or
		43 : rel, .expr, or
		44 : rel, .expr < expr, and
		45 : rel, .expr <= expr, and
		46 : rel, .expr >= expr, and
		47 : rel, .expr > expr, and
		48 : rel, .expr, and
		49 : rel, .expr < expr, eq
		50 : rel, .expr <= expr, eq
		51 : rel, .expr >= expr, eq
		52 : rel, .expr > expr, eq
		53 : rel, .expr, eq
		54 : rel, .expr < expr, neq
		55 : rel, .expr <= expr, neq
		56 : rel, .expr >= expr, neq
		57 : rel, .expr > expr, neq
		58 : rel, .expr, neq
		59 : expr, .expr + term, <
		60 : expr, .expr - term, <
		61 : expr, .term, <
		62 : expr, .expr + term, <=
		63 : expr, .expr - term, <=
		64 : expr, .term, <=
		65 : expr, .expr + term, >=
		66 : expr, .expr - term, >=
		67 : expr, .term, >=
		68 : expr, .expr + term, >
		69 : expr, .expr - term, >
		70 : expr, .term, >
		71 : expr, .expr + term, )
		72 : expr, .expr - term, )
		73 : expr, .term, )
		74 : expr, .expr + term, or
		75 : expr, .expr - term, or
		76 : expr, .term, or
		77 : expr, .expr + term, and
		78 : expr, .expr - term, and
		79 : expr, .term, and
		80 : expr, .expr + term, eq
		81 : expr, .expr - term, eq
		82 : expr, .term, eq
		83 : expr, .expr + term, neq
		84 : expr, .expr - term, neq
		85 : expr, .term, neq
		86 : expr, .expr + term, +
		87 : expr, .expr - term, +
		88 : expr, .term, +
		89 : expr, .expr + term, -
		90 : expr, .expr - term, -
		91 : expr, .term, -
		92 : term, .term * unary, <
		93 : term, .term / unary, <
		94 : term, .term mod unary, <
		95 : term, .unary, <
		96 : term, .term * unary, <=
		97 : term, .term / unary, <=
		98 : term, .term mod unary, <=
		99 : term, .unary, <=
		100 : term, .term * unary, >=
		101 : term, .term / unary, >=
		102 : term, .term mod unary, >=
		103 : term, .unary, >=
		104 : term, .term * unary, >
		105 : term, .term / unary, >
		106 : term, .term mod unary, >
		107 : term, .unary, >
		108 : term, .term * unary, )
		109 : term, .term / unary, )
		110 : term, .term mod unary, )
		111 : term, .unary, )
		112 : term, .term * unary, or
		113 : term, .term / unary, or
		114 : term, .term mod unary, or
		115 : term, .unary, or
		116 : term, .term * unary, and
		117 : term, .term / unary, and
		118 : term, .term mod unary, and
		119 : term, .unary, and
		120 : term, .term * unary, eq
		121 : term, .term / unary, eq
		122 : term, .term mod unary, eq
		123 : term, .unary, eq
		124 : term, .term * unary, neq
		125 : term, .term / unary, neq
		126 : term, .term mod unary, neq
		127 : term, .unary, neq
		128 : term, .term * unary, +
		129 : term, .term / unary, +
		130 : term, .term mod unary, +
		131 : term, .unary, +
		132 : term, .term * unary, -
		133 : term, .term / unary, -
		134 : term, .term mod unary, -
		135 : term, .unary, -
		136 : term, .term * unary, *
		137 : term, .term / unary, *
		138 : term, .term mod unary, *
		139 : term, .unary, *
		140 : term, .term * unary, /
		141 : term, .term / unary, /
		142 : term, .term mod unary, /
		143 : term, .unary, /
		144 : term, .term * unary, mod
		145 : term, .term / unary, mod
		146 : term, .term mod unary, mod
		147 : term, .unary, mod
		148 : unary, .! unary, <
		149 : unary, .- unary, <
		150 : unary, .factor, <
		151 : unary, .! unary, <=
		152 : unary, .- unary, <=
		153 : unary, .factor, <=
		154 : unary, .! unary, >=
		155 : unary, .- unary, >=
		156 : unary, .factor, >=
		157 : unary, .! unary, >
		158 : unary, .- unary, >
		159 : unary, .factor, >
		160 : unary, .! unary, )
		161 : unary, .- unary, )
		162 : unary, .factor, )
		163 : unary, .! unary, or
		164 : unary, .- unary, or
		165 : unary, .factor, or
		166 : unary, .! unary, and
		167 : unary, .- unary, and
		168 : unary, .factor, and
		169 : unary, .! unary, eq
		170 : unary, .- unary, eq
		171 : unary, .factor, eq
		172 : unary, .! unary, neq
		173 : unary, .- unary, neq
		174 : unary, .factor, neq
		175 : unary, .! unary, +
		176 : unary, .- unary, +
		177 : unary, .factor, +
		178 : unary, .! unary, -
		179 : unary, .- unary, -
		180 : unary, .factor, -
		181 : unary, .! unary, *
		182 : unary, .- unary, *
		183 : unary, .factor, *
		184 : unary, .! unary, /
		185 : unary, .- unary, /
		186 : unary, .factor, /
		187 : unary, .! unary, mod
		188 : unary, .- unary, mod
		189 : unary, .factor, mod
		190 : factor, .( bool ), <
		191 : factor, .loc, <
		192 : factor, .id ( args ), <
		193 : factor, .num, <
		194 : factor, .real, <
		195 : factor, .true, <
		196 : factor, .false, <
		197 : factor, .( bool ), <=
		198 : factor, .loc, <=
		199 : factor, .id ( args ), <=
		200 : factor, .num, <=
		201 : factor, .real, <=
		202 : factor, .true, <=
		203 : factor, .false, <=
		204 : factor, .( bool ), >=
		205 : factor, .loc, >=
		206 : factor, .id ( args ), >=
		207 : factor, .num, >=
		208 : factor, .real, >=
		209 : factor, .true, >=
		210 : factor, .false, >=
		211 : factor, .( bool ), >
		212 : factor, .loc, >
		213 : factor, .id ( args ), >
		214 : factor, .num, >
		215 : factor, .real, >
		216 : factor, .true, >
		217 : factor, .false, >
		218 : factor, .( bool ), )
		219 : factor, .loc, )
		220 : factor, .id ( args ), )
		221 : factor, .num, )
		222 : factor, .real, )
		223 : factor, .true, )
		224 : factor, .false, )
		225 : factor, .( bool ), or
		226 : factor, .loc, or
		227 : factor, .id ( args ), or
		228 : factor, .num, or
		229 : factor, .real, or
		230 : factor, .true, or
		231 : factor, .false, or
		232 : factor, .( bool ), and
		233 : factor, .loc, and
		234 : factor, .id ( args ), and
		235 : factor, .num, and
		236 : factor, .real, and
		237 : factor, .true, and
		238 : factor, .false, and
		239 : factor, .( bool ), eq
		240 : factor, .loc, eq
		241 : factor, .id ( args ), eq
		242 : factor, .num, eq
		243 : factor, .real, eq
		244 : factor, .true, eq
		245 : factor, .false, eq
		246 : factor, .( bool ), neq
		247 : factor, .loc, neq
		248 : factor, .id ( args ), neq
		249 : factor, .num, neq
		250 : factor, .real, neq
		251 : factor, .true, neq
		252 : factor, .false, neq
		253 : factor, .( bool ), +
		254 : factor, .loc, +
		255 : factor, .id ( args ), +
		256 : factor, .num, +
		257 : factor, .real, +
		258 : factor, .true, +
		259 : factor, .false, +
		260 : factor, .( bool ), -
		261 : factor, .loc, -
		262 : factor, .id ( args ), -
		263 : factor, .num, -
		264 : factor, .real, -
		265 : factor, .true, -
		266 : factor, .false, -
		267 : factor, .( bool ), *
		268 : factor, .loc, *
		269 : factor, .id ( args ), *
		270 : factor, .num, *
		271 : factor, .real, *
		272 : factor, .true, *
		273 : factor, .false, *
		274 : factor, .( bool ), /
		275 : factor, .loc, /
		276 : factor, .id ( args ), /
		277 : factor, .num, /
		278 : factor, .real, /
		279 : factor, .true, /
		280 : factor, .false, /
		281 : factor, .( bool ), mod
		282 : factor, .loc, mod
		283 : factor, .id ( args ), mod
		284 : factor, .num, mod
		285 : factor, .real, mod
		286 : factor, .true, mod
		287 : factor, .false, mod
		288 : loc, .loc [ bool ], <
		289 : loc, .id, <
		290 : loc, .loc [ bool ], <=
		291 : loc, .id, <=
		292 : loc, .loc [ bool ], >=
		293 : loc, .id, >=
		294 : loc, .loc [ bool ], >
		295 : loc, .id, >
		296 : loc, .loc [ bool ], )
		297 : loc, .id, )
		298 : loc, .loc [ bool ], or
		299 : loc, .id, or
		300 : loc, .loc [ bool ], and
		301 : loc, .id, and
		302 : loc, .loc [ bool ], eq
		303 : loc, .id, eq
		304 : loc, .loc [ bool ], neq
		305 : loc, .id, neq
		306 : loc, .loc [ bool ], +
		307 : loc, .id, +
		308 : loc, .loc [ bool ], -
		309 : loc, .id, -
		310 : loc, .loc [ bool ], *
		311 : loc, .id, *
		312 : loc, .loc [ bool ], /
		313 : loc, .id, /
		314 : loc, .loc [ bool ], mod
		315 : loc, .id, mod
		316 : loc, .loc [ bool ], [
		317 : loc, .id, [
	[494] 
		0 : stmt, if ( bool ) M stmt else M .stmt, while
		1 : stmt, .loc = bool ;, while
		2 : stmt, .if ( bool ) M stmt, while
		3 : stmt, .if ( bool ) M stmt else M stmt, while
		4 : stmt, .while N ( bool ) M stmt, while
		5 : stmt, .do N stmt while ( bool ) M ;, while
		6 : stmt, .return arg ;, while
		7 : stmt, .block, while
		8 : loc, .loc [ bool ], =
		9 : loc, .id, =
		10 : block, .{ decls stmts }, while
		11 : loc, .loc [ bool ], [
		12 : loc, .id, [
	[495] 
		0 : stmt, loc = bool .;, while
		1 : stmt, loc = bool .;, else
		2 : bool, bool .or join, ;
		3 : bool, bool .or join, or
	[496] 
		0 : block, { decls stmts .}, while
		1 : block, { decls stmts .}, else
		2 : stmts, stmts .stmt, }
		3 : stmts, stmts .stmt, [
		4 : stmts, stmts .stmt, id
		5 : stmts, stmts .stmt, if
		6 : stmts, stmts .stmt, while
		7 : stmts, stmts .stmt, do
		8 : stmts, stmts .stmt, return
		9 : stmts, stmts .stmt, {
		10 : stmts, stmts .stmt, else
		11 : stmt, .loc = bool ;, }
		12 : stmt, .if ( bool ) M stmt, }
		13 : stmt, .if ( bool ) M stmt else M stmt, }
		14 : stmt, .while N ( bool ) M stmt, }
		15 : stmt, .do N stmt while ( bool ) M ;, }
		16 : stmt, .return arg ;, }
		17 : stmt, .block, }
		18 : stmt, .loc = bool ;, [
		19 : stmt, .if ( bool ) M stmt, [
		20 : stmt, .if ( bool ) M stmt else M stmt, [
		21 : stmt, .while N ( bool ) M stmt, [
		22 : stmt, .do N stmt while ( bool ) M ;, [
		23 : stmt, .return arg ;, [
		24 : stmt, .block, [
		25 : stmt, .loc = bool ;, id
		26 : stmt, .if ( bool ) M stmt, id
		27 : stmt, .if ( bool ) M stmt else M stmt, id
		28 : stmt, .while N ( bool ) M stmt, id
		29 : stmt, .do N stmt while ( bool ) M ;, id
		30 : stmt, .return arg ;, id
		31 : stmt, .block, id
		32 : stmt, .loc = bool ;, if
		33 : stmt, .if ( bool ) M stmt, if
		34 : stmt, .if ( bool ) M stmt else M stmt, if
		35 : stmt, .while N ( bool ) M stmt, if
		36 : stmt, .do N stmt while ( bool ) M ;, if
		37 : stmt, .return arg ;, if
		38 : stmt, .block, if
		39 : stmt, .loc = bool ;, while
		40 : stmt, .if ( bool ) M stmt, while
		41 : stmt, .if ( bool ) M stmt else M stmt, while
		42 : stmt, .while N ( bool ) M stmt, while
		43 : stmt, .do N stmt while ( bool ) M ;, while
		44 : stmt, .return arg ;, while
		45 : stmt, .block, while
		46 : stmt, .loc = bool ;, do
		47 : stmt, .if ( bool ) M stmt, do
		48 : stmt, .if ( bool ) M stmt else M stmt, do
		49 : stmt, .while N ( bool ) M stmt, do
		50 : stmt, .do N stmt while ( bool ) M ;, do
		51 : stmt, .return arg ;, do
		52 : stmt, .block, do
		53 : stmt, .loc = bool ;, return
		54 : stmt, .if ( bool ) M stmt, return
		55 : stmt, .if ( bool ) M stmt else M stmt, return
		56 : stmt, .while N ( bool ) M stmt, return
		57 : stmt, .do N stmt while ( bool ) M ;, return
		58 : stmt, .return arg ;, return
		59 : stmt, .block, return
		60 : stmt, .loc = bool ;, {
		61 : stmt, .if ( bool ) M stmt, {
		62 : stmt, .if ( bool ) M stmt else M stmt, {
		63 : stmt, .while N ( bool ) M stmt, {
		64 : stmt, .do N stmt while ( bool ) M ;, {
		65 : stmt, .return arg ;, {
		66 : stmt, .block, {
		67 : stmt, .loc = bool ;, else
		68 : stmt, .if ( bool ) M stmt, else
		69 : stmt, .if ( bool ) M stmt else M stmt, else
		70 : stmt, .while N ( bool ) M stmt, else
		71 : stmt, .do N stmt while ( bool ) M ;, else
		72 : stmt, .return arg ;, else
		73 : stmt, .block, else
		74 : loc, .loc [ bool ], =
		75 : loc, .id, =
		76 : block, .{ decls stmts }, }
		77 : block, .{ decls stmts }, [
		78 : block, .{ decls stmts }, id
		79 : block, .{ decls stmts }, if
		80 : block, .{ decls stmts }, while
		81 : block, .{ decls stmts }, do
		82 : block, .{ decls stmts }, return
		83 : block, .{ decls stmts }, {
		84 : block, .{ decls stmts }, else
		85 : loc, .loc [ bool ], [
		86 : loc, .id, [
	[497] 
		0 : stmt, if ( bool .) M stmt, while
		1 : stmt, if ( bool .) M stmt else M stmt, while
		2 : stmt, if ( bool .) M stmt, else
		3 : stmt, if ( bool .) M stmt else M stmt, else
		4 : bool, bool .or join, )
		5 : bool, bool .or join, or
	[498] 
		0 : stmt, while N ( .bool ) M stmt, while
		1 : stmt, while N ( .bool ) M stmt, else
		2 : bool, .bool or join, )
		3 : bool, .join, )
		4 : bool, .bool or join, or
		5 : bool, .join, or
		6 : join, .join and equality, )
		7 : join, .equality, )
		8 : join, .join and equality, or
		9 : join, .equality, or
		10 : join, .join and equality, and
		11 : join, .equality, and
		12 : equality, .equality eq rel, )
		13 : equality, .equality neq rel, )
		14 : equality, .rel, )
		15 : equality, .equality eq rel, or
		16 : equality, .equality neq rel, or
		17 : equality, .rel, or
		18 : equality, .equality eq rel, and
		19 : equality, .equality neq rel, and
		20 : equality, .rel, and
		21 : equality, .equality eq rel, eq
		22 : equality, .equality neq rel, eq
		23 : equality, .rel, eq
		24 : equality, .equality eq rel, neq
		25 : equality, .equality neq rel, neq
		26 : equality, .rel, neq
		27 : rel, .expr < expr, )
		28 : rel, .expr <= expr, )
		29 : rel, .expr >= expr, )
		30 : rel, .expr > expr, )
		31 : rel, .expr, )
		32 : rel, .expr < expr, or
		33 : rel, .expr <= expr, or
		34 : rel, .expr >= expr, or
		35 : rel, .expr > expr, or
		36 : rel, .expr, or
		37 : rel, .expr < expr, and
		38 : rel, .expr <= expr, and
		39 : rel, .expr >= expr, and
		40 : rel, .expr > expr, and
		41 : rel, .expr, and
		42 : rel, .expr < expr, eq
		43 : rel, .expr <= expr, eq
		44 : rel, .expr >= expr, eq
		45 : rel, .expr > expr, eq
		46 : rel, .expr, eq
		47 : rel, .expr < expr, neq
		48 : rel, .expr <= expr, neq
		49 : rel, .expr >= expr, neq
		50 : rel, .expr > expr, neq
		51 : rel, .expr, neq
		52 : expr, .expr + term, <
		53 : expr, .expr - term, <
		54 : expr, .term, <
		55 : expr, .expr + term, <=
		56 : expr, .expr - term, <=
		57 : expr, .term, <=
		58 : expr, .expr + term, >=
		59 : expr, .expr - term, >=
		60 : expr, .term, >=
		61 : expr, .expr + term, >
		62 : expr, .expr - term, >
		63 : expr, .term, >
		64 : expr, .expr + term, )
		65 : expr, .expr - term, )
		66 : expr, .term, )
		67 : expr, .expr + term, or
		68 : expr, .expr - term, or
		69 : expr, .term, or
		70 : expr, .expr + term, and
		71 : expr, .expr - term, and
		72 : expr, .term, and
		73 : expr, .expr + term, eq
		74 : expr, .expr - term, eq
		75 : expr, .term, eq
		76 : expr, .expr + term, neq
		77 : expr, .expr - term, neq
		78 : expr, .term, neq
		79 : expr, .expr + term, +
		80 : expr, .expr - term, +
		81 : expr, .term, +
		82 : expr, .expr + term, -
		83 : expr, .expr - term, -
		84 : expr, .term, -
		85 : term, .term * unary, <
		86 : term, .term / unary, <
		87 : term, .term mod unary, <
		88 : term, .unary, <
		89 : term, .term * unary, <=
		90 : term, .term / unary, <=
		91 : term, .term mod unary, <=
		92 : term, .unary, <=
		93 : term, .term * unary, >=
		94 : term, .term / unary, >=
		95 : term, .term mod unary, >=
		96 : term, .unary, >=
		97 : term, .term * unary, >
		98 : term, .term / unary, >
		99 : term, .term mod unary, >
		100 : term, .unary, >
		101 : term, .term * unary, )
		102 : term, .term / unary, )
		103 : term, .term mod unary, )
		104 : term, .unary, )
		105 : term, .term * unary, or
		106 : term, .term / unary, or
		107 : term, .term mod unary, or
		108 : term, .unary, or
		109 : term, .term * unary, and
		110 : term, .term / unary, and
		111 : term, .term mod unary, and
		112 : term, .unary, and
		113 : term, .term * unary, eq
		114 : term, .term / unary, eq
		115 : term, .term mod unary, eq
		116 : term, .unary, eq
		117 : term, .term * unary, neq
		118 : term, .term / unary, neq
		119 : term, .term mod unary, neq
		120 : term, .unary, neq
		121 : term, .term * unary, +
		122 : term, .term / unary, +
		123 : term, .term mod unary, +
		124 : term, .unary, +
		125 : term, .term * unary, -
		126 : term, .term / unary, -
		127 : term, .term mod unary, -
		128 : term, .unary, -
		129 : term, .term * unary, *
		130 : term, .term / unary, *
		131 : term, .term mod unary, *
		132 : term, .unary, *
		133 : term, .term * unary, /
		134 : term, .term / unary, /
		135 : term, .term mod unary, /
		136 : term, .unary, /
		137 : term, .term * unary, mod
		138 : term, .term / unary, mod
		139 : term, .term mod unary, mod
		140 : term, .unary, mod
		141 : unary, .! unary, <
		142 : unary, .- unary, <
		143 : unary, .factor, <
		144 : unary, .! unary, <=
		145 : unary, .- unary, <=
		146 : unary, .factor, <=
		147 : unary, .! unary, >=
		148 : unary, .- unary, >=
		149 : unary, .factor, >=
		150 : unary, .! unary, >
		151 : unary, .- unary, >
		152 : unary, .factor, >
		153 : unary, .! unary, )
		154 : unary, .- unary, )
		155 : unary, .factor, )
		156 : unary, .! unary, or
		157 : unary, .- unary, or
		158 : unary, .factor, or
		159 : unary, .! unary, and
		160 : unary, .- unary, and
		161 : unary, .factor, and
		162 : unary, .! unary, eq
		163 : unary, .- unary, eq
		164 : unary, .factor, eq
		165 : unary, .! unary, neq
		166 : unary, .- unary, neq
		167 : unary, .factor, neq
		168 : unary, .! unary, +
		169 : unary, .- unary, +
		170 : unary, .factor, +
		171 : unary, .! unary, -
		172 : unary, .- unary, -
		173 : unary, .factor, -
		174 : unary, .! unary, *
		175 : unary, .- unary, *
		176 : unary, .factor, *
		177 : unary, .! unary, /
		178 : unary, .- unary, /
		179 : unary, .factor, /
		180 : unary, .! unary, mod
		181 : unary, .- unary, mod
		182 : unary, .factor, mod
		183 : factor, .( bool ), <
		184 : factor, .loc, <
		185 : factor, .id ( args ), <
		186 : factor, .num, <
		187 : factor, .real, <
		188 : factor, .true, <
		189 : factor, .false, <
		190 : factor, .( bool ), <=
		191 : factor, .loc, <=
		192 : factor, .id ( args ), <=
		193 : factor, .num, <=
		194 : factor, .real, <=
		195 : factor, .true, <=
		196 : factor, .false, <=
		197 : factor, .( bool ), >=
		198 : factor, .loc, >=
		199 : factor, .id ( args ), >=
		200 : factor, .num, >=
		201 : factor, .real, >=
		202 : factor, .true, >=
		203 : factor, .false, >=
		204 : factor, .( bool ), >
		205 : factor, .loc, >
		206 : factor, .id ( args ), >
		207 : factor, .num, >
		208 : factor, .real, >
		209 : factor, .true, >
		210 : factor, .false, >
		211 : factor, .( bool ), )
		212 : factor, .loc, )
		213 : factor, .id ( args ), )
		214 : factor, .num, )
		215 : factor, .real, )
		216 : factor, .true, )
		217 : factor, .false, )
		218 : factor, .( bool ), or
		219 : factor, .loc, or
		220 : factor, .id ( args ), or
		221 : factor, .num, or
		222 : factor, .real, or
		223 : factor, .true, or
		224 : factor, .false, or
		225 : factor, .( bool ), and
		226 : factor, .loc, and
		227 : factor, .id ( args ), and
		228 : factor, .num, and
		229 : factor, .real, and
		230 : factor, .true, and
		231 : factor, .false, and
		232 : factor, .( bool ), eq
		233 : factor, .loc, eq
		234 : factor, .id ( args ), eq
		235 : factor, .num, eq
		236 : factor, .real, eq
		237 : factor, .true, eq
		238 : factor, .false, eq
		239 : factor, .( bool ), neq
		240 : factor, .loc, neq
		241 : factor, .id ( args ), neq
		242 : factor, .num, neq
		243 : factor, .real, neq
		244 : factor, .true, neq
		245 : factor, .false, neq
		246 : factor, .( bool ), +
		247 : factor, .loc, +
		248 : factor, .id ( args ), +
		249 : factor, .num, +
		250 : factor, .real, +
		251 : factor, .true, +
		252 : factor, .false, +
		253 : factor, .( bool ), -
		254 : factor, .loc, -
		255 : factor, .id ( args ), -
		256 : factor, .num, -
		257 : factor, .real, -
		258 : factor, .true, -
		259 : factor, .false, -
		260 : factor, .( bool ), *
		261 : factor, .loc, *
		262 : factor, .id ( args ), *
		263 : factor, .num, *
		264 : factor, .real, *
		265 : factor, .true, *
		266 : factor, .false, *
		267 : factor, .( bool ), /
		268 : factor, .loc, /
		269 : factor, .id ( args ), /
		270 : factor, .num, /
		271 : factor, .real, /
		272 : factor, .true, /
		273 : factor, .false, /
		274 : factor, .( bool ), mod
		275 : factor, .loc, mod
		276 : factor, .id ( args ), mod
		277 : factor, .num, mod
		278 : factor, .real, mod
		279 : factor, .true, mod
		280 : factor, .false, mod
		281 : loc, .loc [ bool ], <
		282 : loc, .id, <
		283 : loc, .loc [ bool ], <=
		284 : loc, .id, <=
		285 : loc, .loc [ bool ], >=
		286 : loc, .id, >=
		287 : loc, .loc [ bool ], >
		288 : loc, .id, >
		289 : loc, .loc [ bool ], )
		290 : loc, .id, )
		291 : loc, .loc [ bool ], or
		292 : loc, .id, or
		293 : loc, .loc [ bool ], and
		294 : loc, .id, and
		295 : loc, .loc [ bool ], eq
		296 : loc, .id, eq
		297 : loc, .loc [ bool ], neq
		298 : loc, .id, neq
		299 : loc, .loc [ bool ], +
		300 : loc, .id, +
		301 : loc, .loc [ bool ], -
		302 : loc, .id, -
		303 : loc, .loc [ bool ], *
		304 : loc, .id, *
		305 : loc, .loc [ bool ], /
		306 : loc, .id, /
		307 : loc, .loc [ bool ], mod
		308 : loc, .id, mod
		309 : loc, .loc [ bool ], [
		310 : loc, .id, [
	[499] 
		0 : stmt, do N stmt .while ( bool ) M ;, while
		1 : stmt, do N stmt .while ( bool ) M ;, else
	[500] 
		0 : stmt, return arg ; ., while
		1 : stmt, return arg ; ., else
	[501] 
		0 : stmt, do N stmt while ( bool ) M .;, while
	[502] 
		0 : stmt, if ( bool ) M stmt ., }
		1 : stmt, if ( bool ) M stmt .else M stmt, }
		2 : stmt, if ( bool ) M stmt ., else
		3 : stmt, if ( bool ) M stmt .else M stmt, else
		4 : stmt, if ( bool ) M stmt ., [
		5 : stmt, if ( bool ) M stmt .else M stmt, [
		6 : stmt, if ( bool ) M stmt ., id
		7 : stmt, if ( bool ) M stmt .else M stmt, id
		8 : stmt, if ( bool ) M stmt ., if
		9 : stmt, if ( bool ) M stmt .else M stmt, if
		10 : stmt, if ( bool ) M stmt ., while
		11 : stmt, if ( bool ) M stmt .else M stmt, while
		12 : stmt, if ( bool ) M stmt ., do
		13 : stmt, if ( bool ) M stmt .else M stmt, do
		14 : stmt, if ( bool ) M stmt ., return
		15 : stmt, if ( bool ) M stmt .else M stmt, return
		16 : stmt, if ( bool ) M stmt ., {
		17 : stmt, if ( bool ) M stmt .else M stmt, {
	[503] 
		0 : stmt, while N ( bool ) M .stmt, }
		1 : stmt, while N ( bool ) M .stmt, else
		2 : stmt, while N ( bool ) M .stmt, [
		3 : stmt, while N ( bool ) M .stmt, id
		4 : stmt, while N ( bool ) M .stmt, if
		5 : stmt, while N ( bool ) M .stmt, while
		6 : stmt, while N ( bool ) M .stmt, do
		7 : stmt, while N ( bool ) M .stmt, return
		8 : stmt, while N ( bool ) M .stmt, {
		9 : stmt, .loc = bool ;, }
		10 : stmt, .if ( bool ) M stmt, }
		11 : stmt, .if ( bool ) M stmt else M stmt, }
		12 : stmt, .while N ( bool ) M stmt, }
		13 : stmt, .do N stmt while ( bool ) M ;, }
		14 : stmt, .return arg ;, }
		15 : stmt, .block, }
		16 : stmt, .loc = bool ;, else
		17 : stmt, .if ( bool ) M stmt, else
		18 : stmt, .if ( bool ) M stmt else M stmt, else
		19 : stmt, .while N ( bool ) M stmt, else
		20 : stmt, .do N stmt while ( bool ) M ;, else
		21 : stmt, .return arg ;, else
		22 : stmt, .block, else
		23 : stmt, .loc = bool ;, [
		24 : stmt, .if ( bool ) M stmt, [
		25 : stmt, .if ( bool ) M stmt else M stmt, [
		26 : stmt, .while N ( bool ) M stmt, [
		27 : stmt, .do N stmt while ( bool ) M ;, [
		28 : stmt, .return arg ;, [
		29 : stmt, .block, [
		30 : stmt, .loc = bool ;, id
		31 : stmt, .if ( bool ) M stmt, id
		32 : stmt, .if ( bool ) M stmt else M stmt, id
		33 : stmt, .while N ( bool ) M stmt, id
		34 : stmt, .do N stmt while ( bool ) M ;, id
		35 : stmt, .return arg ;, id
		36 : stmt, .block, id
		37 : stmt, .loc = bool ;, if
		38 : stmt, .if ( bool ) M stmt, if
		39 : stmt, .if ( bool ) M stmt else M stmt, if
		40 : stmt, .while N ( bool ) M stmt, if
		41 : stmt, .do N stmt while ( bool ) M ;, if
		42 : stmt, .return arg ;, if
		43 : stmt, .block, if
		44 : stmt, .loc = bool ;, while
		45 : stmt, .if ( bool ) M stmt, while
		46 : stmt, .if ( bool ) M stmt else M stmt, while
		47 : stmt, .while N ( bool ) M stmt, while
		48 : stmt, .do N stmt while ( bool ) M ;, while
		49 : stmt, .return arg ;, while
		50 : stmt, .block, while
		51 : stmt, .loc = bool ;, do
		52 : stmt, .if ( bool ) M stmt, do
		53 : stmt, .if ( bool ) M stmt else M stmt, do
		54 : stmt, .while N ( bool ) M stmt, do
		55 : stmt, .do N stmt while ( bool ) M ;, do
		56 : stmt, .return arg ;, do
		57 : stmt, .block, do
		58 : stmt, .loc = bool ;, return
		59 : stmt, .if ( bool ) M stmt, return
		60 : stmt, .if ( bool ) M stmt else M stmt, return
		61 : stmt, .while N ( bool ) M stmt, return
		62 : stmt, .do N stmt while ( bool ) M ;, return
		63 : stmt, .return arg ;, return
		64 : stmt, .block, return
		65 : stmt, .loc = bool ;, {
		66 : stmt, .if ( bool ) M stmt, {
		67 : stmt, .if ( bool ) M stmt else M stmt, {
		68 : stmt, .while N ( bool ) M stmt, {
		69 : stmt, .do N stmt while ( bool ) M ;, {
		70 : stmt, .return arg ;, {
		71 : stmt, .block, {
		72 : loc, .loc [ bool ], =
		73 : loc, .id, =
		74 : block, .{ decls stmts }, }
		75 : block, .{ decls stmts }, else
		76 : block, .{ decls stmts }, [
		77 : block, .{ decls stmts }, id
		78 : block, .{ decls stmts }, if
		79 : block, .{ decls stmts }, while
		80 : block, .{ decls stmts }, do
		81 : block, .{ decls stmts }, return
		82 : block, .{ decls stmts }, {
		83 : loc, .loc [ bool ], [
		84 : loc, .id, [
	[504] 
		0 : stmt, do N stmt while ( bool .) M ;, }
		1 : stmt, do N stmt while ( bool .) M ;, else
		2 : stmt, do N stmt while ( bool .) M ;, [
		3 : stmt, do N stmt while ( bool .) M ;, id
		4 : stmt, do N stmt while ( bool .) M ;, if
		5 : stmt, do N stmt while ( bool .) M ;, while
		6 : stmt, do N stmt while ( bool .) M ;, do
		7 : stmt, do N stmt while ( bool .) M ;, return
		8 : stmt, do N stmt while ( bool .) M ;, {
		9 : bool, bool .or join, )
		10 : bool, bool .or join, or
	[505] 
		0 : stmt, if ( bool ) M stmt else M stmt ., while
	[506] 
		0 : stmt, loc = bool ; ., while
		1 : stmt, loc = bool ; ., else
	[507] 
		0 : block, { decls stmts } ., while
		1 : block, { decls stmts } ., else
	[508] 
		0 : stmt, if ( bool ) .M stmt, while
		1 : stmt, if ( bool ) .M stmt else M stmt, while
		2 : stmt, if ( bool ) .M stmt, else
		3 : stmt, if ( bool ) .M stmt else M stmt, else
		4 : M, ., [
		5 : M, ., id
		6 : M, ., if
		7 : M, ., while
		8 : M, ., do
		9 : M, ., return
		10 : M, ., {
		11 : M, ., ;
	[509] 
		0 : stmt, while N ( bool .) M stmt, while
		1 : stmt, while N ( bool .) M stmt, else
		2 : bool, bool .or join, )
		3 : bool, bool .or join, or
	[510] 
		0 : stmt, do N stmt while .( bool ) M ;, while
		1 : stmt, do N stmt while .( bool ) M ;, else
	[511] 
		0 : stmt, do N stmt while ( bool ) M ; ., while
	[512] 
		0 : stmt, if ( bool ) M stmt else .M stmt, }
		1 : stmt, if ( bool ) M stmt else .M stmt, else
		2 : stmt, if ( bool ) M stmt else .M stmt, [
		3 : stmt, if ( bool ) M stmt else .M stmt, id
		4 : stmt, if ( bool ) M stmt else .M stmt, if
		5 : stmt, if ( bool ) M stmt else .M stmt, while
		6 : stmt, if ( bool ) M stmt else .M stmt, do
		7 : stmt, if ( bool ) M stmt else .M stmt, return
		8 : stmt, if ( bool ) M stmt else .M stmt, {
		9 : M, ., [
		10 : M, ., id
		11 : M, ., if
		12 : M, ., while
		13 : M, ., do
		14 : M, ., return
		15 : M, ., {
		16 : M, ., ;
	[513] 
		0 : stmt, while N ( bool ) M stmt ., }
		1 : stmt, while N ( bool ) M stmt ., else
		2 : stmt, while N ( bool ) M stmt ., [
		3 : stmt, while N ( bool ) M stmt ., id
		4 : stmt, while N ( bool ) M stmt ., if
		5 : stmt, while N ( bool ) M stmt ., while
		6 : stmt, while N ( bool ) M stmt ., do
		7 : stmt, while N ( bool ) M stmt ., return
		8 : stmt, while N ( bool ) M stmt ., {
	[514] 
		0 : stmt, do N stmt while ( bool ) .M ;, }
		1 : stmt, do N stmt while ( bool ) .M ;, else
		2 : stmt, do N stmt while ( bool ) .M ;, [
		3 : stmt, do N stmt while ( bool ) .M ;, id
		4 : stmt, do N stmt while ( bool ) .M ;, if
		5 : stmt, do N stmt while ( bool ) .M ;, while
		6 : stmt, do N stmt while ( bool ) .M ;, do
		7 : stmt, do N stmt while ( bool ) .M ;, return
		8 : stmt, do N stmt while ( bool ) .M ;, {
		9 : M, ., [
		10 : M, ., id
		11 : M, ., if
		12 : M, ., while
		13 : M, ., do
		14 : M, ., return
		15 : M, ., {
		16 : M, ., ;
	[515] 
		0 : stmt, if ( bool ) M .stmt, while
		1 : stmt, if ( bool ) M .stmt else M stmt, while
		2 : stmt, if ( bool ) M .stmt, else
		3 : stmt, if ( bool ) M .stmt else M stmt, else
		4 : stmt, .loc = bool ;, while
		5 : stmt, .if ( bool ) M stmt, while
		6 : stmt, .if ( bool ) M stmt else M stmt, while
		7 : stmt, .while N ( bool ) M stmt, while
		8 : stmt, .do N stmt while ( bool ) M ;, while
		9 : stmt, .return arg ;, while
		10 : stmt, .block, while
		11 : stmt, .loc = bool ;, else
		12 : stmt, .if ( bool ) M stmt, else
		13 : stmt, .if ( bool ) M stmt else M stmt, else
		14 : stmt, .while N ( bool ) M stmt, else
		15 : stmt, .do N stmt while ( bool ) M ;, else
		16 : stmt, .return arg ;, else
		17 : stmt, .block, else
		18 : loc, .loc [ bool ], =
		19 : loc, .id, =
		20 : block, .{ decls stmts }, while
		21 : block, .{ decls stmts }, else
		22 : loc, .loc [ bool ], [
		23 : loc, .id, [
	[516] 
		0 : stmt, while N ( bool ) .M stmt, while
		1 : stmt, while N ( bool ) .M stmt, else
		2 : M, ., [
		3 : M, ., id
		4 : M, ., if
		5 : M, ., while
		6 : M, ., do
		7 : M, ., return
		8 : M, ., {
		9 : M, ., ;
	[517] 
		0 : stmt, do N stmt while ( .bool ) M ;, while
		1 : stmt, do N stmt while ( .bool ) M ;, else
		2 : bool, .bool or join, )
		3 : bool, .join, )
		4 : bool, .bool or join, or
		5 : bool, .join, or
		6 : join, .join and equality, )
		7 : join, .equality, )
		8 : join, .join and equality, or
		9 : join, .equality, or
		10 : join, .join and equality, and
		11 : join, .equality, and
		12 : equality, .equality eq rel, )
		13 : equality, .equality neq rel, )
		14 : equality, .rel, )
		15 : equality, .equality eq rel, or
		16 : equality, .equality neq rel, or
		17 : equality, .rel, or
		18 : equality, .equality eq rel, and
		19 : equality, .equality neq rel, and
		20 : equality, .rel, and
		21 : equality, .equality eq rel, eq
		22 : equality, .equality neq rel, eq
		23 : equality, .rel, eq
		24 : equality, .equality eq rel, neq
		25 : equality, .equality neq rel, neq
		26 : equality, .rel, neq
		27 : rel, .expr < expr, )
		28 : rel, .expr <= expr, )
		29 : rel, .expr >= expr, )
		30 : rel, .expr > expr, )
		31 : rel, .expr, )
		32 : rel, .expr < expr, or
		33 : rel, .expr <= expr, or
		34 : rel, .expr >= expr, or
		35 : rel, .expr > expr, or
		36 : rel, .expr, or
		37 : rel, .expr < expr, and
		38 : rel, .expr <= expr, and
		39 : rel, .expr >= expr, and
		40 : rel, .expr > expr, and
		41 : rel, .expr, and
		42 : rel, .expr < expr, eq
		43 : rel, .expr <= expr, eq
		44 : rel, .expr >= expr, eq
		45 : rel, .expr > expr, eq
		46 : rel, .expr, eq
		47 : rel, .expr < expr, neq
		48 : rel, .expr <= expr, neq
		49 : rel, .expr >= expr, neq
		50 : rel, .expr > expr, neq
		51 : rel, .expr, neq
		52 : expr, .expr + term, <
		53 : expr, .expr - term, <
		54 : expr, .term, <
		55 : expr, .expr + term, <=
		56 : expr, .expr - term, <=
		57 : expr, .term, <=
		58 : expr, .expr + term, >=
		59 : expr, .expr - term, >=
		60 : expr, .term, >=
		61 : expr, .expr + term, >
		62 : expr, .expr - term, >
		63 : expr, .term, >
		64 : expr, .expr + term, )
		65 : expr, .expr - term, )
		66 : expr, .term, )
		67 : expr, .expr + term, or
		68 : expr, .expr - term, or
		69 : expr, .term, or
		70 : expr, .expr + term, and
		71 : expr, .expr - term, and
		72 : expr, .term, and
		73 : expr, .expr + term, eq
		74 : expr, .expr - term, eq
		75 : expr, .term, eq
		76 : expr, .expr + term, neq
		77 : expr, .expr - term, neq
		78 : expr, .term, neq
		79 : expr, .expr + term, +
		80 : expr, .expr - term, +
		81 : expr, .term, +
		82 : expr, .expr + term, -
		83 : expr, .expr - term, -
		84 : expr, .term, -
		85 : term, .term * unary, <
		86 : term, .term / unary, <
		87 : term, .term mod unary, <
		88 : term, .unary, <
		89 : term, .term * unary, <=
		90 : term, .term / unary, <=
		91 : term, .term mod unary, <=
		92 : term, .unary, <=
		93 : term, .term * unary, >=
		94 : term, .term / unary, >=
		95 : term, .term mod unary, >=
		96 : term, .unary, >=
		97 : term, .term * unary, >
		98 : term, .term / unary, >
		99 : term, .term mod unary, >
		100 : term, .unary, >
		101 : term, .term * unary, )
		102 : term, .term / unary, )
		103 : term, .term mod unary, )
		104 : term, .unary, )
		105 : term, .term * unary, or
		106 : term, .term / unary, or
		107 : term, .term mod unary, or
		108 : term, .unary, or
		109 : term, .term * unary, and
		110 : term, .term / unary, and
		111 : term, .term mod unary, and
		112 : term, .unary, and
		113 : term, .term * unary, eq
		114 : term, .term / unary, eq
		115 : term, .term mod unary, eq
		116 : term, .unary, eq
		117 : term, .term * unary, neq
		118 : term, .term / unary, neq
		119 : term, .term mod unary, neq
		120 : term, .unary, neq
		121 : term, .term * unary, +
		122 : term, .term / unary, +
		123 : term, .term mod unary, +
		124 : term, .unary, +
		125 : term, .term * unary, -
		126 : term, .term / unary, -
		127 : term, .term mod unary, -
		128 : term, .unary, -
		129 : term, .term * unary, *
		130 : term, .term / unary, *
		131 : term, .term mod unary, *
		132 : term, .unary, *
		133 : term, .term * unary, /
		134 : term, .term / unary, /
		135 : term, .term mod unary, /
		136 : term, .unary, /
		137 : term, .term * unary, mod
		138 : term, .term / unary, mod
		139 : term, .term mod unary, mod
		140 : term, .unary, mod
		141 : unary, .! unary, <
		142 : unary, .- unary, <
		143 : unary, .factor, <
		144 : unary, .! unary, <=
		145 : unary, .- unary, <=
		146 : unary, .factor, <=
		147 : unary, .! unary, >=
		148 : unary, .- unary, >=
		149 : unary, .factor, >=
		150 : unary, .! unary, >
		151 : unary, .- unary, >
		152 : unary, .factor, >
		153 : unary, .! unary, )
		154 : unary, .- unary, )
		155 : unary, .factor, )
		156 : unary, .! unary, or
		157 : unary, .- unary, or
		158 : unary, .factor, or
		159 : unary, .! unary, and
		160 : unary, .- unary, and
		161 : unary, .factor, and
		162 : unary, .! unary, eq
		163 : unary, .- unary, eq
		164 : unary, .factor, eq
		165 : unary, .! unary, neq
		166 : unary, .- unary, neq
		167 : unary, .factor, neq
		168 : unary, .! unary, +
		169 : unary, .- unary, +
		170 : unary, .factor, +
		171 : unary, .! unary, -
		172 : unary, .- unary, -
		173 : unary, .factor, -
		174 : unary, .! unary, *
		175 : unary, .- unary, *
		176 : unary, .factor, *
		177 : unary, .! unary, /
		178 : unary, .- unary, /
		179 : unary, .factor, /
		180 : unary, .! unary, mod
		181 : unary, .- unary, mod
		182 : unary, .factor, mod
		183 : factor, .( bool ), <
		184 : factor, .loc, <
		185 : factor, .id ( args ), <
		186 : factor, .num, <
		187 : factor, .real, <
		188 : factor, .true, <
		189 : factor, .false, <
		190 : factor, .( bool ), <=
		191 : factor, .loc, <=
		192 : factor, .id ( args ), <=
		193 : factor, .num, <=
		194 : factor, .real, <=
		195 : factor, .true, <=
		196 : factor, .false, <=
		197 : factor, .( bool ), >=
		198 : factor, .loc, >=
		199 : factor, .id ( args ), >=
		200 : factor, .num, >=
		201 : factor, .real, >=
		202 : factor, .true, >=
		203 : factor, .false, >=
		204 : factor, .( bool ), >
		205 : factor, .loc, >
		206 : factor, .id ( args ), >
		207 : factor, .num, >
		208 : factor, .real, >
		209 : factor, .true, >
		210 : factor, .false, >
		211 : factor, .( bool ), )
		212 : factor, .loc, )
		213 : factor, .id ( args ), )
		214 : factor, .num, )
		215 : factor, .real, )
		216 : factor, .true, )
		217 : factor, .false, )
		218 : factor, .( bool ), or
		219 : factor, .loc, or
		220 : factor, .id ( args ), or
		221 : factor, .num, or
		222 : factor, .real, or
		223 : factor, .true, or
		224 : factor, .false, or
		225 : factor, .( bool ), and
		226 : factor, .loc, and
		227 : factor, .id ( args ), and
		228 : factor, .num, and
		229 : factor, .real, and
		230 : factor, .true, and
		231 : factor, .false, and
		232 : factor, .( bool ), eq
		233 : factor, .loc, eq
		234 : factor, .id ( args ), eq
		235 : factor, .num, eq
		236 : factor, .real, eq
		237 : factor, .true, eq
		238 : factor, .false, eq
		239 : factor, .( bool ), neq
		240 : factor, .loc, neq
		241 : factor, .id ( args ), neq
		242 : factor, .num, neq
		243 : factor, .real, neq
		244 : factor, .true, neq
		245 : factor, .false, neq
		246 : factor, .( bool ), +
		247 : factor, .loc, +
		248 : factor, .id ( args ), +
		249 : factor, .num, +
		250 : factor, .real, +
		251 : factor, .true, +
		252 : factor, .false, +
		253 : factor, .( bool ), -
		254 : factor, .loc, -
		255 : factor, .id ( args ), -
		256 : factor, .num, -
		257 : factor, .real, -
		258 : factor, .true, -
		259 : factor, .false, -
		260 : factor, .( bool ), *
		261 : factor, .loc, *
		262 : factor, .id ( args ), *
		263 : factor, .num, *
		264 : factor, .real, *
		265 : factor, .true, *
		266 : factor, .false, *
		267 : factor, .( bool ), /
		268 : factor, .loc, /
		269 : factor, .id ( args ), /
		270 : factor, .num, /
		271 : factor, .real, /
		272 : factor, .true, /
		273 : factor, .false, /
		274 : factor, .( bool ), mod
		275 : factor, .loc, mod
		276 : factor, .id ( args ), mod
		277 : factor, .num, mod
		278 : factor, .real, mod
		279 : factor, .true, mod
		280 : factor, .false, mod
		281 : loc, .loc [ bool ], <
		282 : loc, .id, <
		283 : loc, .loc [ bool ], <=
		284 : loc, .id, <=
		285 : loc, .loc [ bool ], >=
		286 : loc, .id, >=
		287 : loc, .loc [ bool ], >
		288 : loc, .id, >
		289 : loc, .loc [ bool ], )
		290 : loc, .id, )
		291 : loc, .loc [ bool ], or
		292 : loc, .id, or
		293 : loc, .loc [ bool ], and
		294 : loc, .id, and
		295 : loc, .loc [ bool ], eq
		296 : loc, .id, eq
		297 : loc, .loc [ bool ], neq
		298 : loc, .id, neq
		299 : loc, .loc [ bool ], +
		300 : loc, .id, +
		301 : loc, .loc [ bool ], -
		302 : loc, .id, -
		303 : loc, .loc [ bool ], *
		304 : loc, .id, *
		305 : loc, .loc [ bool ], /
		306 : loc, .id, /
		307 : loc, .loc [ bool ], mod
		308 : loc, .id, mod
		309 : loc, .loc [ bool ], [
		310 : loc, .id, [
	[518] 
		0 : stmt, if ( bool ) M stmt else M .stmt, }
		1 : stmt, if ( bool ) M stmt else M .stmt, else
		2 : stmt, if ( bool ) M stmt else M .stmt, [
		3 : stmt, if ( bool ) M stmt else M .stmt, id
		4 : stmt, if ( bool ) M stmt else M .stmt, if
		5 : stmt, if ( bool ) M stmt else M .stmt, while
		6 : stmt, if ( bool ) M stmt else M .stmt, do
		7 : stmt, if ( bool ) M stmt else M .stmt, return
		8 : stmt, if ( bool ) M stmt else M .stmt, {
		9 : stmt, .loc = bool ;, }
		10 : stmt, .if ( bool ) M stmt, }
		11 : stmt, .if ( bool ) M stmt else M stmt, }
		12 : stmt, .while N ( bool ) M stmt, }
		13 : stmt, .do N stmt while ( bool ) M ;, }
		14 : stmt, .return arg ;, }
		15 : stmt, .block, }
		16 : stmt, .loc = bool ;, else
		17 : stmt, .if ( bool ) M stmt, else
		18 : stmt, .if ( bool ) M stmt else M stmt, else
		19 : stmt, .while N ( bool ) M stmt, else
		20 : stmt, .do N stmt while ( bool ) M ;, else
		21 : stmt, .return arg ;, else
		22 : stmt, .block, else
		23 : stmt, .loc = bool ;, [
		24 : stmt, .if ( bool ) M stmt, [
		25 : stmt, .if ( bool ) M stmt else M stmt, [
		26 : stmt, .while N ( bool ) M stmt, [
		27 : stmt, .do N stmt while ( bool ) M ;, [
		28 : stmt, .return arg ;, [
		29 : stmt, .block, [
		30 : stmt, .loc = bool ;, id
		31 : stmt, .if ( bool ) M stmt, id
		32 : stmt, .if ( bool ) M stmt else M stmt, id
		33 : stmt, .while N ( bool ) M stmt, id
		34 : stmt, .do N stmt while ( bool ) M ;, id
		35 : stmt, .return arg ;, id
		36 : stmt, .block, id
		37 : stmt, .loc = bool ;, if
		38 : stmt, .if ( bool ) M stmt, if
		39 : stmt, .if ( bool ) M stmt else M stmt, if
		40 : stmt, .while N ( bool ) M stmt, if
		41 : stmt, .do N stmt while ( bool ) M ;, if
		42 : stmt, .return arg ;, if
		43 : stmt, .block, if
		44 : stmt, .loc = bool ;, while
		45 : stmt, .if ( bool ) M stmt, while
		46 : stmt, .if ( bool ) M stmt else M stmt, while
		47 : stmt, .while N ( bool ) M stmt, while
		48 : stmt, .do N stmt while ( bool ) M ;, while
		49 : stmt, .return arg ;, while
		50 : stmt, .block, while
		51 : stmt, .loc = bool ;, do
		52 : stmt, .if ( bool ) M stmt, do
		53 : stmt, .if ( bool ) M stmt else M stmt, do
		54 : stmt, .while N ( bool ) M stmt, do
		55 : stmt, .do N stmt while ( bool ) M ;, do
		56 : stmt, .return arg ;, do
		57 : stmt, .block, do
		58 : stmt, .loc = bool ;, return
		59 : stmt, .if ( bool ) M stmt, return
		60 : stmt, .if ( bool ) M stmt else M stmt, return
		61 : stmt, .while N ( bool ) M stmt, return
		62 : stmt, .do N stmt while ( bool ) M ;, return
		63 : stmt, .return arg ;, return
		64 : stmt, .block, return
		65 : stmt, .loc = bool ;, {
		66 : stmt, .if ( bool ) M stmt, {
		67 : stmt, .if ( bool ) M stmt else M stmt, {
		68 : stmt, .while N ( bool ) M stmt, {
		69 : stmt, .do N stmt while ( bool ) M ;, {
		70 : stmt, .return arg ;, {
		71 : stmt, .block, {
		72 : loc, .loc [ bool ], =
		73 : loc, .id, =
		74 : block, .{ decls stmts }, }
		75 : block, .{ decls stmts }, else
		76 : block, .{ decls stmts }, [
		77 : block, .{ decls stmts }, id
		78 : block, .{ decls stmts }, if
		79 : block, .{ decls stmts }, while
		80 : block, .{ decls stmts }, do
		81 : block, .{ decls stmts }, return
		82 : block, .{ decls stmts }, {
		83 : loc, .loc [ bool ], [
		84 : loc, .id, [
	[519] 
		0 : stmt, do N stmt while ( bool ) M .;, }
		1 : stmt, do N stmt while ( bool ) M .;, else
		2 : stmt, do N stmt while ( bool ) M .;, [
		3 : stmt, do N stmt while ( bool ) M .;, id
		4 : stmt, do N stmt while ( bool ) M .;, if
		5 : stmt, do N stmt while ( bool ) M .;, while
		6 : stmt, do N stmt while ( bool ) M .;, do
		7 : stmt, do N stmt while ( bool ) M .;, return
		8 : stmt, do N stmt while ( bool ) M .;, {
	[520] 
		0 : stmt, if ( bool ) M stmt ., while
		1 : stmt, if ( bool ) M stmt .else M stmt, while
		2 : stmt, if ( bool ) M stmt ., else
		3 : stmt, if ( bool ) M stmt .else M stmt, else
	[521] 
		0 : stmt, while N ( bool ) M .stmt, while
		1 : stmt, while N ( bool ) M .stmt, else
		2 : stmt, .loc = bool ;, while
		3 : stmt, .if ( bool ) M stmt, while
		4 : stmt, .if ( bool ) M stmt else M stmt, while
		5 : stmt, .while N ( bool ) M stmt, while
		6 : stmt, .do N stmt while ( bool ) M ;, while
		7 : stmt, .return arg ;, while
		8 : stmt, .block, while
		9 : stmt, .loc = bool ;, else
		10 : stmt, .if ( bool ) M stmt, else
		11 : stmt, .if ( bool ) M stmt else M stmt, else
		12 : stmt, .while N ( bool ) M stmt, else
		13 : stmt, .do N stmt while ( bool ) M ;, else
		14 : stmt, .return arg ;, else
		15 : stmt, .block, else
		16 : loc, .loc [ bool ], =
		17 : loc, .id, =
		18 : block, .{ decls stmts }, while
		19 : block, .{ decls stmts }, else
		20 : loc, .loc [ bool ], [
		21 : loc, .id, [
	[522] 
		0 : stmt, do N stmt while ( bool .) M ;, while
		1 : stmt, do N stmt while ( bool .) M ;, else
		2 : bool, bool .or join, )
		3 : bool, bool .or join, or
	[523] 
		0 : stmt, if ( bool ) M stmt else M stmt ., }
		1 : stmt, if ( bool ) M stmt else M stmt ., else
		2 : stmt, if ( bool ) M stmt else M stmt ., [
		3 : stmt, if ( bool ) M stmt else M stmt ., id
		4 : stmt, if ( bool ) M stmt else M stmt ., if
		5 : stmt, if ( bool ) M stmt else M stmt ., while
		6 : stmt, if ( bool ) M stmt else M stmt ., do
		7 : stmt, if ( bool ) M stmt else M stmt ., return
		8 : stmt, if ( bool ) M stmt else M stmt ., {
	[524] 
		0 : stmt, do N stmt while ( bool ) M ; ., }
		1 : stmt, do N stmt while ( bool ) M ; ., else
		2 : stmt, do N stmt while ( bool ) M ; ., [
		3 : stmt, do N stmt while ( bool ) M ; ., id
		4 : stmt, do N stmt while ( bool ) M ; ., if
		5 : stmt, do N stmt while ( bool ) M ; ., while
		6 : stmt, do N stmt while ( bool ) M ; ., do
		7 : stmt, do N stmt while ( bool ) M ; ., return
		8 : stmt, do N stmt while ( bool ) M ; ., {
	[525] 
		0 : stmt, if ( bool ) M stmt else .M stmt, while
		1 : stmt, if ( bool ) M stmt else .M stmt, else
		2 : M, ., [
		3 : M, ., id
		4 : M, ., if
		5 : M, ., while
		6 : M, ., do
		7 : M, ., return
		8 : M, ., {
		9 : M, ., ;
	[526] 
		0 : stmt, while N ( bool ) M stmt ., while
		1 : stmt, while N ( bool ) M stmt ., else
	[527] 
		0 : stmt, do N stmt while ( bool ) .M ;, while
		1 : stmt, do N stmt while ( bool ) .M ;, else
		2 : M, ., [
		3 : M, ., id
		4 : M, ., if
		5 : M, ., while
		6 : M, ., do
		7 : M, ., return
		8 : M, ., {
		9 : M, ., ;
	[528] 
		0 : stmt, if ( bool ) M stmt else M .stmt, while
		1 : stmt, if ( bool ) M stmt else M .stmt, else
		2 : stmt, .loc = bool ;, while
		3 : stmt, .if ( bool ) M stmt, while
		4 : stmt, .if ( bool ) M stmt else M stmt, while
		5 : stmt, .while N ( bool ) M stmt, while
		6 : stmt, .do N stmt while ( bool ) M ;, while
		7 : stmt, .return arg ;, while
		8 : stmt, .block, while
		9 : stmt, .loc = bool ;, else
		10 : stmt, .if ( bool ) M stmt, else
		11 : stmt, .if ( bool ) M stmt else M stmt, else
		12 : stmt, .while N ( bool ) M stmt, else
		13 : stmt, .do N stmt while ( bool ) M ;, else
		14 : stmt, .return arg ;, else
		15 : stmt, .block, else
		16 : loc, .loc [ bool ], =
		17 : loc, .id, =
		18 : block, .{ decls stmts }, while
		19 : block, .{ decls stmts }, else
		20 : loc, .loc [ bool ], [
		21 : loc, .id, [
	[529] 
		0 : stmt, do N stmt while ( bool ) M .;, while
		1 : stmt, do N stmt while ( bool ) M .;, else
	[530] 
		0 : stmt, if ( bool ) M stmt else M stmt ., while
		1 : stmt, if ( bool ) M stmt else M stmt ., else
	[531] 
		0 : stmt, do N stmt while ( bool ) M ; ., while
		1 : stmt, do N stmt while ( bool ) M ; ., else
[states] 
	0 : g, 0, 1, fundefs
	1 : r, 1, 0, $
	2 : g, 0, 2, fundef
	3 : r, 2, 2, $
	4 : r, 2, 2, basic
	5 : s, 0, 3, basic
	6 : g, 1, 4, fundef
	7 : r, 4, 1, $
	8 : r, 4, 1, basic
	9 : s, 1, 3, basic
	10 : s, 3, 5, id
	11 : r, 5, 29, (
	12 : g, 5, 6, F
	13 : s, 6, 7, (
	14 : r, 7, 7, )
	15 : r, 7, 7, ,
	16 : g, 7, 8, iargs
	17 : g, 7, 9, iarg
	18 : r, 9, 6, )
	19 : r, 9, 6, ,
	20 : g, 7, 10, type
	21 : s, 7, 11, basic
	22 : r, 11, 14, id
	23 : r, 11, 14, [
	24 : s, 8, 12, )
	25 : s, 8, 13, ,
	26 : s, 10, 14, id
	27 : r, 14, 8, )
	28 : r, 14, 8, ,
	29 : s, 10, 15, [
	30 : g, 12, 16, block
	31 : r, 16, 4, $
	32 : r, 16, 4, basic
	33 : s, 12, 17, {
	34 : r, 17, 11, [
	35 : r, 17, 11, id
	36 : r, 17, 11, if
	37 : r, 17, 11, while
	38 : r, 17, 11, do
	39 : r, 17, 11, return
	40 : r, 17, 11, {
	41 : r, 17, 11, }
	42 : r, 17, 11, basic
	43 : g, 13, 18, iarg
	44 : r, 18, 5, )
	45 : r, 18, 5, ,
	46 : g, 13, 10, type
	47 : s, 13, 11, basic
	48 : s, 15, 19, num
	49 : g, 17, 20, decls
	50 : r, 20, 16, }
	51 : r, 20, 16, [
	52 : r, 20, 16, id
	53 : r, 20, 16, if
	54 : r, 20, 16, while
	55 : r, 20, 16, do
	56 : r, 20, 16, return
	57 : r, 20, 16, {
	58 : r, 20, 16, else
	59 : s, 19, 21, ]
	60 : r, 21, 13, id
	61 : r, 21, 13, [
	62 : g, 20, 22, decl
	63 : r, 22, 10, [
	64 : r, 22, 10, id
	65 : r, 22, 10, if
	66 : r, 22, 10, while
	67 : r, 22, 10, do
	68 : r, 22, 10, return
	69 : r, 22, 10, {
	70 : r, 22, 10, }
	71 : r, 22, 10, basic
	72 : g, 20, 23, type
	73 : g, 20, 24, stmts
	74 : s, 20, 11, basic
	75 : s, 23, 25, id
	76 : s, 23, 15, [
	77 : g, 24, 26, block
	78 : r, 26, 23, }
	79 : r, 26, 23, [
	80 : r, 26, 23, id
	81 : r, 26, 23, if
	82 : r, 26, 23, while
	83 : r, 26, 23, do
	84 : r, 26, 23, return
	85 : r, 26, 23, {
	86 : r, 26, 23, else
	87 : g, 24, 27, stmt
	88 : r, 27, 15, }
	89 : r, 27, 15, [
	90 : r, 27, 15, id
	91 : r, 27, 15, if
	92 : r, 27, 15, while
	93 : r, 27, 15, do
	94 : r, 27, 15, return
	95 : r, 27, 15, {
	96 : r, 27, 15, else
	97 : g, 24, 28, loc
	98 : s, 24, 29, id
	99 : r, 29, 31, =
	100 : r, 29, 31, [
	101 : s, 24, 30, {
	102 : r, 30, 11, [
	103 : r, 30, 11, id
	104 : r, 30, 11, if
	105 : r, 30, 11, while
	106 : r, 30, 11, do
	107 : r, 30, 11, return
	108 : r, 30, 11, {
	109 : r, 30, 11, }
	110 : r, 30, 11, basic
	111 : s, 24, 31, }
	112 : r, 31, 9, $
	113 : r, 31, 9, basic
	114 : s, 24, 32, if
	115 : s, 24, 33, while
	116 : r, 33, 28, (
	117 : r, 33, 28, [
	118 : r, 33, 28, id
	119 : r, 33, 28, if
	120 : r, 33, 28, while
	121 : r, 33, 28, do
	122 : r, 33, 28, return
	123 : r, 33, 28, {
	124 : s, 24, 34, do
	125 : r, 34, 28, (
	126 : r, 34, 28, [
	127 : r, 34, 28, id
	128 : r, 34, 28, if
	129 : r, 34, 28, while
	130 : r, 34, 28, do
	131 : r, 34, 28, return
	132 : r, 34, 28, {
	133 : s, 24, 35, return
	134 : s, 25, 36, ;
	135 : r, 36, 12, [
	136 : r, 36, 12, id
	137 : r, 36, 12, if
	138 : r, 36, 12, while
	139 : r, 36, 12, do
	140 : r, 36, 12, return
	141 : r, 36, 12, {
	142 : r, 36, 12, }
	143 : r, 36, 12, basic
	144 : s, 28, 37, [
	145 : s, 28, 38, =
	146 : g, 30, 39, decls
	147 : r, 39, 16, }
	148 : r, 39, 16, [
	149 : r, 39, 16, id
	150 : r, 39, 16, if
	151 : r, 39, 16, while
	152 : r, 39, 16, do
	153 : r, 39, 16, return
	154 : r, 39, 16, {
	155 : r, 39, 16, else
	156 : s, 32, 40, (
	157 : g, 33, 41, N
	158 : g, 34, 42, N
	159 : g, 35, 43, loc
	160 : r, 43, 61, ;
	161 : r, 43, 55, <
	162 : r, 43, 55, <=
	163 : r, 43, 55, >=
	164 : r, 43, 55, >
	165 : r, 43, 55, ;
	166 : r, 43, 55, or
	167 : r, 43, 55, and
	168 : r, 43, 55, eq
	169 : r, 43, 55, neq
	170 : r, 43, 55, +
	171 : r, 43, 55, -
	172 : r, 43, 55, *
	173 : r, 43, 55, /
	174 : r, 43, 55, mod
	175 : g, 35, 44, bool
	176 : r, 44, 62, ;
	177 : g, 35, 45, join
	178 : r, 45, 33, ;
	179 : r, 45, 33, or
	180 : g, 35, 46, equality
	181 : r, 46, 35, ;
	182 : r, 46, 35, or
	183 : r, 46, 35, and
	184 : g, 35, 47, rel
	185 : r, 47, 38, ;
	186 : r, 47, 38, or
	187 : r, 47, 38, and
	188 : r, 47, 38, eq
	189 : r, 47, 38, neq
	190 : g, 35, 48, expr
	191 : r, 48, 43, ;
	192 : r, 48, 43, or
	193 : r, 48, 43, and
	194 : r, 48, 43, eq
	195 : r, 48, 43, neq
	196 : g, 35, 49, term
	197 : r, 49, 46, <
	198 : r, 49, 46, <=
	199 : r, 49, 46, >=
	200 : r, 49, 46, >
	201 : r, 49, 46, ;
	202 : r, 49, 46, or
	203 : r, 49, 46, and
	204 : r, 49, 46, eq
	205 : r, 49, 46, neq
	206 : r, 49, 46, +
	207 : r, 49, 46, -
	208 : g, 35, 50, unary
	209 : r, 50, 50, <
	210 : r, 50, 50, <=
	211 : r, 50, 50, >=
	212 : r, 50, 50, >
	213 : r, 50, 50, ;
	214 : r, 50, 50, or
	215 : r, 50, 50, and
	216 : r, 50, 50, eq
	217 : r, 50, 50, neq
	218 : r, 50, 50, +
	219 : r, 50, 50, -
	220 : r, 50, 50, *
	221 : r, 50, 50, /
	222 : r, 50, 50, mod
	223 : g, 35, 51, factor
	224 : r, 51, 53, <
	225 : r, 51, 53, <=
	226 : r, 51, 53, >=
	227 : r, 51, 53, >
	228 : r, 51, 53, ;
	229 : r, 51, 53, or
	230 : r, 51, 53, and
	231 : r, 51, 53, eq
	232 : r, 51, 53, neq
	233 : r, 51, 53, +
	234 : r, 51, 53, -
	235 : r, 51, 53, *
	236 : r, 51, 53, /
	237 : r, 51, 53, mod
	238 : g, 35, 52, arg
	239 : s, 35, 53, id
	240 : r, 53, 31, ;
	241 : r, 53, 31, [
	242 : r, 53, 31, <
	243 : r, 53, 31, <=
	244 : r, 53, 31, >=
	245 : r, 53, 31, >
	246 : r, 53, 31, or
	247 : r, 53, 31, and
	248 : r, 53, 31, eq
	249 : r, 53, 31, neq
	250 : r, 53, 31, +
	251 : r, 53, 31, -
	252 : r, 53, 31, *
	253 : r, 53, 31, /
	254 : r, 53, 31, mod
	255 : s, 35, 54, (
	256 : s, 35, 55, -
	257 : s, 35, 56, !
	258 : s, 35, 57, num
	259 : r, 57, 57, <
	260 : r, 57, 57, <=
	261 : r, 57, 57, >=
	262 : r, 57, 57, >
	263 : r, 57, 57, ;
	264 : r, 57, 57, or
	265 : r, 57, 57, and
	266 : r, 57, 57, eq
	267 : r, 57, 57, neq
	268 : r, 57, 57, +
	269 : r, 57, 57, -
	270 : r, 57, 57, *
	271 : r, 57, 57, /
	272 : r, 57, 57, mod
	273 : s, 35, 58, real
	274 : r, 58, 58, <
	275 : r, 58, 58, <=
	276 : r, 58, 58, >=
	277 : r, 58, 58, >
	278 : r, 58, 58, ;
	279 : r, 58, 58, or
	280 : r, 58, 58, and
	281 : r, 58, 58, eq
	282 : r, 58, 58, neq
	283 : r, 58, 58, +
	284 : r, 58, 58, -
	285 : r, 58, 58, *
	286 : r, 58, 58, /
	287 : r, 58, 58, mod
	288 : s, 35, 59, true
	289 : r, 59, 59, <
	290 : r, 59, 59, <=
	291 : r, 59, 59, >=
	292 : r, 59, 59, >
	293 : r, 59, 59, ;
	294 : r, 59, 59, or
	295 : r, 59, 59, and
	296 : r, 59, 59, eq
	297 : r, 59, 59, neq
	298 : r, 59, 59, +
	299 : r, 59, 59, -
	300 : r, 59, 59, *
	301 : r, 59, 59, /
	302 : r, 59, 59, mod
	303 : s, 35, 60, false
	304 : r, 60, 60, <
	305 : r, 60, 60, <=
	306 : r, 60, 60, >=
	307 : r, 60, 60, >
	308 : r, 60, 60, ;
	309 : r, 60, 60, or
	310 : r, 60, 60, and
	311 : r, 60, 60, eq
	312 : r, 60, 60, neq
	313 : r, 60, 60, +
	314 : r, 60, 60, -
	315 : r, 60, 60, *
	316 : r, 60, 60, /
	317 : r, 60, 60, mod
	318 : g, 37, 61, loc
	319 : r, 61, 55, <
	320 : r, 61, 55, <=
	321 : r, 61, 55, >=
	322 : r, 61, 55, >
	323 : r, 61, 55, ]
	324 : r, 61, 55, or
	325 : r, 61, 55, and
	326 : r, 61, 55, eq
	327 : r, 61, 55, neq
	328 : r, 61, 55, +
	329 : r, 61, 55, -
	330 : r, 61, 55, *
	331 : r, 61, 55, /
	332 : r, 61, 55, mod
	333 : g, 37, 62, bool
	334 : g, 37, 63, join
	335 : r, 63, 33, ]
	336 : r, 63, 33, or
	337 : g, 37, 64, equality
	338 : r, 64, 35, ]
	339 : r, 64, 35, or
	340 : r, 64, 35, and
	341 : g, 37, 65, rel
	342 : r, 65, 38, ]
	343 : r, 65, 38, or
	344 : r, 65, 38, and
	345 : r, 65, 38, eq
	346 : r, 65, 38, neq
	347 : g, 37, 66, expr
	348 : r, 66, 43, ]
	349 : r, 66, 43, or
	350 : r, 66, 43, and
	351 : r, 66, 43, eq
	352 : r, 66, 43, neq
	353 : g, 37, 67, term
	354 : r, 67, 46, <
	355 : r, 67, 46, <=
	356 : r, 67, 46, >=
	357 : r, 67, 46, >
	358 : r, 67, 46, ]
	359 : r, 67, 46, or
	360 : r, 67, 46, and
	361 : r, 67, 46, eq
	362 : r, 67, 46, neq
	363 : r, 67, 46, +
	364 : r, 67, 46, -
	365 : g, 37, 68, unary
	366 : r, 68, 50, <
	367 : r, 68, 50, <=
	368 : r, 68, 50, >=
	369 : r, 68, 50, >
	370 : r, 68, 50, ]
	371 : r, 68, 50, or
	372 : r, 68, 50, and
	373 : r, 68, 50, eq
	374 : r, 68, 50, neq
	375 : r, 68, 50, +
	376 : r, 68, 50, -
	377 : r, 68, 50, *
	378 : r, 68, 50, /
	379 : r, 68, 50, mod
	380 : g, 37, 69, factor
	381 : r, 69, 53, <
	382 : r, 69, 53, <=
	383 : r, 69, 53, >=
	384 : r, 69, 53, >
	385 : r, 69, 53, ]
	386 : r, 69, 53, or
	387 : r, 69, 53, and
	388 : r, 69, 53, eq
	389 : r, 69, 53, neq
	390 : r, 69, 53, +
	391 : r, 69, 53, -
	392 : r, 69, 53, *
	393 : r, 69, 53, /
	394 : r, 69, 53, mod
	395 : s, 37, 70, id
	396 : r, 70, 31, <
	397 : r, 70, 31, <=
	398 : r, 70, 31, >=
	399 : r, 70, 31, >
	400 : r, 70, 31, ]
	401 : r, 70, 31, or
	402 : r, 70, 31, and
	403 : r, 70, 31, eq
	404 : r, 70, 31, neq
	405 : r, 70, 31, +
	406 : r, 70, 31, -
	407 : r, 70, 31, *
	408 : r, 70, 31, /
	409 : r, 70, 31, mod
	410 : r, 70, 31, [
	411 : s, 37, 71, (
	412 : s, 37, 72, -
	413 : s, 37, 73, !
	414 : s, 37, 74, num
	415 : r, 74, 57, <
	416 : r, 74, 57, <=
	417 : r, 74, 57, >=
	418 : r, 74, 57, >
	419 : r, 74, 57, ]
	420 : r, 74, 57, or
	421 : r, 74, 57, and
	422 : r, 74, 57, eq
	423 : r, 74, 57, neq
	424 : r, 74, 57, +
	425 : r, 74, 57, -
	426 : r, 74, 57, *
	427 : r, 74, 57, /
	428 : r, 74, 57, mod
	429 : s, 37, 75, real
	430 : r, 75, 58, <
	431 : r, 75, 58, <=
	432 : r, 75, 58, >=
	433 : r, 75, 58, >
	434 : r, 75, 58, ]
	435 : r, 75, 58, or
	436 : r, 75, 58, and
	437 : r, 75, 58, eq
	438 : r, 75, 58, neq
	439 : r, 75, 58, +
	440 : r, 75, 58, -
	441 : r, 75, 58, *
	442 : r, 75, 58, /
	443 : r, 75, 58, mod
	444 : s, 37, 76, true
	445 : r, 76, 59, <
	446 : r, 76, 59, <=
	447 : r, 76, 59, >=
	448 : r, 76, 59, >
	449 : r, 76, 59, ]
	450 : r, 76, 59, or
	451 : r, 76, 59, and
	452 : r, 76, 59, eq
	453 : r, 76, 59, neq
	454 : r, 76, 59, +
	455 : r, 76, 59, -
	456 : r, 76, 59, *
	457 : r, 76, 59, /
	458 : r, 76, 59, mod
	459 : s, 37, 77, false
	460 : r, 77, 60, <
	461 : r, 77, 60, <=
	462 : r, 77, 60, >=
	463 : r, 77, 60, >
	464 : r, 77, 60, ]
	465 : r, 77, 60, or
	466 : r, 77, 60, and
	467 : r, 77, 60, eq
	468 : r, 77, 60, neq
	469 : r, 77, 60, +
	470 : r, 77, 60, -
	471 : r, 77, 60, *
	472 : r, 77, 60, /
	473 : r, 77, 60, mod
	474 : g, 38, 78, loc
	475 : r, 78, 55, <
	476 : r, 78, 55, <=
	477 : r, 78, 55, >=
	478 : r, 78, 55, >
	479 : r, 78, 55, ;
	480 : r, 78, 55, or
	481 : r, 78, 55, and
	482 : r, 78, 55, eq
	483 : r, 78, 55, neq
	484 : r, 78, 55, +
	485 : r, 78, 55, -
	486 : r, 78, 55, *
	487 : r, 78, 55, /
	488 : r, 78, 55, mod
	489 : g, 38, 79, bool
	490 : g, 38, 45, join
	491 : g, 38, 46, equality
	492 : g, 38, 47, rel
	493 : g, 38, 48, expr
	494 : g, 38, 49, term
	495 : g, 38, 50, unary
	496 : g, 38, 51, factor
	497 : s, 38, 80, id
	498 : r, 80, 31, <
	499 : r, 80, 31, <=
	500 : r, 80, 31, >=
	501 : r, 80, 31, >
	502 : r, 80, 31, ;
	503 : r, 80, 31, or
	504 : r, 80, 31, and
	505 : r, 80, 31, eq
	506 : r, 80, 31, neq
	507 : r, 80, 31, +
	508 : r, 80, 31, -
	509 : r, 80, 31, *
	510 : r, 80, 31, /
	511 : r, 80, 31, mod
	512 : r, 80, 31, [
	513 : s, 38, 54, (
	514 : s, 38, 55, -
	515 : s, 38, 56, !
	516 : s, 38, 57, num
	517 : s, 38, 58, real
	518 : s, 38, 59, true
	519 : s, 38, 60, false
	520 : g, 39, 22, decl
	521 : g, 39, 23, type
	522 : g, 39, 81, stmts
	523 : s, 39, 11, basic
	524 : g, 40, 82, loc
	525 : r, 82, 55, <
	526 : r, 82, 55, <=
	527 : r, 82, 55, >=
	528 : r, 82, 55, >
	529 : r, 82, 55, )
	530 : r, 82, 55, or
	531 : r, 82, 55, and
	532 : r, 82, 55, eq
	533 : r, 82, 55, neq
	534 : r, 82, 55, +
	535 : r, 82, 55, -
	536 : r, 82, 55, *
	537 : r, 82, 55, /
	538 : r, 82, 55, mod
	539 : g, 40, 83, bool
	540 : g, 40, 84, join
	541 : r, 84, 33, )
	542 : r, 84, 33, or
	543 : g, 40, 85, equality
	544 : r, 85, 35, )
	545 : r, 85, 35, or
	546 : r, 85, 35, and
	547 : g, 40, 86, rel
	548 : r, 86, 38, )
	549 : r, 86, 38, or
	550 : r, 86, 38, and
	551 : r, 86, 38, eq
	552 : r, 86, 38, neq
	553 : g, 40, 87, expr
	554 : r, 87, 43, )
	555 : r, 87, 43, or
	556 : r, 87, 43, and
	557 : r, 87, 43, eq
	558 : r, 87, 43, neq
	559 : g, 40, 88, term
	560 : r, 88, 46, <
	561 : r, 88, 46, <=
	562 : r, 88, 46, >=
	563 : r, 88, 46, >
	564 : r, 88, 46, )
	565 : r, 88, 46, or
	566 : r, 88, 46, and
	567 : r, 88, 46, eq
	568 : r, 88, 46, neq
	569 : r, 88, 46, +
	570 : r, 88, 46, -
	571 : g, 40, 89, unary
	572 : r, 89, 50, <
	573 : r, 89, 50, <=
	574 : r, 89, 50, >=
	575 : r, 89, 50, >
	576 : r, 89, 50, )
	577 : r, 89, 50, or
	578 : r, 89, 50, and
	579 : r, 89, 50, eq
	580 : r, 89, 50, neq
	581 : r, 89, 50, +
	582 : r, 89, 50, -
	583 : r, 89, 50, *
	584 : r, 89, 50, /
	585 : r, 89, 50, mod
	586 : g, 40, 90, factor
	587 : r, 90, 53, <
	588 : r, 90, 53, <=
	589 : r, 90, 53, >=
	590 : r, 90, 53, >
	591 : r, 90, 53, )
	592 : r, 90, 53, or
	593 : r, 90, 53, and
	594 : r, 90, 53, eq
	595 : r, 90, 53, neq
	596 : r, 90, 53, +
	597 : r, 90, 53, -
	598 : r, 90, 53, *
	599 : r, 90, 53, /
	600 : r, 90, 53, mod
	601 : s, 40, 91, id
	602 : r, 91, 31, <
	603 : r, 91, 31, <=
	604 : r, 91, 31, >=
	605 : r, 91, 31, >
	606 : r, 91, 31, )
	607 : r, 91, 31, or
	608 : r, 91, 31, and
	609 : r, 91, 31, eq
	610 : r, 91, 31, neq
	611 : r, 91, 31, +
	612 : r, 91, 31, -
	613 : r, 91, 31, *
	614 : r, 91, 31, /
	615 : r, 91, 31, mod
	616 : r, 91, 31, [
	617 : s, 40, 92, (
	618 : s, 40, 93, -
	619 : s, 40, 94, !
	620 : s, 40, 95, num
	621 : r, 95, 57, <
	622 : r, 95, 57, <=
	623 : r, 95, 57, >=
	624 : r, 95, 57, >
	625 : r, 95, 57, )
	626 : r, 95, 57, or
	627 : r, 95, 57, and
	628 : r, 95, 57, eq
	629 : r, 95, 57, neq
	630 : r, 95, 57, +
	631 : r, 95, 57, -
	632 : r, 95, 57, *
	633 : r, 95, 57, /
	634 : r, 95, 57, mod
	635 : s, 40, 96, real
	636 : r, 96, 58, <
	637 : r, 96, 58, <=
	638 : r, 96, 58, >=
	639 : r, 96, 58, >
	640 : r, 96, 58, )
	641 : r, 96, 58, or
	642 : r, 96, 58, and
	643 : r, 96, 58, eq
	644 : r, 96, 58, neq
	645 : r, 96, 58, +
	646 : r, 96, 58, -
	647 : r, 96, 58, *
	648 : r, 96, 58, /
	649 : r, 96, 58, mod
	650 : s, 40, 97, true
	651 : r, 97, 59, <
	652 : r, 97, 59, <=
	653 : r, 97, 59, >=
	654 : r, 97, 59, >
	655 : r, 97, 59, )
	656 : r, 97, 59, or
	657 : r, 97, 59, and
	658 : r, 97, 59, eq
	659 : r, 97, 59, neq
	660 : r, 97, 59, +
	661 : r, 97, 59, -
	662 : r, 97, 59, *
	663 : r, 97, 59, /
	664 : r, 97, 59, mod
	665 : s, 40, 98, false
	666 : r, 98, 60, <
	667 : r, 98, 60, <=
	668 : r, 98, 60, >=
	669 : r, 98, 60, >
	670 : r, 98, 60, )
	671 : r, 98, 60, or
	672 : r, 98, 60, and
	673 : r, 98, 60, eq
	674 : r, 98, 60, neq
	675 : r, 98, 60, +
	676 : r, 98, 60, -
	677 : r, 98, 60, *
	678 : r, 98, 60, /
	679 : r, 98, 60, mod
	680 : s, 41, 99, (
	681 : g, 42, 100, block
	682 : r, 100, 23, while
	683 : g, 42, 101, stmt
	684 : g, 42, 102, loc
	685 : s, 42, 29, id
	686 : s, 42, 103, {
	687 : r, 103, 11, [
	688 : r, 103, 11, id
	689 : r, 103, 11, if
	690 : r, 103, 11, while
	691 : r, 103, 11, do
	692 : r, 103, 11, return
	693 : r, 103, 11, {
	694 : r, 103, 11, }
	695 : r, 103, 11, basic
	696 : s, 42, 104, if
	697 : s, 42, 105, while
	698 : r, 105, 28, (
	699 : r, 105, 28, [
	700 : r, 105, 28, id
	701 : r, 105, 28, if
	702 : r, 105, 28, while
	703 : r, 105, 28, do
	704 : r, 105, 28, return
	705 : r, 105, 28, {
	706 : s, 42, 106, do
	707 : r, 106, 28, (
	708 : r, 106, 28, [
	709 : r, 106, 28, id
	710 : r, 106, 28, if
	711 : r, 106, 28, while
	712 : r, 106, 28, do
	713 : r, 106, 28, return
	714 : r, 106, 28, {
	715 : s, 42, 107, return
	716 : s, 43, 108, [
	717 : s, 44, 109, or
	718 : s, 45, 110, and
	719 : s, 46, 111, eq
	720 : s, 46, 112, neq
	721 : s, 48, 113, <
	722 : s, 48, 114, <=
	723 : s, 48, 115, >=
	724 : s, 48, 116, >
	725 : s, 48, 117, +
	726 : s, 48, 118, -
	727 : s, 49, 119, *
	728 : s, 49, 120, /
	729 : s, 49, 121, mod
	730 : s, 52, 122, ;
	731 : r, 122, 22, }
	732 : r, 122, 22, [
	733 : r, 122, 22, id
	734 : r, 122, 22, if
	735 : r, 122, 22, while
	736 : r, 122, 22, do
	737 : r, 122, 22, return
	738 : r, 122, 22, {
	739 : r, 122, 22, else
	740 : s, 53, 123, (
	741 : r, 123, 26, )
	742 : r, 123, 26, ,
	743 : g, 54, 82, loc
	744 : g, 54, 124, bool
	745 : g, 54, 84, join
	746 : g, 54, 85, equality
	747 : g, 54, 86, rel
	748 : g, 54, 87, expr
	749 : g, 54, 88, term
	750 : g, 54, 89, unary
	751 : g, 54, 90, factor
	752 : s, 54, 91, id
	753 : s, 54, 92, (
	754 : s, 54, 93, -
	755 : s, 54, 94, !
	756 : s, 54, 95, num
	757 : s, 54, 96, real
	758 : s, 54, 97, true
	759 : s, 54, 98, false
	760 : g, 55, 78, loc
	761 : g, 55, 125, unary
	762 : r, 125, 52, <
	763 : r, 125, 52, <=
	764 : r, 125, 52, >=
	765 : r, 125, 52, >
	766 : r, 125, 52, ;
	767 : r, 125, 52, or
	768 : r, 125, 52, and
	769 : r, 125, 52, eq
	770 : r, 125, 52, neq
	771 : r, 125, 52, +
	772 : r, 125, 52, -
	773 : r, 125, 52, *
	774 : r, 125, 52, /
	775 : r, 125, 52, mod
	776 : g, 55, 51, factor
	777 : s, 55, 80, id
	778 : s, 55, 54, (
	779 : s, 55, 55, -
	780 : s, 55, 56, !
	781 : s, 55, 57, num
	782 : s, 55, 58, real
	783 : s, 55, 59, true
	784 : s, 55, 60, false
	785 : g, 56, 78, loc
	786 : g, 56, 126, unary
	787 : r, 126, 51, <
	788 : r, 126, 51, <=
	789 : r, 126, 51, >=
	790 : r, 126, 51, >
	791 : r, 126, 51, ;
	792 : r, 126, 51, or
	793 : r, 126, 51, and
	794 : r, 126, 51, eq
	795 : r, 126, 51, neq
	796 : r, 126, 51, +
	797 : r, 126, 51, -
	798 : r, 126, 51, *
	799 : r, 126, 51, /
	800 : r, 126, 51, mod
	801 : g, 56, 51, factor
	802 : s, 56, 80, id
	803 : s, 56, 54, (
	804 : s, 56, 55, -
	805 : s, 56, 56, !
	806 : s, 56, 57, num
	807 : s, 56, 58, real
	808 : s, 56, 59, true
	809 : s, 56, 60, false
	810 : s, 61, 127, [
	811 : s, 62, 128, ]
	812 : r, 128, 30, =
	813 : r, 128, 30, [
	814 : s, 62, 129, or
	815 : s, 63, 130, and
	816 : s, 64, 131, eq
	817 : s, 64, 132, neq
	818 : s, 66, 133, <
	819 : s, 66, 134, <=
	820 : s, 66, 135, >=
	821 : s, 66, 136, >
	822 : s, 66, 137, +
	823 : s, 66, 138, -
	824 : s, 67, 139, *
	825 : s, 67, 140, /
	826 : s, 67, 141, mod
	827 : s, 70, 142, (
	828 : r, 142, 26, )
	829 : r, 142, 26, ,
	830 : g, 71, 82, loc
	831 : g, 71, 143, bool
	832 : g, 71, 84, join
	833 : g, 71, 85, equality
	834 : g, 71, 86, rel
	835 : g, 71, 87, expr
	836 : g, 71, 88, term
	837 : g, 71, 89, unary
	838 : g, 71, 90, factor
	839 : s, 71, 91, id
	840 : s, 71, 92, (
	841 : s, 71, 93, -
	842 : s, 71, 94, !
	843 : s, 71, 95, num
	844 : s, 71, 96, real
	845 : s, 71, 97, true
	846 : s, 71, 98, false
	847 : g, 72, 61, loc
	848 : g, 72, 144, unary
	849 : r, 144, 52, <
	850 : r, 144, 52, <=
	851 : r, 144, 52, >=
	852 : r, 144, 52, >
	853 : r, 144, 52, ]
	854 : r, 144, 52, or
	855 : r, 144, 52, and
	856 : r, 144, 52, eq
	857 : r, 144, 52, neq
	858 : r, 144, 52, +
	859 : r, 144, 52, -
	860 : r, 144, 52, *
	861 : r, 144, 52, /
	862 : r, 144, 52, mod
	863 : g, 72, 69, factor
	864 : s, 72, 70, id
	865 : s, 72, 71, (
	866 : s, 72, 72, -
	867 : s, 72, 73, !
	868 : s, 72, 74, num
	869 : s, 72, 75, real
	870 : s, 72, 76, true
	871 : s, 72, 77, false
	872 : g, 73, 61, loc
	873 : g, 73, 145, unary
	874 : r, 145, 51, <
	875 : r, 145, 51, <=
	876 : r, 145, 51, >=
	877 : r, 145, 51, >
	878 : r, 145, 51, ]
	879 : r, 145, 51, or
	880 : r, 145, 51, and
	881 : r, 145, 51, eq
	882 : r, 145, 51, neq
	883 : r, 145, 51, +
	884 : r, 145, 51, -
	885 : r, 145, 51, *
	886 : r, 145, 51, /
	887 : r, 145, 51, mod
	888 : g, 73, 69, factor
	889 : s, 73, 70, id
	890 : s, 73, 71, (
	891 : s, 73, 72, -
	892 : s, 73, 73, !
	893 : s, 73, 74, num
	894 : s, 73, 75, real
	895 : s, 73, 76, true
	896 : s, 73, 77, false
	897 : s, 78, 146, [
	898 : s, 79, 147, ;
	899 : r, 147, 17, }
	900 : r, 147, 17, [
	901 : r, 147, 17, id
	902 : r, 147, 17, if
	903 : r, 147, 17, while
	904 : r, 147, 17, do
	905 : r, 147, 17, return
	906 : r, 147, 17, {
	907 : r, 147, 17, else
	908 : s, 79, 109, or
	909 : s, 80, 123, (
	910 : g, 81, 26, block
	911 : g, 81, 27, stmt
	912 : g, 81, 28, loc
	913 : s, 81, 29, id
	914 : s, 81, 30, {
	915 : s, 81, 148, }
	916 : r, 148, 9, }
	917 : r, 148, 9, [
	918 : r, 148, 9, id
	919 : r, 148, 9, if
	920 : r, 148, 9, while
	921 : r, 148, 9, do
	922 : r, 148, 9, return
	923 : r, 148, 9, {
	924 : r, 148, 9, else
	925 : s, 81, 32, if
	926 : s, 81, 33, while
	927 : s, 81, 34, do
	928 : s, 81, 35, return
	929 : s, 82, 149, [
	930 : s, 83, 150, )
	931 : r, 150, 27, [
	932 : r, 150, 27, id
	933 : r, 150, 27, if
	934 : r, 150, 27, while
	935 : r, 150, 27, do
	936 : r, 150, 27, return
	937 : r, 150, 27, {
	938 : r, 150, 27, ;
	939 : s, 83, 151, or
	940 : s, 84, 152, and
	941 : s, 85, 153, eq
	942 : s, 85, 154, neq
	943 : s, 87, 155, <
	944 : s, 87, 156, <=
	945 : s, 87, 157, >=
	946 : s, 87, 158, >
	947 : s, 87, 159, +
	948 : s, 87, 160, -
	949 : s, 88, 161, *
	950 : s, 88, 162, /
	951 : s, 88, 163, mod
	952 : s, 91, 164, (
	953 : r, 164, 26, )
	954 : r, 164, 26, ,
	955 : g, 92, 82, loc
	956 : g, 92, 165, bool
	957 : g, 92, 84, join
	958 : g, 92, 85, equality
	959 : g, 92, 86, rel
	960 : g, 92, 87, expr
	961 : g, 92, 88, term
	962 : g, 92, 89, unary
	963 : g, 92, 90, factor
	964 : s, 92, 91, id
	965 : s, 92, 92, (
	966 : s, 92, 93, -
	967 : s, 92, 94, !
	968 : s, 92, 95, num
	969 : s, 92, 96, real
	970 : s, 92, 97, true
	971 : s, 92, 98, false
	972 : g, 93, 82, loc
	973 : g, 93, 166, unary
	974 : r, 166, 52, <
	975 : r, 166, 52, <=
	976 : r, 166, 52, >=
	977 : r, 166, 52, >
	978 : r, 166, 52, )
	979 : r, 166, 52, or
	980 : r, 166, 52, and
	981 : r, 166, 52, eq
	982 : r, 166, 52, neq
	983 : r, 166, 52, +
	984 : r, 166, 52, -
	985 : r, 166, 52, *
	986 : r, 166, 52, /
	987 : r, 166, 52, mod
	988 : g, 93, 90, factor
	989 : s, 93, 91, id
	990 : s, 93, 92, (
	991 : s, 93, 93, -
	992 : s, 93, 94, !
	993 : s, 93, 95, num
	994 : s, 93, 96, real
	995 : s, 93, 97, true
	996 : s, 93, 98, false
	997 : g, 94, 82, loc
	998 : g, 94, 167, unary
	999 : r, 167, 51, <
	1000 : r, 167, 51, <=
	1001 : r, 167, 51, >=
	1002 : r, 167, 51, >
	1003 : r, 167, 51, )
	1004 : r, 167, 51, or
	1005 : r, 167, 51, and
	1006 : r, 167, 51, eq
	1007 : r, 167, 51, neq
	1008 : r, 167, 51, +
	1009 : r, 167, 51, -
	1010 : r, 167, 51, *
	1011 : r, 167, 51, /
	1012 : r, 167, 51, mod
	1013 : g, 94, 90, factor
	1014 : s, 94, 91, id
	1015 : s, 94, 92, (
	1016 : s, 94, 93, -
	1017 : s, 94, 94, !
	1018 : s, 94, 95, num
	1019 : s, 94, 96, real
	1020 : s, 94, 97, true
	1021 : s, 94, 98, false
	1022 : g, 99, 82, loc
	1023 : g, 99, 168, bool
	1024 : g, 99, 84, join
	1025 : g, 99, 85, equality
	1026 : g, 99, 86, rel
	1027 : g, 99, 87, expr
	1028 : g, 99, 88, term
	1029 : g, 99, 89, unary
	1030 : g, 99, 90, factor
	1031 : s, 99, 91, id
	1032 : s, 99, 92, (
	1033 : s, 99, 93, -
	1034 : s, 99, 94, !
	1035 : s, 99, 95, num
	1036 : s, 99, 96, real
	1037 : s, 99, 97, true
	1038 : s, 99, 98, false
	1039 : s, 101, 169, while
	1040 : s, 102, 37, [
	1041 : s, 102, 170, =
	1042 : g, 103, 171, decls
	1043 : r, 171, 16, }
	1044 : r, 171, 16, [
	1045 : r, 171, 16, id
	1046 : r, 171, 16, if
	1047 : r, 171, 16, while
	1048 : r, 171, 16, do
	1049 : r, 171, 16, return
	1050 : r, 171, 16, {
	1051 : r, 171, 16, else
	1052 : s, 104, 172, (
	1053 : g, 105, 173, N
	1054 : g, 106, 174, N
	1055 : g, 107, 43, loc
	1056 : g, 107, 44, bool
	1057 : g, 107, 45, join
	1058 : g, 107, 46, equality
	1059 : g, 107, 47, rel
	1060 : g, 107, 48, expr
	1061 : g, 107, 49, term
	1062 : g, 107, 50, unary
	1063 : g, 107, 51, factor
	1064 : g, 107, 175, arg
	1065 : s, 107, 53, id
	1066 : s, 107, 54, (
	1067 : s, 107, 55, -
	1068 : s, 107, 56, !
	1069 : s, 107, 57, num
	1070 : s, 107, 58, real
	1071 : s, 107, 59, true
	1072 : s, 107, 60, false
	1073 : g, 108, 61, loc
	1074 : g, 108, 176, bool
	1075 : g, 108, 63, join
	1076 : g, 108, 64, equality
	1077 : g, 108, 65, rel
	1078 : g, 108, 66, expr
	1079 : g, 108, 67, term
	1080 : g, 108, 68, unary
	1081 : g, 108, 69, factor
	1082 : s, 108, 70, id
	1083 : s, 108, 71, (
	1084 : s, 108, 72, -
	1085 : s, 108, 73, !
	1086 : s, 108, 74, num
	1087 : s, 108, 75, real
	1088 : s, 108, 76, true
	1089 : s, 108, 77, false
	1090 : g, 109, 78, loc
	1091 : g, 109, 177, join
	1092 : r, 177, 32, ;
	1093 : r, 177, 32, or
	1094 : g, 109, 46, equality
	1095 : g, 109, 47, rel
	1096 : g, 109, 48, expr
	1097 : g, 109, 49, term
	1098 : g, 109, 50, unary
	1099 : g, 109, 51, factor
	1100 : s, 109, 80, id
	1101 : s, 109, 54, (
	1102 : s, 109, 55, -
	1103 : s, 109, 56, !
	1104 : s, 109, 57, num
	1105 : s, 109, 58, real
	1106 : s, 109, 59, true
	1107 : s, 109, 60, false
	1108 : g, 110, 78, loc
	1109 : g, 110, 178, equality
	1110 : r, 178, 34, ;
	1111 : r, 178, 34, or
	1112 : r, 178, 34, and
	1113 : g, 110, 47, rel
	1114 : g, 110, 48, expr
	1115 : g, 110, 49, term
	1116 : g, 110, 50, unary
	1117 : g, 110, 51, factor
	1118 : s, 110, 80, id
	1119 : s, 110, 54, (
	1120 : s, 110, 55, -
	1121 : s, 110, 56, !
	1122 : s, 110, 57, num
	1123 : s, 110, 58, real
	1124 : s, 110, 59, true
	1125 : s, 110, 60, false
	1126 : g, 111, 78, loc
	1127 : g, 111, 179, rel
	1128 : r, 179, 36, ;
	1129 : r, 179, 36, or
	1130 : r, 179, 36, and
	1131 : r, 179, 36, eq
	1132 : r, 179, 36, neq
	1133 : g, 111, 48, expr
	1134 : g, 111, 49, term
	1135 : g, 111, 50, unary
	1136 : g, 111, 51, factor
	1137 : s, 111, 80, id
	1138 : s, 111, 54, (
	1139 : s, 111, 55, -
	1140 : s, 111, 56, !
	1141 : s, 111, 57, num
	1142 : s, 111, 58, real
	1143 : s, 111, 59, true
	1144 : s, 111, 60, false
	1145 : g, 112, 78, loc
	1146 : g, 112, 180, rel
	1147 : r, 180, 37, ;
	1148 : r, 180, 37, or
	1149 : r, 180, 37, and
	1150 : r, 180, 37, eq
	1151 : r, 180, 37, neq
	1152 : g, 112, 48, expr
	1153 : g, 112, 49, term
	1154 : g, 112, 50, unary
	1155 : g, 112, 51, factor
	1156 : s, 112, 80, id
	1157 : s, 112, 54, (
	1158 : s, 112, 55, -
	1159 : s, 112, 56, !
	1160 : s, 112, 57, num
	1161 : s, 112, 58, real
	1162 : s, 112, 59, true
	1163 : s, 112, 60, false
	1164 : g, 113, 181, loc
	1165 : r, 181, 55, ;
	1166 : r, 181, 55, or
	1167 : r, 181, 55, and
	1168 : r, 181, 55, eq
	1169 : r, 181, 55, neq
	1170 : r, 181, 55, +
	1171 : r, 181, 55, -
	1172 : r, 181, 55, *
	1173 : r, 181, 55, /
	1174 : r, 181, 55, mod
	1175 : g, 113, 182, expr
	1176 : r, 182, 39, ;
	1177 : r, 182, 39, or
	1178 : r, 182, 39, and
	1179 : r, 182, 39, eq
	1180 : r, 182, 39, neq
	1181 : g, 113, 183, term
	1182 : r, 183, 46, ;
	1183 : r, 183, 46, or
	1184 : r, 183, 46, and
	1185 : r, 183, 46, eq
	1186 : r, 183, 46, neq
	1187 : r, 183, 46, +
	1188 : r, 183, 46, -
	1189 : g, 113, 184, unary
	1190 : r, 184, 50, ;
	1191 : r, 184, 50, or
	1192 : r, 184, 50, and
	1193 : r, 184, 50, eq
	1194 : r, 184, 50, neq
	1195 : r, 184, 50, +
	1196 : r, 184, 50, -
	1197 : r, 184, 50, *
	1198 : r, 184, 50, /
	1199 : r, 184, 50, mod
	1200 : g, 113, 185, factor
	1201 : r, 185, 53, ;
	1202 : r, 185, 53, or
	1203 : r, 185, 53, and
	1204 : r, 185, 53, eq
	1205 : r, 185, 53, neq
	1206 : r, 185, 53, +
	1207 : r, 185, 53, -
	1208 : r, 185, 53, *
	1209 : r, 185, 53, /
	1210 : r, 185, 53, mod
	1211 : s, 113, 186, id
	1212 : r, 186, 31, ;
	1213 : r, 186, 31, or
	1214 : r, 186, 31, and
	1215 : r, 186, 31, eq
	1216 : r, 186, 31, neq
	1217 : r, 186, 31, +
	1218 : r, 186, 31, -
	1219 : r, 186, 31, *
	1220 : r, 186, 31, /
	1221 : r, 186, 31, mod
	1222 : r, 186, 31, [
	1223 : s, 113, 187, (
	1224 : s, 113, 188, -
	1225 : s, 113, 189, !
	1226 : s, 113, 190, num
	1227 : r, 190, 57, ;
	1228 : r, 190, 57, or
	1229 : r, 190, 57, and
	1230 : r, 190, 57, eq
	1231 : r, 190, 57, neq
	1232 : r, 190, 57, +
	1233 : r, 190, 57, -
	1234 : r, 190, 57, *
	1235 : r, 190, 57, /
	1236 : r, 190, 57, mod
	1237 : s, 113, 191, real
	1238 : r, 191, 58, ;
	1239 : r, 191, 58, or
	1240 : r, 191, 58, and
	1241 : r, 191, 58, eq
	1242 : r, 191, 58, neq
	1243 : r, 191, 58, +
	1244 : r, 191, 58, -
	1245 : r, 191, 58, *
	1246 : r, 191, 58, /
	1247 : r, 191, 58, mod
	1248 : s, 113, 192, true
	1249 : r, 192, 59, ;
	1250 : r, 192, 59, or
	1251 : r, 192, 59, and
	1252 : r, 192, 59, eq
	1253 : r, 192, 59, neq
	1254 : r, 192, 59, +
	1255 : r, 192, 59, -
	1256 : r, 192, 59, *
	1257 : r, 192, 59, /
	1258 : r, 192, 59, mod
	1259 : s, 113, 193, false
	1260 : r, 193, 60, ;
	1261 : r, 193, 60, or
	1262 : r, 193, 60, and
	1263 : r, 193, 60, eq
	1264 : r, 193, 60, neq
	1265 : r, 193, 60, +
	1266 : r, 193, 60, -
	1267 : r, 193, 60, *
	1268 : r, 193, 60, /
	1269 : r, 193, 60, mod
	1270 : g, 114, 181, loc
	1271 : g, 114, 194, expr
	1272 : r, 194, 40, ;
	1273 : r, 194, 40, or
	1274 : r, 194, 40, and
	1275 : r, 194, 40, eq
	1276 : r, 194, 40, neq
	1277 : g, 114, 183, term
	1278 : g, 114, 184, unary
	1279 : g, 114, 185, factor
	1280 : s, 114, 186, id
	1281 : s, 114, 187, (
	1282 : s, 114, 188, -
	1283 : s, 114, 189, !
	1284 : s, 114, 190, num
	1285 : s, 114, 191, real
	1286 : s, 114, 192, true
	1287 : s, 114, 193, false
	1288 : g, 115, 181, loc
	1289 : g, 115, 195, expr
	1290 : r, 195, 41, ;
	1291 : r, 195, 41, or
	1292 : r, 195, 41, and
	1293 : r, 195, 41, eq
	1294 : r, 195, 41, neq
	1295 : g, 115, 183, term
	1296 : g, 115, 184, unary
	1297 : g, 115, 185, factor
	1298 : s, 115, 186, id
	1299 : s, 115, 187, (
	1300 : s, 115, 188, -
	1301 : s, 115, 189, !
	1302 : s, 115, 190, num
	1303 : s, 115, 191, real
	1304 : s, 115, 192, true
	1305 : s, 115, 193, false
	1306 : g, 116, 181, loc
	1307 : g, 116, 196, expr
	1308 : r, 196, 42, ;
	1309 : r, 196, 42, or
	1310 : r, 196, 42, and
	1311 : r, 196, 42, eq
	1312 : r, 196, 42, neq
	1313 : g, 116, 183, term
	1314 : g, 116, 184, unary
	1315 : g, 116, 185, factor
	1316 : s, 116, 186, id
	1317 : s, 116, 187, (
	1318 : s, 116, 188, -
	1319 : s, 116, 189, !
	1320 : s, 116, 190, num
	1321 : s, 116, 191, real
	1322 : s, 116, 192, true
	1323 : s, 116, 193, false
	1324 : g, 117, 78, loc
	1325 : g, 117, 197, term
	1326 : r, 197, 44, <
	1327 : r, 197, 44, <=
	1328 : r, 197, 44, >=
	1329 : r, 197, 44, >
	1330 : r, 197, 44, ;
	1331 : r, 197, 44, or
	1332 : r, 197, 44, and
	1333 : r, 197, 44, eq
	1334 : r, 197, 44, neq
	1335 : r, 197, 44, +
	1336 : r, 197, 44, -
	1337 : g, 117, 50, unary
	1338 : g, 117, 51, factor
	1339 : s, 117, 80, id
	1340 : s, 117, 54, (
	1341 : s, 117, 55, -
	1342 : s, 117, 56, !
	1343 : s, 117, 57, num
	1344 : s, 117, 58, real
	1345 : s, 117, 59, true
	1346 : s, 117, 60, false
	1347 : g, 118, 78, loc
	1348 : g, 118, 198, term
	1349 : r, 198, 45, <
	1350 : r, 198, 45, <=
	1351 : r, 198, 45, >=
	1352 : r, 198, 45, >
	1353 : r, 198, 45, ;
	1354 : r, 198, 45, or
	1355 : r, 198, 45, and
	1356 : r, 198, 45, eq
	1357 : r, 198, 45, neq
	1358 : r, 198, 45, +
	1359 : r, 198, 45, -
	1360 : g, 118, 50, unary
	1361 : g, 118, 51, factor
	1362 : s, 118, 80, id
	1363 : s, 118, 54, (
	1364 : s, 118, 55, -
	1365 : s, 118, 56, !
	1366 : s, 118, 57, num
	1367 : s, 118, 58, real
	1368 : s, 118, 59, true
	1369 : s, 118, 60, false
	1370 : g, 119, 78, loc
	1371 : g, 119, 199, unary
	1372 : r, 199, 47, <
	1373 : r, 199, 47, <=
	1374 : r, 199, 47, >=
	1375 : r, 199, 47, >
	1376 : r, 199, 47, ;
	1377 : r, 199, 47, or
	1378 : r, 199, 47, and
	1379 : r, 199, 47, eq
	1380 : r, 199, 47, neq
	1381 : r, 199, 47, +
	1382 : r, 199, 47, -
	1383 : r, 199, 47, *
	1384 : r, 199, 47, /
	1385 : r, 199, 47, mod
	1386 : g, 119, 51, factor
	1387 : s, 119, 80, id
	1388 : s, 119, 54, (
	1389 : s, 119, 55, -
	1390 : s, 119, 56, !
	1391 : s, 119, 57, num
	1392 : s, 119, 58, real
	1393 : s, 119, 59, true
	1394 : s, 119, 60, false
	1395 : g, 120, 78, loc
	1396 : g, 120, 200, unary
	1397 : r, 200, 48, <
	1398 : r, 200, 48, <=
	1399 : r, 200, 48, >=
	1400 : r, 200, 48, >
	1401 : r, 200, 48, ;
	1402 : r, 200, 48, or
	1403 : r, 200, 48, and
	1404 : r, 200, 48, eq
	1405 : r, 200, 48, neq
	1406 : r, 200, 48, +
	1407 : r, 200, 48, -
	1408 : r, 200, 48, *
	1409 : r, 200, 48, /
	1410 : r, 200, 48, mod
	1411 : g, 120, 51, factor
	1412 : s, 120, 80, id
	1413 : s, 120, 54, (
	1414 : s, 120, 55, -
	1415 : s, 120, 56, !
	1416 : s, 120, 57, num
	1417 : s, 120, 58, real
	1418 : s, 120, 59, true
	1419 : s, 120, 60, false
	1420 : g, 121, 78, loc
	1421 : g, 121, 201, unary
	1422 : r, 201, 49, <
	1423 : r, 201, 49, <=
	1424 : r, 201, 49, >=
	1425 : r, 201, 49, >
	1426 : r, 201, 49, ;
	1427 : r, 201, 49, or
	1428 : r, 201, 49, and
	1429 : r, 201, 49, eq
	1430 : r, 201, 49, neq
	1431 : r, 201, 49, +
	1432 : r, 201, 49, -
	1433 : r, 201, 49, *
	1434 : r, 201, 49, /
	1435 : r, 201, 49, mod
	1436 : g, 121, 51, factor
	1437 : s, 121, 80, id
	1438 : s, 121, 54, (
	1439 : s, 121, 55, -
	1440 : s, 121, 56, !
	1441 : s, 121, 57, num
	1442 : s, 121, 58, real
	1443 : s, 121, 59, true
	1444 : s, 121, 60, false
	1445 : g, 123, 202, args
	1446 : g, 123, 203, loc
	1447 : r, 203, 61, )
	1448 : r, 203, 61, ,
	1449 : r, 203, 55, <
	1450 : r, 203, 55, <=
	1451 : r, 203, 55, >=
	1452 : r, 203, 55, >
	1453 : r, 203, 55, )
	1454 : r, 203, 55, ,
	1455 : r, 203, 55, or
	1456 : r, 203, 55, and
	1457 : r, 203, 55, eq
	1458 : r, 203, 55, neq
	1459 : r, 203, 55, +
	1460 : r, 203, 55, -
	1461 : r, 203, 55, *
	1462 : r, 203, 55, /
	1463 : r, 203, 55, mod
	1464 : g, 123, 204, bool
	1465 : r, 204, 62, )
	1466 : r, 204, 62, ,
	1467 : g, 123, 205, join
	1468 : r, 205, 33, )
	1469 : r, 205, 33, ,
	1470 : r, 205, 33, or
	1471 : g, 123, 206, equality
	1472 : r, 206, 35, )
	1473 : r, 206, 35, ,
	1474 : r, 206, 35, or
	1475 : r, 206, 35, and
	1476 : g, 123, 207, rel
	1477 : r, 207, 38, )
	1478 : r, 207, 38, ,
	1479 : r, 207, 38, or
	1480 : r, 207, 38, and
	1481 : r, 207, 38, eq
	1482 : r, 207, 38, neq
	1483 : g, 123, 208, expr
	1484 : r, 208, 43, )
	1485 : r, 208, 43, ,
	1486 : r, 208, 43, or
	1487 : r, 208, 43, and
	1488 : r, 208, 43, eq
	1489 : r, 208, 43, neq
	1490 : g, 123, 209, term
	1491 : r, 209, 46, <
	1492 : r, 209, 46, <=
	1493 : r, 209, 46, >=
	1494 : r, 209, 46, >
	1495 : r, 209, 46, )
	1496 : r, 209, 46, ,
	1497 : r, 209, 46, or
	1498 : r, 209, 46, and
	1499 : r, 209, 46, eq
	1500 : r, 209, 46, neq
	1501 : r, 209, 46, +
	1502 : r, 209, 46, -
	1503 : g, 123, 210, unary
	1504 : r, 210, 50, <
	1505 : r, 210, 50, <=
	1506 : r, 210, 50, >=
	1507 : r, 210, 50, >
	1508 : r, 210, 50, )
	1509 : r, 210, 50, ,
	1510 : r, 210, 50, or
	1511 : r, 210, 50, and
	1512 : r, 210, 50, eq
	1513 : r, 210, 50, neq
	1514 : r, 210, 50, +
	1515 : r, 210, 50, -
	1516 : r, 210, 50, *
	1517 : r, 210, 50, /
	1518 : r, 210, 50, mod
	1519 : g, 123, 211, factor
	1520 : r, 211, 53, <
	1521 : r, 211, 53, <=
	1522 : r, 211, 53, >=
	1523 : r, 211, 53, >
	1524 : r, 211, 53, )
	1525 : r, 211, 53, ,
	1526 : r, 211, 53, or
	1527 : r, 211, 53, and
	1528 : r, 211, 53, eq
	1529 : r, 211, 53, neq
	1530 : r, 211, 53, +
	1531 : r, 211, 53, -
	1532 : r, 211, 53, *
	1533 : r, 211, 53, /
	1534 : r, 211, 53, mod
	1535 : g, 123, 212, arg
	1536 : r, 212, 25, )
	1537 : r, 212, 25, ,
	1538 : s, 123, 213, id
	1539 : r, 213, 31, )
	1540 : r, 213, 31, ,
	1541 : r, 213, 31, [
	1542 : r, 213, 31, <
	1543 : r, 213, 31, <=
	1544 : r, 213, 31, >=
	1545 : r, 213, 31, >
	1546 : r, 213, 31, or
	1547 : r, 213, 31, and
	1548 : r, 213, 31, eq
	1549 : r, 213, 31, neq
	1550 : r, 213, 31, +
	1551 : r, 213, 31, -
	1552 : r, 213, 31, *
	1553 : r, 213, 31, /
	1554 : r, 213, 31, mod
	1555 : s, 123, 214, (
	1556 : s, 123, 215, -
	1557 : s, 123, 216, !
	1558 : s, 123, 217, num
	1559 : r, 217, 57, <
	1560 : r, 217, 57, <=
	1561 : r, 217, 57, >=
	1562 : r, 217, 57, >
	1563 : r, 217, 57, )
	1564 : r, 217, 57, ,
	1565 : r, 217, 57, or
	1566 : r, 217, 57, and
	1567 : r, 217, 57, eq
	1568 : r, 217, 57, neq
	1569 : r, 217, 57, +
	1570 : r, 217, 57, -
	1571 : r, 217, 57, *
	1572 : r, 217, 57, /
	1573 : r, 217, 57, mod
	1574 : s, 123, 218, real
	1575 : r, 218, 58, <
	1576 : r, 218, 58, <=
	1577 : r, 218, 58, >=
	1578 : r, 218, 58, >
	1579 : r, 218, 58, )
	1580 : r, 218, 58, ,
	1581 : r, 218, 58, or
	1582 : r, 218, 58, and
	1583 : r, 218, 58, eq
	1584 : r, 218, 58, neq
	1585 : r, 218, 58, +
	1586 : r, 218, 58, -
	1587 : r, 218, 58, *
	1588 : r, 218, 58, /
	1589 : r, 218, 58, mod
	1590 : s, 123, 219, true
	1591 : r, 219, 59, <
	1592 : r, 219, 59, <=
	1593 : r, 219, 59, >=
	1594 : r, 219, 59, >
	1595 : r, 219, 59, )
	1596 : r, 219, 59, ,
	1597 : r, 219, 59, or
	1598 : r, 219, 59, and
	1599 : r, 219, 59, eq
	1600 : r, 219, 59, neq
	1601 : r, 219, 59, +
	1602 : r, 219, 59, -
	1603 : r, 219, 59, *
	1604 : r, 219, 59, /
	1605 : r, 219, 59, mod
	1606 : s, 123, 220, false
	1607 : r, 220, 60, <
	1608 : r, 220, 60, <=
	1609 : r, 220, 60, >=
	1610 : r, 220, 60, >
	1611 : r, 220, 60, )
	1612 : r, 220, 60, ,
	1613 : r, 220, 60, or
	1614 : r, 220, 60, and
	1615 : r, 220, 60, eq
	1616 : r, 220, 60, neq
	1617 : r, 220, 60, +
	1618 : r, 220, 60, -
	1619 : r, 220, 60, *
	1620 : r, 220, 60, /
	1621 : r, 220, 60, mod
	1622 : s, 124, 221, )
	1623 : r, 221, 54, <
	1624 : r, 221, 54, <=
	1625 : r, 221, 54, >=
	1626 : r, 221, 54, >
	1627 : r, 221, 54, ;
	1628 : r, 221, 54, or
	1629 : r, 221, 54, and
	1630 : r, 221, 54, eq
	1631 : r, 221, 54, neq
	1632 : r, 221, 54, +
	1633 : r, 221, 54, -
	1634 : r, 221, 54, *
	1635 : r, 221, 54, /
	1636 : r, 221, 54, mod
	1637 : s, 124, 151, or
	1638 : g, 127, 61, loc
	1639 : g, 127, 222, bool
	1640 : g, 127, 63, join
	1641 : g, 127, 64, equality
	1642 : g, 127, 65, rel
	1643 : g, 127, 66, expr
	1644 : g, 127, 67, term
	1645 : g, 127, 68, unary
	1646 : g, 127, 69, factor
	1647 : s, 127, 70, id
	1648 : s, 127, 71, (
	1649 : s, 127, 72, -
	1650 : s, 127, 73, !
	1651 : s, 127, 74, num
	1652 : s, 127, 75, real
	1653 : s, 127, 76, true
	1654 : s, 127, 77, false
	1655 : g, 129, 61, loc
	1656 : g, 129, 223, join
	1657 : r, 223, 32, ]
	1658 : r, 223, 32, or
	1659 : g, 129, 64, equality
	1660 : g, 129, 65, rel
	1661 : g, 129, 66, expr
	1662 : g, 129, 67, term
	1663 : g, 129, 68, unary
	1664 : g, 129, 69, factor
	1665 : s, 129, 70, id
	1666 : s, 129, 71, (
	1667 : s, 129, 72, -
	1668 : s, 129, 73, !
	1669 : s, 129, 74, num
	1670 : s, 129, 75, real
	1671 : s, 129, 76, true
	1672 : s, 129, 77, false
	1673 : g, 130, 61, loc
	1674 : g, 130, 224, equality
	1675 : r, 224, 34, ]
	1676 : r, 224, 34, or
	1677 : r, 224, 34, and
	1678 : g, 130, 65, rel
	1679 : g, 130, 66, expr
	1680 : g, 130, 67, term
	1681 : g, 130, 68, unary
	1682 : g, 130, 69, factor
	1683 : s, 130, 70, id
	1684 : s, 130, 71, (
	1685 : s, 130, 72, -
	1686 : s, 130, 73, !
	1687 : s, 130, 74, num
	1688 : s, 130, 75, real
	1689 : s, 130, 76, true
	1690 : s, 130, 77, false
	1691 : g, 131, 61, loc
	1692 : g, 131, 225, rel
	1693 : r, 225, 36, ]
	1694 : r, 225, 36, or
	1695 : r, 225, 36, and
	1696 : r, 225, 36, eq
	1697 : r, 225, 36, neq
	1698 : g, 131, 66, expr
	1699 : g, 131, 67, term
	1700 : g, 131, 68, unary
	1701 : g, 131, 69, factor
	1702 : s, 131, 70, id
	1703 : s, 131, 71, (
	1704 : s, 131, 72, -
	1705 : s, 131, 73, !
	1706 : s, 131, 74, num
	1707 : s, 131, 75, real
	1708 : s, 131, 76, true
	1709 : s, 131, 77, false
	1710 : g, 132, 61, loc
	1711 : g, 132, 226, rel
	1712 : r, 226, 37, ]
	1713 : r, 226, 37, or
	1714 : r, 226, 37, and
	1715 : r, 226, 37, eq
	1716 : r, 226, 37, neq
	1717 : g, 132, 66, expr
	1718 : g, 132, 67, term
	1719 : g, 132, 68, unary
	1720 : g, 132, 69, factor
	1721 : s, 132, 70, id
	1722 : s, 132, 71, (
	1723 : s, 132, 72, -
	1724 : s, 132, 73, !
	1725 : s, 132, 74, num
	1726 : s, 132, 75, real
	1727 : s, 132, 76, true
	1728 : s, 132, 77, false
	1729 : g, 133, 227, loc
	1730 : r, 227, 55, ]
	1731 : r, 227, 55, or
	1732 : r, 227, 55, and
	1733 : r, 227, 55, eq
	1734 : r, 227, 55, neq
	1735 : r, 227, 55, +
	1736 : r, 227, 55, -
	1737 : r, 227, 55, *
	1738 : r, 227, 55, /
	1739 : r, 227, 55, mod
	1740 : g, 133, 228, expr
	1741 : r, 228, 39, ]
	1742 : r, 228, 39, or
	1743 : r, 228, 39, and
	1744 : r, 228, 39, eq
	1745 : r, 228, 39, neq
	1746 : g, 133, 229, term
	1747 : r, 229, 46, ]
	1748 : r, 229, 46, or
	1749 : r, 229, 46, and
	1750 : r, 229, 46, eq
	1751 : r, 229, 46, neq
	1752 : r, 229, 46, +
	1753 : r, 229, 46, -
	1754 : g, 133, 230, unary
	1755 : r, 230, 50, ]
	1756 : r, 230, 50, or
	1757 : r, 230, 50, and
	1758 : r, 230, 50, eq
	1759 : r, 230, 50, neq
	1760 : r, 230, 50, +
	1761 : r, 230, 50, -
	1762 : r, 230, 50, *
	1763 : r, 230, 50, /
	1764 : r, 230, 50, mod
	1765 : g, 133, 231, factor
	1766 : r, 231, 53, ]
	1767 : r, 231, 53, or
	1768 : r, 231, 53, and
	1769 : r, 231, 53, eq
	1770 : r, 231, 53, neq
	1771 : r, 231, 53, +
	1772 : r, 231, 53, -
	1773 : r, 231, 53, *
	1774 : r, 231, 53, /
	1775 : r, 231, 53, mod
	1776 : s, 133, 232, id
	1777 : r, 232, 31, ]
	1778 : r, 232, 31, or
	1779 : r, 232, 31, and
	1780 : r, 232, 31, eq
	1781 : r, 232, 31, neq
	1782 : r, 232, 31, +
	1783 : r, 232, 31, -
	1784 : r, 232, 31, *
	1785 : r, 232, 31, /
	1786 : r, 232, 31, mod
	1787 : r, 232, 31, [
	1788 : s, 133, 233, (
	1789 : s, 133, 234, -
	1790 : s, 133, 235, !
	1791 : s, 133, 236, num
	1792 : r, 236, 57, ]
	1793 : r, 236, 57, or
	1794 : r, 236, 57, and
	1795 : r, 236, 57, eq
	1796 : r, 236, 57, neq
	1797 : r, 236, 57, +
	1798 : r, 236, 57, -
	1799 : r, 236, 57, *
	1800 : r, 236, 57, /
	1801 : r, 236, 57, mod
	1802 : s, 133, 237, real
	1803 : r, 237, 58, ]
	1804 : r, 237, 58, or
	1805 : r, 237, 58, and
	1806 : r, 237, 58, eq
	1807 : r, 237, 58, neq
	1808 : r, 237, 58, +
	1809 : r, 237, 58, -
	1810 : r, 237, 58, *
	1811 : r, 237, 58, /
	1812 : r, 237, 58, mod
	1813 : s, 133, 238, true
	1814 : r, 238, 59, ]
	1815 : r, 238, 59, or
	1816 : r, 238, 59, and
	1817 : r, 238, 59, eq
	1818 : r, 238, 59, neq
	1819 : r, 238, 59, +
	1820 : r, 238, 59, -
	1821 : r, 238, 59, *
	1822 : r, 238, 59, /
	1823 : r, 238, 59, mod
	1824 : s, 133, 239, false
	1825 : r, 239, 60, ]
	1826 : r, 239, 60, or
	1827 : r, 239, 60, and
	1828 : r, 239, 60, eq
	1829 : r, 239, 60, neq
	1830 : r, 239, 60, +
	1831 : r, 239, 60, -
	1832 : r, 239, 60, *
	1833 : r, 239, 60, /
	1834 : r, 239, 60, mod
	1835 : g, 134, 227, loc
	1836 : g, 134, 240, expr
	1837 : r, 240, 40, ]
	1838 : r, 240, 40, or
	1839 : r, 240, 40, and
	1840 : r, 240, 40, eq
	1841 : r, 240, 40, neq
	1842 : g, 134, 229, term
	1843 : g, 134, 230, unary
	1844 : g, 134, 231, factor
	1845 : s, 134, 232, id
	1846 : s, 134, 233, (
	1847 : s, 134, 234, -
	1848 : s, 134, 235, !
	1849 : s, 134, 236, num
	1850 : s, 134, 237, real
	1851 : s, 134, 238, true
	1852 : s, 134, 239, false
	1853 : g, 135, 227, loc
	1854 : g, 135, 241, expr
	1855 : r, 241, 41, ]
	1856 : r, 241, 41, or
	1857 : r, 241, 41, and
	1858 : r, 241, 41, eq
	1859 : r, 241, 41, neq
	1860 : g, 135, 229, term
	1861 : g, 135, 230, unary
	1862 : g, 135, 231, factor
	1863 : s, 135, 232, id
	1864 : s, 135, 233, (
	1865 : s, 135, 234, -
	1866 : s, 135, 235, !
	1867 : s, 135, 236, num
	1868 : s, 135, 237, real
	1869 : s, 135, 238, true
	1870 : s, 135, 239, false
	1871 : g, 136, 227, loc
	1872 : g, 136, 242, expr
	1873 : r, 242, 42, ]
	1874 : r, 242, 42, or
	1875 : r, 242, 42, and
	1876 : r, 242, 42, eq
	1877 : r, 242, 42, neq
	1878 : g, 136, 229, term
	1879 : g, 136, 230, unary
	1880 : g, 136, 231, factor
	1881 : s, 136, 232, id
	1882 : s, 136, 233, (
	1883 : s, 136, 234, -
	1884 : s, 136, 235, !
	1885 : s, 136, 236, num
	1886 : s, 136, 237, real
	1887 : s, 136, 238, true
	1888 : s, 136, 239, false
	1889 : g, 137, 61, loc
	1890 : g, 137, 243, term
	1891 : r, 243, 44, <
	1892 : r, 243, 44, <=
	1893 : r, 243, 44, >=
	1894 : r, 243, 44, >
	1895 : r, 243, 44, ]
	1896 : r, 243, 44, or
	1897 : r, 243, 44, and
	1898 : r, 243, 44, eq
	1899 : r, 243, 44, neq
	1900 : r, 243, 44, +
	1901 : r, 243, 44, -
	1902 : g, 137, 68, unary
	1903 : g, 137, 69, factor
	1904 : s, 137, 70, id
	1905 : s, 137, 71, (
	1906 : s, 137, 72, -
	1907 : s, 137, 73, !
	1908 : s, 137, 74, num
	1909 : s, 137, 75, real
	1910 : s, 137, 76, true
	1911 : s, 137, 77, false
	1912 : g, 138, 61, loc
	1913 : g, 138, 244, term
	1914 : r, 244, 45, <
	1915 : r, 244, 45, <=
	1916 : r, 244, 45, >=
	1917 : r, 244, 45, >
	1918 : r, 244, 45, ]
	1919 : r, 244, 45, or
	1920 : r, 244, 45, and
	1921 : r, 244, 45, eq
	1922 : r, 244, 45, neq
	1923 : r, 244, 45, +
	1924 : r, 244, 45, -
	1925 : g, 138, 68, unary
	1926 : g, 138, 69, factor
	1927 : s, 138, 70, id
	1928 : s, 138, 71, (
	1929 : s, 138, 72, -
	1930 : s, 138, 73, !
	1931 : s, 138, 74, num
	1932 : s, 138, 75, real
	1933 : s, 138, 76, true
	1934 : s, 138, 77, false
	1935 : g, 139, 61, loc
	1936 : g, 139, 245, unary
	1937 : r, 245, 47, <
	1938 : r, 245, 47, <=
	1939 : r, 245, 47, >=
	1940 : r, 245, 47, >
	1941 : r, 245, 47, ]
	1942 : r, 245, 47, or
	1943 : r, 245, 47, and
	1944 : r, 245, 47, eq
	1945 : r, 245, 47, neq
	1946 : r, 245, 47, +
	1947 : r, 245, 47, -
	1948 : r, 245, 47, *
	1949 : r, 245, 47, /
	1950 : r, 245, 47, mod
	1951 : g, 139, 69, factor
	1952 : s, 139, 70, id
	1953 : s, 139, 71, (
	1954 : s, 139, 72, -
	1955 : s, 139, 73, !
	1956 : s, 139, 74, num
	1957 : s, 139, 75, real
	1958 : s, 139, 76, true
	1959 : s, 139, 77, false
	1960 : g, 140, 61, loc
	1961 : g, 140, 246, unary
	1962 : r, 246, 48, <
	1963 : r, 246, 48, <=
	1964 : r, 246, 48, >=
	1965 : r, 246, 48, >
	1966 : r, 246, 48, ]
	1967 : r, 246, 48, or
	1968 : r, 246, 48, and
	1969 : r, 246, 48, eq
	1970 : r, 246, 48, neq
	1971 : r, 246, 48, +
	1972 : r, 246, 48, -
	1973 : r, 246, 48, *
	1974 : r, 246, 48, /
	1975 : r, 246, 48, mod
	1976 : g, 140, 69, factor
	1977 : s, 140, 70, id
	1978 : s, 140, 71, (
	1979 : s, 140, 72, -
	1980 : s, 140, 73, !
	1981 : s, 140, 74, num
	1982 : s, 140, 75, real
	1983 : s, 140, 76, true
	1984 : s, 140, 77, false
	1985 : g, 141, 61, loc
	1986 : g, 141, 247, unary
	1987 : r, 247, 49, <
	1988 : r, 247, 49, <=
	1989 : r, 247, 49, >=
	1990 : r, 247, 49, >
	1991 : r, 247, 49, ]
	1992 : r, 247, 49, or
	1993 : r, 247, 49, and
	1994 : r, 247, 49, eq
	1995 : r, 247, 49, neq
	1996 : r, 247, 49, +
	1997 : r, 247, 49, -
	1998 : r, 247, 49, *
	1999 : r, 247, 49, /
	2000 : r, 247, 49, mod
	2001 : g, 141, 69, factor
	2002 : s, 141, 70, id
	2003 : s, 141, 71, (
	2004 : s, 141, 72, -
	2005 : s, 141, 73, !
	2006 : s, 141, 74, num
	2007 : s, 141, 75, real
	2008 : s, 141, 76, true
	2009 : s, 141, 77, false
	2010 : g, 142, 248, args
	2011 : g, 142, 203, loc
	2012 : g, 142, 204, bool
	2013 : g, 142, 205, join
	2014 : g, 142, 206, equality
	2015 : g, 142, 207, rel
	2016 : g, 142, 208, expr
	2017 : g, 142, 209, term
	2018 : g, 142, 210, unary
	2019 : g, 142, 211, factor
	2020 : g, 142, 212, arg
	2021 : s, 142, 213, id
	2022 : s, 142, 214, (
	2023 : s, 142, 215, -
	2024 : s, 142, 216, !
	2025 : s, 142, 217, num
	2026 : s, 142, 218, real
	2027 : s, 142, 219, true
	2028 : s, 142, 220, false
	2029 : s, 143, 249, )
	2030 : r, 249, 54, <
	2031 : r, 249, 54, <=
	2032 : r, 249, 54, >=
	2033 : r, 249, 54, >
	2034 : r, 249, 54, ]
	2035 : r, 249, 54, or
	2036 : r, 249, 54, and
	2037 : r, 249, 54, eq
	2038 : r, 249, 54, neq
	2039 : r, 249, 54, +
	2040 : r, 249, 54, -
	2041 : r, 249, 54, *
	2042 : r, 249, 54, /
	2043 : r, 249, 54, mod
	2044 : s, 143, 151, or
	2045 : g, 146, 61, loc
	2046 : g, 146, 250, bool
	2047 : g, 146, 63, join
	2048 : g, 146, 64, equality
	2049 : g, 146, 65, rel
	2050 : g, 146, 66, expr
	2051 : g, 146, 67, term
	2052 : g, 146, 68, unary
	2053 : g, 146, 69, factor
	2054 : s, 146, 70, id
	2055 : s, 146, 71, (
	2056 : s, 146, 72, -
	2057 : s, 146, 73, !
	2058 : s, 146, 74, num
	2059 : s, 146, 75, real
	2060 : s, 146, 76, true
	2061 : s, 146, 77, false
	2062 : g, 149, 61, loc
	2063 : g, 149, 251, bool
	2064 : g, 149, 63, join
	2065 : g, 149, 64, equality
	2066 : g, 149, 65, rel
	2067 : g, 149, 66, expr
	2068 : g, 149, 67, term
	2069 : g, 149, 68, unary
	2070 : g, 149, 69, factor
	2071 : s, 149, 70, id
	2072 : s, 149, 71, (
	2073 : s, 149, 72, -
	2074 : s, 149, 73, !
	2075 : s, 149, 74, num
	2076 : s, 149, 75, real
	2077 : s, 149, 76, true
	2078 : s, 149, 77, false
	2079 : g, 150, 252, M
	2080 : g, 151, 82, loc
	2081 : g, 151, 253, join
	2082 : r, 253, 32, )
	2083 : r, 253, 32, or
	2084 : g, 151, 85, equality
	2085 : g, 151, 86, rel
	2086 : g, 151, 87, expr
	2087 : g, 151, 88, term
	2088 : g, 151, 89, unary
	2089 : g, 151, 90, factor
	2090 : s, 151, 91, id
	2091 : s, 151, 92, (
	2092 : s, 151, 93, -
	2093 : s, 151, 94, !
	2094 : s, 151, 95, num
	2095 : s, 151, 96, real
	2096 : s, 151, 97, true
	2097 : s, 151, 98, false
	2098 : g, 152, 82, loc
	2099 : g, 152, 254, equality
	2100 : r, 254, 34, )
	2101 : r, 254, 34, or
	2102 : r, 254, 34, and
	2103 : g, 152, 86, rel
	2104 : g, 152, 87, expr
	2105 : g, 152, 88, term
	2106 : g, 152, 89, unary
	2107 : g, 152, 90, factor
	2108 : s, 152, 91, id
	2109 : s, 152, 92, (
	2110 : s, 152, 93, -
	2111 : s, 152, 94, !
	2112 : s, 152, 95, num
	2113 : s, 152, 96, real
	2114 : s, 152, 97, true
	2115 : s, 152, 98, false
	2116 : g, 153, 82, loc
	2117 : g, 153, 255, rel
	2118 : r, 255, 36, )
	2119 : r, 255, 36, or
	2120 : r, 255, 36, and
	2121 : r, 255, 36, eq
	2122 : r, 255, 36, neq
	2123 : g, 153, 87, expr
	2124 : g, 153, 88, term
	2125 : g, 153, 89, unary
	2126 : g, 153, 90, factor
	2127 : s, 153, 91, id
	2128 : s, 153, 92, (
	2129 : s, 153, 93, -
	2130 : s, 153, 94, !
	2131 : s, 153, 95, num
	2132 : s, 153, 96, real
	2133 : s, 153, 97, true
	2134 : s, 153, 98, false
	2135 : g, 154, 82, loc
	2136 : g, 154, 256, rel
	2137 : r, 256, 37, )
	2138 : r, 256, 37, or
	2139 : r, 256, 37, and
	2140 : r, 256, 37, eq
	2141 : r, 256, 37, neq
	2142 : g, 154, 87, expr
	2143 : g, 154, 88, term
	2144 : g, 154, 89, unary
	2145 : g, 154, 90, factor
	2146 : s, 154, 91, id
	2147 : s, 154, 92, (
	2148 : s, 154, 93, -
	2149 : s, 154, 94, !
	2150 : s, 154, 95, num
	2151 : s, 154, 96, real
	2152 : s, 154, 97, true
	2153 : s, 154, 98, false
	2154 : g, 155, 257, loc
	2155 : r, 257, 55, )
	2156 : r, 257, 55, or
	2157 : r, 257, 55, and
	2158 : r, 257, 55, eq
	2159 : r, 257, 55, neq
	2160 : r, 257, 55, +
	2161 : r, 257, 55, -
	2162 : r, 257, 55, *
	2163 : r, 257, 55, /
	2164 : r, 257, 55, mod
	2165 : g, 155, 258, expr
	2166 : r, 258, 39, )
	2167 : r, 258, 39, or
	2168 : r, 258, 39, and
	2169 : r, 258, 39, eq
	2170 : r, 258, 39, neq
	2171 : g, 155, 259, term
	2172 : r, 259, 46, )
	2173 : r, 259, 46, or
	2174 : r, 259, 46, and
	2175 : r, 259, 46, eq
	2176 : r, 259, 46, neq
	2177 : r, 259, 46, +
	2178 : r, 259, 46, -
	2179 : g, 155, 260, unary
	2180 : r, 260, 50, )
	2181 : r, 260, 50, or
	2182 : r, 260, 50, and
	2183 : r, 260, 50, eq
	2184 : r, 260, 50, neq
	2185 : r, 260, 50, +
	2186 : r, 260, 50, -
	2187 : r, 260, 50, *
	2188 : r, 260, 50, /
	2189 : r, 260, 50, mod
	2190 : g, 155, 261, factor
	2191 : r, 261, 53, )
	2192 : r, 261, 53, or
	2193 : r, 261, 53, and
	2194 : r, 261, 53, eq
	2195 : r, 261, 53, neq
	2196 : r, 261, 53, +
	2197 : r, 261, 53, -
	2198 : r, 261, 53, *
	2199 : r, 261, 53, /
	2200 : r, 261, 53, mod
	2201 : s, 155, 262, id
	2202 : r, 262, 31, )
	2203 : r, 262, 31, or
	2204 : r, 262, 31, and
	2205 : r, 262, 31, eq
	2206 : r, 262, 31, neq
	2207 : r, 262, 31, +
	2208 : r, 262, 31, -
	2209 : r, 262, 31, *
	2210 : r, 262, 31, /
	2211 : r, 262, 31, mod
	2212 : r, 262, 31, [
	2213 : s, 155, 263, (
	2214 : s, 155, 264, -
	2215 : s, 155, 265, !
	2216 : s, 155, 266, num
	2217 : r, 266, 57, )
	2218 : r, 266, 57, or
	2219 : r, 266, 57, and
	2220 : r, 266, 57, eq
	2221 : r, 266, 57, neq
	2222 : r, 266, 57, +
	2223 : r, 266, 57, -
	2224 : r, 266, 57, *
	2225 : r, 266, 57, /
	2226 : r, 266, 57, mod
	2227 : s, 155, 267, real
	2228 : r, 267, 58, )
	2229 : r, 267, 58, or
	2230 : r, 267, 58, and
	2231 : r, 267, 58, eq
	2232 : r, 267, 58, neq
	2233 : r, 267, 58, +
	2234 : r, 267, 58, -
	2235 : r, 267, 58, *
	2236 : r, 267, 58, /
	2237 : r, 267, 58, mod
	2238 : s, 155, 268, true
	2239 : r, 268, 59, )
	2240 : r, 268, 59, or
	2241 : r, 268, 59, and
	2242 : r, 268, 59, eq
	2243 : r, 268, 59, neq
	2244 : r, 268, 59, +
	2245 : r, 268, 59, -
	2246 : r, 268, 59, *
	2247 : r, 268, 59, /
	2248 : r, 268, 59, mod
	2249 : s, 155, 269, false
	2250 : r, 269, 60, )
	2251 : r, 269, 60, or
	2252 : r, 269, 60, and
	2253 : r, 269, 60, eq
	2254 : r, 269, 60, neq
	2255 : r, 269, 60, +
	2256 : r, 269, 60, -
	2257 : r, 269, 60, *
	2258 : r, 269, 60, /
	2259 : r, 269, 60, mod
	2260 : g, 156, 257, loc
	2261 : g, 156, 270, expr
	2262 : r, 270, 40, )
	2263 : r, 270, 40, or
	2264 : r, 270, 40, and
	2265 : r, 270, 40, eq
	2266 : r, 270, 40, neq
	2267 : g, 156, 259, term
	2268 : g, 156, 260, unary
	2269 : g, 156, 261, factor
	2270 : s, 156, 262, id
	2271 : s, 156, 263, (
	2272 : s, 156, 264, -
	2273 : s, 156, 265, !
	2274 : s, 156, 266, num
	2275 : s, 156, 267, real
	2276 : s, 156, 268, true
	2277 : s, 156, 269, false
	2278 : g, 157, 257, loc
	2279 : g, 157, 271, expr
	2280 : r, 271, 41, )
	2281 : r, 271, 41, or
	2282 : r, 271, 41, and
	2283 : r, 271, 41, eq
	2284 : r, 271, 41, neq
	2285 : g, 157, 259, term
	2286 : g, 157, 260, unary
	2287 : g, 157, 261, factor
	2288 : s, 157, 262, id
	2289 : s, 157, 263, (
	2290 : s, 157, 264, -
	2291 : s, 157, 265, !
	2292 : s, 157, 266, num
	2293 : s, 157, 267, real
	2294 : s, 157, 268, true
	2295 : s, 157, 269, false
	2296 : g, 158, 257, loc
	2297 : g, 158, 272, expr
	2298 : r, 272, 42, )
	2299 : r, 272, 42, or
	2300 : r, 272, 42, and
	2301 : r, 272, 42, eq
	2302 : r, 272, 42, neq
	2303 : g, 158, 259, term
	2304 : g, 158, 260, unary
	2305 : g, 158, 261, factor
	2306 : s, 158, 262, id
	2307 : s, 158, 263, (
	2308 : s, 158, 264, -
	2309 : s, 158, 265, !
	2310 : s, 158, 266, num
	2311 : s, 158, 267, real
	2312 : s, 158, 268, true
	2313 : s, 158, 269, false
	2314 : g, 159, 82, loc
	2315 : g, 159, 273, term
	2316 : r, 273, 44, <
	2317 : r, 273, 44, <=
	2318 : r, 273, 44, >=
	2319 : r, 273, 44, >
	2320 : r, 273, 44, )
	2321 : r, 273, 44, or
	2322 : r, 273, 44, and
	2323 : r, 273, 44, eq
	2324 : r, 273, 44, neq
	2325 : r, 273, 44, +
	2326 : r, 273, 44, -
	2327 : g, 159, 89, unary
	2328 : g, 159, 90, factor
	2329 : s, 159, 91, id
	2330 : s, 159, 92, (
	2331 : s, 159, 93, -
	2332 : s, 159, 94, !
	2333 : s, 159, 95, num
	2334 : s, 159, 96, real
	2335 : s, 159, 97, true
	2336 : s, 159, 98, false
	2337 : g, 160, 82, loc
	2338 : g, 160, 274, term
	2339 : r, 274, 45, <
	2340 : r, 274, 45, <=
	2341 : r, 274, 45, >=
	2342 : r, 274, 45, >
	2343 : r, 274, 45, )
	2344 : r, 274, 45, or
	2345 : r, 274, 45, and
	2346 : r, 274, 45, eq
	2347 : r, 274, 45, neq
	2348 : r, 274, 45, +
	2349 : r, 274, 45, -
	2350 : g, 160, 89, unary
	2351 : g, 160, 90, factor
	2352 : s, 160, 91, id
	2353 : s, 160, 92, (
	2354 : s, 160, 93, -
	2355 : s, 160, 94, !
	2356 : s, 160, 95, num
	2357 : s, 160, 96, real
	2358 : s, 160, 97, true
	2359 : s, 160, 98, false
	2360 : g, 161, 82, loc
	2361 : g, 161, 275, unary
	2362 : r, 275, 47, <
	2363 : r, 275, 47, <=
	2364 : r, 275, 47, >=
	2365 : r, 275, 47, >
	2366 : r, 275, 47, )
	2367 : r, 275, 47, or
	2368 : r, 275, 47, and
	2369 : r, 275, 47, eq
	2370 : r, 275, 47, neq
	2371 : r, 275, 47, +
	2372 : r, 275, 47, -
	2373 : r, 275, 47, *
	2374 : r, 275, 47, /
	2375 : r, 275, 47, mod
	2376 : g, 161, 90, factor
	2377 : s, 161, 91, id
	2378 : s, 161, 92, (
	2379 : s, 161, 93, -
	2380 : s, 161, 94, !
	2381 : s, 161, 95, num
	2382 : s, 161, 96, real
	2383 : s, 161, 97, true
	2384 : s, 161, 98, false
	2385 : g, 162, 82, loc
	2386 : g, 162, 276, unary
	2387 : r, 276, 48, <
	2388 : r, 276, 48, <=
	2389 : r, 276, 48, >=
	2390 : r, 276, 48, >
	2391 : r, 276, 48, )
	2392 : r, 276, 48, or
	2393 : r, 276, 48, and
	2394 : r, 276, 48, eq
	2395 : r, 276, 48, neq
	2396 : r, 276, 48, +
	2397 : r, 276, 48, -
	2398 : r, 276, 48, *
	2399 : r, 276, 48, /
	2400 : r, 276, 48, mod
	2401 : g, 162, 90, factor
	2402 : s, 162, 91, id
	2403 : s, 162, 92, (
	2404 : s, 162, 93, -
	2405 : s, 162, 94, !
	2406 : s, 162, 95, num
	2407 : s, 162, 96, real
	2408 : s, 162, 97, true
	2409 : s, 162, 98, false
	2410 : g, 163, 82, loc
	2411 : g, 163, 277, unary
	2412 : r, 277, 49, <
	2413 : r, 277, 49, <=
	2414 : r, 277, 49, >=
	2415 : r, 277, 49, >
	2416 : r, 277, 49, )
	2417 : r, 277, 49, or
	2418 : r, 277, 49, and
	2419 : r, 277, 49, eq
	2420 : r, 277, 49, neq
	2421 : r, 277, 49, +
	2422 : r, 277, 49, -
	2423 : r, 277, 49, *
	2424 : r, 277, 49, /
	2425 : r, 277, 49, mod
	2426 : g, 163, 90, factor
	2427 : s, 163, 91, id
	2428 : s, 163, 92, (
	2429 : s, 163, 93, -
	2430 : s, 163, 94, !
	2431 : s, 163, 95, num
	2432 : s, 163, 96, real
	2433 : s, 163, 97, true
	2434 : s, 163, 98, false
	2435 : g, 164, 278, args
	2436 : g, 164, 203, loc
	2437 : g, 164, 204, bool
	2438 : g, 164, 205, join
	2439 : g, 164, 206, equality
	2440 : g, 164, 207, rel
	2441 : g, 164, 208, expr
	2442 : g, 164, 209, term
	2443 : g, 164, 210, unary
	2444 : g, 164, 211, factor
	2445 : g, 164, 212, arg
	2446 : s, 164, 213, id
	2447 : s, 164, 214, (
	2448 : s, 164, 215, -
	2449 : s, 164, 216, !
	2450 : s, 164, 217, num
	2451 : s, 164, 218, real
	2452 : s, 164, 219, true
	2453 : s, 164, 220, false
	2454 : s, 165, 279, )
	2455 : r, 279, 54, <
	2456 : r, 279, 54, <=
	2457 : r, 279, 54, >=
	2458 : r, 279, 54, >
	2459 : r, 279, 54, )
	2460 : r, 279, 54, or
	2461 : r, 279, 54, and
	2462 : r, 279, 54, eq
	2463 : r, 279, 54, neq
	2464 : r, 279, 54, +
	2465 : r, 279, 54, -
	2466 : r, 279, 54, *
	2467 : r, 279, 54, /
	2468 : r, 279, 54, mod
	2469 : s, 165, 151, or
	2470 : s, 168, 280, )
	2471 : r, 280, 27, [
	2472 : r, 280, 27, id
	2473 : r, 280, 27, if
	2474 : r, 280, 27, while
	2475 : r, 280, 27, do
	2476 : r, 280, 27, return
	2477 : r, 280, 27, {
	2478 : r, 280, 27, ;
	2479 : s, 168, 151, or
	2480 : s, 169, 281, (
	2481 : g, 170, 78, loc
	2482 : g, 170, 282, bool
	2483 : g, 170, 45, join
	2484 : g, 170, 46, equality
	2485 : g, 170, 47, rel
	2486 : g, 170, 48, expr
	2487 : g, 170, 49, term
	2488 : g, 170, 50, unary
	2489 : g, 170, 51, factor
	2490 : s, 170, 80, id
	2491 : s, 170, 54, (
	2492 : s, 170, 55, -
	2493 : s, 170, 56, !
	2494 : s, 170, 57, num
	2495 : s, 170, 58, real
	2496 : s, 170, 59, true
	2497 : s, 170, 60, false
	2498 : g, 171, 22, decl
	2499 : g, 171, 23, type
	2500 : g, 171, 283, stmts
	2501 : s, 171, 11, basic
	2502 : g, 172, 82, loc
	2503 : g, 172, 284, bool
	2504 : g, 172, 84, join
	2505 : g, 172, 85, equality
	2506 : g, 172, 86, rel
	2507 : g, 172, 87, expr
	2508 : g, 172, 88, term
	2509 : g, 172, 89, unary
	2510 : g, 172, 90, factor
	2511 : s, 172, 91, id
	2512 : s, 172, 92, (
	2513 : s, 172, 93, -
	2514 : s, 172, 94, !
	2515 : s, 172, 95, num
	2516 : s, 172, 96, real
	2517 : s, 172, 97, true
	2518 : s, 172, 98, false
	2519 : s, 173, 285, (
	2520 : g, 174, 100, block
	2521 : g, 174, 286, stmt
	2522 : g, 174, 102, loc
	2523 : s, 174, 29, id
	2524 : s, 174, 103, {
	2525 : s, 174, 104, if
	2526 : s, 174, 105, while
	2527 : s, 174, 106, do
	2528 : s, 174, 107, return
	2529 : s, 175, 287, ;
	2530 : r, 287, 22, while
	2531 : s, 176, 288, ]
	2532 : r, 288, 30, ;
	2533 : r, 288, 30, [
	2534 : r, 288, 30, <
	2535 : r, 288, 30, <=
	2536 : r, 288, 30, >=
	2537 : r, 288, 30, >
	2538 : r, 288, 30, or
	2539 : r, 288, 30, and
	2540 : r, 288, 30, eq
	2541 : r, 288, 30, neq
	2542 : r, 288, 30, +
	2543 : r, 288, 30, -
	2544 : r, 288, 30, *
	2545 : r, 288, 30, /
	2546 : r, 288, 30, mod
	2547 : s, 176, 129, or
	2548 : s, 177, 110, and
	2549 : s, 178, 111, eq
	2550 : s, 178, 112, neq
	2551 : s, 181, 289, [
	2552 : s, 182, 290, +
	2553 : s, 182, 291, -
	2554 : s, 183, 292, *
	2555 : s, 183, 293, /
	2556 : s, 183, 294, mod
	2557 : s, 186, 295, (
	2558 : r, 295, 26, )
	2559 : r, 295, 26, ,
	2560 : g, 187, 82, loc
	2561 : g, 187, 296, bool
	2562 : g, 187, 84, join
	2563 : g, 187, 85, equality
	2564 : g, 187, 86, rel
	2565 : g, 187, 87, expr
	2566 : g, 187, 88, term
	2567 : g, 187, 89, unary
	2568 : g, 187, 90, factor
	2569 : s, 187, 91, id
	2570 : s, 187, 92, (
	2571 : s, 187, 93, -
	2572 : s, 187, 94, !
	2573 : s, 187, 95, num
	2574 : s, 187, 96, real
	2575 : s, 187, 97, true
	2576 : s, 187, 98, false
	2577 : g, 188, 181, loc
	2578 : g, 188, 297, unary
	2579 : r, 297, 52, ;
	2580 : r, 297, 52, or
	2581 : r, 297, 52, and
	2582 : r, 297, 52, eq
	2583 : r, 297, 52, neq
	2584 : r, 297, 52, +
	2585 : r, 297, 52, -
	2586 : r, 297, 52, *
	2587 : r, 297, 52, /
	2588 : r, 297, 52, mod
	2589 : g, 188, 185, factor
	2590 : s, 188, 186, id
	2591 : s, 188, 187, (
	2592 : s, 188, 188, -
	2593 : s, 188, 189, !
	2594 : s, 188, 190, num
	2595 : s, 188, 191, real
	2596 : s, 188, 192, true
	2597 : s, 188, 193, false
	2598 : g, 189, 181, loc
	2599 : g, 189, 298, unary
	2600 : r, 298, 51, ;
	2601 : r, 298, 51, or
	2602 : r, 298, 51, and
	2603 : r, 298, 51, eq
	2604 : r, 298, 51, neq
	2605 : r, 298, 51, +
	2606 : r, 298, 51, -
	2607 : r, 298, 51, *
	2608 : r, 298, 51, /
	2609 : r, 298, 51, mod
	2610 : g, 189, 185, factor
	2611 : s, 189, 186, id
	2612 : s, 189, 187, (
	2613 : s, 189, 188, -
	2614 : s, 189, 189, !
	2615 : s, 189, 190, num
	2616 : s, 189, 191, real
	2617 : s, 189, 192, true
	2618 : s, 189, 193, false
	2619 : s, 194, 290, +
	2620 : s, 194, 291, -
	2621 : s, 195, 290, +
	2622 : s, 195, 291, -
	2623 : s, 196, 290, +
	2624 : s, 196, 291, -
	2625 : s, 197, 119, *
	2626 : s, 197, 120, /
	2627 : s, 197, 121, mod
	2628 : s, 198, 119, *
	2629 : s, 198, 120, /
	2630 : s, 198, 121, mod
	2631 : s, 202, 299, )
	2632 : r, 299, 56, <
	2633 : r, 299, 56, <=
	2634 : r, 299, 56, >=
	2635 : r, 299, 56, >
	2636 : r, 299, 56, ;
	2637 : r, 299, 56, or
	2638 : r, 299, 56, and
	2639 : r, 299, 56, eq
	2640 : r, 299, 56, neq
	2641 : r, 299, 56, +
	2642 : r, 299, 56, -
	2643 : r, 299, 56, *
	2644 : r, 299, 56, /
	2645 : r, 299, 56, mod
	2646 : s, 202, 300, ,
	2647 : s, 203, 301, [
	2648 : s, 204, 302, or
	2649 : s, 205, 303, and
	2650 : s, 206, 304, eq
	2651 : s, 206, 305, neq
	2652 : s, 208, 306, <
	2653 : s, 208, 307, <=
	2654 : s, 208, 308, >=
	2655 : s, 208, 309, >
	2656 : s, 208, 310, +
	2657 : s, 208, 311, -
	2658 : s, 209, 312, *
	2659 : s, 209, 313, /
	2660 : s, 209, 314, mod
	2661 : s, 213, 315, (
	2662 : r, 315, 26, )
	2663 : r, 315, 26, ,
	2664 : g, 214, 82, loc
	2665 : g, 214, 316, bool
	2666 : g, 214, 84, join
	2667 : g, 214, 85, equality
	2668 : g, 214, 86, rel
	2669 : g, 214, 87, expr
	2670 : g, 214, 88, term
	2671 : g, 214, 89, unary
	2672 : g, 214, 90, factor
	2673 : s, 214, 91, id
	2674 : s, 214, 92, (
	2675 : s, 214, 93, -
	2676 : s, 214, 94, !
	2677 : s, 214, 95, num
	2678 : s, 214, 96, real
	2679 : s, 214, 97, true
	2680 : s, 214, 98, false
	2681 : g, 215, 317, loc
	2682 : r, 317, 55, <
	2683 : r, 317, 55, <=
	2684 : r, 317, 55, >=
	2685 : r, 317, 55, >
	2686 : r, 317, 55, )
	2687 : r, 317, 55, ,
	2688 : r, 317, 55, or
	2689 : r, 317, 55, and
	2690 : r, 317, 55, eq
	2691 : r, 317, 55, neq
	2692 : r, 317, 55, +
	2693 : r, 317, 55, -
	2694 : r, 317, 55, *
	2695 : r, 317, 55, /
	2696 : r, 317, 55, mod
	2697 : g, 215, 318, unary
	2698 : r, 318, 52, <
	2699 : r, 318, 52, <=
	2700 : r, 318, 52, >=
	2701 : r, 318, 52, >
	2702 : r, 318, 52, )
	2703 : r, 318, 52, ,
	2704 : r, 318, 52, or
	2705 : r, 318, 52, and
	2706 : r, 318, 52, eq
	2707 : r, 318, 52, neq
	2708 : r, 318, 52, +
	2709 : r, 318, 52, -
	2710 : r, 318, 52, *
	2711 : r, 318, 52, /
	2712 : r, 318, 52, mod
	2713 : g, 215, 211, factor
	2714 : s, 215, 319, id
	2715 : r, 319, 31, <
	2716 : r, 319, 31, <=
	2717 : r, 319, 31, >=
	2718 : r, 319, 31, >
	2719 : r, 319, 31, )
	2720 : r, 319, 31, ,
	2721 : r, 319, 31, or
	2722 : r, 319, 31, and
	2723 : r, 319, 31, eq
	2724 : r, 319, 31, neq
	2725 : r, 319, 31, +
	2726 : r, 319, 31, -
	2727 : r, 319, 31, *
	2728 : r, 319, 31, /
	2729 : r, 319, 31, mod
	2730 : r, 319, 31, [
	2731 : s, 215, 214, (
	2732 : s, 215, 215, -
	2733 : s, 215, 216, !
	2734 : s, 215, 217, num
	2735 : s, 215, 218, real
	2736 : s, 215, 219, true
	2737 : s, 215, 220, false
	2738 : g, 216, 317, loc
	2739 : g, 216, 320, unary
	2740 : r, 320, 51, <
	2741 : r, 320, 51, <=
	2742 : r, 320, 51, >=
	2743 : r, 320, 51, >
	2744 : r, 320, 51, )
	2745 : r, 320, 51, ,
	2746 : r, 320, 51, or
	2747 : r, 320, 51, and
	2748 : r, 320, 51, eq
	2749 : r, 320, 51, neq
	2750 : r, 320, 51, +
	2751 : r, 320, 51, -
	2752 : r, 320, 51, *
	2753 : r, 320, 51, /
	2754 : r, 320, 51, mod
	2755 : g, 216, 211, factor
	2756 : s, 216, 319, id
	2757 : s, 216, 214, (
	2758 : s, 216, 215, -
	2759 : s, 216, 216, !
	2760 : s, 216, 217, num
	2761 : s, 216, 218, real
	2762 : s, 216, 219, true
	2763 : s, 216, 220, false
	2764 : s, 222, 321, ]
	2765 : r, 321, 30, <
	2766 : r, 321, 30, <=
	2767 : r, 321, 30, >=
	2768 : r, 321, 30, >
	2769 : r, 321, 30, ]
	2770 : r, 321, 30, or
	2771 : r, 321, 30, and
	2772 : r, 321, 30, eq
	2773 : r, 321, 30, neq
	2774 : r, 321, 30, +
	2775 : r, 321, 30, -
	2776 : r, 321, 30, *
	2777 : r, 321, 30, /
	2778 : r, 321, 30, mod
	2779 : r, 321, 30, [
	2780 : s, 222, 129, or
	2781 : s, 223, 130, and
	2782 : s, 224, 131, eq
	2783 : s, 224, 132, neq
	2784 : s, 227, 322, [
	2785 : s, 228, 323, +
	2786 : s, 228, 324, -
	2787 : s, 229, 325, *
	2788 : s, 229, 326, /
	2789 : s, 229, 327, mod
	2790 : s, 232, 328, (
	2791 : r, 328, 26, )
	2792 : r, 328, 26, ,
	2793 : g, 233, 82, loc
	2794 : g, 233, 329, bool
	2795 : g, 233, 84, join
	2796 : g, 233, 85, equality
	2797 : g, 233, 86, rel
	2798 : g, 233, 87, expr
	2799 : g, 233, 88, term
	2800 : g, 233, 89, unary
	2801 : g, 233, 90, factor
	2802 : s, 233, 91, id
	2803 : s, 233, 92, (
	2804 : s, 233, 93, -
	2805 : s, 233, 94, !
	2806 : s, 233, 95, num
	2807 : s, 233, 96, real
	2808 : s, 233, 97, true
	2809 : s, 233, 98, false
	2810 : g, 234, 227, loc
	2811 : g, 234, 330, unary
	2812 : r, 330, 52, ]
	2813 : r, 330, 52, or
	2814 : r, 330, 52, and
	2815 : r, 330, 52, eq
	2816 : r, 330, 52, neq
	2817 : r, 330, 52, +
	2818 : r, 330, 52, -
	2819 : r, 330, 52, *
	2820 : r, 330, 52, /
	2821 : r, 330, 52, mod
	2822 : g, 234, 231, factor
	2823 : s, 234, 232, id
	2824 : s, 234, 233, (
	2825 : s, 234, 234, -
	2826 : s, 234, 235, !
	2827 : s, 234, 236, num
	2828 : s, 234, 237, real
	2829 : s, 234, 238, true
	2830 : s, 234, 239, false
	2831 : g, 235, 227, loc
	2832 : g, 235, 331, unary
	2833 : r, 331, 51, ]
	2834 : r, 331, 51, or
	2835 : r, 331, 51, and
	2836 : r, 331, 51, eq
	2837 : r, 331, 51, neq
	2838 : r, 331, 51, +
	2839 : r, 331, 51, -
	2840 : r, 331, 51, *
	2841 : r, 331, 51, /
	2842 : r, 331, 51, mod
	2843 : g, 235, 231, factor
	2844 : s, 235, 232, id
	2845 : s, 235, 233, (
	2846 : s, 235, 234, -
	2847 : s, 235, 235, !
	2848 : s, 235, 236, num
	2849 : s, 235, 237, real
	2850 : s, 235, 238, true
	2851 : s, 235, 239, false
	2852 : s, 240, 323, +
	2853 : s, 240, 324, -
	2854 : s, 241, 323, +
	2855 : s, 241, 324, -
	2856 : s, 242, 323, +
	2857 : s, 242, 324, -
	2858 : s, 243, 139, *
	2859 : s, 243, 140, /
	2860 : s, 243, 141, mod
	2861 : s, 244, 139, *
	2862 : s, 244, 140, /
	2863 : s, 244, 141, mod
	2864 : s, 248, 332, )
	2865 : r, 332, 56, <
	2866 : r, 332, 56, <=
	2867 : r, 332, 56, >=
	2868 : r, 332, 56, >
	2869 : r, 332, 56, ]
	2870 : r, 332, 56, or
	2871 : r, 332, 56, and
	2872 : r, 332, 56, eq
	2873 : r, 332, 56, neq
	2874 : r, 332, 56, +
	2875 : r, 332, 56, -
	2876 : r, 332, 56, *
	2877 : r, 332, 56, /
	2878 : r, 332, 56, mod
	2879 : s, 248, 300, ,
	2880 : s, 250, 333, ]
	2881 : r, 333, 30, <
	2882 : r, 333, 30, <=
	2883 : r, 333, 30, >=
	2884 : r, 333, 30, >
	2885 : r, 333, 30, ;
	2886 : r, 333, 30, or
	2887 : r, 333, 30, and
	2888 : r, 333, 30, eq
	2889 : r, 333, 30, neq
	2890 : r, 333, 30, +
	2891 : r, 333, 30, -
	2892 : r, 333, 30, *
	2893 : r, 333, 30, /
	2894 : r, 333, 30, mod
	2895 : r, 333, 30, [
	2896 : s, 250, 129, or
	2897 : s, 251, 334, ]
	2898 : r, 334, 30, <
	2899 : r, 334, 30, <=
	2900 : r, 334, 30, >=
	2901 : r, 334, 30, >
	2902 : r, 334, 30, )
	2903 : r, 334, 30, or
	2904 : r, 334, 30, and
	2905 : r, 334, 30, eq
	2906 : r, 334, 30, neq
	2907 : r, 334, 30, +
	2908 : r, 334, 30, -
	2909 : r, 334, 30, *
	2910 : r, 334, 30, /
	2911 : r, 334, 30, mod
	2912 : r, 334, 30, [
	2913 : s, 251, 129, or
	2914 : g, 252, 335, block
	2915 : r, 335, 23, }
	2916 : r, 335, 23, else
	2917 : r, 335, 23, [
	2918 : r, 335, 23, id
	2919 : r, 335, 23, if
	2920 : r, 335, 23, while
	2921 : r, 335, 23, do
	2922 : r, 335, 23, return
	2923 : r, 335, 23, {
	2924 : g, 252, 336, stmt
	2925 : r, 336, 18, }
	2926 : r, 336, 18, [
	2927 : r, 336, 18, id
	2928 : r, 336, 18, if
	2929 : r, 336, 18, while
	2930 : r, 336, 18, do
	2931 : r, 336, 18, return
	2932 : r, 336, 18, {
	2933 : r, 336, 18, else
	2934 : g, 252, 337, loc
	2935 : s, 252, 29, id
	2936 : s, 252, 338, {
	2937 : r, 338, 11, [
	2938 : r, 338, 11, id
	2939 : r, 338, 11, if
	2940 : r, 338, 11, while
	2941 : r, 338, 11, do
	2942 : r, 338, 11, return
	2943 : r, 338, 11, {
	2944 : r, 338, 11, }
	2945 : r, 338, 11, basic
	2946 : s, 252, 339, if
	2947 : s, 252, 340, while
	2948 : r, 340, 28, (
	2949 : r, 340, 28, [
	2950 : r, 340, 28, id
	2951 : r, 340, 28, if
	2952 : r, 340, 28, while
	2953 : r, 340, 28, do
	2954 : r, 340, 28, return
	2955 : r, 340, 28, {
	2956 : s, 252, 341, do
	2957 : r, 341, 28, (
	2958 : r, 341, 28, [
	2959 : r, 341, 28, id
	2960 : r, 341, 28, if
	2961 : r, 341, 28, while
	2962 : r, 341, 28, do
	2963 : r, 341, 28, return
	2964 : r, 341, 28, {
	2965 : s, 252, 342, return
	2966 : s, 253, 152, and
	2967 : s, 254, 153, eq
	2968 : s, 254, 154, neq
	2969 : s, 257, 343, [
	2970 : s, 258, 344, +
	2971 : s, 258, 345, -
	2972 : s, 259, 346, *
	2973 : s, 259, 347, /
	2974 : s, 259, 348, mod
	2975 : s, 262, 349, (
	2976 : r, 349, 26, )
	2977 : r, 349, 26, ,
	2978 : g, 263, 82, loc
	2979 : g, 263, 350, bool
	2980 : g, 263, 84, join
	2981 : g, 263, 85, equality
	2982 : g, 263, 86, rel
	2983 : g, 263, 87, expr
	2984 : g, 263, 88, term
	2985 : g, 263, 89, unary
	2986 : g, 263, 90, factor
	2987 : s, 263, 91, id
	2988 : s, 263, 92, (
	2989 : s, 263, 93, -
	2990 : s, 263, 94, !
	2991 : s, 263, 95, num
	2992 : s, 263, 96, real
	2993 : s, 263, 97, true
	2994 : s, 263, 98, false
	2995 : g, 264, 257, loc
	2996 : g, 264, 351, unary
	2997 : r, 351, 52, )
	2998 : r, 351, 52, or
	2999 : r, 351, 52, and
	3000 : r, 351, 52, eq
	3001 : r, 351, 52, neq
	3002 : r, 351, 52, +
	3003 : r, 351, 52, -
	3004 : r, 351, 52, *
	3005 : r, 351, 52, /
	3006 : r, 351, 52, mod
	3007 : g, 264, 261, factor
	3008 : s, 264, 262, id
	3009 : s, 264, 263, (
	3010 : s, 264, 264, -
	3011 : s, 264, 265, !
	3012 : s, 264, 266, num
	3013 : s, 264, 267, real
	3014 : s, 264, 268, true
	3015 : s, 264, 269, false
	3016 : g, 265, 257, loc
	3017 : g, 265, 352, unary
	3018 : r, 352, 51, )
	3019 : r, 352, 51, or
	3020 : r, 352, 51, and
	3021 : r, 352, 51, eq
	3022 : r, 352, 51, neq
	3023 : r, 352, 51, +
	3024 : r, 352, 51, -
	3025 : r, 352, 51, *
	3026 : r, 352, 51, /
	3027 : r, 352, 51, mod
	3028 : g, 265, 261, factor
	3029 : s, 265, 262, id
	3030 : s, 265, 263, (
	3031 : s, 265, 264, -
	3032 : s, 265, 265, !
	3033 : s, 265, 266, num
	3034 : s, 265, 267, real
	3035 : s, 265, 268, true
	3036 : s, 265, 269, false
	3037 : s, 270, 344, +
	3038 : s, 270, 345, -
	3039 : s, 271, 344, +
	3040 : s, 271, 345, -
	3041 : s, 272, 344, +
	3042 : s, 272, 345, -
	3043 : s, 273, 161, *
	3044 : s, 273, 162, /
	3045 : s, 273, 163, mod
	3046 : s, 274, 161, *
	3047 : s, 274, 162, /
	3048 : s, 274, 163, mod
	3049 : s, 278, 353, )
	3050 : r, 353, 56, <
	3051 : r, 353, 56, <=
	3052 : r, 353, 56, >=
	3053 : r, 353, 56, >
	3054 : r, 353, 56, )
	3055 : r, 353, 56, or
	3056 : r, 353, 56, and
	3057 : r, 353, 56, eq
	3058 : r, 353, 56, neq
	3059 : r, 353, 56, +
	3060 : r, 353, 56, -
	3061 : r, 353, 56, *
	3062 : r, 353, 56, /
	3063 : r, 353, 56, mod
	3064 : s, 278, 300, ,
	3065 : g, 280, 354, M
	3066 : g, 281, 82, loc
	3067 : g, 281, 355, bool
	3068 : g, 281, 84, join
	3069 : g, 281, 85, equality
	3070 : g, 281, 86, rel
	3071 : g, 281, 87, expr
	3072 : g, 281, 88, term
	3073 : g, 281, 89, unary
	3074 : g, 281, 90, factor
	3075 : s, 281, 91, id
	3076 : s, 281, 92, (
	3077 : s, 281, 93, -
	3078 : s, 281, 94, !
	3079 : s, 281, 95, num
	3080 : s, 281, 96, real
	3081 : s, 281, 97, true
	3082 : s, 281, 98, false
	3083 : s, 282, 356, ;
	3084 : r, 356, 17, while
	3085 : s, 282, 109, or
	3086 : g, 283, 26, block
	3087 : g, 283, 27, stmt
	3088 : g, 283, 28, loc
	3089 : s, 283, 29, id
	3090 : s, 283, 30, {
	3091 : s, 283, 357, }
	3092 : r, 357, 9, while
	3093 : s, 283, 32, if
	3094 : s, 283, 33, while
	3095 : s, 283, 34, do
	3096 : s, 283, 35, return
	3097 : s, 284, 358, )
	3098 : r, 358, 27, [
	3099 : r, 358, 27, id
	3100 : r, 358, 27, if
	3101 : r, 358, 27, while
	3102 : r, 358, 27, do
	3103 : r, 358, 27, return
	3104 : r, 358, 27, {
	3105 : r, 358, 27, ;
	3106 : s, 284, 151, or
	3107 : g, 285, 82, loc
	3108 : g, 285, 359, bool
	3109 : g, 285, 84, join
	3110 : g, 285, 85, equality
	3111 : g, 285, 86, rel
	3112 : g, 285, 87, expr
	3113 : g, 285, 88, term
	3114 : g, 285, 89, unary
	3115 : g, 285, 90, factor
	3116 : s, 285, 91, id
	3117 : s, 285, 92, (
	3118 : s, 285, 93, -
	3119 : s, 285, 94, !
	3120 : s, 285, 95, num
	3121 : s, 285, 96, real
	3122 : s, 285, 97, true
	3123 : s, 285, 98, false
	3124 : s, 286, 360, while
	3125 : g, 289, 61, loc
	3126 : g, 289, 361, bool
	3127 : g, 289, 63, join
	3128 : g, 289, 64, equality
	3129 : g, 289, 65, rel
	3130 : g, 289, 66, expr
	3131 : g, 289, 67, term
	3132 : g, 289, 68, unary
	3133 : g, 289, 69, factor
	3134 : s, 289, 70, id
	3135 : s, 289, 71, (
	3136 : s, 289, 72, -
	3137 : s, 289, 73, !
	3138 : s, 289, 74, num
	3139 : s, 289, 75, real
	3140 : s, 289, 76, true
	3141 : s, 289, 77, false
	3142 : g, 290, 181, loc
	3143 : g, 290, 362, term
	3144 : r, 362, 44, ;
	3145 : r, 362, 44, or
	3146 : r, 362, 44, and
	3147 : r, 362, 44, eq
	3148 : r, 362, 44, neq
	3149 : r, 362, 44, +
	3150 : r, 362, 44, -
	3151 : g, 290, 184, unary
	3152 : g, 290, 185, factor
	3153 : s, 290, 186, id
	3154 : s, 290, 187, (
	3155 : s, 290, 188, -
	3156 : s, 290, 189, !
	3157 : s, 290, 190, num
	3158 : s, 290, 191, real
	3159 : s, 290, 192, true
	3160 : s, 290, 193, false
	3161 : g, 291, 181, loc
	3162 : g, 291, 363, term
	3163 : r, 363, 45, ;
	3164 : r, 363, 45, or
	3165 : r, 363, 45, and
	3166 : r, 363, 45, eq
	3167 : r, 363, 45, neq
	3168 : r, 363, 45, +
	3169 : r, 363, 45, -
	3170 : g, 291, 184, unary
	3171 : g, 291, 185, factor
	3172 : s, 291, 186, id
	3173 : s, 291, 187, (
	3174 : s, 291, 188, -
	3175 : s, 291, 189, !
	3176 : s, 291, 190, num
	3177 : s, 291, 191, real
	3178 : s, 291, 192, true
	3179 : s, 291, 193, false
	3180 : g, 292, 181, loc
	3181 : g, 292, 364, unary
	3182 : r, 364, 47, ;
	3183 : r, 364, 47, or
	3184 : r, 364, 47, and
	3185 : r, 364, 47, eq
	3186 : r, 364, 47, neq
	3187 : r, 364, 47, +
	3188 : r, 364, 47, -
	3189 : r, 364, 47, *
	3190 : r, 364, 47, /
	3191 : r, 364, 47, mod
	3192 : g, 292, 185, factor
	3193 : s, 292, 186, id
	3194 : s, 292, 187, (
	3195 : s, 292, 188, -
	3196 : s, 292, 189, !
	3197 : s, 292, 190, num
	3198 : s, 292, 191, real
	3199 : s, 292, 192, true
	3200 : s, 292, 193, false
	3201 : g, 293, 181, loc
	3202 : g, 293, 365, unary
	3203 : r, 365, 48, ;
	3204 : r, 365, 48, or
	3205 : r, 365, 48, and
	3206 : r, 365, 48, eq
	3207 : r, 365, 48, neq
	3208 : r, 365, 48, +
	3209 : r, 365, 48, -
	3210 : r, 365, 48, *
	3211 : r, 365, 48, /
	3212 : r, 365, 48, mod
	3213 : g, 293, 185, factor
	3214 : s, 293, 186, id
	3215 : s, 293, 187, (
	3216 : s, 293, 188, -
	3217 : s, 293, 189, !
	3218 : s, 293, 190, num
	3219 : s, 293, 191, real
	3220 : s, 293, 192, true
	3221 : s, 293, 193, false
	3222 : g, 294, 181, loc
	3223 : g, 294, 366, unary
	3224 : r, 366, 49, ;
	3225 : r, 366, 49, or
	3226 : r, 366, 49, and
	3227 : r, 366, 49, eq
	3228 : r, 366, 49, neq
	3229 : r, 366, 49, +
	3230 : r, 366, 49, -
	3231 : r, 366, 49, *
	3232 : r, 366, 49, /
	3233 : r, 366, 49, mod
	3234 : g, 294, 185, factor
	3235 : s, 294, 186, id
	3236 : s, 294, 187, (
	3237 : s, 294, 188, -
	3238 : s, 294, 189, !
	3239 : s, 294, 190, num
	3240 : s, 294, 191, real
	3241 : s, 294, 192, true
	3242 : s, 294, 193, false
	3243 : g, 295, 367, args
	3244 : g, 295, 203, loc
	3245 : g, 295, 204, bool
	3246 : g, 295, 205, join
	3247 : g, 295, 206, equality
	3248 : g, 295, 207, rel
	3249 : g, 295, 208, expr
	3250 : g, 295, 209, term
	3251 : g, 295, 210, unary
	3252 : g, 295, 211, factor
	3253 : g, 295, 212, arg
	3254 : s, 295, 213, id
	3255 : s, 295, 214, (
	3256 : s, 295, 215, -
	3257 : s, 295, 216, !
	3258 : s, 295, 217, num
	3259 : s, 295, 218, real
	3260 : s, 295, 219, true
	3261 : s, 295, 220, false
	3262 : s, 296, 368, )
	3263 : r, 368, 54, ;
	3264 : r, 368, 54, or
	3265 : r, 368, 54, and
	3266 : r, 368, 54, eq
	3267 : r, 368, 54, neq
	3268 : r, 368, 54, +
	3269 : r, 368, 54, -
	3270 : r, 368, 54, *
	3271 : r, 368, 54, /
	3272 : r, 368, 54, mod
	3273 : s, 296, 151, or
	3274 : g, 300, 203, loc
	3275 : g, 300, 204, bool
	3276 : g, 300, 205, join
	3277 : g, 300, 206, equality
	3278 : g, 300, 207, rel
	3279 : g, 300, 208, expr
	3280 : g, 300, 209, term
	3281 : g, 300, 210, unary
	3282 : g, 300, 211, factor
	3283 : g, 300, 369, arg
	3284 : r, 369, 24, )
	3285 : r, 369, 24, ,
	3286 : s, 300, 213, id
	3287 : s, 300, 214, (
	3288 : s, 300, 215, -
	3289 : s, 300, 216, !
	3290 : s, 300, 217, num
	3291 : s, 300, 218, real
	3292 : s, 300, 219, true
	3293 : s, 300, 220, false
	3294 : g, 301, 61, loc
	3295 : g, 301, 370, bool
	3296 : g, 301, 63, join
	3297 : g, 301, 64, equality
	3298 : g, 301, 65, rel
	3299 : g, 301, 66, expr
	3300 : g, 301, 67, term
	3301 : g, 301, 68, unary
	3302 : g, 301, 69, factor
	3303 : s, 301, 70, id
	3304 : s, 301, 71, (
	3305 : s, 301, 72, -
	3306 : s, 301, 73, !
	3307 : s, 301, 74, num
	3308 : s, 301, 75, real
	3309 : s, 301, 76, true
	3310 : s, 301, 77, false
	3311 : g, 302, 317, loc
	3312 : g, 302, 371, join
	3313 : r, 371, 32, )
	3314 : r, 371, 32, ,
	3315 : r, 371, 32, or
	3316 : g, 302, 206, equality
	3317 : g, 302, 207, rel
	3318 : g, 302, 208, expr
	3319 : g, 302, 209, term
	3320 : g, 302, 210, unary
	3321 : g, 302, 211, factor
	3322 : s, 302, 319, id
	3323 : s, 302, 214, (
	3324 : s, 302, 215, -
	3325 : s, 302, 216, !
	3326 : s, 302, 217, num
	3327 : s, 302, 218, real
	3328 : s, 302, 219, true
	3329 : s, 302, 220, false
	3330 : g, 303, 317, loc
	3331 : g, 303, 372, equality
	3332 : r, 372, 34, )
	3333 : r, 372, 34, ,
	3334 : r, 372, 34, or
	3335 : r, 372, 34, and
	3336 : g, 303, 207, rel
	3337 : g, 303, 208, expr
	3338 : g, 303, 209, term
	3339 : g, 303, 210, unary
	3340 : g, 303, 211, factor
	3341 : s, 303, 319, id
	3342 : s, 303, 214, (
	3343 : s, 303, 215, -
	3344 : s, 303, 216, !
	3345 : s, 303, 217, num
	3346 : s, 303, 218, real
	3347 : s, 303, 219, true
	3348 : s, 303, 220, false
	3349 : g, 304, 317, loc
	3350 : g, 304, 373, rel
	3351 : r, 373, 36, )
	3352 : r, 373, 36, ,
	3353 : r, 373, 36, or
	3354 : r, 373, 36, and
	3355 : r, 373, 36, eq
	3356 : r, 373, 36, neq
	3357 : g, 304, 208, expr
	3358 : g, 304, 209, term
	3359 : g, 304, 210, unary
	3360 : g, 304, 211, factor
	3361 : s, 304, 319, id
	3362 : s, 304, 214, (
	3363 : s, 304, 215, -
	3364 : s, 304, 216, !
	3365 : s, 304, 217, num
	3366 : s, 304, 218, real
	3367 : s, 304, 219, true
	3368 : s, 304, 220, false
	3369 : g, 305, 317, loc
	3370 : g, 305, 374, rel
	3371 : r, 374, 37, )
	3372 : r, 374, 37, ,
	3373 : r, 374, 37, or
	3374 : r, 374, 37, and
	3375 : r, 374, 37, eq
	3376 : r, 374, 37, neq
	3377 : g, 305, 208, expr
	3378 : g, 305, 209, term
	3379 : g, 305, 210, unary
	3380 : g, 305, 211, factor
	3381 : s, 305, 319, id
	3382 : s, 305, 214, (
	3383 : s, 305, 215, -
	3384 : s, 305, 216, !
	3385 : s, 305, 217, num
	3386 : s, 305, 218, real
	3387 : s, 305, 219, true
	3388 : s, 305, 220, false
	3389 : g, 306, 375, loc
	3390 : r, 375, 55, )
	3391 : r, 375, 55, ,
	3392 : r, 375, 55, or
	3393 : r, 375, 55, and
	3394 : r, 375, 55, eq
	3395 : r, 375, 55, neq
	3396 : r, 375, 55, +
	3397 : r, 375, 55, -
	3398 : r, 375, 55, *
	3399 : r, 375, 55, /
	3400 : r, 375, 55, mod
	3401 : g, 306, 376, expr
	3402 : r, 376, 39, )
	3403 : r, 376, 39, ,
	3404 : r, 376, 39, or
	3405 : r, 376, 39, and
	3406 : r, 376, 39, eq
	3407 : r, 376, 39, neq
	3408 : g, 306, 377, term
	3409 : r, 377, 46, )
	3410 : r, 377, 46, ,
	3411 : r, 377, 46, or
	3412 : r, 377, 46, and
	3413 : r, 377, 46, eq
	3414 : r, 377, 46, neq
	3415 : r, 377, 46, +
	3416 : r, 377, 46, -
	3417 : g, 306, 378, unary
	3418 : r, 378, 50, )
	3419 : r, 378, 50, ,
	3420 : r, 378, 50, or
	3421 : r, 378, 50, and
	3422 : r, 378, 50, eq
	3423 : r, 378, 50, neq
	3424 : r, 378, 50, +
	3425 : r, 378, 50, -
	3426 : r, 378, 50, *
	3427 : r, 378, 50, /
	3428 : r, 378, 50, mod
	3429 : g, 306, 379, factor
	3430 : r, 379, 53, )
	3431 : r, 379, 53, ,
	3432 : r, 379, 53, or
	3433 : r, 379, 53, and
	3434 : r, 379, 53, eq
	3435 : r, 379, 53, neq
	3436 : r, 379, 53, +
	3437 : r, 379, 53, -
	3438 : r, 379, 53, *
	3439 : r, 379, 53, /
	3440 : r, 379, 53, mod
	3441 : s, 306, 380, id
	3442 : r, 380, 31, )
	3443 : r, 380, 31, ,
	3444 : r, 380, 31, or
	3445 : r, 380, 31, and
	3446 : r, 380, 31, eq
	3447 : r, 380, 31, neq
	3448 : r, 380, 31, +
	3449 : r, 380, 31, -
	3450 : r, 380, 31, *
	3451 : r, 380, 31, /
	3452 : r, 380, 31, mod
	3453 : r, 380, 31, [
	3454 : s, 306, 381, (
	3455 : s, 306, 382, -
	3456 : s, 306, 383, !
	3457 : s, 306, 384, num
	3458 : r, 384, 57, )
	3459 : r, 384, 57, ,
	3460 : r, 384, 57, or
	3461 : r, 384, 57, and
	3462 : r, 384, 57, eq
	3463 : r, 384, 57, neq
	3464 : r, 384, 57, +
	3465 : r, 384, 57, -
	3466 : r, 384, 57, *
	3467 : r, 384, 57, /
	3468 : r, 384, 57, mod
	3469 : s, 306, 385, real
	3470 : r, 385, 58, )
	3471 : r, 385, 58, ,
	3472 : r, 385, 58, or
	3473 : r, 385, 58, and
	3474 : r, 385, 58, eq
	3475 : r, 385, 58, neq
	3476 : r, 385, 58, +
	3477 : r, 385, 58, -
	3478 : r, 385, 58, *
	3479 : r, 385, 58, /
	3480 : r, 385, 58, mod
	3481 : s, 306, 386, true
	3482 : r, 386, 59, )
	3483 : r, 386, 59, ,
	3484 : r, 386, 59, or
	3485 : r, 386, 59, and
	3486 : r, 386, 59, eq
	3487 : r, 386, 59, neq
	3488 : r, 386, 59, +
	3489 : r, 386, 59, -
	3490 : r, 386, 59, *
	3491 : r, 386, 59, /
	3492 : r, 386, 59, mod
	3493 : s, 306, 387, false
	3494 : r, 387, 60, )
	3495 : r, 387, 60, ,
	3496 : r, 387, 60, or
	3497 : r, 387, 60, and
	3498 : r, 387, 60, eq
	3499 : r, 387, 60, neq
	3500 : r, 387, 60, +
	3501 : r, 387, 60, -
	3502 : r, 387, 60, *
	3503 : r, 387, 60, /
	3504 : r, 387, 60, mod
	3505 : g, 307, 375, loc
	3506 : g, 307, 388, expr
	3507 : r, 388, 40, )
	3508 : r, 388, 40, ,
	3509 : r, 388, 40, or
	3510 : r, 388, 40, and
	3511 : r, 388, 40, eq
	3512 : r, 388, 40, neq
	3513 : g, 307, 377, term
	3514 : g, 307, 378, unary
	3515 : g, 307, 379, factor
	3516 : s, 307, 380, id
	3517 : s, 307, 381, (
	3518 : s, 307, 382, -
	3519 : s, 307, 383, !
	3520 : s, 307, 384, num
	3521 : s, 307, 385, real
	3522 : s, 307, 386, true
	3523 : s, 307, 387, false
	3524 : g, 308, 375, loc
	3525 : g, 308, 389, expr
	3526 : r, 389, 41, )
	3527 : r, 389, 41, ,
	3528 : r, 389, 41, or
	3529 : r, 389, 41, and
	3530 : r, 389, 41, eq
	3531 : r, 389, 41, neq
	3532 : g, 308, 377, term
	3533 : g, 308, 378, unary
	3534 : g, 308, 379, factor
	3535 : s, 308, 380, id
	3536 : s, 308, 381, (
	3537 : s, 308, 382, -
	3538 : s, 308, 383, !
	3539 : s, 308, 384, num
	3540 : s, 308, 385, real
	3541 : s, 308, 386, true
	3542 : s, 308, 387, false
	3543 : g, 309, 375, loc
	3544 : g, 309, 390, expr
	3545 : r, 390, 42, )
	3546 : r, 390, 42, ,
	3547 : r, 390, 42, or
	3548 : r, 390, 42, and
	3549 : r, 390, 42, eq
	3550 : r, 390, 42, neq
	3551 : g, 309, 377, term
	3552 : g, 309, 378, unary
	3553 : g, 309, 379, factor
	3554 : s, 309, 380, id
	3555 : s, 309, 381, (
	3556 : s, 309, 382, -
	3557 : s, 309, 383, !
	3558 : s, 309, 384, num
	3559 : s, 309, 385, real
	3560 : s, 309, 386, true
	3561 : s, 309, 387, false
	3562 : g, 310, 317, loc
	3563 : g, 310, 391, term
	3564 : r, 391, 44, <
	3565 : r, 391, 44, <=
	3566 : r, 391, 44, >=
	3567 : r, 391, 44, >
	3568 : r, 391, 44, )
	3569 : r, 391, 44, ,
	3570 : r, 391, 44, or
	3571 : r, 391, 44, and
	3572 : r, 391, 44, eq
	3573 : r, 391, 44, neq
	3574 : r, 391, 44, +
	3575 : r, 391, 44, -
	3576 : g, 310, 210, unary
	3577 : g, 310, 211, factor
	3578 : s, 310, 319, id
	3579 : s, 310, 214, (
	3580 : s, 310, 215, -
	3581 : s, 310, 216, !
	3582 : s, 310, 217, num
	3583 : s, 310, 218, real
	3584 : s, 310, 219, true
	3585 : s, 310, 220, false
	3586 : g, 311, 317, loc
	3587 : g, 311, 392, term
	3588 : r, 392, 45, <
	3589 : r, 392, 45, <=
	3590 : r, 392, 45, >=
	3591 : r, 392, 45, >
	3592 : r, 392, 45, )
	3593 : r, 392, 45, ,
	3594 : r, 392, 45, or
	3595 : r, 392, 45, and
	3596 : r, 392, 45, eq
	3597 : r, 392, 45, neq
	3598 : r, 392, 45, +
	3599 : r, 392, 45, -
	3600 : g, 311, 210, unary
	3601 : g, 311, 211, factor
	3602 : s, 311, 319, id
	3603 : s, 311, 214, (
	3604 : s, 311, 215, -
	3605 : s, 311, 216, !
	3606 : s, 311, 217, num
	3607 : s, 311, 218, real
	3608 : s, 311, 219, true
	3609 : s, 311, 220, false
	3610 : g, 312, 317, loc
	3611 : g, 312, 393, unary
	3612 : r, 393, 47, <
	3613 : r, 393, 47, <=
	3614 : r, 393, 47, >=
	3615 : r, 393, 47, >
	3616 : r, 393, 47, )
	3617 : r, 393, 47, ,
	3618 : r, 393, 47, or
	3619 : r, 393, 47, and
	3620 : r, 393, 47, eq
	3621 : r, 393, 47, neq
	3622 : r, 393, 47, +
	3623 : r, 393, 47, -
	3624 : r, 393, 47, *
	3625 : r, 393, 47, /
	3626 : r, 393, 47, mod
	3627 : g, 312, 211, factor
	3628 : s, 312, 319, id
	3629 : s, 312, 214, (
	3630 : s, 312, 215, -
	3631 : s, 312, 216, !
	3632 : s, 312, 217, num
	3633 : s, 312, 218, real
	3634 : s, 312, 219, true
	3635 : s, 312, 220, false
	3636 : g, 313, 317, loc
	3637 : g, 313, 394, unary
	3638 : r, 394, 48, <
	3639 : r, 394, 48, <=
	3640 : r, 394, 48, >=
	3641 : r, 394, 48, >
	3642 : r, 394, 48, )
	3643 : r, 394, 48, ,
	3644 : r, 394, 48, or
	3645 : r, 394, 48, and
	3646 : r, 394, 48, eq
	3647 : r, 394, 48, neq
	3648 : r, 394, 48, +
	3649 : r, 394, 48, -
	3650 : r, 394, 48, *
	3651 : r, 394, 48, /
	3652 : r, 394, 48, mod
	3653 : g, 313, 211, factor
	3654 : s, 313, 319, id
	3655 : s, 313, 214, (
	3656 : s, 313, 215, -
	3657 : s, 313, 216, !
	3658 : s, 313, 217, num
	3659 : s, 313, 218, real
	3660 : s, 313, 219, true
	3661 : s, 313, 220, false
	3662 : g, 314, 317, loc
	3663 : g, 314, 395, unary
	3664 : r, 395, 49, <
	3665 : r, 395, 49, <=
	3666 : r, 395, 49, >=
	3667 : r, 395, 49, >
	3668 : r, 395, 49, )
	3669 : r, 395, 49, ,
	3670 : r, 395, 49, or
	3671 : r, 395, 49, and
	3672 : r, 395, 49, eq
	3673 : r, 395, 49, neq
	3674 : r, 395, 49, +
	3675 : r, 395, 49, -
	3676 : r, 395, 49, *
	3677 : r, 395, 49, /
	3678 : r, 395, 49, mod
	3679 : g, 314, 211, factor
	3680 : s, 314, 319, id
	3681 : s, 314, 214, (
	3682 : s, 314, 215, -
	3683 : s, 314, 216, !
	3684 : s, 314, 217, num
	3685 : s, 314, 218, real
	3686 : s, 314, 219, true
	3687 : s, 314, 220, false
	3688 : g, 315, 396, args
	3689 : g, 315, 203, loc
	3690 : g, 315, 204, bool
	3691 : g, 315, 205, join
	3692 : g, 315, 206, equality
	3693 : g, 315, 207, rel
	3694 : g, 315, 208, expr
	3695 : g, 315, 209, term
	3696 : g, 315, 210, unary
	3697 : g, 315, 211, factor
	3698 : g, 315, 212, arg
	3699 : s, 315, 213, id
	3700 : s, 315, 214, (
	3701 : s, 315, 215, -
	3702 : s, 315, 216, !
	3703 : s, 315, 217, num
	3704 : s, 315, 218, real
	3705 : s, 315, 219, true
	3706 : s, 315, 220, false
	3707 : s, 316, 397, )
	3708 : r, 397, 54, <
	3709 : r, 397, 54, <=
	3710 : r, 397, 54, >=
	3711 : r, 397, 54, >
	3712 : r, 397, 54, )
	3713 : r, 397, 54, ,
	3714 : r, 397, 54, or
	3715 : r, 397, 54, and
	3716 : r, 397, 54, eq
	3717 : r, 397, 54, neq
	3718 : r, 397, 54, +
	3719 : r, 397, 54, -
	3720 : r, 397, 54, *
	3721 : r, 397, 54, /
	3722 : r, 397, 54, mod
	3723 : s, 316, 151, or
	3724 : s, 317, 398, [
	3725 : s, 319, 315, (
	3726 : g, 322, 61, loc
	3727 : g, 322, 399, bool
	3728 : g, 322, 63, join
	3729 : g, 322, 64, equality
	3730 : g, 322, 65, rel
	3731 : g, 322, 66, expr
	3732 : g, 322, 67, term
	3733 : g, 322, 68, unary
	3734 : g, 322, 69, factor
	3735 : s, 322, 70, id
	3736 : s, 322, 71, (
	3737 : s, 322, 72, -
	3738 : s, 322, 73, !
	3739 : s, 322, 74, num
	3740 : s, 322, 75, real
	3741 : s, 322, 76, true
	3742 : s, 322, 77, false
	3743 : g, 323, 227, loc
	3744 : g, 323, 400, term
	3745 : r, 400, 44, ]
	3746 : r, 400, 44, or
	3747 : r, 400, 44, and
	3748 : r, 400, 44, eq
	3749 : r, 400, 44, neq
	3750 : r, 400, 44, +
	3751 : r, 400, 44, -
	3752 : g, 323, 230, unary
	3753 : g, 323, 231, factor
	3754 : s, 323, 232, id
	3755 : s, 323, 233, (
	3756 : s, 323, 234, -
	3757 : s, 323, 235, !
	3758 : s, 323, 236, num
	3759 : s, 323, 237, real
	3760 : s, 323, 238, true
	3761 : s, 323, 239, false
	3762 : g, 324, 227, loc
	3763 : g, 324, 401, term
	3764 : r, 401, 45, ]
	3765 : r, 401, 45, or
	3766 : r, 401, 45, and
	3767 : r, 401, 45, eq
	3768 : r, 401, 45, neq
	3769 : r, 401, 45, +
	3770 : r, 401, 45, -
	3771 : g, 324, 230, unary
	3772 : g, 324, 231, factor
	3773 : s, 324, 232, id
	3774 : s, 324, 233, (
	3775 : s, 324, 234, -
	3776 : s, 324, 235, !
	3777 : s, 324, 236, num
	3778 : s, 324, 237, real
	3779 : s, 324, 238, true
	3780 : s, 324, 239, false
	3781 : g, 325, 227, loc
	3782 : g, 325, 402, unary
	3783 : r, 402, 47, ]
	3784 : r, 402, 47, or
	3785 : r, 402, 47, and
	3786 : r, 402, 47, eq
	3787 : r, 402, 47, neq
	3788 : r, 402, 47, +
	3789 : r, 402, 47, -
	3790 : r, 402, 47, *
	3791 : r, 402, 47, /
	3792 : r, 402, 47, mod
	3793 : g, 325, 231, factor
	3794 : s, 325, 232, id
	3795 : s, 325, 233, (
	3796 : s, 325, 234, -
	3797 : s, 325, 235, !
	3798 : s, 325, 236, num
	3799 : s, 325, 237, real
	3800 : s, 325, 238, true
	3801 : s, 325, 239, false
	3802 : g, 326, 227, loc
	3803 : g, 326, 403, unary
	3804 : r, 403, 48, ]
	3805 : r, 403, 48, or
	3806 : r, 403, 48, and
	3807 : r, 403, 48, eq
	3808 : r, 403, 48, neq
	3809 : r, 403, 48, +
	3810 : r, 403, 48, -
	3811 : r, 403, 48, *
	3812 : r, 403, 48, /
	3813 : r, 403, 48, mod
	3814 : g, 326, 231, factor
	3815 : s, 326, 232, id
	3816 : s, 326, 233, (
	3817 : s, 326, 234, -
	3818 : s, 326, 235, !
	3819 : s, 326, 236, num
	3820 : s, 326, 237, real
	3821 : s, 326, 238, true
	3822 : s, 326, 239, false
	3823 : g, 327, 227, loc
	3824 : g, 327, 404, unary
	3825 : r, 404, 49, ]
	3826 : r, 404, 49, or
	3827 : r, 404, 49, and
	3828 : r, 404, 49, eq
	3829 : r, 404, 49, neq
	3830 : r, 404, 49, +
	3831 : r, 404, 49, -
	3832 : r, 404, 49, *
	3833 : r, 404, 49, /
	3834 : r, 404, 49, mod
	3835 : g, 327, 231, factor
	3836 : s, 327, 232, id
	3837 : s, 327, 233, (
	3838 : s, 327, 234, -
	3839 : s, 327, 235, !
	3840 : s, 327, 236, num
	3841 : s, 327, 237, real
	3842 : s, 327, 238, true
	3843 : s, 327, 239, false
	3844 : g, 328, 405, args
	3845 : g, 328, 203, loc
	3846 : g, 328, 204, bool
	3847 : g, 328, 205, join
	3848 : g, 328, 206, equality
	3849 : g, 328, 207, rel
	3850 : g, 328, 208, expr
	3851 : g, 328, 209, term
	3852 : g, 328, 210, unary
	3853 : g, 328, 211, factor
	3854 : g, 328, 212, arg
	3855 : s, 328, 213, id
	3856 : s, 328, 214, (
	3857 : s, 328, 215, -
	3858 : s, 328, 216, !
	3859 : s, 328, 217, num
	3860 : s, 328, 218, real
	3861 : s, 328, 219, true
	3862 : s, 328, 220, false
	3863 : s, 329, 406, )
	3864 : r, 406, 54, ]
	3865 : r, 406, 54, or
	3866 : r, 406, 54, and
	3867 : r, 406, 54, eq
	3868 : r, 406, 54, neq
	3869 : r, 406, 54, +
	3870 : r, 406, 54, -
	3871 : r, 406, 54, *
	3872 : r, 406, 54, /
	3873 : r, 406, 54, mod
	3874 : s, 329, 151, or
	3875 : s, 336, 407, else
	3876 : r, 407, 27, [
	3877 : r, 407, 27, id
	3878 : r, 407, 27, if
	3879 : r, 407, 27, while
	3880 : r, 407, 27, do
	3881 : r, 407, 27, return
	3882 : r, 407, 27, {
	3883 : r, 407, 27, ;
	3884 : s, 337, 37, [
	3885 : s, 337, 408, =
	3886 : g, 338, 409, decls
	3887 : r, 409, 16, }
	3888 : r, 409, 16, [
	3889 : r, 409, 16, id
	3890 : r, 409, 16, if
	3891 : r, 409, 16, while
	3892 : r, 409, 16, do
	3893 : r, 409, 16, return
	3894 : r, 409, 16, {
	3895 : r, 409, 16, else
	3896 : s, 339, 410, (
	3897 : g, 340, 411, N
	3898 : g, 341, 412, N
	3899 : g, 342, 43, loc
	3900 : g, 342, 44, bool
	3901 : g, 342, 45, join
	3902 : g, 342, 46, equality
	3903 : g, 342, 47, rel
	3904 : g, 342, 48, expr
	3905 : g, 342, 49, term
	3906 : g, 342, 50, unary
	3907 : g, 342, 51, factor
	3908 : g, 342, 413, arg
	3909 : s, 342, 53, id
	3910 : s, 342, 54, (
	3911 : s, 342, 55, -
	3912 : s, 342, 56, !
	3913 : s, 342, 57, num
	3914 : s, 342, 58, real
	3915 : s, 342, 59, true
	3916 : s, 342, 60, false
	3917 : g, 343, 61, loc
	3918 : g, 343, 414, bool
	3919 : g, 343, 63, join
	3920 : g, 343, 64, equality
	3921 : g, 343, 65, rel
	3922 : g, 343, 66, expr
	3923 : g, 343, 67, term
	3924 : g, 343, 68, unary
	3925 : g, 343, 69, factor
	3926 : s, 343, 70, id
	3927 : s, 343, 71, (
	3928 : s, 343, 72, -
	3929 : s, 343, 73, !
	3930 : s, 343, 74, num
	3931 : s, 343, 75, real
	3932 : s, 343, 76, true
	3933 : s, 343, 77, false
	3934 : g, 344, 257, loc
	3935 : g, 344, 415, term
	3936 : r, 415, 44, )
	3937 : r, 415, 44, or
	3938 : r, 415, 44, and
	3939 : r, 415, 44, eq
	3940 : r, 415, 44, neq
	3941 : r, 415, 44, +
	3942 : r, 415, 44, -
	3943 : g, 344, 260, unary
	3944 : g, 344, 261, factor
	3945 : s, 344, 262, id
	3946 : s, 344, 263, (
	3947 : s, 344, 264, -
	3948 : s, 344, 265, !
	3949 : s, 344, 266, num
	3950 : s, 344, 267, real
	3951 : s, 344, 268, true
	3952 : s, 344, 269, false
	3953 : g, 345, 257, loc
	3954 : g, 345, 416, term
	3955 : r, 416, 45, )
	3956 : r, 416, 45, or
	3957 : r, 416, 45, and
	3958 : r, 416, 45, eq
	3959 : r, 416, 45, neq
	3960 : r, 416, 45, +
	3961 : r, 416, 45, -
	3962 : g, 345, 260, unary
	3963 : g, 345, 261, factor
	3964 : s, 345, 262, id
	3965 : s, 345, 263, (
	3966 : s, 345, 264, -
	3967 : s, 345, 265, !
	3968 : s, 345, 266, num
	3969 : s, 345, 267, real
	3970 : s, 345, 268, true
	3971 : s, 345, 269, false
	3972 : g, 346, 257, loc
	3973 : g, 346, 417, unary
	3974 : r, 417, 47, )
	3975 : r, 417, 47, or
	3976 : r, 417, 47, and
	3977 : r, 417, 47, eq
	3978 : r, 417, 47, neq
	3979 : r, 417, 47, +
	3980 : r, 417, 47, -
	3981 : r, 417, 47, *
	3982 : r, 417, 47, /
	3983 : r, 417, 47, mod
	3984 : g, 346, 261, factor
	3985 : s, 346, 262, id
	3986 : s, 346, 263, (
	3987 : s, 346, 264, -
	3988 : s, 346, 265, !
	3989 : s, 346, 266, num
	3990 : s, 346, 267, real
	3991 : s, 346, 268, true
	3992 : s, 346, 269, false
	3993 : g, 347, 257, loc
	3994 : g, 347, 418, unary
	3995 : r, 418, 48, )
	3996 : r, 418, 48, or
	3997 : r, 418, 48, and
	3998 : r, 418, 48, eq
	3999 : r, 418, 48, neq
	4000 : r, 418, 48, +
	4001 : r, 418, 48, -
	4002 : r, 418, 48, *
	4003 : r, 418, 48, /
	4004 : r, 418, 48, mod
	4005 : g, 347, 261, factor
	4006 : s, 347, 262, id
	4007 : s, 347, 263, (
	4008 : s, 347, 264, -
	4009 : s, 347, 265, !
	4010 : s, 347, 266, num
	4011 : s, 347, 267, real
	4012 : s, 347, 268, true
	4013 : s, 347, 269, false
	4014 : g, 348, 257, loc
	4015 : g, 348, 419, unary
	4016 : r, 419, 49, )
	4017 : r, 419, 49, or
	4018 : r, 419, 49, and
	4019 : r, 419, 49, eq
	4020 : r, 419, 49, neq
	4021 : r, 419, 49, +
	4022 : r, 419, 49, -
	4023 : r, 419, 49, *
	4024 : r, 419, 49, /
	4025 : r, 419, 49, mod
	4026 : g, 348, 261, factor
	4027 : s, 348, 262, id
	4028 : s, 348, 263, (
	4029 : s, 348, 264, -
	4030 : s, 348, 265, !
	4031 : s, 348, 266, num
	4032 : s, 348, 267, real
	4033 : s, 348, 268, true
	4034 : s, 348, 269, false
	4035 : g, 349, 420, args
	4036 : g, 349, 203, loc
	4037 : g, 349, 204, bool
	4038 : g, 349, 205, join
	4039 : g, 349, 206, equality
	4040 : g, 349, 207, rel
	4041 : g, 349, 208, expr
	4042 : g, 349, 209, term
	4043 : g, 349, 210, unary
	4044 : g, 349, 211, factor
	4045 : g, 349, 212, arg
	4046 : s, 349, 213, id
	4047 : s, 349, 214, (
	4048 : s, 349, 215, -
	4049 : s, 349, 216, !
	4050 : s, 349, 217, num
	4051 : s, 349, 218, real
	4052 : s, 349, 219, true
	4053 : s, 349, 220, false
	4054 : s, 350, 421, )
	4055 : r, 421, 54, )
	4056 : r, 421, 54, or
	4057 : r, 421, 54, and
	4058 : r, 421, 54, eq
	4059 : r, 421, 54, neq
	4060 : r, 421, 54, +
	4061 : r, 421, 54, -
	4062 : r, 421, 54, *
	4063 : r, 421, 54, /
	4064 : r, 421, 54, mod
	4065 : s, 350, 151, or
	4066 : g, 354, 26, block
	4067 : g, 354, 422, stmt
	4068 : r, 422, 20, }
	4069 : r, 422, 20, [
	4070 : r, 422, 20, id
	4071 : r, 422, 20, if
	4072 : r, 422, 20, while
	4073 : r, 422, 20, do
	4074 : r, 422, 20, return
	4075 : r, 422, 20, {
	4076 : r, 422, 20, else
	4077 : g, 354, 28, loc
	4078 : s, 354, 29, id
	4079 : s, 354, 30, {
	4080 : s, 354, 32, if
	4081 : s, 354, 33, while
	4082 : s, 354, 34, do
	4083 : s, 354, 35, return
	4084 : s, 355, 423, )
	4085 : r, 423, 27, [
	4086 : r, 423, 27, id
	4087 : r, 423, 27, if
	4088 : r, 423, 27, while
	4089 : r, 423, 27, do
	4090 : r, 423, 27, return
	4091 : r, 423, 27, {
	4092 : r, 423, 27, ;
	4093 : s, 355, 151, or
	4094 : g, 358, 424, M
	4095 : s, 359, 425, )
	4096 : r, 425, 27, [
	4097 : r, 425, 27, id
	4098 : r, 425, 27, if
	4099 : r, 425, 27, while
	4100 : r, 425, 27, do
	4101 : r, 425, 27, return
	4102 : r, 425, 27, {
	4103 : r, 425, 27, ;
	4104 : s, 359, 151, or
	4105 : s, 360, 426, (
	4106 : s, 361, 427, ]
	4107 : r, 427, 30, ;
	4108 : r, 427, 30, or
	4109 : r, 427, 30, and
	4110 : r, 427, 30, eq
	4111 : r, 427, 30, neq
	4112 : r, 427, 30, +
	4113 : r, 427, 30, -
	4114 : r, 427, 30, *
	4115 : r, 427, 30, /
	4116 : r, 427, 30, mod
	4117 : r, 427, 30, [
	4118 : s, 361, 129, or
	4119 : s, 362, 292, *
	4120 : s, 362, 293, /
	4121 : s, 362, 294, mod
	4122 : s, 363, 292, *
	4123 : s, 363, 293, /
	4124 : s, 363, 294, mod
	4125 : s, 367, 428, )
	4126 : r, 428, 56, ;
	4127 : r, 428, 56, or
	4128 : r, 428, 56, and
	4129 : r, 428, 56, eq
	4130 : r, 428, 56, neq
	4131 : r, 428, 56, +
	4132 : r, 428, 56, -
	4133 : r, 428, 56, *
	4134 : r, 428, 56, /
	4135 : r, 428, 56, mod
	4136 : s, 367, 300, ,
	4137 : s, 370, 429, ]
	4138 : r, 429, 30, )
	4139 : r, 429, 30, ,
	4140 : r, 429, 30, [
	4141 : r, 429, 30, <
	4142 : r, 429, 30, <=
	4143 : r, 429, 30, >=
	4144 : r, 429, 30, >
	4145 : r, 429, 30, or
	4146 : r, 429, 30, and
	4147 : r, 429, 30, eq
	4148 : r, 429, 30, neq
	4149 : r, 429, 30, +
	4150 : r, 429, 30, -
	4151 : r, 429, 30, *
	4152 : r, 429, 30, /
	4153 : r, 429, 30, mod
	4154 : s, 370, 129, or
	4155 : s, 371, 303, and
	4156 : s, 372, 304, eq
	4157 : s, 372, 305, neq
	4158 : s, 375, 430, [
	4159 : s, 376, 431, +
	4160 : s, 376, 432, -
	4161 : s, 377, 433, *
	4162 : s, 377, 434, /
	4163 : s, 377, 435, mod
	4164 : s, 380, 436, (
	4165 : r, 436, 26, )
	4166 : r, 436, 26, ,
	4167 : g, 381, 82, loc
	4168 : g, 381, 437, bool
	4169 : g, 381, 84, join
	4170 : g, 381, 85, equality
	4171 : g, 381, 86, rel
	4172 : g, 381, 87, expr
	4173 : g, 381, 88, term
	4174 : g, 381, 89, unary
	4175 : g, 381, 90, factor
	4176 : s, 381, 91, id
	4177 : s, 381, 92, (
	4178 : s, 381, 93, -
	4179 : s, 381, 94, !
	4180 : s, 381, 95, num
	4181 : s, 381, 96, real
	4182 : s, 381, 97, true
	4183 : s, 381, 98, false
	4184 : g, 382, 375, loc
	4185 : g, 382, 438, unary
	4186 : r, 438, 52, )
	4187 : r, 438, 52, ,
	4188 : r, 438, 52, or
	4189 : r, 438, 52, and
	4190 : r, 438, 52, eq
	4191 : r, 438, 52, neq
	4192 : r, 438, 52, +
	4193 : r, 438, 52, -
	4194 : r, 438, 52, *
	4195 : r, 438, 52, /
	4196 : r, 438, 52, mod
	4197 : g, 382, 379, factor
	4198 : s, 382, 380, id
	4199 : s, 382, 381, (
	4200 : s, 382, 382, -
	4201 : s, 382, 383, !
	4202 : s, 382, 384, num
	4203 : s, 382, 385, real
	4204 : s, 382, 386, true
	4205 : s, 382, 387, false
	4206 : g, 383, 375, loc
	4207 : g, 383, 439, unary
	4208 : r, 439, 51, )
	4209 : r, 439, 51, ,
	4210 : r, 439, 51, or
	4211 : r, 439, 51, and
	4212 : r, 439, 51, eq
	4213 : r, 439, 51, neq
	4214 : r, 439, 51, +
	4215 : r, 439, 51, -
	4216 : r, 439, 51, *
	4217 : r, 439, 51, /
	4218 : r, 439, 51, mod
	4219 : g, 383, 379, factor
	4220 : s, 383, 380, id
	4221 : s, 383, 381, (
	4222 : s, 383, 382, -
	4223 : s, 383, 383, !
	4224 : s, 383, 384, num
	4225 : s, 383, 385, real
	4226 : s, 383, 386, true
	4227 : s, 383, 387, false
	4228 : s, 388, 431, +
	4229 : s, 388, 432, -
	4230 : s, 389, 431, +
	4231 : s, 389, 432, -
	4232 : s, 390, 431, +
	4233 : s, 390, 432, -
	4234 : s, 391, 312, *
	4235 : s, 391, 313, /
	4236 : s, 391, 314, mod
	4237 : s, 392, 312, *
	4238 : s, 392, 313, /
	4239 : s, 392, 314, mod
	4240 : s, 396, 440, )
	4241 : r, 440, 56, <
	4242 : r, 440, 56, <=
	4243 : r, 440, 56, >=
	4244 : r, 440, 56, >
	4245 : r, 440, 56, )
	4246 : r, 440, 56, ,
	4247 : r, 440, 56, or
	4248 : r, 440, 56, and
	4249 : r, 440, 56, eq
	4250 : r, 440, 56, neq
	4251 : r, 440, 56, +
	4252 : r, 440, 56, -
	4253 : r, 440, 56, *
	4254 : r, 440, 56, /
	4255 : r, 440, 56, mod
	4256 : s, 396, 300, ,
	4257 : g, 398, 61, loc
	4258 : g, 398, 441, bool
	4259 : g, 398, 63, join
	4260 : g, 398, 64, equality
	4261 : g, 398, 65, rel
	4262 : g, 398, 66, expr
	4263 : g, 398, 67, term
	4264 : g, 398, 68, unary
	4265 : g, 398, 69, factor
	4266 : s, 398, 70, id
	4267 : s, 398, 71, (
	4268 : s, 398, 72, -
	4269 : s, 398, 73, !
	4270 : s, 398, 74, num
	4271 : s, 398, 75, real
	4272 : s, 398, 76, true
	4273 : s, 398, 77, false
	4274 : s, 399, 442, ]
	4275 : r, 442, 30, ]
	4276 : r, 442, 30, or
	4277 : r, 442, 30, and
	4278 : r, 442, 30, eq
	4279 : r, 442, 30, neq
	4280 : r, 442, 30, +
	4281 : r, 442, 30, -
	4282 : r, 442, 30, *
	4283 : r, 442, 30, /
	4284 : r, 442, 30, mod
	4285 : r, 442, 30, [
	4286 : s, 399, 129, or
	4287 : s, 400, 325, *
	4288 : s, 400, 326, /
	4289 : s, 400, 327, mod
	4290 : s, 401, 325, *
	4291 : s, 401, 326, /
	4292 : s, 401, 327, mod
	4293 : s, 405, 443, )
	4294 : r, 443, 56, ]
	4295 : r, 443, 56, or
	4296 : r, 443, 56, and
	4297 : r, 443, 56, eq
	4298 : r, 443, 56, neq
	4299 : r, 443, 56, +
	4300 : r, 443, 56, -
	4301 : r, 443, 56, *
	4302 : r, 443, 56, /
	4303 : r, 443, 56, mod
	4304 : s, 405, 300, ,
	4305 : g, 407, 444, M
	4306 : g, 408, 78, loc
	4307 : g, 408, 445, bool
	4308 : g, 408, 45, join
	4309 : g, 408, 46, equality
	4310 : g, 408, 47, rel
	4311 : g, 408, 48, expr
	4312 : g, 408, 49, term
	4313 : g, 408, 50, unary
	4314 : g, 408, 51, factor
	4315 : s, 408, 80, id
	4316 : s, 408, 54, (
	4317 : s, 408, 55, -
	4318 : s, 408, 56, !
	4319 : s, 408, 57, num
	4320 : s, 408, 58, real
	4321 : s, 408, 59, true
	4322 : s, 408, 60, false
	4323 : g, 409, 22, decl
	4324 : g, 409, 23, type
	4325 : g, 409, 446, stmts
	4326 : s, 409, 11, basic
	4327 : g, 410, 82, loc
	4328 : g, 410, 447, bool
	4329 : g, 410, 84, join
	4330 : g, 410, 85, equality
	4331 : g, 410, 86, rel
	4332 : g, 410, 87, expr
	4333 : g, 410, 88, term
	4334 : g, 410, 89, unary
	4335 : g, 410, 90, factor
	4336 : s, 410, 91, id
	4337 : s, 410, 92, (
	4338 : s, 410, 93, -
	4339 : s, 410, 94, !
	4340 : s, 410, 95, num
	4341 : s, 410, 96, real
	4342 : s, 410, 97, true
	4343 : s, 410, 98, false
	4344 : s, 411, 448, (
	4345 : g, 412, 100, block
	4346 : g, 412, 449, stmt
	4347 : g, 412, 102, loc
	4348 : s, 412, 29, id
	4349 : s, 412, 103, {
	4350 : s, 412, 104, if
	4351 : s, 412, 105, while
	4352 : s, 412, 106, do
	4353 : s, 412, 107, return
	4354 : s, 413, 450, ;
	4355 : r, 450, 22, }
	4356 : r, 450, 22, else
	4357 : r, 450, 22, [
	4358 : r, 450, 22, id
	4359 : r, 450, 22, if
	4360 : r, 450, 22, while
	4361 : r, 450, 22, do
	4362 : r, 450, 22, return
	4363 : r, 450, 22, {
	4364 : s, 414, 451, ]
	4365 : r, 451, 30, )
	4366 : r, 451, 30, or
	4367 : r, 451, 30, and
	4368 : r, 451, 30, eq
	4369 : r, 451, 30, neq
	4370 : r, 451, 30, +
	4371 : r, 451, 30, -
	4372 : r, 451, 30, *
	4373 : r, 451, 30, /
	4374 : r, 451, 30, mod
	4375 : r, 451, 30, [
	4376 : s, 414, 129, or
	4377 : s, 415, 346, *
	4378 : s, 415, 347, /
	4379 : s, 415, 348, mod
	4380 : s, 416, 346, *
	4381 : s, 416, 347, /
	4382 : s, 416, 348, mod
	4383 : s, 420, 452, )
	4384 : r, 452, 56, )
	4385 : r, 452, 56, or
	4386 : r, 452, 56, and
	4387 : r, 452, 56, eq
	4388 : r, 452, 56, neq
	4389 : r, 452, 56, +
	4390 : r, 452, 56, -
	4391 : r, 452, 56, *
	4392 : r, 452, 56, /
	4393 : r, 452, 56, mod
	4394 : s, 420, 300, ,
	4395 : g, 423, 453, M
	4396 : g, 424, 454, block
	4397 : r, 454, 23, while
	4398 : r, 454, 23, else
	4399 : g, 424, 455, stmt
	4400 : r, 455, 18, while
	4401 : g, 424, 456, loc
	4402 : s, 424, 29, id
	4403 : s, 424, 457, {
	4404 : r, 457, 11, [
	4405 : r, 457, 11, id
	4406 : r, 457, 11, if
	4407 : r, 457, 11, while
	4408 : r, 457, 11, do
	4409 : r, 457, 11, return
	4410 : r, 457, 11, {
	4411 : r, 457, 11, }
	4412 : r, 457, 11, basic
	4413 : s, 424, 458, if
	4414 : s, 424, 459, while
	4415 : r, 459, 28, (
	4416 : r, 459, 28, [
	4417 : r, 459, 28, id
	4418 : r, 459, 28, if
	4419 : r, 459, 28, while
	4420 : r, 459, 28, do
	4421 : r, 459, 28, return
	4422 : r, 459, 28, {
	4423 : s, 424, 460, do
	4424 : r, 460, 28, (
	4425 : r, 460, 28, [
	4426 : r, 460, 28, id
	4427 : r, 460, 28, if
	4428 : r, 460, 28, while
	4429 : r, 460, 28, do
	4430 : r, 460, 28, return
	4431 : r, 460, 28, {
	4432 : s, 424, 461, return
	4433 : g, 425, 462, M
	4434 : g, 426, 82, loc
	4435 : g, 426, 463, bool
	4436 : g, 426, 84, join
	4437 : g, 426, 85, equality
	4438 : g, 426, 86, rel
	4439 : g, 426, 87, expr
	4440 : g, 426, 88, term
	4441 : g, 426, 89, unary
	4442 : g, 426, 90, factor
	4443 : s, 426, 91, id
	4444 : s, 426, 92, (
	4445 : s, 426, 93, -
	4446 : s, 426, 94, !
	4447 : s, 426, 95, num
	4448 : s, 426, 96, real
	4449 : s, 426, 97, true
	4450 : s, 426, 98, false
	4451 : g, 430, 61, loc
	4452 : g, 430, 464, bool
	4453 : g, 430, 63, join
	4454 : g, 430, 64, equality
	4455 : g, 430, 65, rel
	4456 : g, 430, 66, expr
	4457 : g, 430, 67, term
	4458 : g, 430, 68, unary
	4459 : g, 430, 69, factor
	4460 : s, 430, 70, id
	4461 : s, 430, 71, (
	4462 : s, 430, 72, -
	4463 : s, 430, 73, !
	4464 : s, 430, 74, num
	4465 : s, 430, 75, real
	4466 : s, 430, 76, true
	4467 : s, 430, 77, false
	4468 : g, 431, 375, loc
	4469 : g, 431, 465, term
	4470 : r, 465, 44, )
	4471 : r, 465, 44, ,
	4472 : r, 465, 44, or
	4473 : r, 465, 44, and
	4474 : r, 465, 44, eq
	4475 : r, 465, 44, neq
	4476 : r, 465, 44, +
	4477 : r, 465, 44, -
	4478 : g, 431, 378, unary
	4479 : g, 431, 379, factor
	4480 : s, 431, 380, id
	4481 : s, 431, 381, (
	4482 : s, 431, 382, -
	4483 : s, 431, 383, !
	4484 : s, 431, 384, num
	4485 : s, 431, 385, real
	4486 : s, 431, 386, true
	4487 : s, 431, 387, false
	4488 : g, 432, 375, loc
	4489 : g, 432, 466, term
	4490 : r, 466, 45, )
	4491 : r, 466, 45, ,
	4492 : r, 466, 45, or
	4493 : r, 466, 45, and
	4494 : r, 466, 45, eq
	4495 : r, 466, 45, neq
	4496 : r, 466, 45, +
	4497 : r, 466, 45, -
	4498 : g, 432, 378, unary
	4499 : g, 432, 379, factor
	4500 : s, 432, 380, id
	4501 : s, 432, 381, (
	4502 : s, 432, 382, -
	4503 : s, 432, 383, !
	4504 : s, 432, 384, num
	4505 : s, 432, 385, real
	4506 : s, 432, 386, true
	4507 : s, 432, 387, false
	4508 : g, 433, 375, loc
	4509 : g, 433, 467, unary
	4510 : r, 467, 47, )
	4511 : r, 467, 47, ,
	4512 : r, 467, 47, or
	4513 : r, 467, 47, and
	4514 : r, 467, 47, eq
	4515 : r, 467, 47, neq
	4516 : r, 467, 47, +
	4517 : r, 467, 47, -
	4518 : r, 467, 47, *
	4519 : r, 467, 47, /
	4520 : r, 467, 47, mod
	4521 : g, 433, 379, factor
	4522 : s, 433, 380, id
	4523 : s, 433, 381, (
	4524 : s, 433, 382, -
	4525 : s, 433, 383, !
	4526 : s, 433, 384, num
	4527 : s, 433, 385, real
	4528 : s, 433, 386, true
	4529 : s, 433, 387, false
	4530 : g, 434, 375, loc
	4531 : g, 434, 468, unary
	4532 : r, 468, 48, )
	4533 : r, 468, 48, ,
	4534 : r, 468, 48, or
	4535 : r, 468, 48, and
	4536 : r, 468, 48, eq
	4537 : r, 468, 48, neq
	4538 : r, 468, 48, +
	4539 : r, 468, 48, -
	4540 : r, 468, 48, *
	4541 : r, 468, 48, /
	4542 : r, 468, 48, mod
	4543 : g, 434, 379, factor
	4544 : s, 434, 380, id
	4545 : s, 434, 381, (
	4546 : s, 434, 382, -
	4547 : s, 434, 383, !
	4548 : s, 434, 384, num
	4549 : s, 434, 385, real
	4550 : s, 434, 386, true
	4551 : s, 434, 387, false
	4552 : g, 435, 375, loc
	4553 : g, 435, 469, unary
	4554 : r, 469, 49, )
	4555 : r, 469, 49, ,
	4556 : r, 469, 49, or
	4557 : r, 469, 49, and
	4558 : r, 469, 49, eq
	4559 : r, 469, 49, neq
	4560 : r, 469, 49, +
	4561 : r, 469, 49, -
	4562 : r, 469, 49, *
	4563 : r, 469, 49, /
	4564 : r, 469, 49, mod
	4565 : g, 435, 379, factor
	4566 : s, 435, 380, id
	4567 : s, 435, 381, (
	4568 : s, 435, 382, -
	4569 : s, 435, 383, !
	4570 : s, 435, 384, num
	4571 : s, 435, 385, real
	4572 : s, 435, 386, true
	4573 : s, 435, 387, false
	4574 : g, 436, 470, args
	4575 : g, 436, 203, loc
	4576 : g, 436, 204, bool
	4577 : g, 436, 205, join
	4578 : g, 436, 206, equality
	4579 : g, 436, 207, rel
	4580 : g, 436, 208, expr
	4581 : g, 436, 209, term
	4582 : g, 436, 210, unary
	4583 : g, 436, 211, factor
	4584 : g, 436, 212, arg
	4585 : s, 436, 213, id
	4586 : s, 436, 214, (
	4587 : s, 436, 215, -
	4588 : s, 436, 216, !
	4589 : s, 436, 217, num
	4590 : s, 436, 218, real
	4591 : s, 436, 219, true
	4592 : s, 436, 220, false
	4593 : s, 437, 471, )
	4594 : r, 471, 54, )
	4595 : r, 471, 54, ,
	4596 : r, 471, 54, or
	4597 : r, 471, 54, and
	4598 : r, 471, 54, eq
	4599 : r, 471, 54, neq
	4600 : r, 471, 54, +
	4601 : r, 471, 54, -
	4602 : r, 471, 54, *
	4603 : r, 471, 54, /
	4604 : r, 471, 54, mod
	4605 : s, 437, 151, or
	4606 : s, 441, 472, ]
	4607 : r, 472, 30, <
	4608 : r, 472, 30, <=
	4609 : r, 472, 30, >=
	4610 : r, 472, 30, >
	4611 : r, 472, 30, )
	4612 : r, 472, 30, ,
	4613 : r, 472, 30, or
	4614 : r, 472, 30, and
	4615 : r, 472, 30, eq
	4616 : r, 472, 30, neq
	4617 : r, 472, 30, +
	4618 : r, 472, 30, -
	4619 : r, 472, 30, *
	4620 : r, 472, 30, /
	4621 : r, 472, 30, mod
	4622 : r, 472, 30, [
	4623 : s, 441, 129, or
	4624 : g, 444, 26, block
	4625 : g, 444, 473, stmt
	4626 : r, 473, 19, }
	4627 : r, 473, 19, [
	4628 : r, 473, 19, id
	4629 : r, 473, 19, if
	4630 : r, 473, 19, while
	4631 : r, 473, 19, do
	4632 : r, 473, 19, return
	4633 : r, 473, 19, {
	4634 : r, 473, 19, else
	4635 : g, 444, 28, loc
	4636 : s, 444, 29, id
	4637 : s, 444, 30, {
	4638 : s, 444, 32, if
	4639 : s, 444, 33, while
	4640 : s, 444, 34, do
	4641 : s, 444, 35, return
	4642 : s, 445, 474, ;
	4643 : r, 474, 17, }
	4644 : r, 474, 17, else
	4645 : r, 474, 17, [
	4646 : r, 474, 17, id
	4647 : r, 474, 17, if
	4648 : r, 474, 17, while
	4649 : r, 474, 17, do
	4650 : r, 474, 17, return
	4651 : r, 474, 17, {
	4652 : s, 445, 109, or
	4653 : g, 446, 26, block
	4654 : g, 446, 27, stmt
	4655 : g, 446, 28, loc
	4656 : s, 446, 29, id
	4657 : s, 446, 30, {
	4658 : s, 446, 475, }
	4659 : r, 475, 9, }
	4660 : r, 475, 9, else
	4661 : r, 475, 9, [
	4662 : r, 475, 9, id
	4663 : r, 475, 9, if
	4664 : r, 475, 9, while
	4665 : r, 475, 9, do
	4666 : r, 475, 9, return
	4667 : r, 475, 9, {
	4668 : s, 446, 32, if
	4669 : s, 446, 33, while
	4670 : s, 446, 34, do
	4671 : s, 446, 35, return
	4672 : s, 447, 476, )
	4673 : r, 476, 27, [
	4674 : r, 476, 27, id
	4675 : r, 476, 27, if
	4676 : r, 476, 27, while
	4677 : r, 476, 27, do
	4678 : r, 476, 27, return
	4679 : r, 476, 27, {
	4680 : r, 476, 27, ;
	4681 : s, 447, 151, or
	4682 : g, 448, 82, loc
	4683 : g, 448, 477, bool
	4684 : g, 448, 84, join
	4685 : g, 448, 85, equality
	4686 : g, 448, 86, rel
	4687 : g, 448, 87, expr
	4688 : g, 448, 88, term
	4689 : g, 448, 89, unary
	4690 : g, 448, 90, factor
	4691 : s, 448, 91, id
	4692 : s, 448, 92, (
	4693 : s, 448, 93, -
	4694 : s, 448, 94, !
	4695 : s, 448, 95, num
	4696 : s, 448, 96, real
	4697 : s, 448, 97, true
	4698 : s, 448, 98, false
	4699 : s, 449, 478, while
	4700 : s, 453, 479, ;
	4701 : r, 479, 21, }
	4702 : r, 479, 21, [
	4703 : r, 479, 21, id
	4704 : r, 479, 21, if
	4705 : r, 479, 21, while
	4706 : r, 479, 21, do
	4707 : r, 479, 21, return
	4708 : r, 479, 21, {
	4709 : r, 479, 21, else
	4710 : s, 455, 480, else
	4711 : r, 480, 27, [
	4712 : r, 480, 27, id
	4713 : r, 480, 27, if
	4714 : r, 480, 27, while
	4715 : r, 480, 27, do
	4716 : r, 480, 27, return
	4717 : r, 480, 27, {
	4718 : r, 480, 27, ;
	4719 : s, 456, 37, [
	4720 : s, 456, 481, =
	4721 : g, 457, 482, decls
	4722 : r, 482, 16, }
	4723 : r, 482, 16, [
	4724 : r, 482, 16, id
	4725 : r, 482, 16, if
	4726 : r, 482, 16, while
	4727 : r, 482, 16, do
	4728 : r, 482, 16, return
	4729 : r, 482, 16, {
	4730 : r, 482, 16, else
	4731 : s, 458, 483, (
	4732 : g, 459, 484, N
	4733 : g, 460, 485, N
	4734 : g, 461, 43, loc
	4735 : g, 461, 44, bool
	4736 : g, 461, 45, join
	4737 : g, 461, 46, equality
	4738 : g, 461, 47, rel
	4739 : g, 461, 48, expr
	4740 : g, 461, 49, term
	4741 : g, 461, 50, unary
	4742 : g, 461, 51, factor
	4743 : g, 461, 486, arg
	4744 : s, 461, 53, id
	4745 : s, 461, 54, (
	4746 : s, 461, 55, -
	4747 : s, 461, 56, !
	4748 : s, 461, 57, num
	4749 : s, 461, 58, real
	4750 : s, 461, 59, true
	4751 : s, 461, 60, false
	4752 : g, 462, 100, block
	4753 : g, 462, 487, stmt
	4754 : r, 487, 20, while
	4755 : g, 462, 102, loc
	4756 : s, 462, 29, id
	4757 : s, 462, 103, {
	4758 : s, 462, 104, if
	4759 : s, 462, 105, while
	4760 : s, 462, 106, do
	4761 : s, 462, 107, return
	4762 : s, 463, 488, )
	4763 : r, 488, 27, [
	4764 : r, 488, 27, id
	4765 : r, 488, 27, if
	4766 : r, 488, 27, while
	4767 : r, 488, 27, do
	4768 : r, 488, 27, return
	4769 : r, 488, 27, {
	4770 : r, 488, 27, ;
	4771 : s, 463, 151, or
	4772 : s, 464, 489, ]
	4773 : r, 489, 30, )
	4774 : r, 489, 30, ,
	4775 : r, 489, 30, or
	4776 : r, 489, 30, and
	4777 : r, 489, 30, eq
	4778 : r, 489, 30, neq
	4779 : r, 489, 30, +
	4780 : r, 489, 30, -
	4781 : r, 489, 30, *
	4782 : r, 489, 30, /
	4783 : r, 489, 30, mod
	4784 : r, 489, 30, [
	4785 : s, 464, 129, or
	4786 : s, 465, 433, *
	4787 : s, 465, 434, /
	4788 : s, 465, 435, mod
	4789 : s, 466, 433, *
	4790 : s, 466, 434, /
	4791 : s, 466, 435, mod
	4792 : s, 470, 490, )
	4793 : r, 490, 56, )
	4794 : r, 490, 56, ,
	4795 : r, 490, 56, or
	4796 : r, 490, 56, and
	4797 : r, 490, 56, eq
	4798 : r, 490, 56, neq
	4799 : r, 490, 56, +
	4800 : r, 490, 56, -
	4801 : r, 490, 56, *
	4802 : r, 490, 56, /
	4803 : r, 490, 56, mod
	4804 : s, 470, 300, ,
	4805 : g, 476, 491, M
	4806 : s, 477, 492, )
	4807 : r, 492, 27, [
	4808 : r, 492, 27, id
	4809 : r, 492, 27, if
	4810 : r, 492, 27, while
	4811 : r, 492, 27, do
	4812 : r, 492, 27, return
	4813 : r, 492, 27, {
	4814 : r, 492, 27, ;
	4815 : s, 477, 151, or
	4816 : s, 478, 493, (
	4817 : g, 480, 494, M
	4818 : g, 481, 78, loc
	4819 : g, 481, 495, bool
	4820 : g, 481, 45, join
	4821 : g, 481, 46, equality
	4822 : g, 481, 47, rel
	4823 : g, 481, 48, expr
	4824 : g, 481, 49, term
	4825 : g, 481, 50, unary
	4826 : g, 481, 51, factor
	4827 : s, 481, 80, id
	4828 : s, 481, 54, (
	4829 : s, 481, 55, -
	4830 : s, 481, 56, !
	4831 : s, 481, 57, num
	4832 : s, 481, 58, real
	4833 : s, 481, 59, true
	4834 : s, 481, 60, false
	4835 : g, 482, 22, decl
	4836 : g, 482, 23, type
	4837 : g, 482, 496, stmts
	4838 : s, 482, 11, basic
	4839 : g, 483, 82, loc
	4840 : g, 483, 497, bool
	4841 : g, 483, 84, join
	4842 : g, 483, 85, equality
	4843 : g, 483, 86, rel
	4844 : g, 483, 87, expr
	4845 : g, 483, 88, term
	4846 : g, 483, 89, unary
	4847 : g, 483, 90, factor
	4848 : s, 483, 91, id
	4849 : s, 483, 92, (
	4850 : s, 483, 93, -
	4851 : s, 483, 94, !
	4852 : s, 483, 95, num
	4853 : s, 483, 96, real
	4854 : s, 483, 97, true
	4855 : s, 483, 98, false
	4856 : s, 484, 498, (
	4857 : g, 485, 100, block
	4858 : g, 485, 499, stmt
	4859 : g, 485, 102, loc
	4860 : s, 485, 29, id
	4861 : s, 485, 103, {
	4862 : s, 485, 104, if
	4863 : s, 485, 105, while
	4864 : s, 485, 106, do
	4865 : s, 485, 107, return
	4866 : s, 486, 500, ;
	4867 : r, 500, 22, while
	4868 : r, 500, 22, else
	4869 : g, 488, 501, M
	4870 : g, 491, 335, block
	4871 : g, 491, 502, stmt
	4872 : r, 502, 18, }
	4873 : r, 502, 18, else
	4874 : r, 502, 18, [
	4875 : r, 502, 18, id
	4876 : r, 502, 18, if
	4877 : r, 502, 18, while
	4878 : r, 502, 18, do
	4879 : r, 502, 18, return
	4880 : r, 502, 18, {
	4881 : g, 491, 337, loc
	4882 : s, 491, 29, id
	4883 : s, 491, 338, {
	4884 : s, 491, 339, if
	4885 : s, 491, 340, while
	4886 : s, 491, 341, do
	4887 : s, 491, 342, return
	4888 : g, 492, 503, M
	4889 : g, 493, 82, loc
	4890 : g, 493, 504, bool
	4891 : g, 493, 84, join
	4892 : g, 493, 85, equality
	4893 : g, 493, 86, rel
	4894 : g, 493, 87, expr
	4895 : g, 493, 88, term
	4896 : g, 493, 89, unary
	4897 : g, 493, 90, factor
	4898 : s, 493, 91, id
	4899 : s, 493, 92, (
	4900 : s, 493, 93, -
	4901 : s, 493, 94, !
	4902 : s, 493, 95, num
	4903 : s, 493, 96, real
	4904 : s, 493, 97, true
	4905 : s, 493, 98, false
	4906 : g, 494, 100, block
	4907 : g, 494, 505, stmt
	4908 : r, 505, 19, while
	4909 : g, 494, 102, loc
	4910 : s, 494, 29, id
	4911 : s, 494, 103, {
	4912 : s, 494, 104, if
	4913 : s, 494, 105, while
	4914 : s, 494, 106, do
	4915 : s, 494, 107, return
	4916 : s, 495, 506, ;
	4917 : r, 506, 17, while
	4918 : r, 506, 17, else
	4919 : s, 495, 109, or
	4920 : g, 496, 26, block
	4921 : g, 496, 27, stmt
	4922 : g, 496, 28, loc
	4923 : s, 496, 29, id
	4924 : s, 496, 30, {
	4925 : s, 496, 507, }
	4926 : r, 507, 9, while
	4927 : r, 507, 9, else
	4928 : s, 496, 32, if
	4929 : s, 496, 33, while
	4930 : s, 496, 34, do
	4931 : s, 496, 35, return
	4932 : s, 497, 508, )
	4933 : r, 508, 27, [
	4934 : r, 508, 27, id
	4935 : r, 508, 27, if
	4936 : r, 508, 27, while
	4937 : r, 508, 27, do
	4938 : r, 508, 27, return
	4939 : r, 508, 27, {
	4940 : r, 508, 27, ;
	4941 : s, 497, 151, or
	4942 : g, 498, 82, loc
	4943 : g, 498, 509, bool
	4944 : g, 498, 84, join
	4945 : g, 498, 85, equality
	4946 : g, 498, 86, rel
	4947 : g, 498, 87, expr
	4948 : g, 498, 88, term
	4949 : g, 498, 89, unary
	4950 : g, 498, 90, factor
	4951 : s, 498, 91, id
	4952 : s, 498, 92, (
	4953 : s, 498, 93, -
	4954 : s, 498, 94, !
	4955 : s, 498, 95, num
	4956 : s, 498, 96, real
	4957 : s, 498, 97, true
	4958 : s, 498, 98, false
	4959 : s, 499, 510, while
	4960 : s, 501, 511, ;
	4961 : r, 511, 21, while
	4962 : s, 502, 512, else
	4963 : r, 512, 27, [
	4964 : r, 512, 27, id
	4965 : r, 512, 27, if
	4966 : r, 512, 27, while
	4967 : r, 512, 27, do
	4968 : r, 512, 27, return
	4969 : r, 512, 27, {
	4970 : r, 512, 27, ;
	4971 : g, 503, 335, block
	4972 : g, 503, 513, stmt
	4973 : r, 513, 20, }
	4974 : r, 513, 20, else
	4975 : r, 513, 20, [
	4976 : r, 513, 20, id
	4977 : r, 513, 20, if
	4978 : r, 513, 20, while
	4979 : r, 513, 20, do
	4980 : r, 513, 20, return
	4981 : r, 513, 20, {
	4982 : g, 503, 337, loc
	4983 : s, 503, 29, id
	4984 : s, 503, 338, {
	4985 : s, 503, 339, if
	4986 : s, 503, 340, while
	4987 : s, 503, 341, do
	4988 : s, 503, 342, return
	4989 : s, 504, 514, )
	4990 : r, 514, 27, [
	4991 : r, 514, 27, id
	4992 : r, 514, 27, if
	4993 : r, 514, 27, while
	4994 : r, 514, 27, do
	4995 : r, 514, 27, return
	4996 : r, 514, 27, {
	4997 : r, 514, 27, ;
	4998 : s, 504, 151, or
	4999 : g, 508, 515, M
	5000 : s, 509, 516, )
	5001 : r, 516, 27, [
	5002 : r, 516, 27, id
	5003 : r, 516, 27, if
	5004 : r, 516, 27, while
	5005 : r, 516, 27, do
	5006 : r, 516, 27, return
	5007 : r, 516, 27, {
	5008 : r, 516, 27, ;
	5009 : s, 509, 151, or
	5010 : s, 510, 517, (
	5011 : g, 512, 518, M
	5012 : g, 514, 519, M
	5013 : g, 515, 454, block
	5014 : g, 515, 520, stmt
	5015 : r, 520, 18, while
	5016 : r, 520, 18, else
	5017 : g, 515, 456, loc
	5018 : s, 515, 29, id
	5019 : s, 515, 457, {
	5020 : s, 515, 458, if
	5021 : s, 515, 459, while
	5022 : s, 515, 460, do
	5023 : s, 515, 461, return
	5024 : g, 516, 521, M
	5025 : g, 517, 82, loc
	5026 : g, 517, 522, bool
	5027 : g, 517, 84, join
	5028 : g, 517, 85, equality
	5029 : g, 517, 86, rel
	5030 : g, 517, 87, expr
	5031 : g, 517, 88, term
	5032 : g, 517, 89, unary
	5033 : g, 517, 90, factor
	5034 : s, 517, 91, id
	5035 : s, 517, 92, (
	5036 : s, 517, 93, -
	5037 : s, 517, 94, !
	5038 : s, 517, 95, num
	5039 : s, 517, 96, real
	5040 : s, 517, 97, true
	5041 : s, 517, 98, false
	5042 : g, 518, 335, block
	5043 : g, 518, 523, stmt
	5044 : r, 523, 19, }
	5045 : r, 523, 19, else
	5046 : r, 523, 19, [
	5047 : r, 523, 19, id
	5048 : r, 523, 19, if
	5049 : r, 523, 19, while
	5050 : r, 523, 19, do
	5051 : r, 523, 19, return
	5052 : r, 523, 19, {
	5053 : g, 518, 337, loc
	5054 : s, 518, 29, id
	5055 : s, 518, 338, {
	5056 : s, 518, 339, if
	5057 : s, 518, 340, while
	5058 : s, 518, 341, do
	5059 : s, 518, 342, return
	5060 : s, 519, 524, ;
	5061 : r, 524, 21, }
	5062 : r, 524, 21, else
	5063 : r, 524, 21, [
	5064 : r, 524, 21, id
	5065 : r, 524, 21, if
	5066 : r, 524, 21, while
	5067 : r, 524, 21, do
	5068 : r, 524, 21, return
	5069 : r, 524, 21, {
	5070 : s, 520, 525, else
	5071 : r, 525, 27, [
	5072 : r, 525, 27, id
	5073 : r, 525, 27, if
	5074 : r, 525, 27, while
	5075 : r, 525, 27, do
	5076 : r, 525, 27, return
	5077 : r, 525, 27, {
	5078 : r, 525, 27, ;
	5079 : g, 521, 454, block
	5080 : g, 521, 526, stmt
	5081 : r, 526, 20, while
	5082 : r, 526, 20, else
	5083 : g, 521, 456, loc
	5084 : s, 521, 29, id
	5085 : s, 521, 457, {
	5086 : s, 521, 458, if
	5087 : s, 521, 459, while
	5088 : s, 521, 460, do
	5089 : s, 521, 461, return
	5090 : s, 522, 527, )
	5091 : r, 527, 27, [
	5092 : r, 527, 27, id
	5093 : r, 527, 27, if
	5094 : r, 527, 27, while
	5095 : r, 527, 27, do
	5096 : r, 527, 27, return
	5097 : r, 527, 27, {
	5098 : r, 527, 27, ;
	5099 : s, 522, 151, or
	5100 : g, 525, 528, M
	5101 : g, 527, 529, M
	5102 : g, 528, 454, block
	5103 : g, 528, 530, stmt
	5104 : r, 530, 19, while
	5105 : r, 530, 19, else
	5106 : g, 528, 456, loc
	5107 : s, 528, 29, id
	5108 : s, 528, 457, {
	5109 : s, 528, 458, if
	5110 : s, 528, 459, while
	5111 : s, 528, 460, do
	5112 : s, 528, 461, return
	5113 : s, 529, 531, ;
	5114 : r, 531, 21, while
	5115 : r, 531, 21, else
[table] 
	[0] 
		fundefs	g1
		fundef	g2
		basic	s3
	[1] 
		$	r0
		fundef	g4
		basic	s3
	[2] 
		$	r2
		basic	r2
	[4] 
		$	r1
		basic	r1
	[3] 
		id	s5
	[5] 
		(	r29
		F	g6
	[6] 
		(	s7
	[7] 
		)	r7
		,	r7
		iargs	g8
		iarg	g9
		type	g10
		basic	s11
	[9] 
		)	r6
		,	r6
	[11] 
		id	r14
		[	r14
	[8] 
		)	s12
		,	s13
	[10] 
		id	s14
		[	s15
	[14] 
		)	r8
		,	r8
	[12] 
		block	g16
		{	s17
	[16] 
		$	r4
		basic	r4
	[17] 
		[	r11
		id	r11
		if	r11
		while	r11
		do	r11
		return	r11
		{	r11
		}	r11
		basic	r11
		decls	g20
	[13] 
		iarg	g18
		type	g10
		basic	s11
	[18] 
		)	r5
		,	r5
	[15] 
		num	s19
	[20] 
		}	r16
		[	r16
		id	r16
		if	r16
		while	r16
		do	r16
		return	r16
		{	r16
		else	r16
		decl	g22
		type	g23
		stmts	g24
		basic	s11
	[19] 
		]	s21
	[21] 
		id	r13
		[	r13
	[22] 
		[	r10
		id	r10
		if	r10
		while	r10
		do	r10
		return	r10
		{	r10
		}	r10
		basic	r10
	[23] 
		id	s25
		[	s15
	[24] 
		block	g26
		stmt	g27
		loc	g28
		id	s29
		{	s30
		}	s31
		if	s32
		while	s33
		do	s34
		return	s35
	[26] 
		}	r23
		[	r23
		id	r23
		if	r23
		while	r23
		do	r23
		return	r23
		{	r23
		else	r23
	[27] 
		}	r15
		[	r15
		id	r15
		if	r15
		while	r15
		do	r15
		return	r15
		{	r15
		else	r15
	[29] 
		=	r31
		[	r31
	[30] 
		[	r11
		id	r11
		if	r11
		while	r11
		do	r11
		return	r11
		{	r11
		}	r11
		basic	r11
		decls	g39
	[31] 
		$	r9
		basic	r9
	[33] 
		(	r28
		[	r28
		id	r28
		if	r28
		while	r28
		do	r28
		return	r28
		{	r28
		N	g41
	[34] 
		(	r28
		[	r28
		id	r28
		if	r28
		while	r28
		do	r28
		return	r28
		{	r28
		N	g42
	[25] 
		;	s36
	[36] 
		[	r12
		id	r12
		if	r12
		while	r12
		do	r12
		return	r12
		{	r12
		}	r12
		basic	r12
	[28] 
		[	s37
		=	s38
	[39] 
		}	r16
		[	r16
		id	r16
		if	r16
		while	r16
		do	r16
		return	r16
		{	r16
		else	r16
		decl	g22
		type	g23
		stmts	g81
		basic	s11
	[32] 
		(	s40
	[35] 
		loc	g43
		bool	g44
		join	g45
		equality	g46
		rel	g47
		expr	g48
		term	g49
		unary	g50
		factor	g51
		arg	g52
		id	s53
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[43] 
		;	r55
		<	r55
		<=	r55
		>=	r55
		>	r55
		or	r55
		and	r55
		eq	r55
		neq	r55
		+	r55
		-	r55
		*	r55
		/	r55
		mod	r55
		[	s108
	[44] 
		;	r62
		or	s109
	[45] 
		;	r33
		or	r33
		and	s110
	[46] 
		;	r35
		or	r35
		and	r35
		eq	s111
		neq	s112
	[47] 
		;	r38
		or	r38
		and	r38
		eq	r38
		neq	r38
	[48] 
		;	r43
		or	r43
		and	r43
		eq	r43
		neq	r43
		<	s113
		<=	s114
		>=	s115
		>	s116
		+	s117
		-	s118
	[49] 
		<	r46
		<=	r46
		>=	r46
		>	r46
		;	r46
		or	r46
		and	r46
		eq	r46
		neq	r46
		+	r46
		-	r46
		*	s119
		/	s120
		mod	s121
	[50] 
		<	r50
		<=	r50
		>=	r50
		>	r50
		;	r50
		or	r50
		and	r50
		eq	r50
		neq	r50
		+	r50
		-	r50
		*	r50
		/	r50
		mod	r50
	[51] 
		<	r53
		<=	r53
		>=	r53
		>	r53
		;	r53
		or	r53
		and	r53
		eq	r53
		neq	r53
		+	r53
		-	r53
		*	r53
		/	r53
		mod	r53
	[53] 
		;	r31
		[	r31
		<	r31
		<=	r31
		>=	r31
		>	r31
		or	r31
		and	r31
		eq	r31
		neq	r31
		+	r31
		-	r31
		*	r31
		/	r31
		mod	r31
		(	s123
	[57] 
		<	r57
		<=	r57
		>=	r57
		>	r57
		;	r57
		or	r57
		and	r57
		eq	r57
		neq	r57
		+	r57
		-	r57
		*	r57
		/	r57
		mod	r57
	[58] 
		<	r58
		<=	r58
		>=	r58
		>	r58
		;	r58
		or	r58
		and	r58
		eq	r58
		neq	r58
		+	r58
		-	r58
		*	r58
		/	r58
		mod	r58
	[59] 
		<	r59
		<=	r59
		>=	r59
		>	r59
		;	r59
		or	r59
		and	r59
		eq	r59
		neq	r59
		+	r59
		-	r59
		*	r59
		/	r59
		mod	r59
	[60] 
		<	r60
		<=	r60
		>=	r60
		>	r60
		;	r60
		or	r60
		and	r60
		eq	r60
		neq	r60
		+	r60
		-	r60
		*	r60
		/	r60
		mod	r60
	[37] 
		loc	g61
		bool	g62
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[61] 
		<	r55
		<=	r55
		>=	r55
		>	r55
		]	r55
		or	r55
		and	r55
		eq	r55
		neq	r55
		+	r55
		-	r55
		*	r55
		/	r55
		mod	r55
		[	s127
	[63] 
		]	r33
		or	r33
		and	s130
	[64] 
		]	r35
		or	r35
		and	r35
		eq	s131
		neq	s132
	[65] 
		]	r38
		or	r38
		and	r38
		eq	r38
		neq	r38
	[66] 
		]	r43
		or	r43
		and	r43
		eq	r43
		neq	r43
		<	s133
		<=	s134
		>=	s135
		>	s136
		+	s137
		-	s138
	[67] 
		<	r46
		<=	r46
		>=	r46
		>	r46
		]	r46
		or	r46
		and	r46
		eq	r46
		neq	r46
		+	r46
		-	r46
		*	s139
		/	s140
		mod	s141
	[68] 
		<	r50
		<=	r50
		>=	r50
		>	r50
		]	r50
		or	r50
		and	r50
		eq	r50
		neq	r50
		+	r50
		-	r50
		*	r50
		/	r50
		mod	r50
	[69] 
		<	r53
		<=	r53
		>=	r53
		>	r53
		]	r53
		or	r53
		and	r53
		eq	r53
		neq	r53
		+	r53
		-	r53
		*	r53
		/	r53
		mod	r53
	[70] 
		<	r31
		<=	r31
		>=	r31
		>	r31
		]	r31
		or	r31
		and	r31
		eq	r31
		neq	r31
		+	r31
		-	r31
		*	r31
		/	r31
		mod	r31
		[	r31
		(	s142
	[74] 
		<	r57
		<=	r57
		>=	r57
		>	r57
		]	r57
		or	r57
		and	r57
		eq	r57
		neq	r57
		+	r57
		-	r57
		*	r57
		/	r57
		mod	r57
	[75] 
		<	r58
		<=	r58
		>=	r58
		>	r58
		]	r58
		or	r58
		and	r58
		eq	r58
		neq	r58
		+	r58
		-	r58
		*	r58
		/	r58
		mod	r58
	[76] 
		<	r59
		<=	r59
		>=	r59
		>	r59
		]	r59
		or	r59
		and	r59
		eq	r59
		neq	r59
		+	r59
		-	r59
		*	r59
		/	r59
		mod	r59
	[77] 
		<	r60
		<=	r60
		>=	r60
		>	r60
		]	r60
		or	r60
		and	r60
		eq	r60
		neq	r60
		+	r60
		-	r60
		*	r60
		/	r60
		mod	r60
	[38] 
		loc	g78
		bool	g79
		join	g45
		equality	g46
		rel	g47
		expr	g48
		term	g49
		unary	g50
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[78] 
		<	r55
		<=	r55
		>=	r55
		>	r55
		;	r55
		or	r55
		and	r55
		eq	r55
		neq	r55
		+	r55
		-	r55
		*	r55
		/	r55
		mod	r55
		[	s146
	[80] 
		<	r31
		<=	r31
		>=	r31
		>	r31
		;	r31
		or	r31
		and	r31
		eq	r31
		neq	r31
		+	r31
		-	r31
		*	r31
		/	r31
		mod	r31
		[	r31
		(	s123
	[40] 
		loc	g82
		bool	g83
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[82] 
		<	r55
		<=	r55
		>=	r55
		>	r55
		)	r55
		or	r55
		and	r55
		eq	r55
		neq	r55
		+	r55
		-	r55
		*	r55
		/	r55
		mod	r55
		[	s149
	[84] 
		)	r33
		or	r33
		and	s152
	[85] 
		)	r35
		or	r35
		and	r35
		eq	s153
		neq	s154
	[86] 
		)	r38
		or	r38
		and	r38
		eq	r38
		neq	r38
	[87] 
		)	r43
		or	r43
		and	r43
		eq	r43
		neq	r43
		<	s155
		<=	s156
		>=	s157
		>	s158
		+	s159
		-	s160
	[88] 
		<	r46
		<=	r46
		>=	r46
		>	r46
		)	r46
		or	r46
		and	r46
		eq	r46
		neq	r46
		+	r46
		-	r46
		*	s161
		/	s162
		mod	s163
	[89] 
		<	r50
		<=	r50
		>=	r50
		>	r50
		)	r50
		or	r50
		and	r50
		eq	r50
		neq	r50
		+	r50
		-	r50
		*	r50
		/	r50
		mod	r50
	[90] 
		<	r53
		<=	r53
		>=	r53
		>	r53
		)	r53
		or	r53
		and	r53
		eq	r53
		neq	r53
		+	r53
		-	r53
		*	r53
		/	r53
		mod	r53
	[91] 
		<	r31
		<=	r31
		>=	r31
		>	r31
		)	r31
		or	r31
		and	r31
		eq	r31
		neq	r31
		+	r31
		-	r31
		*	r31
		/	r31
		mod	r31
		[	r31
		(	s164
	[95] 
		<	r57
		<=	r57
		>=	r57
		>	r57
		)	r57
		or	r57
		and	r57
		eq	r57
		neq	r57
		+	r57
		-	r57
		*	r57
		/	r57
		mod	r57
	[96] 
		<	r58
		<=	r58
		>=	r58
		>	r58
		)	r58
		or	r58
		and	r58
		eq	r58
		neq	r58
		+	r58
		-	r58
		*	r58
		/	r58
		mod	r58
	[97] 
		<	r59
		<=	r59
		>=	r59
		>	r59
		)	r59
		or	r59
		and	r59
		eq	r59
		neq	r59
		+	r59
		-	r59
		*	r59
		/	r59
		mod	r59
	[98] 
		<	r60
		<=	r60
		>=	r60
		>	r60
		)	r60
		or	r60
		and	r60
		eq	r60
		neq	r60
		+	r60
		-	r60
		*	r60
		/	r60
		mod	r60
	[41] 
		(	s99
	[42] 
		block	g100
		stmt	g101
		loc	g102
		id	s29
		{	s103
		if	s104
		while	s105
		do	s106
		return	s107
	[100] 
		while	r23
	[103] 
		[	r11
		id	r11
		if	r11
		while	r11
		do	r11
		return	r11
		{	r11
		}	r11
		basic	r11
		decls	g171
	[105] 
		(	r28
		[	r28
		id	r28
		if	r28
		while	r28
		do	r28
		return	r28
		{	r28
		N	g173
	[106] 
		(	r28
		[	r28
		id	r28
		if	r28
		while	r28
		do	r28
		return	r28
		{	r28
		N	g174
	[52] 
		;	s122
	[122] 
		}	r22
		[	r22
		id	r22
		if	r22
		while	r22
		do	r22
		return	r22
		{	r22
		else	r22
	[123] 
		)	r26
		,	r26
		args	g202
		loc	g203
		bool	g204
		join	g205
		equality	g206
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		arg	g212
		id	s213
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[54] 
		loc	g82
		bool	g124
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[55] 
		loc	g78
		unary	g125
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[125] 
		<	r52
		<=	r52
		>=	r52
		>	r52
		;	r52
		or	r52
		and	r52
		eq	r52
		neq	r52
		+	r52
		-	r52
		*	r52
		/	r52
		mod	r52
	[56] 
		loc	g78
		unary	g126
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[126] 
		<	r51
		<=	r51
		>=	r51
		>	r51
		;	r51
		or	r51
		and	r51
		eq	r51
		neq	r51
		+	r51
		-	r51
		*	r51
		/	r51
		mod	r51
	[62] 
		]	s128
		or	s129
	[128] 
		=	r30
		[	r30
	[142] 
		)	r26
		,	r26
		args	g248
		loc	g203
		bool	g204
		join	g205
		equality	g206
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		arg	g212
		id	s213
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[71] 
		loc	g82
		bool	g143
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[72] 
		loc	g61
		unary	g144
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[144] 
		<	r52
		<=	r52
		>=	r52
		>	r52
		]	r52
		or	r52
		and	r52
		eq	r52
		neq	r52
		+	r52
		-	r52
		*	r52
		/	r52
		mod	r52
	[73] 
		loc	g61
		unary	g145
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[145] 
		<	r51
		<=	r51
		>=	r51
		>	r51
		]	r51
		or	r51
		and	r51
		eq	r51
		neq	r51
		+	r51
		-	r51
		*	r51
		/	r51
		mod	r51
	[79] 
		;	s147
		or	s109
	[147] 
		}	r17
		[	r17
		id	r17
		if	r17
		while	r17
		do	r17
		return	r17
		{	r17
		else	r17
	[81] 
		block	g26
		stmt	g27
		loc	g28
		id	s29
		{	s30
		}	s148
		if	s32
		while	s33
		do	s34
		return	s35
	[148] 
		}	r9
		[	r9
		id	r9
		if	r9
		while	r9
		do	r9
		return	r9
		{	r9
		else	r9
	[83] 
		)	s150
		or	s151
	[150] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g252
	[164] 
		)	r26
		,	r26
		args	g278
		loc	g203
		bool	g204
		join	g205
		equality	g206
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		arg	g212
		id	s213
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[92] 
		loc	g82
		bool	g165
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[93] 
		loc	g82
		unary	g166
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[166] 
		<	r52
		<=	r52
		>=	r52
		>	r52
		)	r52
		or	r52
		and	r52
		eq	r52
		neq	r52
		+	r52
		-	r52
		*	r52
		/	r52
		mod	r52
	[94] 
		loc	g82
		unary	g167
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[167] 
		<	r51
		<=	r51
		>=	r51
		>	r51
		)	r51
		or	r51
		and	r51
		eq	r51
		neq	r51
		+	r51
		-	r51
		*	r51
		/	r51
		mod	r51
	[99] 
		loc	g82
		bool	g168
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[101] 
		while	s169
	[102] 
		[	s37
		=	s170
	[171] 
		}	r16
		[	r16
		id	r16
		if	r16
		while	r16
		do	r16
		return	r16
		{	r16
		else	r16
		decl	g22
		type	g23
		stmts	g283
		basic	s11
	[104] 
		(	s172
	[107] 
		loc	g43
		bool	g44
		join	g45
		equality	g46
		rel	g47
		expr	g48
		term	g49
		unary	g50
		factor	g51
		arg	g175
		id	s53
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[108] 
		loc	g61
		bool	g176
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[109] 
		loc	g78
		join	g177
		equality	g46
		rel	g47
		expr	g48
		term	g49
		unary	g50
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[177] 
		;	r32
		or	r32
		and	s110
	[110] 
		loc	g78
		equality	g178
		rel	g47
		expr	g48
		term	g49
		unary	g50
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[178] 
		;	r34
		or	r34
		and	r34
		eq	s111
		neq	s112
	[111] 
		loc	g78
		rel	g179
		expr	g48
		term	g49
		unary	g50
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[179] 
		;	r36
		or	r36
		and	r36
		eq	r36
		neq	r36
	[112] 
		loc	g78
		rel	g180
		expr	g48
		term	g49
		unary	g50
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[180] 
		;	r37
		or	r37
		and	r37
		eq	r37
		neq	r37
	[113] 
		loc	g181
		expr	g182
		term	g183
		unary	g184
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[181] 
		;	r55
		or	r55
		and	r55
		eq	r55
		neq	r55
		+	r55
		-	r55
		*	r55
		/	r55
		mod	r55
		[	s289
	[182] 
		;	r39
		or	r39
		and	r39
		eq	r39
		neq	r39
		+	s290
		-	s291
	[183] 
		;	r46
		or	r46
		and	r46
		eq	r46
		neq	r46
		+	r46
		-	r46
		*	s292
		/	s293
		mod	s294
	[184] 
		;	r50
		or	r50
		and	r50
		eq	r50
		neq	r50
		+	r50
		-	r50
		*	r50
		/	r50
		mod	r50
	[185] 
		;	r53
		or	r53
		and	r53
		eq	r53
		neq	r53
		+	r53
		-	r53
		*	r53
		/	r53
		mod	r53
	[186] 
		;	r31
		or	r31
		and	r31
		eq	r31
		neq	r31
		+	r31
		-	r31
		*	r31
		/	r31
		mod	r31
		[	r31
		(	s295
	[190] 
		;	r57
		or	r57
		and	r57
		eq	r57
		neq	r57
		+	r57
		-	r57
		*	r57
		/	r57
		mod	r57
	[191] 
		;	r58
		or	r58
		and	r58
		eq	r58
		neq	r58
		+	r58
		-	r58
		*	r58
		/	r58
		mod	r58
	[192] 
		;	r59
		or	r59
		and	r59
		eq	r59
		neq	r59
		+	r59
		-	r59
		*	r59
		/	r59
		mod	r59
	[193] 
		;	r60
		or	r60
		and	r60
		eq	r60
		neq	r60
		+	r60
		-	r60
		*	r60
		/	r60
		mod	r60
	[114] 
		loc	g181
		expr	g194
		term	g183
		unary	g184
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[194] 
		;	r40
		or	r40
		and	r40
		eq	r40
		neq	r40
		+	s290
		-	s291
	[115] 
		loc	g181
		expr	g195
		term	g183
		unary	g184
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[195] 
		;	r41
		or	r41
		and	r41
		eq	r41
		neq	r41
		+	s290
		-	s291
	[116] 
		loc	g181
		expr	g196
		term	g183
		unary	g184
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[196] 
		;	r42
		or	r42
		and	r42
		eq	r42
		neq	r42
		+	s290
		-	s291
	[117] 
		loc	g78
		term	g197
		unary	g50
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[197] 
		<	r44
		<=	r44
		>=	r44
		>	r44
		;	r44
		or	r44
		and	r44
		eq	r44
		neq	r44
		+	r44
		-	r44
		*	s119
		/	s120
		mod	s121
	[118] 
		loc	g78
		term	g198
		unary	g50
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[198] 
		<	r45
		<=	r45
		>=	r45
		>	r45
		;	r45
		or	r45
		and	r45
		eq	r45
		neq	r45
		+	r45
		-	r45
		*	s119
		/	s120
		mod	s121
	[119] 
		loc	g78
		unary	g199
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[199] 
		<	r47
		<=	r47
		>=	r47
		>	r47
		;	r47
		or	r47
		and	r47
		eq	r47
		neq	r47
		+	r47
		-	r47
		*	r47
		/	r47
		mod	r47
	[120] 
		loc	g78
		unary	g200
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[200] 
		<	r48
		<=	r48
		>=	r48
		>	r48
		;	r48
		or	r48
		and	r48
		eq	r48
		neq	r48
		+	r48
		-	r48
		*	r48
		/	r48
		mod	r48
	[121] 
		loc	g78
		unary	g201
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[201] 
		<	r49
		<=	r49
		>=	r49
		>	r49
		;	r49
		or	r49
		and	r49
		eq	r49
		neq	r49
		+	r49
		-	r49
		*	r49
		/	r49
		mod	r49
	[203] 
		)	r55
		,	r55
		<	r55
		<=	r55
		>=	r55
		>	r55
		or	r55
		and	r55
		eq	r55
		neq	r55
		+	r55
		-	r55
		*	r55
		/	r55
		mod	r55
		[	s301
	[204] 
		)	r62
		,	r62
		or	s302
	[205] 
		)	r33
		,	r33
		or	r33
		and	s303
	[206] 
		)	r35
		,	r35
		or	r35
		and	r35
		eq	s304
		neq	s305
	[207] 
		)	r38
		,	r38
		or	r38
		and	r38
		eq	r38
		neq	r38
	[208] 
		)	r43
		,	r43
		or	r43
		and	r43
		eq	r43
		neq	r43
		<	s306
		<=	s307
		>=	s308
		>	s309
		+	s310
		-	s311
	[209] 
		<	r46
		<=	r46
		>=	r46
		>	r46
		)	r46
		,	r46
		or	r46
		and	r46
		eq	r46
		neq	r46
		+	r46
		-	r46
		*	s312
		/	s313
		mod	s314
	[210] 
		<	r50
		<=	r50
		>=	r50
		>	r50
		)	r50
		,	r50
		or	r50
		and	r50
		eq	r50
		neq	r50
		+	r50
		-	r50
		*	r50
		/	r50
		mod	r50
	[211] 
		<	r53
		<=	r53
		>=	r53
		>	r53
		)	r53
		,	r53
		or	r53
		and	r53
		eq	r53
		neq	r53
		+	r53
		-	r53
		*	r53
		/	r53
		mod	r53
	[212] 
		)	r25
		,	r25
	[213] 
		)	r31
		,	r31
		[	r31
		<	r31
		<=	r31
		>=	r31
		>	r31
		or	r31
		and	r31
		eq	r31
		neq	r31
		+	r31
		-	r31
		*	r31
		/	r31
		mod	r31
		(	s315
	[217] 
		<	r57
		<=	r57
		>=	r57
		>	r57
		)	r57
		,	r57
		or	r57
		and	r57
		eq	r57
		neq	r57
		+	r57
		-	r57
		*	r57
		/	r57
		mod	r57
	[218] 
		<	r58
		<=	r58
		>=	r58
		>	r58
		)	r58
		,	r58
		or	r58
		and	r58
		eq	r58
		neq	r58
		+	r58
		-	r58
		*	r58
		/	r58
		mod	r58
	[219] 
		<	r59
		<=	r59
		>=	r59
		>	r59
		)	r59
		,	r59
		or	r59
		and	r59
		eq	r59
		neq	r59
		+	r59
		-	r59
		*	r59
		/	r59
		mod	r59
	[220] 
		<	r60
		<=	r60
		>=	r60
		>	r60
		)	r60
		,	r60
		or	r60
		and	r60
		eq	r60
		neq	r60
		+	r60
		-	r60
		*	r60
		/	r60
		mod	r60
	[124] 
		)	s221
		or	s151
	[221] 
		<	r54
		<=	r54
		>=	r54
		>	r54
		;	r54
		or	r54
		and	r54
		eq	r54
		neq	r54
		+	r54
		-	r54
		*	r54
		/	r54
		mod	r54
	[127] 
		loc	g61
		bool	g222
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[129] 
		loc	g61
		join	g223
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[223] 
		]	r32
		or	r32
		and	s130
	[130] 
		loc	g61
		equality	g224
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[224] 
		]	r34
		or	r34
		and	r34
		eq	s131
		neq	s132
	[131] 
		loc	g61
		rel	g225
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[225] 
		]	r36
		or	r36
		and	r36
		eq	r36
		neq	r36
	[132] 
		loc	g61
		rel	g226
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[226] 
		]	r37
		or	r37
		and	r37
		eq	r37
		neq	r37
	[133] 
		loc	g227
		expr	g228
		term	g229
		unary	g230
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[227] 
		]	r55
		or	r55
		and	r55
		eq	r55
		neq	r55
		+	r55
		-	r55
		*	r55
		/	r55
		mod	r55
		[	s322
	[228] 
		]	r39
		or	r39
		and	r39
		eq	r39
		neq	r39
		+	s323
		-	s324
	[229] 
		]	r46
		or	r46
		and	r46
		eq	r46
		neq	r46
		+	r46
		-	r46
		*	s325
		/	s326
		mod	s327
	[230] 
		]	r50
		or	r50
		and	r50
		eq	r50
		neq	r50
		+	r50
		-	r50
		*	r50
		/	r50
		mod	r50
	[231] 
		]	r53
		or	r53
		and	r53
		eq	r53
		neq	r53
		+	r53
		-	r53
		*	r53
		/	r53
		mod	r53
	[232] 
		]	r31
		or	r31
		and	r31
		eq	r31
		neq	r31
		+	r31
		-	r31
		*	r31
		/	r31
		mod	r31
		[	r31
		(	s328
	[236] 
		]	r57
		or	r57
		and	r57
		eq	r57
		neq	r57
		+	r57
		-	r57
		*	r57
		/	r57
		mod	r57
	[237] 
		]	r58
		or	r58
		and	r58
		eq	r58
		neq	r58
		+	r58
		-	r58
		*	r58
		/	r58
		mod	r58
	[238] 
		]	r59
		or	r59
		and	r59
		eq	r59
		neq	r59
		+	r59
		-	r59
		*	r59
		/	r59
		mod	r59
	[239] 
		]	r60
		or	r60
		and	r60
		eq	r60
		neq	r60
		+	r60
		-	r60
		*	r60
		/	r60
		mod	r60
	[134] 
		loc	g227
		expr	g240
		term	g229
		unary	g230
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[240] 
		]	r40
		or	r40
		and	r40
		eq	r40
		neq	r40
		+	s323
		-	s324
	[135] 
		loc	g227
		expr	g241
		term	g229
		unary	g230
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[241] 
		]	r41
		or	r41
		and	r41
		eq	r41
		neq	r41
		+	s323
		-	s324
	[136] 
		loc	g227
		expr	g242
		term	g229
		unary	g230
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[242] 
		]	r42
		or	r42
		and	r42
		eq	r42
		neq	r42
		+	s323
		-	s324
	[137] 
		loc	g61
		term	g243
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[243] 
		<	r44
		<=	r44
		>=	r44
		>	r44
		]	r44
		or	r44
		and	r44
		eq	r44
		neq	r44
		+	r44
		-	r44
		*	s139
		/	s140
		mod	s141
	[138] 
		loc	g61
		term	g244
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[244] 
		<	r45
		<=	r45
		>=	r45
		>	r45
		]	r45
		or	r45
		and	r45
		eq	r45
		neq	r45
		+	r45
		-	r45
		*	s139
		/	s140
		mod	s141
	[139] 
		loc	g61
		unary	g245
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[245] 
		<	r47
		<=	r47
		>=	r47
		>	r47
		]	r47
		or	r47
		and	r47
		eq	r47
		neq	r47
		+	r47
		-	r47
		*	r47
		/	r47
		mod	r47
	[140] 
		loc	g61
		unary	g246
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[246] 
		<	r48
		<=	r48
		>=	r48
		>	r48
		]	r48
		or	r48
		and	r48
		eq	r48
		neq	r48
		+	r48
		-	r48
		*	r48
		/	r48
		mod	r48
	[141] 
		loc	g61
		unary	g247
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[247] 
		<	r49
		<=	r49
		>=	r49
		>	r49
		]	r49
		or	r49
		and	r49
		eq	r49
		neq	r49
		+	r49
		-	r49
		*	r49
		/	r49
		mod	r49
	[143] 
		)	s249
		or	s151
	[249] 
		<	r54
		<=	r54
		>=	r54
		>	r54
		]	r54
		or	r54
		and	r54
		eq	r54
		neq	r54
		+	r54
		-	r54
		*	r54
		/	r54
		mod	r54
	[146] 
		loc	g61
		bool	g250
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[149] 
		loc	g61
		bool	g251
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[151] 
		loc	g82
		join	g253
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[253] 
		)	r32
		or	r32
		and	s152
	[152] 
		loc	g82
		equality	g254
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[254] 
		)	r34
		or	r34
		and	r34
		eq	s153
		neq	s154
	[153] 
		loc	g82
		rel	g255
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[255] 
		)	r36
		or	r36
		and	r36
		eq	r36
		neq	r36
	[154] 
		loc	g82
		rel	g256
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[256] 
		)	r37
		or	r37
		and	r37
		eq	r37
		neq	r37
	[155] 
		loc	g257
		expr	g258
		term	g259
		unary	g260
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[257] 
		)	r55
		or	r55
		and	r55
		eq	r55
		neq	r55
		+	r55
		-	r55
		*	r55
		/	r55
		mod	r55
		[	s343
	[258] 
		)	r39
		or	r39
		and	r39
		eq	r39
		neq	r39
		+	s344
		-	s345
	[259] 
		)	r46
		or	r46
		and	r46
		eq	r46
		neq	r46
		+	r46
		-	r46
		*	s346
		/	s347
		mod	s348
	[260] 
		)	r50
		or	r50
		and	r50
		eq	r50
		neq	r50
		+	r50
		-	r50
		*	r50
		/	r50
		mod	r50
	[261] 
		)	r53
		or	r53
		and	r53
		eq	r53
		neq	r53
		+	r53
		-	r53
		*	r53
		/	r53
		mod	r53
	[262] 
		)	r31
		or	r31
		and	r31
		eq	r31
		neq	r31
		+	r31
		-	r31
		*	r31
		/	r31
		mod	r31
		[	r31
		(	s349
	[266] 
		)	r57
		or	r57
		and	r57
		eq	r57
		neq	r57
		+	r57
		-	r57
		*	r57
		/	r57
		mod	r57
	[267] 
		)	r58
		or	r58
		and	r58
		eq	r58
		neq	r58
		+	r58
		-	r58
		*	r58
		/	r58
		mod	r58
	[268] 
		)	r59
		or	r59
		and	r59
		eq	r59
		neq	r59
		+	r59
		-	r59
		*	r59
		/	r59
		mod	r59
	[269] 
		)	r60
		or	r60
		and	r60
		eq	r60
		neq	r60
		+	r60
		-	r60
		*	r60
		/	r60
		mod	r60
	[156] 
		loc	g257
		expr	g270
		term	g259
		unary	g260
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[270] 
		)	r40
		or	r40
		and	r40
		eq	r40
		neq	r40
		+	s344
		-	s345
	[157] 
		loc	g257
		expr	g271
		term	g259
		unary	g260
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[271] 
		)	r41
		or	r41
		and	r41
		eq	r41
		neq	r41
		+	s344
		-	s345
	[158] 
		loc	g257
		expr	g272
		term	g259
		unary	g260
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[272] 
		)	r42
		or	r42
		and	r42
		eq	r42
		neq	r42
		+	s344
		-	s345
	[159] 
		loc	g82
		term	g273
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[273] 
		<	r44
		<=	r44
		>=	r44
		>	r44
		)	r44
		or	r44
		and	r44
		eq	r44
		neq	r44
		+	r44
		-	r44
		*	s161
		/	s162
		mod	s163
	[160] 
		loc	g82
		term	g274
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[274] 
		<	r45
		<=	r45
		>=	r45
		>	r45
		)	r45
		or	r45
		and	r45
		eq	r45
		neq	r45
		+	r45
		-	r45
		*	s161
		/	s162
		mod	s163
	[161] 
		loc	g82
		unary	g275
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[275] 
		<	r47
		<=	r47
		>=	r47
		>	r47
		)	r47
		or	r47
		and	r47
		eq	r47
		neq	r47
		+	r47
		-	r47
		*	r47
		/	r47
		mod	r47
	[162] 
		loc	g82
		unary	g276
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[276] 
		<	r48
		<=	r48
		>=	r48
		>	r48
		)	r48
		or	r48
		and	r48
		eq	r48
		neq	r48
		+	r48
		-	r48
		*	r48
		/	r48
		mod	r48
	[163] 
		loc	g82
		unary	g277
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[277] 
		<	r49
		<=	r49
		>=	r49
		>	r49
		)	r49
		or	r49
		and	r49
		eq	r49
		neq	r49
		+	r49
		-	r49
		*	r49
		/	r49
		mod	r49
	[165] 
		)	s279
		or	s151
	[279] 
		<	r54
		<=	r54
		>=	r54
		>	r54
		)	r54
		or	r54
		and	r54
		eq	r54
		neq	r54
		+	r54
		-	r54
		*	r54
		/	r54
		mod	r54
	[168] 
		)	s280
		or	s151
	[280] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g354
	[169] 
		(	s281
	[170] 
		loc	g78
		bool	g282
		join	g45
		equality	g46
		rel	g47
		expr	g48
		term	g49
		unary	g50
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[172] 
		loc	g82
		bool	g284
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[173] 
		(	s285
	[174] 
		block	g100
		stmt	g286
		loc	g102
		id	s29
		{	s103
		if	s104
		while	s105
		do	s106
		return	s107
	[175] 
		;	s287
	[287] 
		while	r22
	[176] 
		]	s288
		or	s129
	[288] 
		;	r30
		[	r30
		<	r30
		<=	r30
		>=	r30
		>	r30
		or	r30
		and	r30
		eq	r30
		neq	r30
		+	r30
		-	r30
		*	r30
		/	r30
		mod	r30
	[295] 
		)	r26
		,	r26
		args	g367
		loc	g203
		bool	g204
		join	g205
		equality	g206
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		arg	g212
		id	s213
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[187] 
		loc	g82
		bool	g296
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[188] 
		loc	g181
		unary	g297
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[297] 
		;	r52
		or	r52
		and	r52
		eq	r52
		neq	r52
		+	r52
		-	r52
		*	r52
		/	r52
		mod	r52
	[189] 
		loc	g181
		unary	g298
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[298] 
		;	r51
		or	r51
		and	r51
		eq	r51
		neq	r51
		+	r51
		-	r51
		*	r51
		/	r51
		mod	r51
	[202] 
		)	s299
		,	s300
	[299] 
		<	r56
		<=	r56
		>=	r56
		>	r56
		;	r56
		or	r56
		and	r56
		eq	r56
		neq	r56
		+	r56
		-	r56
		*	r56
		/	r56
		mod	r56
	[315] 
		)	r26
		,	r26
		args	g396
		loc	g203
		bool	g204
		join	g205
		equality	g206
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		arg	g212
		id	s213
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[214] 
		loc	g82
		bool	g316
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[215] 
		loc	g317
		unary	g318
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[317] 
		<	r55
		<=	r55
		>=	r55
		>	r55
		)	r55
		,	r55
		or	r55
		and	r55
		eq	r55
		neq	r55
		+	r55
		-	r55
		*	r55
		/	r55
		mod	r55
		[	s398
	[318] 
		<	r52
		<=	r52
		>=	r52
		>	r52
		)	r52
		,	r52
		or	r52
		and	r52
		eq	r52
		neq	r52
		+	r52
		-	r52
		*	r52
		/	r52
		mod	r52
	[319] 
		<	r31
		<=	r31
		>=	r31
		>	r31
		)	r31
		,	r31
		or	r31
		and	r31
		eq	r31
		neq	r31
		+	r31
		-	r31
		*	r31
		/	r31
		mod	r31
		[	r31
		(	s315
	[216] 
		loc	g317
		unary	g320
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[320] 
		<	r51
		<=	r51
		>=	r51
		>	r51
		)	r51
		,	r51
		or	r51
		and	r51
		eq	r51
		neq	r51
		+	r51
		-	r51
		*	r51
		/	r51
		mod	r51
	[222] 
		]	s321
		or	s129
	[321] 
		<	r30
		<=	r30
		>=	r30
		>	r30
		]	r30
		or	r30
		and	r30
		eq	r30
		neq	r30
		+	r30
		-	r30
		*	r30
		/	r30
		mod	r30
		[	r30
	[328] 
		)	r26
		,	r26
		args	g405
		loc	g203
		bool	g204
		join	g205
		equality	g206
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		arg	g212
		id	s213
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[233] 
		loc	g82
		bool	g329
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[234] 
		loc	g227
		unary	g330
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[330] 
		]	r52
		or	r52
		and	r52
		eq	r52
		neq	r52
		+	r52
		-	r52
		*	r52
		/	r52
		mod	r52
	[235] 
		loc	g227
		unary	g331
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[331] 
		]	r51
		or	r51
		and	r51
		eq	r51
		neq	r51
		+	r51
		-	r51
		*	r51
		/	r51
		mod	r51
	[248] 
		)	s332
		,	s300
	[332] 
		<	r56
		<=	r56
		>=	r56
		>	r56
		]	r56
		or	r56
		and	r56
		eq	r56
		neq	r56
		+	r56
		-	r56
		*	r56
		/	r56
		mod	r56
	[250] 
		]	s333
		or	s129
	[333] 
		<	r30
		<=	r30
		>=	r30
		>	r30
		;	r30
		or	r30
		and	r30
		eq	r30
		neq	r30
		+	r30
		-	r30
		*	r30
		/	r30
		mod	r30
		[	r30
	[251] 
		]	s334
		or	s129
	[334] 
		<	r30
		<=	r30
		>=	r30
		>	r30
		)	r30
		or	r30
		and	r30
		eq	r30
		neq	r30
		+	r30
		-	r30
		*	r30
		/	r30
		mod	r30
		[	r30
	[252] 
		block	g335
		stmt	g336
		loc	g337
		id	s29
		{	s338
		if	s339
		while	s340
		do	s341
		return	s342
	[335] 
		}	r23
		else	r23
		[	r23
		id	r23
		if	r23
		while	r23
		do	r23
		return	r23
		{	r23
	[336] 
		}	r18
		[	r18
		id	r18
		if	r18
		while	r18
		do	r18
		return	r18
		{	r18
		else	s407
	[338] 
		[	r11
		id	r11
		if	r11
		while	r11
		do	r11
		return	r11
		{	r11
		}	r11
		basic	r11
		decls	g409
	[340] 
		(	r28
		[	r28
		id	r28
		if	r28
		while	r28
		do	r28
		return	r28
		{	r28
		N	g411
	[341] 
		(	r28
		[	r28
		id	r28
		if	r28
		while	r28
		do	r28
		return	r28
		{	r28
		N	g412
	[349] 
		)	r26
		,	r26
		args	g420
		loc	g203
		bool	g204
		join	g205
		equality	g206
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		arg	g212
		id	s213
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[263] 
		loc	g82
		bool	g350
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[264] 
		loc	g257
		unary	g351
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[351] 
		)	r52
		or	r52
		and	r52
		eq	r52
		neq	r52
		+	r52
		-	r52
		*	r52
		/	r52
		mod	r52
	[265] 
		loc	g257
		unary	g352
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[352] 
		)	r51
		or	r51
		and	r51
		eq	r51
		neq	r51
		+	r51
		-	r51
		*	r51
		/	r51
		mod	r51
	[278] 
		)	s353
		,	s300
	[353] 
		<	r56
		<=	r56
		>=	r56
		>	r56
		)	r56
		or	r56
		and	r56
		eq	r56
		neq	r56
		+	r56
		-	r56
		*	r56
		/	r56
		mod	r56
	[281] 
		loc	g82
		bool	g355
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[282] 
		;	s356
		or	s109
	[356] 
		while	r17
	[283] 
		block	g26
		stmt	g27
		loc	g28
		id	s29
		{	s30
		}	s357
		if	s32
		while	s33
		do	s34
		return	s35
	[357] 
		while	r9
	[284] 
		)	s358
		or	s151
	[358] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g424
	[285] 
		loc	g82
		bool	g359
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[286] 
		while	s360
	[289] 
		loc	g61
		bool	g361
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[290] 
		loc	g181
		term	g362
		unary	g184
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[362] 
		;	r44
		or	r44
		and	r44
		eq	r44
		neq	r44
		+	r44
		-	r44
		*	s292
		/	s293
		mod	s294
	[291] 
		loc	g181
		term	g363
		unary	g184
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[363] 
		;	r45
		or	r45
		and	r45
		eq	r45
		neq	r45
		+	r45
		-	r45
		*	s292
		/	s293
		mod	s294
	[292] 
		loc	g181
		unary	g364
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[364] 
		;	r47
		or	r47
		and	r47
		eq	r47
		neq	r47
		+	r47
		-	r47
		*	r47
		/	r47
		mod	r47
	[293] 
		loc	g181
		unary	g365
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[365] 
		;	r48
		or	r48
		and	r48
		eq	r48
		neq	r48
		+	r48
		-	r48
		*	r48
		/	r48
		mod	r48
	[294] 
		loc	g181
		unary	g366
		factor	g185
		id	s186
		(	s187
		-	s188
		!	s189
		num	s190
		real	s191
		true	s192
		false	s193
	[366] 
		;	r49
		or	r49
		and	r49
		eq	r49
		neq	r49
		+	r49
		-	r49
		*	r49
		/	r49
		mod	r49
	[296] 
		)	s368
		or	s151
	[368] 
		;	r54
		or	r54
		and	r54
		eq	r54
		neq	r54
		+	r54
		-	r54
		*	r54
		/	r54
		mod	r54
	[300] 
		loc	g203
		bool	g204
		join	g205
		equality	g206
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		arg	g369
		id	s213
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[369] 
		)	r24
		,	r24
	[301] 
		loc	g61
		bool	g370
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[302] 
		loc	g317
		join	g371
		equality	g206
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[371] 
		)	r32
		,	r32
		or	r32
		and	s303
	[303] 
		loc	g317
		equality	g372
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[372] 
		)	r34
		,	r34
		or	r34
		and	r34
		eq	s304
		neq	s305
	[304] 
		loc	g317
		rel	g373
		expr	g208
		term	g209
		unary	g210
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[373] 
		)	r36
		,	r36
		or	r36
		and	r36
		eq	r36
		neq	r36
	[305] 
		loc	g317
		rel	g374
		expr	g208
		term	g209
		unary	g210
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[374] 
		)	r37
		,	r37
		or	r37
		and	r37
		eq	r37
		neq	r37
	[306] 
		loc	g375
		expr	g376
		term	g377
		unary	g378
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[375] 
		)	r55
		,	r55
		or	r55
		and	r55
		eq	r55
		neq	r55
		+	r55
		-	r55
		*	r55
		/	r55
		mod	r55
		[	s430
	[376] 
		)	r39
		,	r39
		or	r39
		and	r39
		eq	r39
		neq	r39
		+	s431
		-	s432
	[377] 
		)	r46
		,	r46
		or	r46
		and	r46
		eq	r46
		neq	r46
		+	r46
		-	r46
		*	s433
		/	s434
		mod	s435
	[378] 
		)	r50
		,	r50
		or	r50
		and	r50
		eq	r50
		neq	r50
		+	r50
		-	r50
		*	r50
		/	r50
		mod	r50
	[379] 
		)	r53
		,	r53
		or	r53
		and	r53
		eq	r53
		neq	r53
		+	r53
		-	r53
		*	r53
		/	r53
		mod	r53
	[380] 
		)	r31
		,	r31
		or	r31
		and	r31
		eq	r31
		neq	r31
		+	r31
		-	r31
		*	r31
		/	r31
		mod	r31
		[	r31
		(	s436
	[384] 
		)	r57
		,	r57
		or	r57
		and	r57
		eq	r57
		neq	r57
		+	r57
		-	r57
		*	r57
		/	r57
		mod	r57
	[385] 
		)	r58
		,	r58
		or	r58
		and	r58
		eq	r58
		neq	r58
		+	r58
		-	r58
		*	r58
		/	r58
		mod	r58
	[386] 
		)	r59
		,	r59
		or	r59
		and	r59
		eq	r59
		neq	r59
		+	r59
		-	r59
		*	r59
		/	r59
		mod	r59
	[387] 
		)	r60
		,	r60
		or	r60
		and	r60
		eq	r60
		neq	r60
		+	r60
		-	r60
		*	r60
		/	r60
		mod	r60
	[307] 
		loc	g375
		expr	g388
		term	g377
		unary	g378
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[388] 
		)	r40
		,	r40
		or	r40
		and	r40
		eq	r40
		neq	r40
		+	s431
		-	s432
	[308] 
		loc	g375
		expr	g389
		term	g377
		unary	g378
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[389] 
		)	r41
		,	r41
		or	r41
		and	r41
		eq	r41
		neq	r41
		+	s431
		-	s432
	[309] 
		loc	g375
		expr	g390
		term	g377
		unary	g378
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[390] 
		)	r42
		,	r42
		or	r42
		and	r42
		eq	r42
		neq	r42
		+	s431
		-	s432
	[310] 
		loc	g317
		term	g391
		unary	g210
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[391] 
		<	r44
		<=	r44
		>=	r44
		>	r44
		)	r44
		,	r44
		or	r44
		and	r44
		eq	r44
		neq	r44
		+	r44
		-	r44
		*	s312
		/	s313
		mod	s314
	[311] 
		loc	g317
		term	g392
		unary	g210
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[392] 
		<	r45
		<=	r45
		>=	r45
		>	r45
		)	r45
		,	r45
		or	r45
		and	r45
		eq	r45
		neq	r45
		+	r45
		-	r45
		*	s312
		/	s313
		mod	s314
	[312] 
		loc	g317
		unary	g393
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[393] 
		<	r47
		<=	r47
		>=	r47
		>	r47
		)	r47
		,	r47
		or	r47
		and	r47
		eq	r47
		neq	r47
		+	r47
		-	r47
		*	r47
		/	r47
		mod	r47
	[313] 
		loc	g317
		unary	g394
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[394] 
		<	r48
		<=	r48
		>=	r48
		>	r48
		)	r48
		,	r48
		or	r48
		and	r48
		eq	r48
		neq	r48
		+	r48
		-	r48
		*	r48
		/	r48
		mod	r48
	[314] 
		loc	g317
		unary	g395
		factor	g211
		id	s319
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[395] 
		<	r49
		<=	r49
		>=	r49
		>	r49
		)	r49
		,	r49
		or	r49
		and	r49
		eq	r49
		neq	r49
		+	r49
		-	r49
		*	r49
		/	r49
		mod	r49
	[316] 
		)	s397
		or	s151
	[397] 
		<	r54
		<=	r54
		>=	r54
		>	r54
		)	r54
		,	r54
		or	r54
		and	r54
		eq	r54
		neq	r54
		+	r54
		-	r54
		*	r54
		/	r54
		mod	r54
	[322] 
		loc	g61
		bool	g399
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[323] 
		loc	g227
		term	g400
		unary	g230
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[400] 
		]	r44
		or	r44
		and	r44
		eq	r44
		neq	r44
		+	r44
		-	r44
		*	s325
		/	s326
		mod	s327
	[324] 
		loc	g227
		term	g401
		unary	g230
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[401] 
		]	r45
		or	r45
		and	r45
		eq	r45
		neq	r45
		+	r45
		-	r45
		*	s325
		/	s326
		mod	s327
	[325] 
		loc	g227
		unary	g402
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[402] 
		]	r47
		or	r47
		and	r47
		eq	r47
		neq	r47
		+	r47
		-	r47
		*	r47
		/	r47
		mod	r47
	[326] 
		loc	g227
		unary	g403
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[403] 
		]	r48
		or	r48
		and	r48
		eq	r48
		neq	r48
		+	r48
		-	r48
		*	r48
		/	r48
		mod	r48
	[327] 
		loc	g227
		unary	g404
		factor	g231
		id	s232
		(	s233
		-	s234
		!	s235
		num	s236
		real	s237
		true	s238
		false	s239
	[404] 
		]	r49
		or	r49
		and	r49
		eq	r49
		neq	r49
		+	r49
		-	r49
		*	r49
		/	r49
		mod	r49
	[329] 
		)	s406
		or	s151
	[406] 
		]	r54
		or	r54
		and	r54
		eq	r54
		neq	r54
		+	r54
		-	r54
		*	r54
		/	r54
		mod	r54
	[407] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g444
	[337] 
		[	s37
		=	s408
	[409] 
		}	r16
		[	r16
		id	r16
		if	r16
		while	r16
		do	r16
		return	r16
		{	r16
		else	r16
		decl	g22
		type	g23
		stmts	g446
		basic	s11
	[339] 
		(	s410
	[342] 
		loc	g43
		bool	g44
		join	g45
		equality	g46
		rel	g47
		expr	g48
		term	g49
		unary	g50
		factor	g51
		arg	g413
		id	s53
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[343] 
		loc	g61
		bool	g414
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[344] 
		loc	g257
		term	g415
		unary	g260
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[415] 
		)	r44
		or	r44
		and	r44
		eq	r44
		neq	r44
		+	r44
		-	r44
		*	s346
		/	s347
		mod	s348
	[345] 
		loc	g257
		term	g416
		unary	g260
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[416] 
		)	r45
		or	r45
		and	r45
		eq	r45
		neq	r45
		+	r45
		-	r45
		*	s346
		/	s347
		mod	s348
	[346] 
		loc	g257
		unary	g417
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[417] 
		)	r47
		or	r47
		and	r47
		eq	r47
		neq	r47
		+	r47
		-	r47
		*	r47
		/	r47
		mod	r47
	[347] 
		loc	g257
		unary	g418
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[418] 
		)	r48
		or	r48
		and	r48
		eq	r48
		neq	r48
		+	r48
		-	r48
		*	r48
		/	r48
		mod	r48
	[348] 
		loc	g257
		unary	g419
		factor	g261
		id	s262
		(	s263
		-	s264
		!	s265
		num	s266
		real	s267
		true	s268
		false	s269
	[419] 
		)	r49
		or	r49
		and	r49
		eq	r49
		neq	r49
		+	r49
		-	r49
		*	r49
		/	r49
		mod	r49
	[350] 
		)	s421
		or	s151
	[421] 
		)	r54
		or	r54
		and	r54
		eq	r54
		neq	r54
		+	r54
		-	r54
		*	r54
		/	r54
		mod	r54
	[354] 
		block	g26
		stmt	g422
		loc	g28
		id	s29
		{	s30
		if	s32
		while	s33
		do	s34
		return	s35
	[422] 
		}	r20
		[	r20
		id	r20
		if	r20
		while	r20
		do	r20
		return	r20
		{	r20
		else	r20
	[355] 
		)	s423
		or	s151
	[423] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g453
	[359] 
		)	s425
		or	s151
	[425] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g462
	[360] 
		(	s426
	[361] 
		]	s427
		or	s129
	[427] 
		;	r30
		or	r30
		and	r30
		eq	r30
		neq	r30
		+	r30
		-	r30
		*	r30
		/	r30
		mod	r30
		[	r30
	[367] 
		)	s428
		,	s300
	[428] 
		;	r56
		or	r56
		and	r56
		eq	r56
		neq	r56
		+	r56
		-	r56
		*	r56
		/	r56
		mod	r56
	[370] 
		]	s429
		or	s129
	[429] 
		)	r30
		,	r30
		[	r30
		<	r30
		<=	r30
		>=	r30
		>	r30
		or	r30
		and	r30
		eq	r30
		neq	r30
		+	r30
		-	r30
		*	r30
		/	r30
		mod	r30
	[436] 
		)	r26
		,	r26
		args	g470
		loc	g203
		bool	g204
		join	g205
		equality	g206
		rel	g207
		expr	g208
		term	g209
		unary	g210
		factor	g211
		arg	g212
		id	s213
		(	s214
		-	s215
		!	s216
		num	s217
		real	s218
		true	s219
		false	s220
	[381] 
		loc	g82
		bool	g437
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[382] 
		loc	g375
		unary	g438
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[438] 
		)	r52
		,	r52
		or	r52
		and	r52
		eq	r52
		neq	r52
		+	r52
		-	r52
		*	r52
		/	r52
		mod	r52
	[383] 
		loc	g375
		unary	g439
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[439] 
		)	r51
		,	r51
		or	r51
		and	r51
		eq	r51
		neq	r51
		+	r51
		-	r51
		*	r51
		/	r51
		mod	r51
	[396] 
		)	s440
		,	s300
	[440] 
		<	r56
		<=	r56
		>=	r56
		>	r56
		)	r56
		,	r56
		or	r56
		and	r56
		eq	r56
		neq	r56
		+	r56
		-	r56
		*	r56
		/	r56
		mod	r56
	[398] 
		loc	g61
		bool	g441
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[399] 
		]	s442
		or	s129
	[442] 
		]	r30
		or	r30
		and	r30
		eq	r30
		neq	r30
		+	r30
		-	r30
		*	r30
		/	r30
		mod	r30
		[	r30
	[405] 
		)	s443
		,	s300
	[443] 
		]	r56
		or	r56
		and	r56
		eq	r56
		neq	r56
		+	r56
		-	r56
		*	r56
		/	r56
		mod	r56
	[408] 
		loc	g78
		bool	g445
		join	g45
		equality	g46
		rel	g47
		expr	g48
		term	g49
		unary	g50
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[410] 
		loc	g82
		bool	g447
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[411] 
		(	s448
	[412] 
		block	g100
		stmt	g449
		loc	g102
		id	s29
		{	s103
		if	s104
		while	s105
		do	s106
		return	s107
	[413] 
		;	s450
	[450] 
		}	r22
		else	r22
		[	r22
		id	r22
		if	r22
		while	r22
		do	r22
		return	r22
		{	r22
	[414] 
		]	s451
		or	s129
	[451] 
		)	r30
		or	r30
		and	r30
		eq	r30
		neq	r30
		+	r30
		-	r30
		*	r30
		/	r30
		mod	r30
		[	r30
	[420] 
		)	s452
		,	s300
	[452] 
		)	r56
		or	r56
		and	r56
		eq	r56
		neq	r56
		+	r56
		-	r56
		*	r56
		/	r56
		mod	r56
	[424] 
		block	g454
		stmt	g455
		loc	g456
		id	s29
		{	s457
		if	s458
		while	s459
		do	s460
		return	s461
	[454] 
		while	r23
		else	r23
	[455] 
		while	r18
		else	s480
	[457] 
		[	r11
		id	r11
		if	r11
		while	r11
		do	r11
		return	r11
		{	r11
		}	r11
		basic	r11
		decls	g482
	[459] 
		(	r28
		[	r28
		id	r28
		if	r28
		while	r28
		do	r28
		return	r28
		{	r28
		N	g484
	[460] 
		(	r28
		[	r28
		id	r28
		if	r28
		while	r28
		do	r28
		return	r28
		{	r28
		N	g485
	[426] 
		loc	g82
		bool	g463
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[430] 
		loc	g61
		bool	g464
		join	g63
		equality	g64
		rel	g65
		expr	g66
		term	g67
		unary	g68
		factor	g69
		id	s70
		(	s71
		-	s72
		!	s73
		num	s74
		real	s75
		true	s76
		false	s77
	[431] 
		loc	g375
		term	g465
		unary	g378
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[465] 
		)	r44
		,	r44
		or	r44
		and	r44
		eq	r44
		neq	r44
		+	r44
		-	r44
		*	s433
		/	s434
		mod	s435
	[432] 
		loc	g375
		term	g466
		unary	g378
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[466] 
		)	r45
		,	r45
		or	r45
		and	r45
		eq	r45
		neq	r45
		+	r45
		-	r45
		*	s433
		/	s434
		mod	s435
	[433] 
		loc	g375
		unary	g467
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[467] 
		)	r47
		,	r47
		or	r47
		and	r47
		eq	r47
		neq	r47
		+	r47
		-	r47
		*	r47
		/	r47
		mod	r47
	[434] 
		loc	g375
		unary	g468
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[468] 
		)	r48
		,	r48
		or	r48
		and	r48
		eq	r48
		neq	r48
		+	r48
		-	r48
		*	r48
		/	r48
		mod	r48
	[435] 
		loc	g375
		unary	g469
		factor	g379
		id	s380
		(	s381
		-	s382
		!	s383
		num	s384
		real	s385
		true	s386
		false	s387
	[469] 
		)	r49
		,	r49
		or	r49
		and	r49
		eq	r49
		neq	r49
		+	r49
		-	r49
		*	r49
		/	r49
		mod	r49
	[437] 
		)	s471
		or	s151
	[471] 
		)	r54
		,	r54
		or	r54
		and	r54
		eq	r54
		neq	r54
		+	r54
		-	r54
		*	r54
		/	r54
		mod	r54
	[441] 
		]	s472
		or	s129
	[472] 
		<	r30
		<=	r30
		>=	r30
		>	r30
		)	r30
		,	r30
		or	r30
		and	r30
		eq	r30
		neq	r30
		+	r30
		-	r30
		*	r30
		/	r30
		mod	r30
		[	r30
	[444] 
		block	g26
		stmt	g473
		loc	g28
		id	s29
		{	s30
		if	s32
		while	s33
		do	s34
		return	s35
	[473] 
		}	r19
		[	r19
		id	r19
		if	r19
		while	r19
		do	r19
		return	r19
		{	r19
		else	r19
	[445] 
		;	s474
		or	s109
	[474] 
		}	r17
		else	r17
		[	r17
		id	r17
		if	r17
		while	r17
		do	r17
		return	r17
		{	r17
	[446] 
		block	g26
		stmt	g27
		loc	g28
		id	s29
		{	s30
		}	s475
		if	s32
		while	s33
		do	s34
		return	s35
	[475] 
		}	r9
		else	r9
		[	r9
		id	r9
		if	r9
		while	r9
		do	r9
		return	r9
		{	r9
	[447] 
		)	s476
		or	s151
	[476] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g491
	[448] 
		loc	g82
		bool	g477
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[449] 
		while	s478
	[453] 
		;	s479
	[479] 
		}	r21
		[	r21
		id	r21
		if	r21
		while	r21
		do	r21
		return	r21
		{	r21
		else	r21
	[480] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g494
	[456] 
		[	s37
		=	s481
	[482] 
		}	r16
		[	r16
		id	r16
		if	r16
		while	r16
		do	r16
		return	r16
		{	r16
		else	r16
		decl	g22
		type	g23
		stmts	g496
		basic	s11
	[458] 
		(	s483
	[461] 
		loc	g43
		bool	g44
		join	g45
		equality	g46
		rel	g47
		expr	g48
		term	g49
		unary	g50
		factor	g51
		arg	g486
		id	s53
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[462] 
		block	g100
		stmt	g487
		loc	g102
		id	s29
		{	s103
		if	s104
		while	s105
		do	s106
		return	s107
	[487] 
		while	r20
	[463] 
		)	s488
		or	s151
	[488] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g501
	[464] 
		]	s489
		or	s129
	[489] 
		)	r30
		,	r30
		or	r30
		and	r30
		eq	r30
		neq	r30
		+	r30
		-	r30
		*	r30
		/	r30
		mod	r30
		[	r30
	[470] 
		)	s490
		,	s300
	[490] 
		)	r56
		,	r56
		or	r56
		and	r56
		eq	r56
		neq	r56
		+	r56
		-	r56
		*	r56
		/	r56
		mod	r56
	[477] 
		)	s492
		or	s151
	[492] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g503
	[478] 
		(	s493
	[481] 
		loc	g78
		bool	g495
		join	g45
		equality	g46
		rel	g47
		expr	g48
		term	g49
		unary	g50
		factor	g51
		id	s80
		(	s54
		-	s55
		!	s56
		num	s57
		real	s58
		true	s59
		false	s60
	[483] 
		loc	g82
		bool	g497
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[484] 
		(	s498
	[485] 
		block	g100
		stmt	g499
		loc	g102
		id	s29
		{	s103
		if	s104
		while	s105
		do	s106
		return	s107
	[486] 
		;	s500
	[500] 
		while	r22
		else	r22
	[491] 
		block	g335
		stmt	g502
		loc	g337
		id	s29
		{	s338
		if	s339
		while	s340
		do	s341
		return	s342
	[502] 
		}	r18
		else	s512
		[	r18
		id	r18
		if	r18
		while	r18
		do	r18
		return	r18
		{	r18
	[493] 
		loc	g82
		bool	g504
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[494] 
		block	g100
		stmt	g505
		loc	g102
		id	s29
		{	s103
		if	s104
		while	s105
		do	s106
		return	s107
	[505] 
		while	r19
	[495] 
		;	s506
		or	s109
	[506] 
		while	r17
		else	r17
	[496] 
		block	g26
		stmt	g27
		loc	g28
		id	s29
		{	s30
		}	s507
		if	s32
		while	s33
		do	s34
		return	s35
	[507] 
		while	r9
		else	r9
	[497] 
		)	s508
		or	s151
	[508] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g515
	[498] 
		loc	g82
		bool	g509
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[499] 
		while	s510
	[501] 
		;	s511
	[511] 
		while	r21
	[512] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g518
	[503] 
		block	g335
		stmt	g513
		loc	g337
		id	s29
		{	s338
		if	s339
		while	s340
		do	s341
		return	s342
	[513] 
		}	r20
		else	r20
		[	r20
		id	r20
		if	r20
		while	r20
		do	r20
		return	r20
		{	r20
	[504] 
		)	s514
		or	s151
	[514] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g519
	[509] 
		)	s516
		or	s151
	[516] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g521
	[510] 
		(	s517
	[515] 
		block	g454
		stmt	g520
		loc	g456
		id	s29
		{	s457
		if	s458
		while	s459
		do	s460
		return	s461
	[520] 
		while	r18
		else	s525
	[517] 
		loc	g82
		bool	g522
		join	g84
		equality	g85
		rel	g86
		expr	g87
		term	g88
		unary	g89
		factor	g90
		id	s91
		(	s92
		-	s93
		!	s94
		num	s95
		real	s96
		true	s97
		false	s98
	[518] 
		block	g335
		stmt	g523
		loc	g337
		id	s29
		{	s338
		if	s339
		while	s340
		do	s341
		return	s342
	[523] 
		}	r19
		else	r19
		[	r19
		id	r19
		if	r19
		while	r19
		do	r19
		return	r19
		{	r19
	[519] 
		;	s524
	[524] 
		}	r21
		else	r21
		[	r21
		id	r21
		if	r21
		while	r21
		do	r21
		return	r21
		{	r21
	[525] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g528
	[521] 
		block	g454
		stmt	g526
		loc	g456
		id	s29
		{	s457
		if	s458
		while	s459
		do	s460
		return	s461
	[526] 
		while	r20
		else	r20
	[522] 
		)	s527
		or	s151
	[527] 
		[	r27
		id	r27
		if	r27
		while	r27
		do	r27
		return	r27
		{	r27
		;	r27
		M	g529
	[528] 
		block	g454
		stmt	g530
		loc	g456
		id	s29
		{	s457
		if	s458
		while	s459
		do	s460
		return	s461
	[530] 
		while	r19
		else	r19
	[529] 
		;	s531
	[531] 
		while	r21
		else	r21
